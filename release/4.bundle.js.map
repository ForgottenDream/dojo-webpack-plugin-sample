{"version":3,"sources":["webpack:///4.bundle.js","webpack:///./node_modules/dojox/node_modules/dojo/parser.js","webpack:///./node_modules/dojox/node_modules/dojo/promise/all.js","webpack:///./node_modules/dojox/node_modules/dojo/_base/url.js","webpack:///./node_modules/dojox/node_modules/dojo/date/stamp.js","webpack:///./node_modules/dojox/node_modules/dojo/query.js","webpack:///./node_modules/dojox/node_modules/dojo/selector/_loader.js","webpack:///./node_modules/dojox/node_modules/dojo/selector/lite.js"],"names":["webpackJsonp","registerAbsMids","dojo/parser","dojo/promise/all","dojo/_base/url","dojo/date/stamp","dojo/query","dojo/selector/_loader","dojo/selector/_loader!default","dojo/selector/lite","366","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","require","dj","c","undefined","dojo","dlang","darray","config","dom","dwindow","_Url","aspect","all","dates","Deferred","has","query","don","ready","myEval","text","eval","getNameMap","ctor","map","_nameCaseMap","proto","prototype","_extendCnt","extendCnt","name","charAt","toLowerCase","getCtor","types","contextRequire","ctorMap","_dojoParserCtorMap","ts","join","mixins","i","l","length","t","getObject","indexOf","shift","createSubclass","extend","apply","Date","after","parser","_clearCache","_ctorMap","_functionFromScript","script","attrData","preamble","suffix","argsStr","getAttribute","withStr","fnArgs","split","forEach","part","Function","innerHTML","instantiate","nodes","mixin","options","dojoType","scope","_scopeName","dataDojoType","dataDojoMixins","list","node","type","mixinsValue","concat","push","this","_instantiate","returnPromise","onConstruct","thelist","_started","noStart","instance","startup","obj","Error","construct","scripts","inherited","then","onInstantiate","jsname","setObject","aspects","advice","method","hitch","func","calls","call","watches","watch","prop","ons","event","params","defaults","attributes","filter","a","specified","clone","test","nodeName","cloneNode","attrs","outerHTML","replace","lcName","value","getAttributeNode","hash","item","extra","funcAttrs","dojoAttachPoint","dojoAttachEvent","className","style","cssText","Number","NaN","search","pVal","fromISOString","baseUrl","j","lcfname","removeAttribute","propsThis","e","toString","_noScript","removeChild","scriptType","nf","markupFactory","scan","root","findAncestorAttr","attr","parentNode","getEffective","parent","grandparent","dir","lang","textDir","dataDojoTextDir","key","mids","midsHash","firstChild","scriptsOnly","nodeType","nextSibling","current","childScripts","stopParser","d","console","warn","resolve","widget","instantiateChildren","promise","_require","vars","arguments","_scanAmd","deferred","self","parse","rootNode","byId","body","template","instances","p","parsedNodes","_instances","otherwise","error","parseOnLoad","367","array","when","some","objectOrArray","object","Array","results","keyLookup","Object","hasOwnProperty","always","waiting","valueOrPromise","index","isFulfilled","reject","368","ore","RegExp","ire","n","_a","uri","relobj","uriobj","path","scheme","authority","substring","lastIndexOf","segs","splice","fragment","r","match","user","password","host","port","369","stamp","formattedString","defaultTime","_isoRegExp","exec","result","setFullYear","offset","zoneSign","getTimezoneOffset","setTime","getTime","toISOString","dateObject","_","formattedDate","getter","zulu","date","selector","year","substr","time","millis","milliseconds","timezoneOffset","absOffset","Math","abs","floor","370","on","loader","defaultEngine","queryForEngine","engine","NodeList","end","matches","document","add","delegate","ap","aps","slice","apc","tnl","NodeListCtor","nodeList","_NodeListCtor","nl","_stash","loopBody","f","o","global","adaptAsForEach","adaptAsMap","adaptAsFilter","adaptWithCondition","g","isNew","nodeArray","sort","target","_mixin","nlp","_wrap","_adaptAsMap","_adaptAsForEach","_adaptAsFilter","_adaptWithCondition","constructor","_parent","eventName","listener","handles","remove","m","callback","thisObj","items","start","_filterResult","declaredClass","properties","isFunction","at","load","id","parentRequire","loaded","_filterQueryResult","371","testDiv","createElement","querySelectorAll","fullEngine","isBuild","req","optionalLoad","372","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","unionSplit","liteEngine","combine","doc","ownerDocument","isInsideDomTree","found","getElementById","tagName","getElementsByClassName","getElementsByTagName","useRoot","jsMatchesSelector","context","oldContext","old","nid","hasParent","relativeHierarchySelector","setAttribute","selectors","firstChar","comparator","attrComparators","attrValue","ancestor","matcher","and","next","caseFix","selectorTypes","",".","classNameSpaced","#","^=","*=","$=","~=","|=","=","cache","combinator","attrName","attrType","indexed","String","escape","sourceIndex","totalResults"],"mappings":"AAAAA,aAAaC,iBACZC,cAAc,IACdC,mBAAmB,IACnBC,iBAAiB,IACjBC,kBAAkB,IAClBC,aAAa,IACbC,wBAAwB,IACxBC,gCAAgC,IAChCC,qBAAqB,MAEtBT,cAAc,IAERU,IAMA,SAAUC,OAAQC,QAASC,qBAEjC,GAAIC,8BAA8BC,8BAAkCC,OCpBpEF,+BACAD,oBAAAI,GAAAC,EAAA,KAAAL,oBAAA,KAAAA,oBAAA,KAAAA,oBAAA,KAAAA,oBAAA,KAAAA,oBAAA,KAAAA,oBAAA,KACAA,oBAAA,KAAAA,oBAAA,KAAAA,oBAAA,KAAAA,oBAAA,KAAAA,oBAAA,KAAAA,oBAAA,KAAAA,oBAAA,KAAAA,oBAAA,KAAAA,oBAAA,UAs5BCM,MAr5BDJ,8BAAA,SAAAC,QAAAI,KAAAC,MAAAC,OAAAC,OAAAC,IAAAC,QAAAC,KAAAC,OAAAC,IAAAC,MAAAC,SAAAC,IAAAC,MAAAC,IAAAC,OAQA,QAAAC,QAAAC,MACA,MAAAC,MAAA,IAAAD,KAAA,KAWA,QAAAE,YAAAC,GAGA,GAAAC,GAAAD,EAAAE,aAAAC,EAAAH,EAAAI,SAIA,KAAAH,KAAAI,WAAAC,UAAA,CACAL,EAAAD,EAAAE,eACA,QAAAK,KAAAJ,GACA,MAAAI,EAAAC,OAAA,KAGAP,EAAAM,EAAAE,eAAAF,EAEAN,GAAAI,WAAAC,UAEA,MAAAL,GAGA,QAAAS,SAAAC,EAAAC,GAMAA,IACAA,EAAAnC,QAMA,IAAAoC,GAAAD,EAAAE,qBAAAF,EAAAE,uBAEAC,EAAAJ,EAAAK,MACA,KAAAH,EAAAE,GAAA,CAEA,OADAE,MACAC,EAAA,EAAAC,EAAAR,EAAAS,OAAmCF,EAAAC,EAAOD,IAAA,CAC1C,GAAAG,GAAAV,EAAAO,EAEAD,KAAAG,QAAAP,EAAAQ,GAAAR,EAAAQ,IAAAvC,MAAAwC,UAAAD,OAAAE,QAAA,MACAX,EAAAS,GAEA,GAAArB,GAAAiB,EAAAO,OACAX,GAAAE,GAAAE,EAAAG,OAAApB,EAAAyB,eAAAzB,EAAAyB,eAAAR,GAAAjB,EAAA0B,OAAAC,MAAA3B,EAAAiB,GAAAjB,EAGA,MAAAa,GAAAE,GA/DA,GAAAa,MAAA,IAUA,IAAAtB,WAAA,CACAlB,QAAAyC,MAAA/C,MAAA,oBACAwB,cACE,EAqDF,IAAAwB,SAIAC,YAAA,WAGAzB,YACA0B,aAGAC,oBAAA,SAAAC,EAAAC,GASA,GAAAC,GAAA,GACAC,EAAA,GACAC,EAAAJ,EAAAK,aAAAJ,EAAA,SAAAD,EAAAK,aAAA,QACAC,EAAAN,EAAAK,aAAA,QAGAE,GAAAH,GAAA,IAAAI,MAAA,UASA,OAPAF,MAAApB,QACArC,OAAA4D,QAAAH,EAAAE,MAAA,oBAAAE,GACAR,GAAA,QAAAQ,EAAA,KACAP,GAAA,MAIA,GAAAQ,UAAAJ,EAAAL,EAAAF,EAAAY,UAAAT,IAGAU,YAAA,SAAAC,EAAAC,EAAAC,GAiBAD,QACAC,OAEA,IAAAC,IAAAD,EAAAE,OAAAvE,KAAAwE,YAAA,OACAlB,EAAA,SAAAe,EAAAE,OAAAvE,KAAAwE,YAAA,IACAC,EAAAnB,EAAA,OACAoB,EAAApB,EAAA,SAEAqB,IAeA,OAdAzE,QAAA4D,QAAAK,EAAA,SAAAS,GACA,GAAAC,GAAAP,IAAAF,KAAAE,GAAAM,EAAAlB,aAAAe,IAAAG,EAAAlB,aAAAY,EACA,IAAAO,EAAA,CACA,GAAAC,GAAAF,EAAAlB,aAAAgB,GACA5C,EAAAgD,GAAAD,GAAAE,OAAAD,EAAAjB,MAAA,aAAAgB,EAEAF,GAAAK,MACAJ,OACA9C,aAMAmD,KAAAC,aAAAP,EAAAP,EAAAC,IAGAa,aAAA,SAAAf,EAAAC,EAAAC,EAAAc,GAuCA,QAAAC,GAAAC,GASA,MARAjB,GAAAkB,UAAAjB,EAAAkB,SACArF,OAAA4D,QAAAuB,EAAA,SAAAG,GACA,kBAAAA,GAAAC,SAAAD,EAAAF,UACAE,EAAAC,YAKAJ,EApBA,GAAAA,GAAAnF,OAAAkB,IAAA+C,EAAA,SAAAuB,GACA,GAAAvE,GAAAuE,EAAAvE,MAAAU,QAAA6D,EAAA5D,MAAAuC,EAAAtC,eAEA,KAAAZ,EACA,SAAAwE,OAAA,uCAAAD,EAAA5D,MAAAK,OAAA,IAEA,OAAA8C,MAAAW,UAAAzE,EAAAuE,EAAAd,KAAAR,EAAAC,EAAAqB,EAAAG,QAAAH,EAAAI,YACIb,KAgBJ,OAAAE,GACA3E,IAAA6E,GAAAU,KAAAX,GAGAA,EAAAC,IAIAO,UAAA,SAAAzE,EAAAyD,EAAAR,EAAAC,EAAAwB,EAAAC,GAuPA,QAAAE,GAAAR,GAOA,IALAS,GACAhG,MAAAiG,UAAAD,EAAAT,GAIAnD,EAAA,EAAcA,EAAA8D,EAAA5D,OAAoBF,IAClC9B,OAAA4F,EAAA9D,GAAA+D,QAAA,SAAAZ,EAAAW,EAAA9D,GAAAgE,OAAApG,MAAAqG,MAAAd,EAAAW,EAAA9D,GAAAkE,OAAA,EAEA,KAAAlE,EAAA,EAAcA,EAAAmE,EAAAjE,OAAkBF,IAChCmE,EAAAnE,GAAAoE,KAAAjB,EAEA,KAAAnD,EAAA,EAAcA,EAAAqE,EAAAnE,OAAoBF,IAClCmD,EAAAmB,MAAAD,EAAArE,GAAAuE,KAAAF,EAAArE,GAAAkE,KAEA,KAAAlE,EAAA,EAAcA,EAAAwE,EAAAtE,OAAgBF,IAC9BxB,IAAA2E,EAAAqB,EAAAxE,GAAAyE,MAAAD,EAAAxE,GAAAkE,KAGA,OAAAf,GAvPA,GAAAlE,GAAAH,KAAAI,SACA8C,QAKA,IAAA0C,KAEA1C,GAAA2C,UAEA/G,MAAAmE,MAAA2C,EAAA1C,EAAA2C,UAEAlB,GAEA7F,MAAAmE,MAAA2C,EAAAjB,EAIA,IAAAmB,EACA,IAAAtG,IAAA,2BAEAsG,EAAArC,EAAAqC,eACI,IAAAtG,IAAA,iCAEJsG,EAAA/G,OAAAgH,OAAAtC,EAAAqC,WAAA,SAAAE,GACA,MAAAA,GAAAC,gBAEI,CAEJ,GAAAC,GAAA,iBAAAC,KAAA1C,EAAA2C,UAAA3C,IAAA4C,WAAA,GACAC,EAAAJ,EAAAK,UAAAC,QAAA,mCAAAA,QAAA,2BAAAA,QAAA,aAEAV,GAAA/G,OAAAkB,IAAAqG,EAAA5D,MAAA,gBAAAnC,GACA,GAAAkG,GAAAlG,EAAAE,aACA,QACAF,OAGAmG,MAAA,MAAAjD,EAAA2C,UAAA,SAAA7F,GAAA,WAAAkG,EACAhD,EAAAlB,aAAAkE,GAAAhD,EAAAkD,iBAAAF,GAAAC,SAOA,GAAAtD,GAAAF,EAAAE,OAAAvE,KAAAwE,WACAlB,EAAA,QAAAiB,EAAA,IACAwD,IACA,UAAAxD,IACAwD,EAAAzE,EAAA,2BACAyE,EAAAzE,EAAA,yBACAyE,EAAAzE,EAAA,6BACAyE,EAAAxD,EAAA,mBACAwD,EAAAzE,EAAA,qBAMA,KADA,GAAA0E,GAAA/B,EAAAgC,EAAA5F,EAAA,EAAA6F,KACAF,EAAAf,EAAA5E,MAAA,CACA,GAAAX,GAAAsG,EAAAtG,KACAkG,EAAAlG,EAAAE,cACAiG,EAAAG,EAAAH,KAEA,QAAAE,EAAAH,OAEA,qBACA,eACA,uBACA,KAGA,uBACAK,EAAAJ,CACA,MAGA,oBACA,WACA5B,EAAA4B,CACA,MAGA,8BACA,sBACAd,EAAAoB,gBAAAN,CACA,MACA,8BACA,sBACAd,EAAAqB,gBAAAP,CACA,MAGA,aACAd,EAAA,MAAAnC,EAAAyD,SACA,MACA,aACAtB,EAAA,MAAAnC,EAAA0D,OAAA1D,EAAA0D,MAAAC,OACA,MACA,SAKA,KAAA7G,IAAAJ,IAAA,CAEAI,EADAR,WAAAC,GACAyG,IAAAlG,EAIA,GAAAA,IAAAJ,GACA,aAAAA,GAAAI,IACA,aACAqF,EAAArF,GAAAmG,CACA,MACA,cACAd,EAAArF,GAAAmG,EAAAtF,OAAAiG,OAAAX,GAAAY,GACA,MACA,eAEA1B,EAAArF,GAAA,SAAAmG,EAAAjG,aACA,MACA,gBACA,KAAAiG,IAAA,GAAAA,EAAAa,OAAA,aAEA3B,EAAArF,GAAA,GAAAsC,UAAA6D,GAIAd,EAAArF,GAAAzB,MAAAwC,UAAAoF,GAAA,OAAA7D,UAAA6D,GAEAK,EAAAlD,KAAAtD,EACA,MACA,SACA,GAAAiH,GAAArH,EAAAI,EACAqF,GAAArF,GACAiH,GAAA,UAAAA,GAAAd,IAAAhE,MAAA,cACA8E,YAAA5F,MACA,IAAA8E,EAAA,GAAA9E,MAAA,IACA,OAAA8E,EAAA,GAAA9E,MACAtC,MAAAmI,cAAAf,GACAc,YAAArI,MAAAN,KAAA6I,QAAAhB,EACA9G,OAAA8G,OAGAd,GAAArF,GAAAmG,GAOA,OAAAiB,GAAA,EAAiBA,EAAAZ,EAAA3F,OAAsBuG,IAAA,CACvC,GAAAC,GAAAb,EAAAY,GAAAlH,aACAgD,GAAAoE,gBAAAD,GACAnE,EAAAmE,GAAA,KAIA,GAAAd,EACA,IACAA,EAAAlH,OAAA0F,KAAApC,EAAA4E,UAAA,IAA8ChB,EAAA,KAC9ChI,MAAAmE,MAAA2C,EAAAkB,GACK,MAAAiB,GAEL,SAAAvD,OAAAuD,EAAAC,WAAA,wBAAAlB,EAAA,KAKAhI,MAAAmE,MAAA2C,EAAA3C,GAGAyB,IACAA,EAAA1E,MAAAiI,WAAA9H,EAAA8H,cAAAxI,MAAA,0BAAAgE,GAYA,IAAAuB,MACAK,KACAE,KACAG,IAEA,IAAAhB,EACA,IAAAxD,EAAA,EAAcA,EAAAwD,EAAAtD,OAAoBF,IAAA,CAClC,GAAAgB,GAAAwC,EAAAxD,EACAuC,GAAAyE,YAAAhG,EAEA,IAAAyD,GAAAzD,EAAAK,aAAAJ,EAAA,UAAAD,EAAAK,aAAA,SACAkD,EAAAvD,EAAAK,aAAAJ,EAAA,QACA+C,EAAAhD,EAAAK,aAAAJ,EAAA,UACA8C,EAAA/C,EAAAK,aAAAJ,EAAA,UACAgG,EAAAjG,EAAAK,aAAA,QACA6F,EAAAtE,KAAA7B,oBAAAC,EAAAC,EACAwD,GACA,gBAAAwC,EACAnD,EAAAnB,MAAqBqB,OAAAS,EAAAP,KAAAgD,IACd,WAAAD,EACPzC,EAAA7B,MAAiB8B,QAAAP,KAAAgD,IAIjBxC,EAAAD,GAAAyC,EAEM,eAAAD,EACNnD,EAAAnB,MAAoBqB,SAAAD,SAAAG,KAAAgD,IACd,cAAAD,EACN5C,EAAA1B,MAAoB4B,OAAAL,KAAAgD,IAEpB/C,EAAAxB,KAAAuE,GAMA,GAAAC,GAAArI,EAAAqI,eAAAlI,EAAAkI,cACAhE,EAAAgE,IAAAzC,EAAAnC,EAAAzD,GAAA,GAAAA,GAAA4F,EAAAnC,EAyBA,OAAAY,GAAAO,KACAP,EAAAO,KAAAC,GAEAA,EAAAR,IAIAiE,KAAA,SAAAC,EAAArF,GA2CA,QAAAsF,GAAA/E,EAAAgF,GACA,MAAAhF,GAAAlB,cAAAkB,EAAAlB,aAAAkG,IACAhF,EAAAiF,YAAAF,EAAA/E,EAAAiF,WAAAD,GA0BA,QAAAE,GAAAC,GAKA,IAAAA,EAAAjE,UAAA,CACAiE,EAAAjE,YACA,IAAAlB,GAAAmF,EAAAnF,KACAoF,EAAAF,EAAAC,UACAjE,GACAmE,IAAArF,EAAAlB,aAAA,QAAAsG,EAAAC,IACAC,KAAAtF,EAAAlB,aAAA,SAAAsG,EAAAE,KACAC,QAAAvF,EAAAlB,aAAA0G,IAAAJ,EAAAG,QAEA,QAAAE,KAAAvE,GACAA,EAAAuE,KACAN,EAAAjE,UAAAuE,GAAAvE,EAAAuE,IAIA,MAAAN,GAAAjE,UAnEA,GAAAnB,MACA2F,KACAC,KAEAjG,GAAAD,EAAAE,OAAAvE,KAAAwE,YAAA,OACAlB,EAAA,SAAAe,EAAAE,OAAAvE,KAAAwE,YAAA,IACAC,EAAAnB,EAAA,OACA8G,EAAA9G,EAAA,UACAoB,EAAApB,EAAA,SAGAsB,EAAA8E,EAAAc,WAMA1E,EAAAzB,EAAAyB,SACA,KAAAA,EAAA,CAMAA,GACAmE,IAAAN,EAAAD,EAAA,OACAQ,KAAAP,EAAAD,EAAA,QACAS,QAAAR,EAAAD,EAAAU,GAEA,QAAAC,KAAAvE,GACAA,EAAAuE,UACAvE,GAAAuE,GAwCA,IAlCA,GAKAxE,GAGA4E,EARAV,GACAjE,eAkCA,GAAAlB,EAYA,MAAAA,EAAA8F,SAMA,GAAA7E,GAAA,UAAAjB,EAAA2C,SAAA3F,cAEAiD,EAAAD,EAAAlB,aAAA,QACAmB,GAAA,aAAAyC,KAAAzC,IACAgB,EAAAb,KAAAJ,GAEAA,IAAA+F,gBAGA,IAAAF,EAGA7F,IAAA+F,gBAHA,CASA,GAAA9F,GAAAD,EAAAlB,aAAAe,IAAAG,EAAAlB,aAAAY,GAGAkG,EAAA5F,EAAA4F,UACA,IAAA3F,GAAA2F,IAAA,GAAAA,EAAAE,UAAAF,EAAAG,aAAA,CAMA,GAAAC,GAEAzJ,EAAA,IACA,IAAA0D,EAAA,CAEA,GAAAC,GAAAF,EAAAlB,aAAAgB,GACA5C,EAAAgD,GAAAD,GAAAE,OAAAD,EAAAjB,MAAA,aAAAgB,EAIA,KACA1D,EAAAU,QAAAC,EAAAuC,EAAAtC,gBACM,MAAAmH,IAGN/H,GACAjB,OAAA4D,QAAAhC,EAAA,SAAAU,IACAA,EAAAE,QAAA,OAAA6H,EAAA/H,KAEA+H,EAAA/H,IAAA,EACA8H,IAAA/H,QAAAC,IAKA,IAAAqI,GAAA1J,MAAAI,UAAA6H,aAAA,IAGAwB,IACA9I,QACAX,OACA4I,SACAnF,OACAiB,QAAAgF,GAEAD,EAAA9E,UAAAgE,EAAAc,GACAjG,EAAAK,KAAA4F,OAGAA,IACAhG,OACAiB,UACAkE,SAOAlE,GAAAgF,EACAJ,EAAA7F,EAAAkG,YAAA3J,KAAAI,UAAAuJ,aAAAzG,EAAA,SACA0F,EAAAa,EACAhG,EAAA4F,MAzDA5F,KAAA+F,gBA3BA/F,KAAA+F,gBAdA,CAEA,IAAAZ,MAAAnF,KACA,KAEAA,GAAAmF,EAAAnF,KAAA+F,YACAF,GAAA,EACAV,WACAlE,EAAAkE,EAAAlE,QA6FA,GAAAkF,GAAA,GAAArK,SAGA,IAAA4J,EAAA/H,OAAA,CAEA5B,IAAA,wBACAqK,QAAAC,KAAA,yCAAAX,EAAAnI,KAAA,QAEAkC,EAAAtC,gBAAAnC,SACA0K,EAAA,WAIAS,EAAAG,QAAAhL,OAAAgH,OAAAvC,EAAA,SAAAwG,GACA,IAAAA,EAAAhK,KAGA,IACAgK,EAAAhK,KAAAU,QAAAsJ,EAAArJ,MAAAuC,EAAAtC,gBACQ,MAAAmH,IAKR,IADA,GAAAa,GAAAoB,EAAApB,OACAA,MAAAjI,OACAiI,UAMA,IAAAzI,GAAA6J,EAAAhK,MAAAgK,EAAAhK,KAAAI,SAGA,OAFA4J,GAAAC,sBAAA9J,KAAAwJ,aAAAzG,EAAA,UACA8G,EAAAjH,aAAA6F,KAAA7F,aAAA6F,EAAAqB,oBACAD,EAAAjH,qBAMA6G,GAAAG,QAAAvG,EAIA,OAAAoG,GAAAM,SAGAC,SAAA,SAAAjI,EAAAgB,GAQA,GAAA0D,GAAAhH,OAAA,IAAuBsC,EAAAY,UAAA,KACvBsH,KACAjB,KACAS,EAAA,GAAArK,UAEAqB,EAAAsC,KAAAtC,gBAAAnC,OAEA,QAAA8B,KAAAqG,GACAwD,EAAAvG,KAAAtD,GACA4I,EAAAtF,KAAA+C,EAAArG,GAUA,OAPAK,GAAAuI,EAAA,WACA,OAAAjI,GAAA,EAAkBA,EAAAkJ,EAAAhJ,OAAiBF,IACnCpC,MAAAiG,UAAAqF,EAAAlJ,GAAAmJ,UAAAnJ,GAEA0I,GAAAG,QAAAM,aAGAT,EAAAM,SAGAI,SAAA,SAAA/B,EAAArF,GAaA,GAAAqH,GAAA,GAAAhL,UACA2K,EAAAK,EAAAL,OACAK,GAAAR,SAAA,EAEA,IAAAS,GAAA1G,IAYA,OAXArE,OAAA,8BAAA8I,GAAA5F,QAAA,SAAAc,GAGAyG,IAAAtF,KAAA,WACA,MAAA4F,GAAAL,SAAA1G,EAAAP,KAIAO,EAAAiF,WAAAR,YAAAzE,KAGAyG,GAGAO,MAAA,SAAAC,EAAAxH,IA0EAwH,GAAA,gBAAAA,IAAA,YAAAA,KAEAxH,EAAAwH,EACAA,EAAAxH,EAAAwH,SAEA,IAAAnC,GAAAmC,EAAAzL,IAAA0L,KAAAD,GAAAxL,QAAA0L,MACA1H,QAEA,IAAAD,GAAAC,EAAA2H,UAAmCA,UAAA,MACnCC,KACAN,EAAA1G,KAOAiH,EACAjH,KAAAwG,SAAA/B,EAAArF,GAAA0B,KAAA,WACA,MAAA4F,GAAAlC,KAAAC,EAAArF,KACK0B,KAAA,SAAAoG,GACL,MAAAR,GAAAzG,aAAAiH,EAAA/H,EAAAC,GAAA,KACK0B,KAAA,SAAAqG,GAGL,MAAAH,KAAAlH,OAAAqH,KACKC,UAAA,SAAAnD,GAGL,KADA8B,SAAAsB,MAAA,6BAAApD,GACAA,GAKA,OADAjJ,OAAAmE,MAAA6H,EAAAC,GACAD,GAcA,OAVAtL,KAAA,iBACAX,KAAAiD,eAKA9C,OAAAoM,aACAzL,MAAA,IAAAmC,OAAA,SAGAA,QACCH,MAAA,KAAApD,iCAAAH,OAAAC,QAAAG,gCD0BK6M,IAMA,SAAUjN,EAAQC,EAASC,GAEjC,GAAIC,GAA8BC,CE17BlCD,IACAD,EAAA,KACAA,EAAA,KACAA,EAAA,UAwECM,MAvEDJ,EAAA,SAAA8M,EAAA/L,EAAAgM,GACA,YAKA,IAAAC,GAAAF,EAAAE,IAEA,iBAAAC,GAgBA,GAAAC,GAAAJ,CACAG,aAAAE,OACAL,EAAAG,EACGA,GAAA,gBAAAA,KACHC,EAAAD,EAGA,IAAAG,GACAC,IACA,IAAAH,EAAA,CACAJ,IACA,QAAApC,KAAAwC,GACAI,OAAAC,eAAAzG,KAAAoG,EAAAxC,KACA2C,EAAAhI,KAAAqF,GACAoC,EAAAzH,KAAA6H,EAAAxC,IAGA0C,UACGN,KACHM,KAGA,KAAAN,MAAAlK,OACA,UAAA7B,IAAAwK,QAAA6B,EAGA,IAAArB,GAAA,GAAAhL,EACAgL,GAAAL,QAAA8B,OAAA,WACAJ,EAAAC,EAAA,MAEA,IAAAI,GAAAX,EAAAlK,MAeA,OAdAoK,GAAAF,EAAA,SAAAY,EAAAC,GAYA,MAXAT,IACAG,EAAAhI,KAAAsI,GAEAZ,EAAAW,EAAA,SAAAxF,GACA6D,EAAA6B,gBACAR,EAAAC,EAAAM,IAAAzF,EACA,KAAAuF,GACA1B,EAAAR,QAAA6B,KAGIrB,EAAA8B,QACJ9B,EAAA6B,gBAEA7B,EAAAL,UAECvI,MAAA,KAAApD,MAAAH,EAAAC,QAAAG,IFg8BK8N,IAMA,SAAUlO,EAAQC,EAASC,GAEjC,GAAIC,GAA8BC,CGnhClCD,IAAAD,EAAA,UA4GCM,MA5GDJ,EAAA,SAAAK,GAIA,GACA0N,GAAA,GAAAC,QAAA,+DACAC,EAAA,GAAAD,QAAA,uEACArN,EAAA,WAKA,OAJAuN,GAAA,KACAC,EAAAtC,UACAuC,GAAAD,EAAA,IAEAzL,EAAA,EAAiBA,EAAAyL,EAAAvL,OAAaF,IAC9B,GAAAyL,EAAAzL,GAAA,CAKA,GAAA2L,GAAA,GAAA1N,GAAAwN,EAAAzL,GAAA,IACA4L,EAAA,GAAA3N,GAAAyN,EAAA,MAEA,IACA,IAAAC,EAAAE,MACAF,EAAAG,QACAH,EAAAI,WACAJ,EAAApN,OAMK,IAAAoN,EAAAG,SACLH,EAAAG,OAAAF,EAAAE,QAEAH,EAAAI,YACAJ,EAAAI,UAAAH,EAAAG,UAEA,KAAAJ,EAAAE,KAAAvM,OAAA,MAKA,OAJAuM,GAAAD,EAAAC,KAAAG,UAAA,EACAJ,EAAAC,KAAAI,YAAA,QAAAN,EAAAE,KAEAK,EAAAL,EAAArK,MAAA,KACAiF,EAAA,EAAqBA,EAAAyF,EAAAhM,OAAiBuG,IACtC,KAAAyF,EAAAzF,GAEAA,GAAAyF,EAAAhM,OAAA,EACAgM,EAAAzF,GAAA,IAEAyF,EAAAC,OAAA1F,EAAA,GACAA,KAESA,EAAA,OAAAA,GAAA,IAAAyF,EAAA,KACT,MAAAA,EAAAzF,IAAA,MAAAyF,EAAAzF,EAAA,KAEAA,GAAAyF,EAAAhM,OAAA,GACAgM,EAAAC,OAAA1F,EAAA,GACAyF,EAAAzF,EAAA,QAEAyF,EAAAC,OAAA1F,EAAA,KACAA,GAAA,GAIAkF,GAAAE,KAAAK,EAAApM,KAAA,UApCA6L,GAAAS,UAAAZ,IACAI,EAAAQ,SAAAT,EAAAS,UAEAT,EAAAC,CAsCAF,MACAC,EAAAG,QACAJ,EAAA/I,KAAAgJ,EAAAG,OAAA,KAEAH,EAAAI,WACAL,EAAA/I,KAAA,KAAAgJ,EAAAI,WAEAL,EAAA/I,KAAAgJ,EAAAE,MACAF,EAAApN,OACAmN,EAAA/I,KAAA,IAAAgJ,EAAApN,OAEAoN,EAAAS,UACAV,EAAA/I,KAAA,IAAAgJ,EAAAS,UAIAxJ,KAAA8I,MAAA5L,KAAA,GAGA,IAAAuM,GAAAzJ,KAAA8I,IAAAY,MAAAjB,EAEAzI,MAAAkJ,OAAAO,EAAA,KAAAA,EAAA,MAAAb,GACA5I,KAAAmJ,UAAAM,EAAA,KAAAA,EAAA,MAAAb,GACA5I,KAAAiJ,KAAAQ,EAAA,GACAzJ,KAAArE,MAAA8N,EAAA,KAAAA,EAAA,MAAAb,GACA5I,KAAAwJ,SAAAC,EAAA,KAAAA,EAAA,MAAAb,GAEA5I,KAAAmJ,WAAAP,IAEAa,EAAAzJ,KAAAmJ,UAAAO,MAAAf,GAEA3I,KAAA2J,KAAAF,EAAA,IAAAb,EACA5I,KAAA4J,SAAAH,EAAA,IAAAb,EACA5I,KAAA6J,KAAAJ,EAAA,IAAAA,EAAA,GACAzJ,KAAA8J,KAAAL,EAAA,IAAAb,GAKA,OAFAvN,GAAAiB,UAAA4H,SAAA,WAAsC,MAAAlE,MAAA8I,KAEtC/N,EAAAM,QACCwC,MAAA,KAAApD,MAAAH,EAAAC,QAAAG,IHyhCKqP,IAMA,SAAUzP,EAAQC,EAASC,GAEjC,GAAIC,GAA8BC,CI7oClCD,IAAAD,EAAA,KAAAA,EAAA,UA+ICM,MA/IDJ,EAAA,SAAAuK,EAAAuC,GAKA,GAAAwC,KAyIA,OArIA/E,GAAAhE,UAAA,kBAAA+I,GAIAA,EAAArG,cAAA,SAAAsG,EAAAC,GA+BAF,EAAAG,aACAH,EAAAG,WAEA,gHAGA,IAAAT,GAAAM,EAAAG,WAAAC,KAAAH,GACAI,EAAA,IAEA,IAAAX,EAAA,CACAA,EAAAhM,QACAgM,EAAA,IAAeA,EAAA,KACfA,EAAA,KAAeA,EAAA,SAEfQ,IAEAA,EAAA,GAAApM,MAAAoM,GACA1C,EAAA3I,QAAA2I,EAAArL,KAAA,+EAAAwF,GACA,MAAAuI,GAAA,MAAAvI,OACI,SAAAiB,EAAAyF,GACJqB,EAAArB,GAAAqB,EAAArB,IAAAzF,KAGAyH,EAAA,GAAAvM,MAAA4L,EAAA,SAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACAA,EAAA,QACAW,EAAAC,YAAAZ,EAAA,SAGA,IAAAa,GAAA,EACAC,EAAAd,EAAA,IAAAA,EAAA,GAAAhN,OAAA,EACA,MAAA8N,IACAD,EAAA,IAAAb,EAAA,QAAAnG,OAAAmG,EAAA,QACA,KAAAc,IAAuBD,IAAA,IAEvBC,IACAD,GAAAF,EAAAI,qBAEAF,GACAF,EAAAK,QAAAL,EAAAM,UAAA,IAAAJ,GAIA,MAAAF,IAeAL,EAAAY,YAAA,SAAAC,EAAAzL,GAYA,GAAA0L,GAAA,SAAAlC,GAAqB,MAAAA,GAAA,OAAAA,IACrBxJ,QACA,IAAA2L,MACAC,EAAA5L,EAAA6L,KAAA,eACAC,EAAA,EACA,YAAA9L,EAAA+L,SAAA,CACA,GAAAC,GAAAP,EAAAG,EAAA,aACAE,IAAA,OAAAG,QAAAD,EAAA,IAAA9N,QAAA8N,EAAAN,EAAAD,EAAAG,EAAA,cAAAF,EAAAD,EAAAG,EAAA,YAAA9N,KAAA,KAGA,GADA6N,EAAAhL,KAAAmL,GACA,QAAA9L,EAAA+L,SAAA,CACA,GAAAG,IAAAR,EAAAD,EAAAG,EAAA,YAAAF,EAAAD,EAAAG,EAAA,cAAAF,EAAAD,EAAAG,EAAA,eAAA9N,KAAA,KACAqO,EAAAV,EAAAG,EAAA,iBAIA,IAHA5L,EAAAoM,eACAF,GAAA,KAAAC,EAAA,YAAAT,EAAAS,IAEAnM,EAAA6L,KACAK,GAAA,QACG,YAAAlM,EAAA+L,SAAA,CACH,GAAAM,GAAAZ,EAAAJ,oBACAiB,EAAAC,KAAAC,IAAAH,EACAH,KAAAG,EAAA,WACAX,EAAAa,KAAAE,MAAAH,EAAA,SAAAZ,EAAAY,EAAA,IAEAX,EAAAhL,KAAAuL,GAEA,MAAAP,GAAA7N,KAAA,MAGA8M,GACCnM,MAAA,KAAApD,MAAAH,EAAAC,QAAAG,IJmpCKoR,IAMA,SAAUxR,EAAQC,EAASC,GAEjC,GAAIC,GAA8BC,CK1yClCD,IAAAD,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,UAusBCM,MAvsBDJ,EAAA,SACAK,EAAAW,EAAAP,EAAA4Q,EAAAvE,EAAAvC,EAAA+G,EAAAC,GAEA,YAyjBA,SAAAC,GAAAC,EAAAC,GACA,GAAAzQ,GAAA,SAAAA,EAAA8I,GAKA,mBAAAA,MACAA,EAAAtJ,EAAA0L,KAAApC,IAEA,UAAA2H,MAGA,IAAAtE,GAAA,gBAAAnM,GAAAwQ,EAAAxQ,EAAA8I,GAAA9I,IAAA0Q,KAAA1Q,EAAAoQ,GAAApQ,QACA,OAAAmM,GAAAuE,KAAAvE,EAAAiE,GAEAjE,EAEA,GAAAsE,GAAAtE,GAeA,IAbAnM,EAAA2Q,QAAAH,EAAAzC,OAAA,SAAA/J,EAAAwL,EAAA1G,GAGA,MAAA9I,GAAAsG,QAAAtC,GAAAwL,EAAA1G,GAAAnH,OAAA,GAGA3B,EAAAsG,OAAAkK,EAAAlK,QAAA,SAAA/C,EAAAiM,EAAA1G,GAGA,MAAA9I,GAAAwP,EAAA1G,GAAAxC,OAAA,SAAAtC,GACA,MAAA6H,GAAA/J,QAAAyB,EAAAS,IAAA,KAGA,kBAAAwM,GAAA,CACA,GAAA1I,GAAA0I,EAAA1I,MACA0I,GAAA,SAAAhB,EAAA1G,GAEA,MAAAhB,GAAAgB,GAAA8H,SAAApB,IAGA,MAAAxP,GA9lBAD,EAAA8Q,IAAA,8BAEA,MAAsC,IAAtCvH,EAAAwH,aAA4BnP,OAAA,IAAUA,SAAA5B,EAAA,8BAGtC,IAAAgR,GAAA7E,MAAAvL,UAAAqQ,EAAAD,EAAAE,MAAAC,EAAAH,EAAA5M,OAAAjB,EAAA2I,EAAA3I,QAEAiO,EAAA,SAAA5K,EAAA4C,EAAAiI,GAaA,GAAAC,GAAA,IAAAD,GAAA/M,KAAAiN,eAAAC,GAAAhL,EACA,OAAA4C,GAAAkI,EAAAG,OAAArI,GAAAkI,GAGAI,EAAA,SAAAC,EAAAnL,EAAAoL,GAGA,MAFApL,IAAA,GAAApC,OAAA6M,EAAAnL,KAAAU,EAAA,IACAoL,KAAAvS,EAAAwS,OACA,SAAA5N,GAEA,MADAuC,GAAA,GAAAvC,EACA0N,EAAAxP,MAAAyP,EAAApL,KAMAsL,EAAA,SAAAH,EAAAC,GASA,kBAEA,MADAtN,MAAAnB,QAAAuO,EAAAC,EAAA9G,UAAA+G,IACAtN,OAIAyN,EAAA,SAAAJ,EAAAC,GAQA,kBACA,MAAAtN,MAAA7D,IAAAiR,EAAAC,EAAA9G,UAAA+G,MAIAI,EAAA,SAAAL,EAAAC,GAOA,kBACA,MAAAtN,MAAAiC,OAAAmL,EAAAC,EAAA9G,UAAA+G,MAIAK,EAAA,SAAAN,EAAAO,EAAAN,GAUA,kBACA,GAAApL,GAAAqE,UAAAO,EAAAsG,EAAAC,EAAAnL,EAAAoL,EACA,OAAAM,GAAApM,KAAA8L,GAAAvS,EAAAwS,OAAArL,GACAlC,KAAA7D,IAAA2K,IAEA9G,KAAAnB,QAAAiI,GACA9G,QAIAoM,EAAA,SAAA5E,GA6DA,GAAAqG,GAAA7N,eAAAkN,IAAAxR,EAAA,mBACA,iBAAA8L,KACAA,EAAAK,MAAAL,GAEA,IAAAsG,GAAAtG,GAAA,UAAAA,KAAAjB,SACA,IAAAsH,IAAAC,EAAAC,KAAA,CAIA,OAFAC,GAAAH,EAAA7N,QACA3C,EAAA2Q,EAAA1Q,OAAAwQ,EAAAxQ,OACAF,EAAA,EAAiBA,EAAAC,EAAOD,IACxB4Q,EAAA5Q,GAAA0Q,EAAA1Q,EAEA,IAAAyQ,EAIA,MAAAG,EAEAF,GAAAE,EASA,MALA/I,GAAAgJ,OAAAH,EAAAI,GACAJ,EAAAb,cAAA,SAAAzF,GAEA,MAAA0F,GAAA1F,IAEAsG,GAGAZ,EAAAd,EAAA8B,EAAAhB,EAAA5Q,UACAZ,EAAA,yBAIAwR,GAAAiB,MAAAD,EAAAC,MAAArB,EACAI,EAAAkB,YAAAX,EACAP,EAAAmB,gBAAAb,EACAN,EAAAoB,eAAAZ,EACAR,EAAAqB,oBAAAZ,EAKA9O,GAAA,2BAAApC,GACA,GAAA4Q,GAAAX,EAAAjQ,EAKAyR,GAAAzR,GAAA,WAAyB,MAAAuD,MAAAmO,MAAAd,EAAAxP,MAAAmC,KAAAuG,WAAA,SAAA9J,EAAAuD,KAAA,SAKzBnB,GAAA,iDAAApC,GACA,GAAA4Q,GAAA7F,EAAA/K,EACAyR,GAAAzR,GAAA,WAAyB,MAAA4Q,GAAAxP,MAAA9C,GAAAiF,MAAAF,OAAA6M,EAAAnL,KAAA+E,UAAA,QAGzBtB,EAAArH,OAAAwO,GAEAoC,YAAAtB,EACAD,cAAAC,EACAhJ,SAAA,WAEA,MAAAlE,MAAA9C,KAAA,MAEAiQ,OAAA,SAAArI,GAyBA,MADA9E,MAAAyO,QAAA3J,EACA9E,MAGA+L,GAAA,SAAA2C,EAAAC,GAeA,GAAAC,GAAA5O,KAAA7D,IAAA,SAAAwD,GACA,MAAAoM,GAAApM,EAAA+O,EAAAC,IAOA,OALAC,GAAAC,OAAA,WACA,OAAAzR,GAAA,EAAkBA,EAAAwR,EAAAtR,OAAoBF,IACtCwR,EAAAxR,GAAAyR,UAGAD,GAGAvC,IAAA,WAmBA,MAAArM,MAAAyO,QACAzO,KAAAyO,QAGA,GAAAzO,MAAAiN,cAAA,IA8HAnN,OAAA,SAAAiD,GAuBA,GAAAxF,GAAAoP,EAAAnL,KAAAxB,KAAA,GACA8O,EAAAtH,EAAArL,IAAAoK,UAAA,SAAArE,GACA,MAAAyK,GAAAnL,KAAAU,EAAA,IAEA,OAAAlC,MAAAmO,MAAAtB,EAAAhP,MAAAN,EAAAuR,GAAA9O,OAGA7D,IAAA,SAAAmF,EAAAb,GAKA,MAAAT,MAAAmO,MAAA3G,EAAArL,IAAA6D,KAAAsB,EAAAb,GAAAT,OAGAnB,QAAA,SAAAkQ,EAAAC,GAOA,MAFAnQ,GAAAmB,KAAA+O,EAAAC,GAEAhP,MAEAiC,OAAA,SAAAA,GAwBA,GAAAC,GAAAqE,UAAA0I,EAAAjP,KAAAkP,EAAA,CACA,oBAAAjN,GAAA,CAEA,GADAgN,EAAAtT,EAAAwT,cAAAnP,KAAAkC,EAAA,IACA,GAAAA,EAAA5E,OAEA,MAAA2R,GAAA9B,OAAAnN,KAGAkP,GAAA,EAEA,MAAAlP,MAAAmO,MAAA3G,EAAAvF,OAAAgN,EAAA/M,EAAAgN,GAAAhN,EAAAgN,EAAA,IAAAlP,OAEAf,YAAA,SAAAmQ,EAAAC,GAQA,GAAAxU,GAAAoK,EAAAqK,WAAAF,KAAAnK,EAAAzH,UAAA4R,EAEA,OADAC,SACArP,KAAAnB,QAAA,SAAAc,GACA,GAAA9E,GAAAwU,EAAA1P,MAGA4P,GAAA,WAkCA,GAAAhS,GAAA,GAAAyC,MAAAiN,cAAA,EAKA,OAJApO,GAAA0H,UAAA,SAAAnJ,GACAA,EAAA,IAAcA,EAAA4C,KAAA1C,OAAAF,GACd4C,KAAA5C,IAAgBG,EAAAwC,KAAAC,KAAA5C,KACZ4C,MACJzC,EAAA4P,OAAAnN,QA6CA,IAAArE,GAAAuQ,EAAAD,EAAAG,EAiGA,OAtBArR,GAAAY,MAAAuQ,EAAAD,EAAA,SAAAzE,GAEA,MAAA4E,GAAA5E,KAGA7L,EAAA6T,KAAA,SAAAC,EAAAC,EAAAC,GAQA3D,EAAAwD,KAAAC,EAAAC,EAAA,SAAAvD,GACAwD,EAAAzD,EAAAC,EAAAC,OAIArR,EAAA6U,mBAAAjU,EAAAwT,cAAA,SAAAjQ,EAAAiM,EAAA1G,GACA,UAAA2H,GAAAzQ,EAAAsG,OAAA/C,EAAAiM,EAAA1G,KAEA1J,EAAAqR,SAAAzQ,EAAAyQ,WACAzQ,GACCkC,MAAA,KAAApD,MAAAH,EAAAC,QAAAG,IL+yCKmV,IAMA,SAAUvV,EAAQC,EAASC,GAEjC,GAAIC,GAA8BC,CM9/DlCD,IAAAD,EAAA,KAAAA,EAAAI,GAAAC,EAAA,UA0DCC,MA1DDJ,EAAA,SACAgB,EAAAf,GAEA,YACA,uBAAA4R,UAAA,CACA,GAAAuD,GAAAvD,SAAAwD,cAAA,MACArU,GAAA8Q,IAAA,eAAAsD,EAAAE,kBACAtU,EAAA8Q,IAAA,sBAEA,IAIA,MAHAsD,GAAA9Q,UAAA,uBAGA,GAAA8Q,EAAAE,iBAAA,eAAA1S,OACG,MAAA2G,OAIH,GAAAgM,EAEA,QAIAT,KAAA,SAAAC,EAAAC,EAAAC,EAAAzU,GACA,GAAAA,KAAAgV,QAMA,WADAP,IAIA,IAAAQ,GAAAxV,CAOA,IALA8U,EAAA,WAAAA,EAAA/T,EAAA,iCAAA+T,EACAA,EAAA,QAAAA,GAAA,QAAAA,EAlBA,SAmBA,UAAAA,EAAA/T,EAAA,cAnBA,kBAoBA,QAAA+T,EAAA/T,EAAA,YApBA,kBAqBA,QAAA+T,EArBA,UAqBAU,EAAAT,IAAAD,EACA,KAAAA,EAAA/S,OAAA+S,EAAAnS,OAAA,IACAmS,IAAArG,UAAA,EAAAqG,EAAAnS,OAAA,EACA,IAAA8S,IAAA,EAGA,GAAAA,IAAA1U,EAAA,sBAAAuU,GACA,MAAAN,GAAAM,EAGAE,IAAAV,GAAA,SAAAtD,GACA,UAAAsD,IACAQ,EAAA9D,GAEAwD,EAAAxD,QAICtO,MAAA,KAAApD,MAAAH,EAAAC,QAAAG,INmgEK2V,IAMA,SAAU/V,EAAQC,EAASC,GAEjC,GAAIC,GAA8BC,COrkElCD,IAAAD,EAAA,KAAAA,EAAA,UA8RCM,MA9RDJ,EAAA,SAAAgB,EAAAX,GACA,YAEA,IAAA+U,GAAAvD,SAAAwD,cAAA,OACAO,EAAAR,EAAAxD,SAAAwD,EAAAS,uBAAAT,EAAAU,oBAAAV,EAAAW,mBAAAX,EAAAY,iBACAV,EAAAF,EAAAE,iBACAW,EAAA,oDACAjV,GAAA8Q,IAAA,yBAAA8D,GACA5U,EAAA8Q,IAAA,YAAAwD,EAIA,IAAAY,GAAA,SAAAzF,EAAA1G,GAKA,GAAAoM,GAAA1F,EAAA1N,QAAA,QACA,MAAAoT,GAAA1F,EAAA1G,EAMA,IAAAqM,GAAArM,IAAAsM,eAAAtM,EAAA1J,EAAA+V,KAAAvE,SACA7C,GAAAsG,EACA,gDACA,oEACA5F,KAAAe,EAEA,IADA1G,KAAAqM,EACApH,EAAA,CACA,GAAAsH,GAAA,IAAAtV,EAAA,OAAAA,EAAA,UACA+I,EAAAgB,WAAAqL,EAAArL,SACA,OAAAhB,EAAAG,YAAA,IAAAH,EAAAgB,UAAAhB,EAAAG,aAAAkM,CAGA,IAAApH,EAAA,IAAAsH,EAAA,CAGA,GAAAC,GAAAlW,EAAA8L,KAAA9L,EAAA8L,KAAA6C,EAAA,GAAAoH,KAAAI,eAAAxH,EAAA,GACA,KAAAuH,GAAAvH,EAAA,IAAAA,EAAA,IAAAuH,EAAAE,QAAAxU,cAEA,QAEA,IAAA8H,GAAAqM,EAGA,IADA,GAAAhM,GAAAmM,EACAnM,GAAAL,GAEA,KADAK,IAAAF,YAEA,QAIA,OAAA8E,GAAA,GACAkH,EAAAlH,EAAA,GAAAuH,IACAA,GAEA,GAAAvH,EAAA,IAAAjF,EAAA2M,uBAEA,MAAA3M,GAAA2M,uBAAA1H,EAAA,GAEA,IAAAuH,EACA,IAAAvH,EAAA,IAGA,GADAuH,EAAAxM,EAAA4M,qBAAA3H,EAAA,KACAA,EAAA,KAAAA,EAAA,GAIA,MAAAuH,EAHA9F,IAAAzB,EAAA,QAAAA,EAAA,IAOA,GAAAsG,EAKA,WAAAvL,EAAAgB,UAAA,WAAAhB,EAAAnC,SAAA3F,cACA2U,EAAA7M,EAAA0G,EAAA1G,EAAAuL,kBAGAvL,EAAAuL,iBAAA7E,EAEE8F,KAEFA,EAAAxM,EAAA4M,qBAAA,KAIA,QADAvJ,MACA1K,EAAA,EAAAC,EAAA4T,EAAA3T,OAAiCF,EAAAC,EAAOD,IAAA,CACxC,GAAAuC,GAAAsR,EAAA7T,EACA,IAAAuC,EAAA8F,UAAA8L,EAAA5R,EAAAwL,EAAA1G,IAEAqD,EAAA/H,KAAAJ,GAGA,MAAAmI,IAEAwJ,EAAA,SAAAE,EAAA7V,EAAAyF,GAEA,GAAAqQ,GAAAD,EACAE,EAAAF,EAAA/S,aAAA,MACAkT,EAAAD,GAAA,WACAE,EAAAJ,EAAA5M,WACAiN,EAAA,WAAAxP,KAAA1G,EAEA,IAAAkW,IAAAD,EACA,QAEAF,GAGAC,IAAAjP,QAAA,aAFA8O,EAAAM,aAAA,KAAAH,GAIAE,GAAAD,IACAJ,IAAA5M,WAGA,QADAmN,GAAApW,EAAA+N,MAAAiH,GACAvT,EAAA,EAAeA,EAAA2U,EAAAzU,OAAsBF,IACrC2U,EAAA3U,GAAA,QAAAuU,EAAA,MAAAI,EAAA3U,EAEAzB,GAAAoW,EAAA7U,KAAA,IAEA,KACA,MAAAkE,GAAAI,KAAAgQ,EAAA7V,GACE,QACF+V,GACAD,EAAA1N,gBAAA,OAKA,KAAArI,EAAA,wBACA,GAAA6V,GAAA,WA6CA,QAAA5M,GAAAlI,EAAAmG,EAAAhD,GACA,GAAAoS,GAAApP,EAAAlG,OAAA,EACA,MAAAsV,GAAA,KAAAA,IAEApP,IAAAgK,MAAA,OAEAhK,IAAAF,QAAA,SACA,IAAAuP,GAAAC,EAAAtS,GAAA,GACA,iBAAAD,GACA,GAAAwS,GAAAxS,EAAAlB,aAAAhC,EACA,OAAA0V,IAAAF,EAAAE,EAAAvP,IAGA,QAAAwP,GAAAC,GACA,gBAAA1S,EAAA8E,GACA,MAAA9E,IAAAiF,aAAAH,GACA,GAAA4N,EAAA1S,EAAA8E,GACA,UAKA,QAAAK,GAAAuN,GACA,gBAAA1S,EAAA8E,GAEA,MADA9E,KAAAiF,WACAyN,EACA1S,GAAA8E,GAAA4N,EAAA1S,EAAA8E,GACA9E,GAAA8E,GAIA,QAAA6N,GAAAD,EAAAE,GACA,MAAAF,GACA,SAAA1S,EAAA8E,GACA,MAAA8N,GAAA5S,IAAA0S,EAAA1S,EAAA8E,IAEA8N,EA/EA,GAAAC,GAAA,OAAA1C,EAAAqB,QAAA,4BACAsB,GACAC,GAAA,SAAAvB,GAEA,MADAA,KAAAqB,KACA,SAAA7S,GACA,MAAAA,GAAAwR,aAGAwB,IAAA,SAAAvP,GACA,GAAAwP,GAAA,IAAAxP,EAAA,GACA,iBAAAzD,GACA,MAAAA,GAAAyD,UAAA3F,QAAA2F,IAAA,QAAAzD,EAAAyD,UAAA,KAAA3F,QAAAmV,IAAA,IAGAC,IAAA,SAAApD,GACA,gBAAA9P,GACA,MAAAA,GAAA8P,SAIAyC,GACAY,KAAA,SAAAX,EAAAvP,GACA,UAAAuP,EAAA1U,QAAAmF,IAEAmQ,KAAA,SAAAZ,EAAAvP,GACA,MAAAuP,GAAA1U,QAAAmF,IAAA,GAEAoQ,KAAA,SAAAb,EAAAvP,GACA,MAAAuP,GAAA/I,UAAA+I,EAAA7U,OAAAsF,EAAAtF,OAAA6U,EAAA7U,SAAAsF,GAEAqQ,KAAA,SAAAd,EAAAvP,GACA,WAAAuP,EAAA,KAAA1U,QAAA,IAAAmF,EAAA,SAEAsQ,KAAA,SAAAf,EAAAvP,GACA,WAAAuP,EAAA,KAAA1U,QAAAmF,EAAA,MAEAuQ,IAAA,SAAAhB,EAAAvP,GACA,MAAAuP,IAAAvP,GAEA8P,GAAA,SAAAP,EAAAvP,GACA,WAiCAwQ,IAQA,iBAAAzT,EAAAwL,EAAA1G,GAEA,GAAA4N,GAAAe,EAAAjI,EACA,KAAAkH,EAAA,CAGA,GAAAlH,EAAAzI,QAAA,oIAAAnF,EAAA8V,EAAAzT,EAAAgD,EAAA0Q,EAAAC,EAAApB,GAUA,MATAvP,GACAyP,EAAAC,EAAAD,EAAAI,EAAA7S,GAAA,IAAAgD,EAAAF,QAAA,YAEA2Q,EACAhB,GAAA,KAAAgB,EAAAjB,EAAAtN,GAAAuN,GAEAiB,IACAjB,EAAAC,EAAAD,EAAA1N,EAAA2O,EAAAnB,EAAAoB,KAEA,KAEA,SAAA7S,OAAA,wBAEA,KAAA2R,EACA,QAEAe,GAAAjI,GAAAkH,EAGA,MAAAA,GAAA1S,EAAA8E,MAIA,KAAA/I,EAAA,WACA,GAAAmV,GAAA,SAAA1F,EAAA1G,GAOA,OALAsN,GAAA5G,EAAAzB,MAAAiH,GACA6C,KAIApW,EAAA,EAAgBA,EAAA2U,EAAAzU,OAAsBF,IAAA,CACtC+N,EAAA,GAAAsI,QAAA1B,EAAA3U,GAAAsF,QAAA,YACAyI,EAAA1N,QAAAiW,MAEA,QADA5L,GAAA8I,EAAAzF,EAAA1G,GACAZ,EAAA,EAAAxG,EAAAyK,EAAAxK,OAAqCuG,EAAAxG,EAAOwG,IAAA,CAC5C,GAAAlE,GAAAmI,EAAAjE,EACA2P,GAAA7T,EAAAgU,aAAAhU,GAIA,GAAAiU,KACA,KAAAxW,IAAAoW,GACAI,EAAA7T,KAAAyT,EAAApW,GAEA,OAAAwW,GAeA,OAXAhD,GAAAlH,MAAA4G,EAAA,SAAA3Q,EAAAwL,EAAA1G,GACA,MAAAA,IAAA,GAAAA,EAAAgB,SAEA6L,EAAA7M,EAAA0G,EAAA,SAAAxP,GACA,MAAA2U,GAAA9O,KAAA7B,EAAAhE,KAIA2U,EAAA9O,KAAA7B,EAAAwL,IACCoG,EAEDX,GACC/S,MAAA,KAAApD,MAAAH,EAAAC,QAAAG","file":"4.bundle.js","sourcesContent":["webpackJsonp.registerAbsMids({\n\t'dojo/parser':366,\n\t'dojo/promise/all':367,\n\t'dojo/_base/url':368,\n\t'dojo/date/stamp':369,\n\t'dojo/query':370,\n\t'dojo/selector/_loader':371,\n\t'dojo/selector/_loader!default':372,\n\t'dojo/selector/lite':372\n});\nwebpackJsonp([4],{\n\n/***/ 366:\n/*!********************************************************!*\\\n  !*** ./node_modules/dojox/node_modules/dojo/parser.js ***!\n  \\********************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var require;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t__webpack_require__.dj.c(/*! dojo/parser */ 366), __webpack_require__(/*! ./_base/kernel */ 238), __webpack_require__(/*! ./_base/lang */ 235), __webpack_require__(/*! ./_base/array */ 237), __webpack_require__(/*! ./_base/config */ 260), __webpack_require__(/*! ./dom */ 241), __webpack_require__(/*! ./_base/window */ 247),\n\t\t__webpack_require__(/*! ./_base/url */ 368), __webpack_require__(/*! ./aspect */ 259), __webpack_require__(/*! ./promise/all */ 367), __webpack_require__(/*! ./date/stamp */ 369), __webpack_require__(/*! ./Deferred */ 268), __webpack_require__(/*! ./has */ 239), __webpack_require__(/*! ./query */ 370), __webpack_require__(/*! ./on */ 257), __webpack_require__(/*! ./ready */ 295)\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(require, dojo, dlang, darray, config, dom, dwindow, _Url, aspect, all, dates, Deferred, has, query, don, ready){\n\n\t// module:\n\t//\t\tdojo/parser\n\n\tnew Date(\"X\"); // workaround for #11279, new Date(\"\") == NaN\n\n\t// data-dojo-props etc. is not restricted to JSON, it can be any javascript\n\tfunction myEval(text){\n\t\treturn eval(\"(\" + text + \")\");\n\t}\n\n\t// Widgets like BorderContainer add properties to _Widget via dojo.extend().\n\t// If BorderContainer is loaded after _Widget's parameter list has been cached,\n\t// we need to refresh that parameter list (for _Widget and all widgets that extend _Widget).\n\tvar extendCnt = 0;\n\taspect.after(dlang, \"extend\", function(){\n\t\textendCnt++;\n\t}, true);\n\n\tfunction getNameMap(ctor){\n\t\t// summary:\n\t\t//\t\tReturns map from lowercase name to attribute name in class, ex: {onclick: \"onClick\"}\n\t\tvar map = ctor._nameCaseMap, proto = ctor.prototype;\n\n\t\t// Create the map if it's undefined.\n\t\t// Refresh the map if a superclass was possibly extended with new methods since the map was created.\n\t\tif(!map || map._extendCnt < extendCnt){\n\t\t\tmap = ctor._nameCaseMap = {};\n\t\t\tfor(var name in proto){\n\t\t\t\tif(name.charAt(0) === \"_\"){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\t// skip internal properties\n\t\t\t\tmap[name.toLowerCase()] = name;\n\t\t\t}\n\t\t\tmap._extendCnt = extendCnt;\n\t\t}\n\t\treturn map;\n\t}\n\n\tfunction getCtor(/*String[]*/ types, /*Function?*/ contextRequire){\n\t\t// summary:\n\t\t//\t\tRetrieves a constructor.  If the types array contains more than one class/MID then the\n\t\t//\t\tsubsequent classes will be mixed into the first class and a unique constructor will be\n\t\t//\t\treturned for that array.\n\n\t\tif(!contextRequire){\n\t\t\tcontextRequire = require;\n\t\t}\n\n\t\t// Map from widget name or list of widget names(ex: \"dijit/form/Button,acme/MyMixin\") to a constructor.\n\t\t// Keep separate map for each requireContext to avoid false matches (ex: \"./Foo\" can mean different things\n\t\t// depending on context.)\n\t\tvar ctorMap = contextRequire._dojoParserCtorMap || (contextRequire._dojoParserCtorMap = {});\n\n\t\tvar ts = types.join();\n\t\tif(!ctorMap[ts]){\n\t\t\tvar mixins = [];\n\t\t\tfor(var i = 0, l = types.length; i < l; i++){\n\t\t\t\tvar t = types[i];\n\t\t\t\t// TODO: Consider swapping getObject and require in the future\n\t\t\t\tmixins[mixins.length] = (ctorMap[t] = ctorMap[t] || (dlang.getObject(t) || (~t.indexOf('/') &&\n\t\t\t\t\tcontextRequire(t))));\n\t\t\t}\n\t\t\tvar ctor = mixins.shift();\n\t\t\tctorMap[ts] = mixins.length ? (ctor.createSubclass ? ctor.createSubclass(mixins) : ctor.extend.apply(ctor, mixins)) : ctor;\n\t\t}\n\n\t\treturn ctorMap[ts];\n\t}\n\n\tvar parser = {\n\t\t// summary:\n\t\t//\t\tThe Dom/Widget parsing package\n\n\t\t_clearCache: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear cached data.   Used mainly for benchmarking.\n\t\t\textendCnt++;\n\t\t\t_ctorMap = {};\n\t\t},\n\n\t\t_functionFromScript: function(script, attrData){\n\t\t\t// summary:\n\t\t\t//\t\tConvert a `<script type=\"dojo/method\" args=\"a, b, c\"> ... </script>`\n\t\t\t//\t\tinto a function\n\t\t\t// script: DOMNode\n\t\t\t//\t\tThe `<script>` DOMNode\n\t\t\t// attrData: String\n\t\t\t//\t\tFor HTML5 compliance, searches for attrData + \"args\" (typically\n\t\t\t//\t\t\"data-dojo-args\") instead of \"args\"\n\t\t\tvar preamble = \"\",\n\t\t\t\tsuffix = \"\",\n\t\t\t\targsStr = (script.getAttribute(attrData + \"args\") || script.getAttribute(\"args\")),\n\t\t\t\twithStr = script.getAttribute(\"with\");\n\n\t\t\t// Convert any arguments supplied in script tag into an array to be passed to the\n\t\t\tvar fnArgs = (argsStr || \"\").split(/\\s*,\\s*/);\n\n\t\t\tif(withStr && withStr.length){\n\t\t\t\tdarray.forEach(withStr.split(/\\s*,\\s*/), function(part){\n\t\t\t\t\tpreamble += \"with(\" + part + \"){\";\n\t\t\t\t\tsuffix += \"}\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Function(fnArgs, preamble + script.innerHTML + suffix);\n\t\t},\n\n\t\tinstantiate: function(nodes, mixin, options){\n\t\t\t// summary:\n\t\t\t//\t\tTakes array of nodes, and turns them into class instances and\n\t\t\t//\t\tpotentially calls a startup method to allow them to connect with\n\t\t\t//\t\tany children.\n\t\t\t// nodes: Array\n\t\t\t//\t\tArray of DOM nodes\n\t\t\t// mixin: Object?\n\t\t\t//\t\tAn object that will be mixed in with each node in the array.\n\t\t\t//\t\tValues in the mixin will override values in the node, if they\n\t\t\t//\t\texist.\n\t\t\t// options: Object?\n\t\t\t//\t\tAn object used to hold kwArgs for instantiation.\n\t\t\t//\t\tSee parse.options argument for details.\n\t\t\t// returns:\n\t\t\t//\t\tArray of instances.\n\n\t\t\tmixin = mixin || {};\n\t\t\toptions = options || {};\n\n\t\t\tvar dojoType = (options.scope || dojo._scopeName) + \"Type\", // typically \"dojoType\"\n\t\t\t\tattrData = \"data-\" + (options.scope || dojo._scopeName) + \"-\", // typically \"data-dojo-\"\n\t\t\t\tdataDojoType = attrData + \"type\", // typically \"data-dojo-type\"\n\t\t\t\tdataDojoMixins = attrData + \"mixins\";\t\t\t\t\t// typically \"data-dojo-mixins\"\n\n\t\t\tvar list = [];\n\t\t\tdarray.forEach(nodes, function(node){\n\t\t\t\tvar type = dojoType in mixin ? mixin[dojoType] : node.getAttribute(dataDojoType) || node.getAttribute(dojoType);\n\t\t\t\tif(type){\n\t\t\t\t\tvar mixinsValue = node.getAttribute(dataDojoMixins),\n\t\t\t\t\t\ttypes = mixinsValue ? [type].concat(mixinsValue.split(/\\s*,\\s*/)) : [type];\n\n\t\t\t\t\tlist.push({\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\ttypes: types\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Instantiate the nodes and return the list of instances.\n\t\t\treturn this._instantiate(list, mixin, options);\n\t\t},\n\n\t\t_instantiate: function(nodes, mixin, options, returnPromise){\n\t\t\t// summary:\n\t\t\t//\t\tTakes array of objects representing nodes, and turns them into class instances and\n\t\t\t//\t\tpotentially calls a startup method to allow them to connect with\n\t\t\t//\t\tany children.\n\t\t\t// nodes: Array\n\t\t\t//\t\tArray of objects like\n\t\t\t//\t|\t\t{\n\t\t\t//\t|\t\t\tctor: Function (may be null)\n\t\t\t//\t|\t\t\ttypes: [\"dijit/form/Button\", \"acme/MyMixin\"] (used if ctor not specified)\n\t\t\t//\t|\t\t\tnode: DOMNode,\n\t\t\t//\t|\t\t\tscripts: [ ... ],\t// array of <script type=\"dojo/...\"> children of node\n\t\t\t//\t|\t\t\tinherited: { ... }\t// settings inherited from ancestors like dir, theme, etc.\n\t\t\t//\t|\t\t}\n\t\t\t// mixin: Object\n\t\t\t//\t\tAn object that will be mixed in with each node in the array.\n\t\t\t//\t\tValues in the mixin will override values in the node, if they\n\t\t\t//\t\texist.\n\t\t\t// options: Object\n\t\t\t//\t\tAn options object used to hold kwArgs for instantiation.\n\t\t\t//\t\tSee parse.options argument for details.\n\t\t\t// returnPromise: Boolean\n\t\t\t//\t\tReturn a Promise rather than the instance; supports asynchronous widget creation.\n\t\t\t// returns:\n\t\t\t//\t\tArray of instances, or if returnPromise is true, a promise for array of instances\n\t\t\t//\t\tthat resolves when instances have finished initializing.\n\n\t\t\t// Call widget constructors.   Some may be asynchronous and return promises.\n\t\t\tvar thelist = darray.map(nodes, function(obj){\n\t\t\t\tvar ctor = obj.ctor || getCtor(obj.types, options.contextRequire);\n\t\t\t\t// If we still haven't resolved a ctor, it is fatal now\n\t\t\t\tif(!ctor){\n\t\t\t\t\tthrow new Error(\"Unable to resolve constructor for: '\" + obj.types.join() + \"'\");\n\t\t\t\t}\n\t\t\t\treturn this.construct(ctor, obj.node, mixin, options, obj.scripts, obj.inherited);\n\t\t\t}, this);\n\n\t\t\t// After all widget construction finishes, call startup on each top level instance if it makes sense (as for\n\t\t\t// widgets).  Parent widgets will recursively call startup on their (non-top level) children\n\t\t\tfunction onConstruct(thelist){\n\t\t\t\tif(!mixin._started && !options.noStart){\n\t\t\t\t\tdarray.forEach(thelist, function(instance){\n\t\t\t\t\t\tif(typeof instance.startup === \"function\" && !instance._started){\n\t\t\t\t\t\t\tinstance.startup();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn thelist;\n\t\t\t}\n\n\t\t\tif(returnPromise){\n\t\t\t\treturn all(thelist).then(onConstruct);\n\t\t\t}else{\n\t\t\t\t// Back-compat path, remove for 2.0\n\t\t\t\treturn onConstruct(thelist);\n\t\t\t}\n\t\t},\n\n\t\tconstruct: function(ctor, node, mixin, options, scripts, inherited){\n\t\t\t// summary:\n\t\t\t//\t\tCalls new ctor(params, node), where params is the hash of parameters specified on the node,\n\t\t\t//\t\texcluding data-dojo-type and data-dojo-mixins.   Does not call startup().\n\t\t\t// ctor: Function\n\t\t\t//\t\tWidget constructor.\n\t\t\t// node: DOMNode\n\t\t\t//\t\tThis node will be replaced/attached to by the widget.  It also specifies the arguments to pass to ctor.\n\t\t\t// mixin: Object?\n\t\t\t//\t\tAttributes in this object will be passed as parameters to ctor,\n\t\t\t//\t\toverriding attributes specified on the node.\n\t\t\t// options: Object?\n\t\t\t//\t\tAn options object used to hold kwArgs for instantiation.   See parse.options argument for details.\n\t\t\t// scripts: DomNode[]?\n\t\t\t//\t\tArray of `<script type=\"dojo/*\">` DOMNodes.  If not specified, will search for `<script>` tags inside node.\n\t\t\t// inherited: Object?\n\t\t\t//\t\tSettings from dir=rtl or lang=... on a node above this node.   Overrides options.inherited.\n\t\t\t// returns:\n\t\t\t//\t\tInstance or Promise for the instance, if markupFactory() itself returned a promise\n\n\t\t\tvar proto = ctor && ctor.prototype;\n\t\t\toptions = options || {};\n\n\t\t\t// Setup hash to hold parameter settings for this widget.\tStart with the parameter\n\t\t\t// settings inherited from ancestors (\"dir\" and \"lang\").\n\t\t\t// Inherited setting may later be overridden by explicit settings on node itself.\n\t\t\tvar params = {};\n\n\t\t\tif(options.defaults){\n\t\t\t\t// settings for the document itself (or whatever subtree is being parsed)\n\t\t\t\tdlang.mixin(params, options.defaults);\n\t\t\t}\n\t\t\tif(inherited){\n\t\t\t\t// settings from dir=rtl or lang=... on a node above this node\n\t\t\t\tdlang.mixin(params, inherited);\n\t\t\t}\n\n\t\t\t// Get list of attributes explicitly listed in the markup\n\t\t\tvar attributes;\n\t\t\tif(has(\"dom-attributes-explicit\")){\n\t\t\t\t// Standard path to get list of user specified attributes\n\t\t\t\tattributes = node.attributes;\n\t\t\t}else if(has(\"dom-attributes-specified-flag\")){\n\t\t\t\t// Special processing needed for IE8, to skip a few faux values in attributes[]\n\t\t\t\tattributes = darray.filter(node.attributes, function(a){\n\t\t\t\t\treturn a.specified;\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\t// Special path for IE6-7, avoid (sometimes >100) bogus entries in node.attributes\n\t\t\t\tvar clone = /^input$|^img$/i.test(node.nodeName) ? node : node.cloneNode(false),\n\t\t\t\t\tattrs = clone.outerHTML.replace(/=[^\\s\"']+|=\"[^\"]*\"|='[^']*'/g, \"\").replace(/^\\s*<[a-zA-Z0-9]*\\s*/, \"\").replace(/\\s*>.*$/, \"\");\n\n\t\t\t\tattributes = darray.map(attrs.split(/\\s+/), function(name){\n\t\t\t\t\tvar lcName = name.toLowerCase();\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t// getAttribute() doesn't work for button.value, returns innerHTML of button.\n\t\t\t\t\t\t// but getAttributeNode().value doesn't work for the form.encType or li.value\n\t\t\t\t\t\tvalue: (node.nodeName == \"LI\" && name == \"value\") || lcName == \"enctype\" ?\n\t\t\t\t\t\t\tnode.getAttribute(lcName) : node.getAttributeNode(lcName).value\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Hash to convert scoped attribute name (ex: data-dojo17-params) to something friendly (ex: data-dojo-params)\n\t\t\t// TODO: remove scope for 2.0\n\t\t\tvar scope = options.scope || dojo._scopeName,\n\t\t\t\tattrData = \"data-\" + scope + \"-\", // typically \"data-dojo-\"\n\t\t\t\thash = {};\n\t\t\tif(scope !== \"dojo\"){\n\t\t\t\thash[attrData + \"props\"] = \"data-dojo-props\";\n\t\t\t\thash[attrData + \"type\"] = \"data-dojo-type\";\n\t\t\t\thash[attrData + \"mixins\"] = \"data-dojo-mixins\";\n\t\t\t\thash[scope + \"type\"] = \"dojotype\";\n\t\t\t\thash[attrData + \"id\"] = \"data-dojo-id\";\n\t\t\t}\n\n\t\t\t// Read in attributes and process them, including data-dojo-props, data-dojo-type,\n\t\t\t// dojoAttachPoint, etc., as well as normal foo=bar attributes.\n\t\t\tvar i = 0, item, funcAttrs = [], jsname, extra;\n\t\t\twhile(item = attributes[i++]){\n\t\t\t\tvar name = item.name,\n\t\t\t\t\tlcName = name.toLowerCase(),\n\t\t\t\t\tvalue = item.value;\n\n\t\t\t\tswitch(hash[lcName] || lcName){\n\t\t\t\t// Already processed, just ignore\n\t\t\t\tcase \"data-dojo-type\":\n\t\t\t\tcase \"dojotype\":\n\t\t\t\tcase \"data-dojo-mixins\":\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Data-dojo-props.   Save for later to make sure it overrides direct foo=bar settings\n\t\t\t\tcase \"data-dojo-props\":\n\t\t\t\t\textra = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// data-dojo-id or jsId. TODO: drop jsId in 2.0\n\t\t\t\tcase \"data-dojo-id\":\n\t\t\t\tcase \"jsid\":\n\t\t\t\t\tjsname = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// For the benefit of _Templated\n\t\t\t\tcase \"data-dojo-attach-point\":\n\t\t\t\tcase \"dojoattachpoint\":\n\t\t\t\t\tparams.dojoAttachPoint = value;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"data-dojo-attach-event\":\n\t\t\t\tcase \"dojoattachevent\":\n\t\t\t\t\tparams.dojoAttachEvent = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Special parameter handling needed for IE\n\t\t\t\tcase \"class\":\n\t\t\t\t\tparams[\"class\"] = node.className;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"style\":\n\t\t\t\t\tparams[\"style\"] = node.style && node.style.cssText;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// Normal attribute, ex: value=\"123\"\n\n\t\t\t\t\t// Find attribute in widget corresponding to specified name.\n\t\t\t\t\t// May involve case conversion, ex: onclick --> onClick\n\t\t\t\t\tif(!(name in proto)){\n\t\t\t\t\t\tvar map = getNameMap(ctor);\n\t\t\t\t\t\tname = map[lcName] || name;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set params[name] to value, doing type conversion\n\t\t\t\t\tif(name in proto){\n\t\t\t\t\t\tswitch(typeof proto[name]){\n\t\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\t\tparams[name] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"number\":\n\t\t\t\t\t\t\tparams[name] = value.length ? Number(value) : NaN;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"boolean\":\n\t\t\t\t\t\t\t// for checked/disabled value might be \"\" or \"checked\".\t interpret as true.\n\t\t\t\t\t\t\tparams[name] = value.toLowerCase() != \"false\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\t\tif(value === \"\" || value.search(/[^\\w\\.]+/i) != -1){\n\t\t\t\t\t\t\t\t// The user has specified some text for a function like \"return x+5\"\n\t\t\t\t\t\t\t\tparams[name] = new Function(value);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t// The user has specified the name of a global function like \"myOnClick\"\n\t\t\t\t\t\t\t\t// or a single word function \"return\"\n\t\t\t\t\t\t\t\tparams[name] = dlang.getObject(value, false) || new Function(value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfuncAttrs.push(name);\t// prevent \"double connect\", see #15026\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tvar pVal = proto[name];\n\t\t\t\t\t\t\tparams[name] =\n\t\t\t\t\t\t\t\t(pVal && \"length\" in pVal) ? (value ? value.split(/\\s*,\\s*/) : []) :\t// array\n\t\t\t\t\t\t\t\t\t(pVal instanceof Date) ?\n\t\t\t\t\t\t\t\t\t\t(value == \"\" ? new Date(\"\") :\t// the NaN of dates\n\t\t\t\t\t\t\t\t\t\tvalue == \"now\" ? new Date() :\t// current date\n\t\t\t\t\t\t\t\t\t\tdates.fromISOString(value)) :\n\t\t\t\t\t\t\t\t(pVal instanceof _Url) ? (dojo.baseUrl + value) :\n\t\t\t\t\t\t\t\tmyEval(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tparams[name] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove function attributes from DOMNode to prevent \"double connect\" problem, see #15026.\n\t\t\t// Do this as a separate loop since attributes[] is often a live collection (depends on the browser though).\n\t\t\tfor(var j = 0; j < funcAttrs.length; j++){\n\t\t\t\tvar lcfname = funcAttrs[j].toLowerCase();\n\t\t\t\tnode.removeAttribute(lcfname);\n\t\t\t\tnode[lcfname] = null;\n\t\t\t}\n\n\t\t\t// Mix things found in data-dojo-props into the params, overriding any direct settings\n\t\t\tif(extra){\n\t\t\t\ttry{\n\t\t\t\t\textra = myEval.call(options.propsThis, \"{\" + extra + \"}\");\n\t\t\t\t\tdlang.mixin(params, extra);\n\t\t\t\t}catch(e){\n\t\t\t\t\t// give the user a pointer to their invalid parameters. FIXME: can we kill this in production?\n\t\t\t\t\tthrow new Error(e.toString() + \" in data-dojo-props='\" + extra + \"'\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Any parameters specified in \"mixin\" override everything else.\n\t\t\tdlang.mixin(params, mixin);\n\n\t\t\t// Get <script> nodes associated with this widget, if they weren't specified explicitly\n\t\t\tif(!scripts){\n\t\t\t\tscripts = (ctor && (ctor._noScript || proto._noScript) ? [] : query(\"> script[type^='dojo/']\", node));\n\t\t\t}\n\n\t\t\t// Process <script type=\"dojo/*\"> script tags\n\t\t\t// <script type=\"dojo/method\" data-dojo-event=\"foo\"> tags are added to params, and passed to\n\t\t\t// the widget on instantiation.\n\t\t\t// <script type=\"dojo/method\"> tags (with no event) are executed after instantiation\n\t\t\t// <script type=\"dojo/connect\" data-dojo-event=\"foo\"> tags are dojo.connected after instantiation,\n\t\t\t// and likewise with <script type=\"dojo/aspect\" data-dojo-method=\"foo\">\n\t\t\t// <script type=\"dojo/watch\" data-dojo-prop=\"foo\"> tags are dojo.watch after instantiation\n\t\t\t// <script type=\"dojo/on\" data-dojo-event=\"foo\"> tags are dojo.on after instantiation\n\t\t\t// note: dojo/* script tags cannot exist in self closing widgets, like <input />\n\t\t\tvar aspects = [],\t// aspects to connect after instantiation\n\t\t\t\tcalls = [],\t\t// functions to call after instantiation\n\t\t\t\twatches = [],  // functions to watch after instantiation\n\t\t\t\tons = []; // functions to on after instantiation\n\n\t\t\tif(scripts){\n\t\t\t\tfor(i = 0; i < scripts.length; i++){\n\t\t\t\t\tvar script = scripts[i];\n\t\t\t\t\tnode.removeChild(script);\n\t\t\t\t\t// FIXME: drop event=\"\" support in 2.0. use data-dojo-event=\"\" instead\n\t\t\t\t\tvar event = (script.getAttribute(attrData + \"event\") || script.getAttribute(\"event\")),\n\t\t\t\t\t\tprop = script.getAttribute(attrData + \"prop\"),\n\t\t\t\t\t\tmethod = script.getAttribute(attrData + \"method\"),\n\t\t\t\t\t\tadvice = script.getAttribute(attrData + \"advice\"),\n\t\t\t\t\t\tscriptType = script.getAttribute(\"type\"),\n\t\t\t\t\t\tnf = this._functionFromScript(script, attrData);\n\t\t\t\t\tif(event){\n\t\t\t\t\t\tif(scriptType == \"dojo/connect\"){\n\t\t\t\t\t\t\taspects.push({ method: event, func: nf });\n\t\t\t\t\t\t}else if(scriptType == \"dojo/on\"){\n\t\t\t\t\t\t\tons.push({ event: event, func: nf });\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t// <script type=\"dojo/method\" data-dojo-event=\"foo\">\n\t\t\t\t\t\t\t// TODO for 2.0: use data-dojo-method=\"foo\" instead (also affects dijit/Declaration)\n\t\t\t\t\t\t\tparams[event] = nf;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(scriptType == \"dojo/aspect\"){\n\t\t\t\t\t\taspects.push({ method: method, advice: advice, func: nf });\n\t\t\t\t\t}else if(scriptType == \"dojo/watch\"){\n\t\t\t\t\t\twatches.push({ prop: prop, func: nf });\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcalls.push(nf);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// create the instance\n\t\t\tvar markupFactory = ctor.markupFactory || proto.markupFactory;\n\t\t\tvar instance = markupFactory ? markupFactory(params, node, ctor) : new ctor(params, node);\n\n\t\t\tfunction onInstantiate(instance){\n\t\t\t\t// map it to the JS namespace if that makes sense\n\t\t\t\tif(jsname){\n\t\t\t\t\tdlang.setObject(jsname, instance);\n\t\t\t\t}\n\n\t\t\t\t// process connections and startup functions\n\t\t\t\tfor(i = 0; i < aspects.length; i++){\n\t\t\t\t\taspect[aspects[i].advice || \"after\"](instance, aspects[i].method, dlang.hitch(instance, aspects[i].func), true);\n\t\t\t\t}\n\t\t\t\tfor(i = 0; i < calls.length; i++){\n\t\t\t\t\tcalls[i].call(instance);\n\t\t\t\t}\n\t\t\t\tfor(i = 0; i < watches.length; i++){\n\t\t\t\t\tinstance.watch(watches[i].prop, watches[i].func);\n\t\t\t\t}\n\t\t\t\tfor(i = 0; i < ons.length; i++){\n\t\t\t\t\tdon(instance, ons[i].event, ons[i].func);\n\t\t\t\t}\n\n\t\t\t\treturn instance;\n\t\t\t}\n\n\t\t\tif(instance.then){\n\t\t\t\treturn instance.then(onInstantiate);\n\t\t\t}else{\n\t\t\t\treturn onInstantiate(instance);\n\t\t\t}\n\t\t},\n\n\t\tscan: function(root, options){\n\t\t\t// summary:\n\t\t\t//\t\tScan a DOM tree and return an array of objects representing the DOMNodes\n\t\t\t//\t\tthat need to be turned into widgets.\n\t\t\t// description:\n\t\t\t//\t\tSearch specified node (or document root node) recursively for class instances\n\t\t\t//\t\tand return an array of objects that represent potential widgets to be\n\t\t\t//\t\tinstantiated. Searches for either data-dojo-type=\"MID\" or dojoType=\"MID\" where\n\t\t\t//\t\t\"MID\" is a module ID like \"dijit/form/Button\" or a fully qualified Class name\n\t\t\t//\t\tlike \"dijit/form/Button\".  If the MID is not currently available, scan will\n\t\t\t//\t\tattempt to require() in the module.\n\t\t\t//\n\t\t\t//\t\tSee parser.parse() for details of markup.\n\t\t\t// root: DomNode?\n\t\t\t//\t\tA default starting root node from which to start the parsing. Can be\n\t\t\t//\t\tomitted, defaulting to the entire document. If omitted, the `options`\n\t\t\t//\t\tobject can be passed in this place. If the `options` object has a\n\t\t\t//\t\t`rootNode` member, that is used.\n\t\t\t// options: Object\n\t\t\t//\t\ta kwArgs options object, see parse() for details\n\t\t\t//\n\t\t\t// returns: Promise\n\t\t\t//\t\tA promise that is resolved with the nodes that have been parsed.\n\n\t\t\tvar list = [], // Output List\n\t\t\t\tmids = [], // An array of modules that are not yet loaded\n\t\t\t\tmidsHash = {}; // Used to keep the mids array unique\n\n\t\t\tvar dojoType = (options.scope || dojo._scopeName) + \"Type\", // typically \"dojoType\"\n\t\t\t\tattrData = \"data-\" + (options.scope || dojo._scopeName) + \"-\", // typically \"data-dojo-\"\n\t\t\t\tdataDojoType = attrData + \"type\", // typically \"data-dojo-type\"\n\t\t\t\tdataDojoTextDir = attrData + \"textdir\", // typically \"data-dojo-textdir\"\n\t\t\t\tdataDojoMixins = attrData + \"mixins\";\t\t\t\t\t// typically \"data-dojo-mixins\"\n\n\t\t\t// Info on DOMNode currently being processed\n\t\t\tvar node = root.firstChild;\n\n\t\t\t// Info on parent of DOMNode currently being processed\n\t\t\t//\t- inherited: dir, lang, and textDir setting of parent, or inherited by parent\n\t\t\t//\t- parent: pointer to identical structure for my parent (or null if no parent)\n\t\t\t//\t- scripts: if specified, collects <script type=\"dojo/...\"> type nodes from children\n\t\t\tvar inherited = options.inherited;\n\t\t\tif(!inherited){\n\t\t\t\tfunction findAncestorAttr(node, attr){\n\t\t\t\t\treturn (node.getAttribute && node.getAttribute(attr)) ||\n\t\t\t\t\t\t(node.parentNode && findAncestorAttr(node.parentNode, attr));\n\t\t\t\t}\n\n\t\t\t\tinherited = {\n\t\t\t\t\tdir: findAncestorAttr(root, \"dir\"),\n\t\t\t\t\tlang: findAncestorAttr(root, \"lang\"),\n\t\t\t\t\ttextDir: findAncestorAttr(root, dataDojoTextDir)\n\t\t\t\t};\n\t\t\t\tfor(var key in inherited){\n\t\t\t\t\tif(!inherited[key]){\n\t\t\t\t\t\tdelete inherited[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Metadata about parent node\n\t\t\tvar parent = {\n\t\t\t\tinherited: inherited\n\t\t\t};\n\n\t\t\t// For collecting <script type=\"dojo/...\"> type nodes (when null, we don't need to collect)\n\t\t\tvar scripts;\n\n\t\t\t// when true, only look for <script type=\"dojo/...\"> tags, and don't recurse to children\n\t\t\tvar scriptsOnly;\n\n\t\t\tfunction getEffective(parent){\n\t\t\t\t// summary:\n\t\t\t\t//\t\tGet effective dir, lang, textDir settings for specified obj\n\t\t\t\t//\t\t(matching \"parent\" object structure above), and do caching.\n\t\t\t\t//\t\tTake care not to return null entries.\n\t\t\t\tif(!parent.inherited){\n\t\t\t\t\tparent.inherited = {};\n\t\t\t\t\tvar node = parent.node,\n\t\t\t\t\t\tgrandparent = getEffective(parent.parent);\n\t\t\t\t\tvar inherited = {\n\t\t\t\t\t\tdir: node.getAttribute(\"dir\") || grandparent.dir,\n\t\t\t\t\t\tlang: node.getAttribute(\"lang\") || grandparent.lang,\n\t\t\t\t\t\ttextDir: node.getAttribute(dataDojoTextDir) || grandparent.textDir\n\t\t\t\t\t};\n\t\t\t\t\tfor(var key in inherited){\n\t\t\t\t\t\tif(inherited[key]){\n\t\t\t\t\t\t\tparent.inherited[key] = inherited[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn parent.inherited;\n\t\t\t}\n\n\t\t\t// DFS on DOM tree, collecting nodes with data-dojo-type specified.\n\t\t\twhile(true){\n\t\t\t\tif(!node){\n\t\t\t\t\t// Finished this level, continue to parent's next sibling\n\t\t\t\t\tif(!parent || !parent.node){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent.node.nextSibling;\n\t\t\t\t\tscriptsOnly = false;\n\t\t\t\t\tparent = parent.parent;\n\t\t\t\t\tscripts = parent.scripts;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(node.nodeType != 1){\n\t\t\t\t\t// Text or comment node, skip to next sibling\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(scripts && node.nodeName.toLowerCase() == \"script\"){\n\t\t\t\t\t// Save <script type=\"dojo/...\"> for parent, then continue to next sibling\n\t\t\t\t\ttype = node.getAttribute(\"type\");\n\t\t\t\t\tif(type && /^dojo\\/\\w/i.test(type)){\n\t\t\t\t\t\tscripts.push(node);\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(scriptsOnly){\n\t\t\t\t\t// scriptsOnly flag is set, we have already collected scripts if the parent wants them, so now we shouldn't\n\t\t\t\t\t// continue further analysis of the node and will continue to the next sibling\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Check for data-dojo-type attribute, fallback to backward compatible dojoType\n\t\t\t\t// TODO: Remove dojoType in 2.0\n\t\t\t\tvar type = node.getAttribute(dataDojoType) || node.getAttribute(dojoType);\n\n\t\t\t\t// Short circuit for leaf nodes containing nothing [but text]\n\t\t\t\tvar firstChild = node.firstChild;\n\t\t\t\tif(!type && (!firstChild || (firstChild.nodeType == 3 && !firstChild.nextSibling))){\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Meta data about current node\n\t\t\t\tvar current;\n\n\t\t\t\tvar ctor = null;\n\t\t\t\tif(type){\n\t\t\t\t\t// If dojoType/data-dojo-type specified, add to output array of nodes to instantiate.\n\t\t\t\t\tvar mixinsValue = node.getAttribute(dataDojoMixins),\n\t\t\t\t\t\ttypes = mixinsValue ? [type].concat(mixinsValue.split(/\\s*,\\s*/)) : [type];\n\n\t\t\t\t\t// Note: won't find classes declared via dojo/Declaration or any modules that haven't been\n\t\t\t\t\t// loaded yet so use try/catch to avoid throw from require()\n\t\t\t\t\ttry{\n\t\t\t\t\t\tctor = getCtor(types, options.contextRequire);\n\t\t\t\t\t}catch(e){}\n\n\t\t\t\t\t// If the constructor was not found, check to see if it has modules that can be loaded\n\t\t\t\t\tif(!ctor){\n\t\t\t\t\t\tdarray.forEach(types, function(t){\n\t\t\t\t\t\t\tif(~t.indexOf('/') && !midsHash[t]){\n\t\t\t\t\t\t\t\t// If the type looks like a MID and it currently isn't in the array of MIDs to load, add it.\n\t\t\t\t\t\t\t\tmidsHash[t] = true;\n\t\t\t\t\t\t\t\tmids[mids.length] = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tvar childScripts = ctor && !ctor.prototype._noScript ? [] : null; // <script> nodes that are parent's children\n\n\t\t\t\t\t// Setup meta data about this widget node, and save it to list of nodes to instantiate\n\t\t\t\t\tcurrent = {\n\t\t\t\t\t\ttypes: types,\n\t\t\t\t\t\tctor: ctor,\n\t\t\t\t\t\tparent: parent,\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\tscripts: childScripts\n\t\t\t\t\t};\n\t\t\t\t\tcurrent.inherited = getEffective(current); // dir & lang settings for current node, explicit or inherited\n\t\t\t\t\tlist.push(current);\n\t\t\t\t}else{\n\t\t\t\t\t// Meta data about this non-widget node\n\t\t\t\t\tcurrent = {\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\tscripts: scripts,\n\t\t\t\t\t\tparent: parent\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Recurse, collecting <script type=\"dojo/...\"> children, and also looking for\n\t\t\t\t// descendant nodes with dojoType specified (unless the widget has the stopParser flag).\n\t\t\t\t// When finished with children, go to my next sibling.\n\t\t\t\tscripts = childScripts;\n\t\t\t\tscriptsOnly = node.stopParser || (ctor && ctor.prototype.stopParser && !(options.template));\n\t\t\t\tparent = current;\n\t\t\t\tnode = firstChild;\n\t\t\t}\n\n\t\t\tvar d = new Deferred();\n\n\t\t\t// If there are modules to load then require them in\n\t\t\tif(mids.length){\n\t\t\t\t// Warn that there are modules being auto-required\n\t\t\t\tif(has(\"dojo-debug-messages\")){\n\t\t\t\t\tconsole.warn(\"WARNING: Modules being Auto-Required: \" + mids.join(\", \"));\n\t\t\t\t}\n\t\t\t\tvar r = options.contextRequire || require;\n\t\t\t\tr(mids, function(){\n\t\t\t\t\t// Go through list of widget nodes, filling in missing constructors, and filtering out nodes that shouldn't\n\t\t\t\t\t// be instantiated due to a stopParser flag on an ancestor that we belatedly learned about due to\n\t\t\t\t\t// auto-require of a module like ContentPane.   Assumes list is in DFS order.\n\t\t\t\t\td.resolve(darray.filter(list, function(widget){\n\t\t\t\t\t\tif(!widget.ctor){\n\t\t\t\t\t\t\t// Attempt to find the constructor again.   Still won't find classes defined via\n\t\t\t\t\t\t\t// dijit/Declaration so need to try/catch.\n\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\twidget.ctor = getCtor(widget.types, options.contextRequire);\n\t\t\t\t\t\t\t}catch(e){}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Get the parent widget\n\t\t\t\t\t\tvar parent = widget.parent;\n\t\t\t\t\t\twhile(parent && !parent.types){\n\t\t\t\t\t\t\tparent = parent.parent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Return false if this node should be skipped due to stopParser on an ancestor.\n\t\t\t\t\t\t// Since list[] is in DFS order, this loop will always set parent.instantiateChildren before\n\t\t\t\t\t\t// trying to compute widget.instantiate.\n\t\t\t\t\t\tvar proto = widget.ctor && widget.ctor.prototype;\n\t\t\t\t\t\twidget.instantiateChildren = !(proto && proto.stopParser && !(options.template));\n\t\t\t\t\t\twidget.instantiate = !parent || (parent.instantiate && parent.instantiateChildren);\n\t\t\t\t\t\treturn widget.instantiate;\n\t\t\t\t\t}));\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\t// There were no modules to load, so just resolve with the parsed nodes.   This separate code path is for\n\t\t\t\t// efficiency, to avoid running the require() and the callback code above.\n\t\t\t\td.resolve(list);\n\t\t\t}\n\n\t\t\t// Return the promise\n\t\t\treturn d.promise;\n\t\t},\n\n\t\t_require: function(/*DOMNode*/ script, /*Object?*/ options){\n\t\t\t// summary:\n\t\t\t//\t\tHelper for _scanAMD().  Takes a `<script type=dojo/require>bar: \"acme/bar\", ...</script>` node,\n\t\t\t//\t\tcalls require() to load the specified modules and (asynchronously) assign them to the specified global\n\t\t\t//\t\tvariables, and returns a Promise for when that operation completes.\n\t\t\t//\n\t\t\t//\t\tIn the example above, it is effectively doing a require([\"acme/bar\", ...], function(a){ bar = a; }).\n\n\t\t\tvar hash = myEval(\"{\" + script.innerHTML + \"}\"), // can't use dojo/json::parse() because maybe no quotes\n\t\t\t\tvars = [],\n\t\t\t\tmids = [],\n\t\t\t\td = new Deferred();\n\n\t\t\tvar contextRequire = (options && options.contextRequire) || require;\n\n\t\t\tfor(var name in hash){\n\t\t\t\tvars.push(name);\n\t\t\t\tmids.push(hash[name]);\n\t\t\t}\n\n\t\t\tcontextRequire(mids, function(){\n\t\t\t\tfor(var i = 0; i < vars.length; i++){\n\t\t\t\t\tdlang.setObject(vars[i], arguments[i]);\n\t\t\t\t}\n\t\t\t\td.resolve(arguments);\n\t\t\t});\n\n\t\t\treturn d.promise;\n\t\t},\n\n\t\t_scanAmd: function(root, options){\n\t\t\t// summary:\n\t\t\t//\t\tScans the DOM for any declarative requires and returns their values.\n\t\t\t// description:\n\t\t\t//\t\tLooks for `<script type=dojo/require>bar: \"acme/bar\", ...</script>` node, calls require() to load the\n\t\t\t//\t\tspecified modules and (asynchronously) assign them to the specified global variables,\n\t\t\t//\t\tand returns a Promise for when those operations complete.\n\t\t\t// root: DomNode\n\t\t\t//\t\tThe node to base the scan from.\n\t\t\t// options: Object?\n\t\t\t//\t\ta kwArgs options object, see parse() for details\n\n\t\t\t// Promise that resolves when all the <script type=dojo/require> nodes have finished loading.\n\t\t\tvar deferred = new Deferred(),\n\t\t\t\tpromise = deferred.promise;\n\t\t\tdeferred.resolve(true);\n\n\t\t\tvar self = this;\n\t\t\tquery(\"script[type='dojo/require']\", root).forEach(function(node){\n\t\t\t\t// Fire off require() call for specified modules.  Chain this require to fire after\n\t\t\t\t// any previous requires complete, so that layers can be loaded before individual module require()'s fire.\n\t\t\t\tpromise = promise.then(function(){\n\t\t\t\t\treturn self._require(node, options);\n\t\t\t\t});\n\n\t\t\t\t// Remove from DOM so it isn't seen again\n\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t});\n\n\t\t\treturn promise;\n\t\t},\n\n\t\tparse: function(rootNode, options){\n\t\t\t// summary:\n\t\t\t//\t\tScan the DOM for class instances, and instantiate them.\n\t\t\t// description:\n\t\t\t//\t\tSearch specified node (or root node) recursively for class instances,\n\t\t\t//\t\tand instantiate them. Searches for either data-dojo-type=\"Class\" or\n\t\t\t//\t\tdojoType=\"Class\" where \"Class\" is a a fully qualified class name,\n\t\t\t//\t\tlike `dijit/form/Button`\n\t\t\t//\n\t\t\t//\t\tUsing `data-dojo-type`:\n\t\t\t//\t\tAttributes using can be mixed into the parameters used to instantiate the\n\t\t\t//\t\tClass by using a `data-dojo-props` attribute on the node being converted.\n\t\t\t//\t\t`data-dojo-props` should be a string attribute to be converted from JSON.\n\t\t\t//\n\t\t\t//\t\tUsing `dojoType`:\n\t\t\t//\t\tAttributes are read from the original domNode and converted to appropriate\n\t\t\t//\t\ttypes by looking up the Class prototype values. This is the default behavior\n\t\t\t//\t\tfrom Dojo 1.0 to Dojo 1.5. `dojoType` support is deprecated, and will\n\t\t\t//\t\tgo away in Dojo 2.0.\n\t\t\t// rootNode: DomNode?\n\t\t\t//\t\tA default starting root node from which to start the parsing. Can be\n\t\t\t//\t\tomitted, defaulting to the entire document. If omitted, the `options`\n\t\t\t//\t\tobject can be passed in this place. If the `options` object has a\n\t\t\t//\t\t`rootNode` member, that is used.\n\t\t\t// options: Object?\n\t\t\t//\t\tA hash of options.\n\t\t\t//\n\t\t\t//\t\t- noStart: Boolean?:\n\t\t\t//\t\t\twhen set will prevent the parser from calling .startup()\n\t\t\t//\t\t\twhen locating the nodes.\n\t\t\t//\t\t- rootNode: DomNode?:\n\t\t\t//\t\t\tidentical to the function's `rootNode` argument, though\n\t\t\t//\t\t\tallowed to be passed in via this `options object.\n\t\t\t//\t\t- template: Boolean:\n\t\t\t//\t\t\tIf true, ignores ContentPane's stopParser flag and parses contents inside of\n\t\t\t//\t\t\ta ContentPane inside of a template.   This allows dojoAttachPoint on widgets/nodes\n\t\t\t//\t\t\tnested inside the ContentPane to work.\n\t\t\t//\t\t- inherited: Object:\n\t\t\t//\t\t\tHash possibly containing dir and lang settings to be applied to\n\t\t\t//\t\t\tparsed widgets, unless there's another setting on a sub-node that overrides\n\t\t\t//\t\t- scope: String:\n\t\t\t//\t\t\tRoot for attribute names to search for.   If scopeName is dojo,\n\t\t\t//\t\t\twill search for data-dojo-type (or dojoType).   For backwards compatibility\n\t\t\t//\t\t\treasons defaults to dojo._scopeName (which is \"dojo\" except when\n\t\t\t//\t\t\tmulti-version support is used, when it will be something like dojo16, dojo20, etc.)\n\t\t\t//\t\t- propsThis: Object:\n\t\t\t//\t\t\tIf specified, \"this\" referenced from data-dojo-props will refer to propsThis.\n\t\t\t//\t\t\tIntended for use from the widgets-in-template feature of `dijit._WidgetsInTemplateMixin`\n\t\t\t//\t\t- contextRequire: Function:\n\t\t\t//\t\t\tIf specified, this require is utilised for looking resolving modules instead of the\n\t\t\t//\t\t\t`dojo/parser` context `require()`.  Intended for use from the widgets-in-template feature of\n\t\t\t//\t\t\t`dijit._WidgetsInTemplateMixin`.\n\t\t\t// returns: Mixed\n\t\t\t//\t\tReturns a blended object that is an array of the instantiated objects, but also can include\n\t\t\t//\t\ta promise that is resolved with the instantiated objects.  This is done for backwards\n\t\t\t//\t\tcompatibility.  If the parser auto-requires modules, it will always behave in a promise\n\t\t\t//\t\tfashion and `parser.parse().then(function(instances){...})` should be used.\n\t\t\t// example:\n\t\t\t//\t\tParse all widgets on a page:\n\t\t\t//\t|\t\tparser.parse();\n\t\t\t// example:\n\t\t\t//\t\tParse all classes within the node with id=\"foo\"\n\t\t\t//\t|\t\tparser.parse(dojo.byId('foo'));\n\t\t\t// example:\n\t\t\t//\t\tParse all classes in a page, but do not call .startup() on any\n\t\t\t//\t\tchild\n\t\t\t//\t|\t\tparser.parse({ noStart: true })\n\t\t\t// example:\n\t\t\t//\t\tParse all classes in a node, but do not call .startup()\n\t\t\t//\t|\t\tparser.parse(someNode, { noStart:true });\n\t\t\t//\t|\t\t// or\n\t\t\t//\t|\t\tparser.parse({ noStart:true, rootNode: someNode });\n\n\t\t\t// determine the root node and options based on the passed arguments.\n\t\t\tif(rootNode && typeof rootNode != \"string\" && !(\"nodeType\" in rootNode)){\n\t\t\t\t// If called as parse(options) rather than parse(), parse(rootNode), or parse(rootNode, options)...\n\t\t\t\toptions = rootNode;\n\t\t\t\trootNode = options.rootNode;\n\t\t\t}\n\t\t\tvar root = rootNode ? dom.byId(rootNode) : dwindow.body();\n\t\t\toptions = options || {};\n\n\t\t\tvar mixin = options.template ? { template: true } : {},\n\t\t\t\tinstances = [],\n\t\t\t\tself = this;\n\n\t\t\t// First scan for any <script type=dojo/require> nodes, and execute.\n\t\t\t// Then scan for all nodes with data-dojo-type, and load any unloaded modules.\n\t\t\t// Then build the object instances.  Add instances to already existing (but empty) instances[] array,\n\t\t\t// which may already have been returned to caller.  Also, use otherwise to collect and throw any errors\n\t\t\t// that occur during the parse().\n\t\t\tvar p =\n\t\t\t\tthis._scanAmd(root, options).then(function(){\n\t\t\t\t\treturn self.scan(root, options);\n\t\t\t\t}).then(function(parsedNodes){\n\t\t\t\t\treturn self._instantiate(parsedNodes, mixin, options, true);\n\t\t\t\t}).then(function(_instances){\n\t\t\t\t\t// Copy the instances into the instances[] array we declared above, and are accessing as\n\t\t\t\t\t// our return value.\n\t\t\t\t\treturn instances = instances.concat(_instances);\n\t\t\t\t}).otherwise(function(e){\n\t\t\t\t\t// TODO Modify to follow better pattern for promise error management when available\n\t\t\t\t\tconsole.error(\"dojo/parser::parse() error\", e);\n\t\t\t\t\tthrow e;\n\t\t\t\t});\n\n\t\t\t// Blend the array with the promise\n\t\t\tdlang.mixin(instances, p);\n\t\t\treturn instances;\n\t\t}\n\t};\n\n\tif(has(\"extend-dojo\")){\n\t\tdojo.parser = parser;\n\t}\n\n\t// Register the parser callback. It should be the first callback\n\t// after the a11y test.\n\tif(config.parseOnLoad){\n\t\tready(100, parser, \"parse\");\n\t}\n\n\treturn parser;\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 367:\n/*!*************************************************************!*\\\n  !*** ./node_modules/dojox/node_modules/dojo/promise/all.js ***!\n  \\*************************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t__webpack_require__(/*! ../_base/array */ 237),\n\t__webpack_require__(/*! ../Deferred */ 268),\n\t__webpack_require__(/*! ../when */ 277)\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(array, Deferred, when){\n\t\"use strict\";\n\n\t// module:\n\t//\t\tdojo/promise/all\n\n\tvar some = array.some;\n\n\treturn function all(objectOrArray){\n\t\t// summary:\n\t\t//\t\tTakes multiple promises and returns a new promise that is fulfilled\n\t\t//\t\twhen all promises have been resolved or one has been rejected.\n\t\t// description:\n\t\t//\t\tTakes multiple promises and returns a new promise that is fulfilled\n\t\t//\t\twhen all promises have been resolved or one has been rejected. If one of\n\t\t//\t\tthe promises is rejected, the returned promise is also rejected. Canceling\n\t\t//\t\tthe returned promise will *not* cancel any passed promises.\n\t\t// objectOrArray: Object|Array?\n\t\t//\t\tThe promise will be fulfilled with a list of results if invoked with an\n\t\t//\t\tarray, or an object of results when passed an object (using the same\n\t\t//\t\tkeys). If passed neither an object or array it is resolved with an\n\t\t//\t\tundefined value.\n\t\t// returns: dojo/promise/Promise\n\n\t\tvar object, array;\n\t\tif(objectOrArray instanceof Array){\n\t\t\tarray = objectOrArray;\n\t\t}else if(objectOrArray && typeof objectOrArray === \"object\"){\n\t\t\tobject = objectOrArray;\n\t\t}\n\n\t\tvar results;\n\t\tvar keyLookup = [];\n\t\tif(object){\n\t\t\tarray = [];\n\t\t\tfor(var key in object){\n\t\t\t\tif(Object.hasOwnProperty.call(object, key)){\n\t\t\t\t\tkeyLookup.push(key);\n\t\t\t\t\tarray.push(object[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresults = {};\n\t\t}else if(array){\n\t\t\tresults = [];\n\t\t}\n\n\t\tif(!array || !array.length){\n\t\t\treturn new Deferred().resolve(results);\n\t\t}\n\n\t\tvar deferred = new Deferred();\n\t\tdeferred.promise.always(function(){\n\t\t\tresults = keyLookup = null;\n\t\t});\n\t\tvar waiting = array.length;\n\t\tsome(array, function(valueOrPromise, index){\n\t\t\tif(!object){\n\t\t\t\tkeyLookup.push(index);\n\t\t\t}\n\t\t\twhen(valueOrPromise, function(value){\n\t\t\t\tif(!deferred.isFulfilled()){\n\t\t\t\t\tresults[keyLookup[index]] = value;\n\t\t\t\t\tif(--waiting === 0){\n\t\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, deferred.reject);\n\t\t\treturn deferred.isFulfilled();\n\t\t});\n\t\treturn deferred.promise;\t// dojo/promise/Promise\n\t};\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 368:\n/*!***********************************************************!*\\\n  !*** ./node_modules/dojox/node_modules/dojo/_base/url.js ***!\n  \\***********************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./kernel */ 238)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(dojo){\n\t// module:\n\t//\t\tdojo/url\n\n\tvar\n\t\tore = new RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?$\"),\n\t\tire = new RegExp(\"^((([^\\\\[:]+):)?([^@]+)@)?(\\\\[([^\\\\]]+)\\\\]|([^\\\\[:]*))(:([0-9]+))?$\"),\n\t\t_Url = function(){\n\t\t\tvar n = null,\n\t\t\t\t_a = arguments,\n\t\t\t\turi = [_a[0]];\n\t\t\t// resolve uri components relative to each other\n\t\t\tfor(var i = 1; i<_a.length; i++){\n\t\t\t\tif(!_a[i]){ continue; }\n\n\t\t\t\t// Safari doesn't support this.constructor so we have to be explicit\n\t\t\t\t// FIXME: Tracked (and fixed) in Webkit bug 3537.\n\t\t\t\t//\t\thttp://bugs.webkit.org/show_bug.cgi?id=3537\n\t\t\t\tvar relobj = new _Url(_a[i]+\"\"),\n\t\t\t\t\turiobj = new _Url(uri[0]+\"\");\n\n\t\t\t\tif(\n\t\t\t\t\trelobj.path == \"\" &&\n\t\t\t\t\t!relobj.scheme &&\n\t\t\t\t\t!relobj.authority &&\n\t\t\t\t\t!relobj.query\n\t\t\t\t){\n\t\t\t\t\tif(relobj.fragment != n){\n\t\t\t\t\t\turiobj.fragment = relobj.fragment;\n\t\t\t\t\t}\n\t\t\t\t\trelobj = uriobj;\n\t\t\t\t}else if(!relobj.scheme){\n\t\t\t\t\trelobj.scheme = uriobj.scheme;\n\n\t\t\t\t\tif(!relobj.authority){\n\t\t\t\t\t\trelobj.authority = uriobj.authority;\n\n\t\t\t\t\t\tif(relobj.path.charAt(0) != \"/\"){\n\t\t\t\t\t\t\tvar path = uriobj.path.substring(0,\n\t\t\t\t\t\t\t\turiobj.path.lastIndexOf(\"/\") + 1) + relobj.path;\n\n\t\t\t\t\t\t\tvar segs = path.split(\"/\");\n\t\t\t\t\t\t\tfor(var j = 0; j < segs.length; j++){\n\t\t\t\t\t\t\t\tif(segs[j] == \".\"){\n\t\t\t\t\t\t\t\t\t// flatten \"./\" references\n\t\t\t\t\t\t\t\t\tif(j == segs.length - 1){\n\t\t\t\t\t\t\t\t\t\tsegs[j] = \"\";\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tsegs.splice(j, 1);\n\t\t\t\t\t\t\t\t\t\tj--;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}else if(j > 0 && !(j == 1 && segs[0] == \"\") &&\n\t\t\t\t\t\t\t\t\tsegs[j] == \"..\" && segs[j-1] != \"..\"){\n\t\t\t\t\t\t\t\t\t// flatten \"../\" references\n\t\t\t\t\t\t\t\t\tif(j == (segs.length - 1)){\n\t\t\t\t\t\t\t\t\t\tsegs.splice(j, 1);\n\t\t\t\t\t\t\t\t\t\tsegs[j - 1] = \"\";\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tsegs.splice(j - 1, 2);\n\t\t\t\t\t\t\t\t\t\tj -= 2;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trelobj.path = segs.join(\"/\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\turi = [];\n\t\t\t\tif(relobj.scheme){\n\t\t\t\t\turi.push(relobj.scheme, \":\");\n\t\t\t\t}\n\t\t\t\tif(relobj.authority){\n\t\t\t\t\turi.push(\"//\", relobj.authority);\n\t\t\t\t}\n\t\t\t\turi.push(relobj.path);\n\t\t\t\tif(relobj.query){\n\t\t\t\t\turi.push(\"?\", relobj.query);\n\t\t\t\t}\n\t\t\t\tif(relobj.fragment){\n\t\t\t\t\turi.push(\"#\", relobj.fragment);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.uri = uri.join(\"\");\n\n\t\t\t// break the uri into its main components\n\t\t\tvar r = this.uri.match(ore);\n\n\t\t\tthis.scheme = r[2] || (r[1] ? \"\" : n);\n\t\t\tthis.authority = r[4] || (r[3] ? \"\" : n);\n\t\t\tthis.path = r[5]; // can never be undefined\n\t\t\tthis.query = r[7] || (r[6] ? \"\" : n);\n\t\t\tthis.fragment\t = r[9] || (r[8] ? \"\" : n);\n\n\t\t\tif(this.authority != n){\n\t\t\t\t// server based naming authority\n\t\t\t\tr = this.authority.match(ire);\n\n\t\t\t\tthis.user = r[3] || n;\n\t\t\t\tthis.password = r[4] || n;\n\t\t\t\tthis.host = r[6] || r[7]; // ipv6 || ipv4\n\t\t\t\tthis.port = r[9] || n;\n\t\t\t}\n\t\t};\n\t_Url.prototype.toString = function(){ return this.uri; };\n\n\treturn dojo._Url = _Url;\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 369:\n/*!************************************************************!*\\\n  !*** ./node_modules/dojox/node_modules/dojo/date/stamp.js ***!\n  \\************************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../_base/lang */ 235), __webpack_require__(/*! ../_base/array */ 237)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, array){\n\n// module:\n//\t\tdojo/date/stamp\n\nvar stamp = {\n\t// summary:\n\t//\t\tTODOC\n};\nlang.setObject(\"dojo.date.stamp\", stamp);\n\n// Methods to convert dates to or from a wire (string) format using well-known conventions\n\nstamp.fromISOString = function(/*String*/ formattedString, /*Number?*/ defaultTime){\n\t// summary:\n\t//\t\tReturns a Date object given a string formatted according to a subset of the ISO-8601 standard.\n\t//\n\t// description:\n\t//\t\tAccepts a string formatted according to a profile of ISO8601 as defined by\n\t//\t\t[RFC3339](http://www.ietf.org/rfc/rfc3339.txt), except that partial input is allowed.\n\t//\t\tCan also process dates as specified [by the W3C](http://www.w3.org/TR/NOTE-datetime)\n\t//\t\tThe following combinations are valid:\n\t//\n\t//\t\t- dates only\n\t//\t\t\t- yyyy\n\t//\t\t\t- yyyy-MM\n\t//\t\t\t- yyyy-MM-dd\n\t//\t\t- times only, with an optional time zone appended\n\t//\t\t\t- THH:mm\n\t//\t\t\t- THH:mm:ss\n\t//\t\t\t- THH:mm:ss.SSS\n\t//\t\t- and \"datetimes\" which could be any combination of the above\n\t//\n\t//\t\ttimezones may be specified as Z (for UTC) or +/- followed by a time expression HH:mm\n\t//\t\tAssumes the local time zone if not specified.  Does not validate.  Improperly formatted\n\t//\t\tinput may return null.  Arguments which are out of bounds will be handled\n\t//\t\tby the Date constructor (e.g. January 32nd typically gets resolved to February 1st)\n\t//\t\tOnly years between 100 and 9999 are supported.\n  \t// formattedString:\n\t//\t\tA string such as 2005-06-30T08:05:00-07:00 or 2005-06-30 or T08:05:00\n\t// defaultTime:\n\t//\t\tUsed for defaults for fields omitted in the formattedString.\n\t//\t\tUses 1970-01-01T00:00:00.0Z by default.\n\n\tif(!stamp._isoRegExp){\n\t\tstamp._isoRegExp =\n//TODO: could be more restrictive and check for 00-59, etc.\n\t\t\t/^(?:(\\d{4})(?:-(\\d{2})(?:-(\\d{2}))?)?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(.\\d+)?)?((?:[+-](\\d{2}):(\\d{2}))|Z)?)?$/;\n\t}\n\n\tvar match = stamp._isoRegExp.exec(formattedString),\n\t\tresult = null;\n\n\tif(match){\n\t\tmatch.shift();\n\t\tif(match[1]){match[1]--;} // Javascript Date months are 0-based\n\t\tif(match[6]){match[6] *= 1000;} // Javascript Date expects fractional seconds as milliseconds\n\n\t\tif(defaultTime){\n\t\t\t// mix in defaultTime.  Relatively expensive, so use || operators for the fast path of defaultTime === 0\n\t\t\tdefaultTime = new Date(defaultTime);\n\t\t\tarray.forEach(array.map([\"FullYear\", \"Month\", \"Date\", \"Hours\", \"Minutes\", \"Seconds\", \"Milliseconds\"], function(prop){\n\t\t\t\treturn defaultTime[\"get\" + prop]();\n\t\t\t}), function(value, index){\n\t\t\t\tmatch[index] = match[index] || value;\n\t\t\t});\n\t\t}\n\t\tresult = new Date(match[0]||1970, match[1]||0, match[2]||1, match[3]||0, match[4]||0, match[5]||0, match[6]||0); //TODO: UTC defaults\n\t\tif(match[0] < 100){\n\t\t\tresult.setFullYear(match[0] || 1970);\n\t\t}\n\n\t\tvar offset = 0,\n\t\t\tzoneSign = match[7] && match[7].charAt(0);\n\t\tif(zoneSign != 'Z'){\n\t\t\toffset = ((match[8] || 0) * 60) + (Number(match[9]) || 0);\n\t\t\tif(zoneSign != '-'){ offset *= -1; }\n\t\t}\n\t\tif(zoneSign){\n\t\t\toffset -= result.getTimezoneOffset();\n\t\t}\n\t\tif(offset){\n\t\t\tresult.setTime(result.getTime() + offset * 60000);\n\t\t}\n\t}\n\n\treturn result; // Date or null\n};\n\n/*=====\nvar __Options = {\n\t// selector: String\n\t//\t\t\"date\" or \"time\" for partial formatting of the Date object.\n\t//\t\tBoth date and time will be formatted by default.\n\t// zulu: Boolean\n\t//\t\tif true, UTC/GMT is used for a timezone\n\t// milliseconds: Boolean\n\t//\t\tif true, output milliseconds\n};\n=====*/\n\nstamp.toISOString = function(/*Date*/ dateObject, /*__Options?*/ options){\n\t// summary:\n\t//\t\tFormat a Date object as a string according a subset of the ISO-8601 standard\n\t//\n\t// description:\n\t//\t\tWhen options.selector is omitted, output follows [RFC3339](http://www.ietf.org/rfc/rfc3339.txt)\n\t//\t\tThe local time zone is included as an offset from GMT, except when selector=='time' (time without a date)\n\t//\t\tDoes not check bounds.  Only years between 100 and 9999 are supported.\n\t//\n\t// dateObject:\n\t//\t\tA Date object\n\n\tvar _ = function(n){ return (n < 10) ? \"0\" + n : n; };\n\toptions = options || {};\n\tvar formattedDate = [],\n\t\tgetter = options.zulu ? \"getUTC\" : \"get\",\n\t\tdate = \"\";\n\tif(options.selector != \"time\"){\n\t\tvar year = dateObject[getter+\"FullYear\"]();\n\t\tdate = [\"0000\".substr((year+\"\").length)+year, _(dateObject[getter+\"Month\"]()+1), _(dateObject[getter+\"Date\"]())].join('-');\n\t}\n\tformattedDate.push(date);\n\tif(options.selector != \"date\"){\n\t\tvar time = [_(dateObject[getter+\"Hours\"]()), _(dateObject[getter+\"Minutes\"]()), _(dateObject[getter+\"Seconds\"]())].join(':');\n\t\tvar millis = dateObject[getter+\"Milliseconds\"]();\n\t\tif(options.milliseconds){\n\t\t\ttime += \".\"+ (millis < 100 ? \"0\" : \"\") + _(millis);\n\t\t}\n\t\tif(options.zulu){\n\t\t\ttime += \"Z\";\n\t\t}else if(options.selector != \"time\"){\n\t\t\tvar timezoneOffset = dateObject.getTimezoneOffset();\n\t\t\tvar absOffset = Math.abs(timezoneOffset);\n\t\t\ttime += (timezoneOffset > 0 ? \"-\" : \"+\") +\n\t\t\t\t_(Math.floor(absOffset/60)) + \":\" + _(absOffset%60);\n\t\t}\n\t\tformattedDate.push(time);\n\t}\n\treturn formattedDate.join('T'); // String\n};\n\nreturn stamp;\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 370:\n/*!*******************************************************!*\\\n  !*** ./node_modules/dojox/node_modules/dojo/query.js ***!\n  \\*******************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base/kernel */ 238), __webpack_require__(/*! ./has */ 239), __webpack_require__(/*! ./dom */ 241), __webpack_require__(/*! ./on */ 257), __webpack_require__(/*! ./_base/array */ 237), __webpack_require__(/*! ./_base/lang */ 235), __webpack_require__(/*! ./selector/_loader */ 371), __webpack_require__(/*! ./selector/_loader!default */ 372)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(dojo, has, dom, on, array, lang, loader, defaultEngine){\n\n\t\"use strict\";\n\n\thas.add(\"array-extensible\", function(){\n\t\t// test to see if we can extend an array (not supported in old IE)\n\t\treturn lang.delegate([], {length: 1}).length == 1 && !has(\"bug-for-in-skips-shadowed\");\n\t});\n\t\n\tvar ap = Array.prototype, aps = ap.slice, apc = ap.concat, forEach = array.forEach;\n\n\tvar tnl = function(/*Array*/ a, /*dojo/NodeList?*/ parent, /*Function?*/ NodeListCtor){\n\t\t// summary:\n\t\t//\t\tdecorate an array to make it look like a `dojo/NodeList`.\n\t\t// a:\n\t\t//\t\tArray of nodes to decorate.\n\t\t// parent:\n\t\t//\t\tAn optional parent NodeList that generated the current\n\t\t//\t\tlist of nodes. Used to call _stash() so the parent NodeList\n\t\t//\t\tcan be accessed via end() later.\n\t\t// NodeListCtor:\n\t\t//\t\tAn optional constructor function to use for any\n\t\t//\t\tnew NodeList calls. This allows a certain chain of\n\t\t//\t\tNodeList calls to use a different object than dojo/NodeList.\n\t\tvar nodeList = new (NodeListCtor || this._NodeListCtor || nl)(a);\n\t\treturn parent ? nodeList._stash(parent) : nodeList;\n\t};\n\n\tvar loopBody = function(f, a, o){\n\t\ta = [0].concat(aps.call(a, 0));\n\t\to = o || dojo.global;\n\t\treturn function(node){\n\t\t\ta[0] = node;\n\t\t\treturn f.apply(o, a);\n\t\t};\n\t};\n\n\t// adapters\n\n\tvar adaptAsForEach = function(f, o){\n\t\t// summary:\n\t\t//\t\tadapts a single node function to be used in the forEach-type\n\t\t//\t\tactions. The initial object is returned from the specialized\n\t\t//\t\tfunction.\n\t\t// f: Function\n\t\t//\t\ta function to adapt\n\t\t// o: Object?\n\t\t//\t\tan optional context for f\n\t\treturn function(){\n\t\t\tthis.forEach(loopBody(f, arguments, o));\n\t\t\treturn this;\t// Object\n\t\t};\n\t};\n\n\tvar adaptAsMap = function(f, o){\n\t\t// summary:\n\t\t//\t\tadapts a single node function to be used in the map-type\n\t\t//\t\tactions. The return is a new array of values, as via `dojo/_base/array.map`\n\t\t// f: Function\n\t\t//\t\ta function to adapt\n\t\t// o: Object?\n\t\t//\t\tan optional context for f\n\t\treturn function(){\n\t\t\treturn this.map(loopBody(f, arguments, o));\n\t\t};\n\t};\n\n\tvar adaptAsFilter = function(f, o){\n\t\t// summary:\n\t\t//\t\tadapts a single node function to be used in the filter-type actions\n\t\t// f: Function\n\t\t//\t\ta function to adapt\n\t\t// o: Object?\n\t\t//\t\tan optional context for f\n\t\treturn function(){\n\t\t\treturn this.filter(loopBody(f, arguments, o));\n\t\t};\n\t};\n\n\tvar adaptWithCondition = function(f, g, o){\n\t\t// summary:\n\t\t//\t\tadapts a single node function to be used in the map-type\n\t\t//\t\tactions, behaves like forEach() or map() depending on arguments\n\t\t// f: Function\n\t\t//\t\ta function to adapt\n\t\t// g: Function\n\t\t//\t\ta condition function, if true runs as map(), otherwise runs as forEach()\n\t\t// o: Object?\n\t\t//\t\tan optional context for f and g\n\t\treturn function(){\n\t\t\tvar a = arguments, body = loopBody(f, a, o);\n\t\t\tif(g.call(o || dojo.global, a)){\n\t\t\t\treturn this.map(body);\t// self\n\t\t\t}\n\t\t\tthis.forEach(body);\n\t\t\treturn this;\t// self\n\t\t};\n\t};\n\n\tvar NodeList = function(array){\n\t\t// summary:\n\t\t//\t\tArray-like object which adds syntactic\n\t\t//\t\tsugar for chaining, common iteration operations, animation, and\n\t\t//\t\tnode manipulation. NodeLists are most often returned as the\n\t\t//\t\tresult of dojo/query() calls.\n\t\t// description:\n\t\t//\t\tNodeList instances provide many utilities that reflect\n\t\t//\t\tcore Dojo APIs for Array iteration and manipulation, DOM\n\t\t//\t\tmanipulation, and event handling. Instead of needing to dig up\n\t\t//\t\tfunctions in the dojo package, NodeLists generally make the\n\t\t//\t\tfull power of Dojo available for DOM manipulation tasks in a\n\t\t//\t\tsimple, chainable way.\n\t\t// example:\n\t\t//\t\tcreate a node list from a node\n\t\t//\t\t|\trequire([\"dojo/query\", \"dojo/dom\"\n\t\t//\t\t|\t], function(query, dom){\n\t\t//\t\t|\t\tquery.NodeList(dom.byId(\"foo\"));\n\t\t//\t\t|\t});\n\t\t// example:\n\t\t//\t\tget a NodeList from a CSS query and iterate on it\n\t\t//\t\t|\trequire([\"dojo/on\", \"dojo/dom\"\n\t\t//\t\t|\t], function(on, dom){\n\t\t//\t\t|\t\tvar l = query(\".thinger\");\n\t\t//\t\t|\t\tl.forEach(function(node, index, nodeList){\n\t\t//\t\t|\t\t\tconsole.log(index, node.innerHTML);\n\t\t//\t\t|\t\t});\n\t\t//\t\t|\t});\n\t\t// example:\n\t\t//\t\tuse native and Dojo-provided array methods to manipulate a\n\t\t//\t\tNodeList without needing to use dojo.* functions explicitly:\n\t\t//\t\t|\trequire([\"dojo/query\", \"dojo/dom-construct\", \"dojo/dom\"\n\t\t//\t\t|\t], function(query, domConstruct, dom){\n\t\t//\t\t|\t\tvar l = query(\".thinger\");\n\t\t//\t\t|\t\t// since NodeLists are real arrays, they have a length\n\t\t//\t\t|\t\t// property that is both readable and writable and\n\t\t//\t\t|\t\t// push/pop/shift/unshift methods\n\t\t//\t\t|\t\tconsole.log(l.length);\n\t\t//\t\t|\t\tl.push(domConstruct.create(\"span\"));\n\t\t//\t\t|\n\t\t//\t\t|\t\t// dojo's normalized array methods work too:\n\t\t//\t\t|\t\tconsole.log( l.indexOf(dom.byId(\"foo\")) );\n\t\t//\t\t|\t\t// ...including the special \"function as string\" shorthand\n\t\t//\t\t|\t\tconsole.log( l.every(\"item.nodeType == 1\") );\n\t\t//\t\t|\n\t\t//\t\t|\t\t// NodeLists can be [..] indexed, or you can use the at()\n\t\t//\t\t|\t\t// function to get specific items wrapped in a new NodeList:\n\t\t//\t\t|\t\tvar node = l[3]; // the 4th element\n\t\t//\t\t|\t\tvar newList = l.at(1, 3); // the 2nd and 4th elements\n\t\t//\t\t|\t});\n\t\t// example:\n\t\t//\t\tchainability is a key advantage of NodeLists:\n\t\t//\t\t|\trequire([\"dojo/query\", \"dojo/NodeList-dom\"\n\t\t//\t\t|\t], function(query){\n\t\t//\t\t|\t\tquery(\".thinger\")\n\t\t//\t\t|\t\t\t.onclick(function(e){ /* ... */ })\n\t\t//\t\t|\t\t\t.at(1, 3, 8) // get a subset\n\t\t//\t\t|\t\t\t\t.style(\"padding\", \"5px\")\n\t\t//\t\t|\t\t\t\t.forEach(console.log);\n\t\t//\t\t|\t});\n\n\t\tvar isNew = this instanceof nl && has(\"array-extensible\");\n\t\tif(typeof array == \"number\"){\n\t\t\tarray = Array(array);\n\t\t}\n\t\tvar nodeArray = (array && \"length\" in array) ? array : arguments;\n\t\tif(isNew || !nodeArray.sort){\n\t\t\t// make sure it's a real array before we pass it on to be wrapped \n\t\t\tvar target = isNew ? this : [],\n\t\t\t\tl = target.length = nodeArray.length;\n\t\t\tfor(var i = 0; i < l; i++){\n\t\t\t\ttarget[i] = nodeArray[i];\n\t\t\t}\n\t\t\tif(isNew){\n\t\t\t\t// called with new operator, this means we are going to use this instance and push\n\t\t\t\t// the nodes on to it. This is usually much faster since the NodeList properties\n\t\t\t\t//\tdon't need to be copied (unless the list of nodes is extremely large).\n\t\t\t\treturn target;\n\t\t\t}\n\t\t\tnodeArray = target;\n\t\t}\n\t\t// called without new operator, use a real array and copy prototype properties,\n\t\t// this is slower and exists for back-compat. Should be removed in 2.0.\n\t\tlang._mixin(nodeArray, nlp);\n\t\tnodeArray._NodeListCtor = function(array){\n\t\t\t// call without new operator to preserve back-compat behavior\n\t\t\treturn nl(array);\n\t\t};\n\t\treturn nodeArray;\n\t};\n\t\n\tvar nl = NodeList, nlp = nl.prototype = \n\t\thas(\"array-extensible\") ? [] : {};// extend an array if it is extensible\n\n\t// expose adapters and the wrapper as private functions\n\n\tnl._wrap = nlp._wrap = tnl;\n\tnl._adaptAsMap = adaptAsMap;\n\tnl._adaptAsForEach = adaptAsForEach;\n\tnl._adaptAsFilter  = adaptAsFilter;\n\tnl._adaptWithCondition = adaptWithCondition;\n\n\t// mass assignment\n\n\t// add array redirectors\n\tforEach([\"slice\", \"splice\"], function(name){\n\t\tvar f = ap[name];\n\t\t//Use a copy of the this array via this.slice() to allow .end() to work right in the splice case.\n\t\t// CANNOT apply ._stash()/end() to splice since it currently modifies\n\t\t// the existing this array -- it would break backward compatibility if we copy the array before\n\t\t// the splice so that we can use .end(). So only doing the stash option to this._wrap for slice.\n\t\tnlp[name] = function(){ return this._wrap(f.apply(this, arguments), name == \"slice\" ? this : null); };\n\t});\n\t// concat should be here but some browsers with native NodeList have problems with it\n\n\t// add array.js redirectors\n\tforEach([\"indexOf\", \"lastIndexOf\", \"every\", \"some\"], function(name){\n\t\tvar f = array[name];\n\t\tnlp[name] = function(){ return f.apply(dojo, [this].concat(aps.call(arguments, 0))); };\n\t});\n\n\tlang.extend(NodeList, {\n\t\t// copy the constructors\n\t\tconstructor: nl,\n\t\t_NodeListCtor: nl,\n\t\ttoString: function(){\n\t\t\t// Array.prototype.toString can't be applied to objects, so we use join\n\t\t\treturn this.join(\",\");\n\t\t},\n\t\t_stash: function(parent){\n\t\t\t// summary:\n\t\t\t//\t\tprivate function to hold to a parent NodeList. end() to return the parent NodeList.\n\t\t\t//\n\t\t\t// example:\n\t\t\t//\t\tHow to make a `dojo/NodeList` method that only returns the third node in\n\t\t\t//\t\tthe dojo/NodeList but allows access to the original NodeList by using this._stash:\n\t\t\t//\t|\trequire([\"dojo/query\", \"dojo/_base/lang\", \"dojo/NodeList\", \"dojo/NodeList-dom\"\n\t\t\t//\t|\t], function(query, lang){\n\t\t\t//\t|\t\tlang.extend(NodeList, {\n\t\t\t//\t|\t\t\tthird: function(){\n\t\t\t//\t|\t\t\t\tvar newNodeList = NodeList(this[2]);\n\t\t\t//\t|\t\t\t\treturn newNodeList._stash(this);\n\t\t\t//\t|\t\t\t}\n\t\t\t//\t|\t\t});\n\t\t\t//\t|\t\t// then see how _stash applies a sub-list, to be .end()'ed out of\n\t\t\t//\t|\t\tquery(\".foo\")\n\t\t\t//\t|\t\t\t.third()\n\t\t\t//\t|\t\t\t\t.addClass(\"thirdFoo\")\n\t\t\t//\t|\t\t\t.end()\n\t\t\t//\t|\t\t\t// access to the orig .foo list\n\t\t\t//\t|\t\t\t.removeClass(\"foo\")\n\t\t\t//\t|\t});\n\t\t\t//\n\t\t\tthis._parent = parent;\n\t\t\treturn this; // dojo/NodeList\n\t\t},\n\n\t\ton: function(eventName, listener){\n\t\t\t// summary:\n\t\t\t//\t\tListen for events on the nodes in the NodeList. Basic usage is:\n\t\t\t//\n\t\t\t// example:\n\t\t\t//\t\t|\trequire([\"dojo/query\"\n\t\t\t//\t\t|\t], function(query){\n\t\t\t//\t\t|\t\tquery(\".my-class\").on(\"click\", listener);\n\t\t\t//\t\t\tThis supports event delegation by using selectors as the first argument with the event names as\n\t\t\t//\t\t\tpseudo selectors. For example:\n\t\t\t//\t\t| \t\tquery(\"#my-list\").on(\"li:click\", listener);\n\t\t\t//\t\t\tThis will listen for click events within `<li>` elements that are inside the `#my-list` element.\n\t\t\t//\t\t\tBecause on supports CSS selector syntax, we can use comma-delimited events as well:\n\t\t\t//\t\t| \t\tquery(\"#my-list\").on(\"li button:mouseover, li:click\", listener);\n\t\t\t//\t\t|\t});\n\t\t\tvar handles = this.map(function(node){\n\t\t\t\treturn on(node, eventName, listener); // TODO: apply to the NodeList so the same selector engine is used for matches\n\t\t\t});\n\t\t\thandles.remove = function(){\n\t\t\t\tfor(var i = 0; i < handles.length; i++){\n\t\t\t\t\thandles[i].remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn handles;\n\t\t},\n\n\t\tend: function(){\n\t\t\t// summary:\n\t\t\t//\t\tEnds use of the current `NodeList` by returning the previous NodeList\n\t\t\t//\t\tthat generated the current NodeList.\n\t\t\t// description:\n\t\t\t//\t\tReturns the `NodeList` that generated the current `NodeList`. If there\n\t\t\t//\t\tis no parent NodeList, an empty NodeList is returned.\n\t\t\t// example:\n\t\t\t//\t|\trequire([\"dojo/query\", \"dojo/NodeList-dom\"\n\t\t\t//\t|\t], function(query){\n\t\t\t//\t|\t\tquery(\"a\")\n\t\t\t//\t|\t\t\t.filter(\".disabled\")\n\t\t\t//\t|\t\t\t\t// operate on the anchors that only have a disabled class\n\t\t\t//\t|\t\t\t\t.style(\"color\", \"grey\")\n\t\t\t//\t|\t\t\t.end()\n\t\t\t//\t|\t\t\t// jump back to the list of anchors\n\t\t\t//\t|\t\t\t.style(...)\n\t\t\t//\t|\t});\n\t\t\t//\n\t\t\tif(this._parent){\n\t\t\t\treturn this._parent;\n\t\t\t}else{\n\t\t\t\t//Just return empty list.\n\t\t\t\treturn new this._NodeListCtor(0);\n\t\t\t}\n\t\t},\n\n\t\t// http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Global_Objects:Array#Methods\n\n\t\t// FIXME: handle return values for #3244\n\t\t//\t\thttp://trac.dojotoolkit.org/ticket/3244\n\n\t\t// FIXME:\n\t\t//\t\tneed to wrap or implement:\n\t\t//\t\t\tjoin (perhaps w/ innerHTML/outerHTML overload for toString() of items?)\n\t\t//\t\t\treduce\n\t\t//\t\t\treduceRight\n\n\t\t/*=====\n\t\tslice: function(begin, end){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a new NodeList, maintaining this one in place\n\t\t\t// description:\n\t\t\t//\t\tThis method behaves exactly like the Array.slice method\n\t\t\t//\t\twith the caveat that it returns a `dojo/NodeList` and not a\n\t\t\t//\t\traw Array. For more details, see Mozilla's [slice\n\t\t\t//\t\tdocumentation](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/slice)\n\t\t\t// begin: Integer\n\t\t\t//\t\tCan be a positive or negative integer, with positive\n\t\t\t//\t\tintegers noting the offset to begin at, and negative\n\t\t\t//\t\tintegers denoting an offset from the end (i.e., to the left\n\t\t\t//\t\tof the end)\n\t\t\t// end: Integer?\n\t\t\t//\t\tOptional parameter to describe what position relative to\n\t\t\t//\t\tthe NodeList's zero index to end the slice at. Like begin,\n\t\t\t//\t\tcan be positive or negative.\n\t\t\treturn this._wrap(a.slice.apply(this, arguments));\n\t\t},\n\n\t\tsplice: function(index, howmany, item){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a new NodeList, manipulating this NodeList based on\n\t\t\t//\t\tthe arguments passed, potentially splicing in new elements\n\t\t\t//\t\tat an offset, optionally deleting elements\n\t\t\t// description:\n\t\t\t//\t\tThis method behaves exactly like the Array.splice method\n\t\t\t//\t\twith the caveat that it returns a `dojo/NodeList` and not a\n\t\t\t//\t\traw Array. For more details, see Mozilla's [splice\n\t\t\t//\t\tdocumentation](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice)\n\t\t\t//\t\tFor backwards compatibility, calling .end() on the spliced NodeList\n\t\t\t//\t\tdoes not return the original NodeList -- splice alters the NodeList in place.\n\t\t\t// index: Integer\n\t\t\t//\t\tbegin can be a positive or negative integer, with positive\n\t\t\t//\t\tintegers noting the offset to begin at, and negative\n\t\t\t//\t\tintegers denoting an offset from the end (i.e., to the left\n\t\t\t//\t\tof the end)\n\t\t\t// howmany: Integer?\n\t\t\t//\t\tOptional parameter to describe what position relative to\n\t\t\t//\t\tthe NodeList's zero index to end the slice at. Like begin,\n\t\t\t//\t\tcan be positive or negative.\n\t\t\t// item: Object...?\n\t\t\t//\t\tAny number of optional parameters may be passed in to be\n\t\t\t//\t\tspliced into the NodeList\n\t\t\treturn this._wrap(a.splice.apply(this, arguments));\t// dojo/NodeList\n\t\t},\n\n\t\tindexOf: function(value, fromIndex){\n\t\t\t// summary:\n\t\t\t//\t\tsee `dojo/_base/array.indexOf()`. The primary difference is that the acted-on\n\t\t\t//\t\tarray is implicitly this NodeList\n\t\t\t// value: Object\n\t\t\t//\t\tThe value to search for.\n\t\t\t// fromIndex: Integer?\n\t\t\t//\t\tThe location to start searching from. Optional. Defaults to 0.\n\t\t\t// description:\n\t\t\t//\t\tFor more details on the behavior of indexOf, see Mozilla's\n\t\t\t//\t\t[indexOf\n\t\t\t//\t\tdocs](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf)\n\t\t\t// returns:\n\t\t\t//\t\tPositive Integer or 0 for a match, -1 of not found.\n\t\t\treturn d.indexOf(this, value, fromIndex); // Integer\n\t\t},\n\n\t\tlastIndexOf: function(value, fromIndex){\n\t\t\t// summary:\n\t\t\t//\t\tsee `dojo/_base/array.lastIndexOf()`. The primary difference is that the\n\t\t\t//\t\tacted-on array is implicitly this NodeList\n\t\t\t// description:\n\t\t\t//\t\tFor more details on the behavior of lastIndexOf, see\n\t\t\t//\t\tMozilla's [lastIndexOf\n\t\t\t//\t\tdocs](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf)\n\t\t\t// value: Object\n\t\t\t//\t\tThe value to search for.\n\t\t\t// fromIndex: Integer?\n\t\t\t//\t\tThe location to start searching from. Optional. Defaults to 0.\n\t\t\t// returns:\n\t\t\t//\t\tPositive Integer or 0 for a match, -1 of not found.\n\t\t\treturn d.lastIndexOf(this, value, fromIndex); // Integer\n\t\t},\n\n\t\tevery: function(callback, thisObject){\n\t\t\t// summary:\n\t\t\t//\t\tsee `dojo/_base/array.every()` and the [Array.every\n\t\t\t//\t\tdocs](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every).\n\t\t\t//\t\tTakes the same structure of arguments and returns as\n\t\t\t//\t\tdojo/_base/array.every() with the caveat that the passed array is\n\t\t\t//\t\timplicitly this NodeList\n\t\t\t// callback: Function\n\t\t\t//\t\tthe callback\n\t\t\t// thisObject: Object?\n\t\t\t//\t\tthe context\n\t\t\treturn d.every(this, callback, thisObject); // Boolean\n\t\t},\n\n\t\tsome: function(callback, thisObject){\n\t\t\t// summary:\n\t\t\t//\t\tTakes the same structure of arguments and returns as\n\t\t\t//\t\t`dojo/_base/array.some()` with the caveat that the passed array is\n\t\t\t//\t\timplicitly this NodeList.  See `dojo/_base/array.some()` and Mozilla's\n\t\t\t//\t\t[Array.some\n\t\t\t//\t\tdocumentation](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some).\n\t\t\t// callback: Function\n\t\t\t//\t\tthe callback\n\t\t\t// thisObject: Object?\n\t\t\t//\t\tthe context\n\t\t\treturn d.some(this, callback, thisObject); // Boolean\n\t\t},\n\t\t=====*/\n\n\t\tconcat: function(item){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a new NodeList comprised of items in this NodeList\n\t\t\t//\t\tas well as items passed in as parameters\n\t\t\t// description:\n\t\t\t//\t\tThis method behaves exactly like the Array.concat method\n\t\t\t//\t\twith the caveat that it returns a `NodeList` and not a\n\t\t\t//\t\traw Array. For more details, see the [Array.concat\n\t\t\t//\t\tdocs](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/concat)\n\t\t\t// item: Object?\n\t\t\t//\t\tAny number of optional parameters may be passed in to be\n\t\t\t//\t\tspliced into the NodeList\n\n\t\t\t//return this._wrap(apc.apply(this, arguments));\n\t\t\t// the line above won't work for the native NodeList, or for Dojo NodeLists either :-(\n\n\t\t\t// implementation notes:\n\t\t\t// Array.concat() doesn't recognize native NodeLists or Dojo NodeLists\n\t\t\t// as arrays, and so does not inline them into a unioned array, but\n\t\t\t// appends them as single entities. Both the original NodeList and the\n\t\t\t// items passed in as parameters must be converted to raw Arrays\n\t\t\t// and then the concatenation result may be re-_wrap()ed as a Dojo NodeList.\n\n\t\t\tvar t = aps.call(this, 0),\n\t\t\t\tm = array.map(arguments, function(a){\n\t\t\t\t\treturn aps.call(a, 0);\n\t\t\t\t});\n\t\t\treturn this._wrap(apc.apply(t, m), this);\t// dojo/NodeList\n\t\t},\n\n\t\tmap: function(/*Function*/ func, /*Function?*/ obj){\n\t\t\t// summary:\n\t\t\t//\t\tsee `dojo/_base/array.map()`. The primary difference is that the acted-on\n\t\t\t//\t\tarray is implicitly this NodeList and the return is a\n\t\t\t//\t\tNodeList (a subclass of Array)\n\t\t\treturn this._wrap(array.map(this, func, obj), this); // dojo/NodeList\n\t\t},\n\n\t\tforEach: function(callback, thisObj){\n\t\t\t// summary:\n\t\t\t//\t\tsee `dojo/_base/array.forEach()`. The primary difference is that the acted-on\n\t\t\t//\t\tarray is implicitly this NodeList. If you want the option to break out\n\t\t\t//\t\tof the forEach loop, use every() or some() instead.\n\t\t\tforEach(this, callback, thisObj);\n\t\t\t// non-standard return to allow easier chaining\n\t\t\treturn this; // dojo/NodeList\n\t\t},\n\t\tfilter: function(/*String|Function*/ filter){\n\t\t\t// summary:\n\t\t\t//\t\t\"masks\" the built-in javascript filter() method (supported\n\t\t\t//\t\tin Dojo via `dojo/_base/array.filter`) to support passing a simple\n\t\t\t//\t\tstring filter in addition to supporting filtering function\n\t\t\t//\t\tobjects.\n\t\t\t// filter:\n\t\t\t//\t\tIf a string, a CSS rule like \".thinger\" or \"div > span\".\n\t\t\t// example:\n\t\t\t//\t\t\"regular\" JS filter syntax as exposed in `dojo/_base/array.filter`:\n\t\t\t//\t\t|\trequire([\"dojo/query\", \"dojo/NodeList-dom\"\n\t\t\t//\t\t|\t], function(query){\n\t\t\t//\t\t|\t\tquery(\"*\").filter(function(item){\n\t\t\t//\t\t|\t\t\t// highlight every paragraph\n\t\t\t//\t\t|\t\t\treturn (item.nodeName == \"p\");\n\t\t\t//\t\t|\t\t}).style(\"backgroundColor\", \"yellow\");\n\t\t\t//\t\t|\t});\n\t\t\t// example:\n\t\t\t//\t\tthe same filtering using a CSS selector\n\t\t\t//\t\t|\trequire([\"dojo/query\", \"dojo/NodeList-dom\"\n\t\t\t//\t\t|\t], function(query){\n\t\t\t//\t\t|\t\tquery(\"*\").filter(\"p\").styles(\"backgroundColor\", \"yellow\");\n\t\t\t//\t\t|\t});\n\n\t\t\tvar a = arguments, items = this, start = 0;\n\t\t\tif(typeof filter == \"string\"){ // inline'd type check\n\t\t\t\titems = query._filterResult(this, a[0]);\n\t\t\t\tif(a.length == 1){\n\t\t\t\t\t// if we only got a string query, pass back the filtered results\n\t\t\t\t\treturn items._stash(this); // dojo/NodeList\n\t\t\t\t}\n\t\t\t\t// if we got a callback, run it over the filtered items\n\t\t\t\tstart = 1;\n\t\t\t}\n\t\t\treturn this._wrap(array.filter(items, a[start], a[start + 1]), this);\t// dojo/NodeList\n\t\t},\n\t\tinstantiate: function(/*String|Object*/ declaredClass, /*Object?*/ properties){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a new instance of a specified class, using the\n\t\t\t//\t\tspecified properties and each node in the NodeList as a\n\t\t\t//\t\tsrcNodeRef.\n\t\t\t// example:\n\t\t\t//\t\tGrabs all buttons in the page and converts them to dijit/form/Button's.\n\t\t\t//\t|\tvar buttons = query(\"button\").instantiate(Button, {showLabel: true});\n\t\t\tvar c = lang.isFunction(declaredClass) ? declaredClass : lang.getObject(declaredClass);\n\t\t\tproperties = properties || {};\n\t\t\treturn this.forEach(function(node){\n\t\t\t\tnew c(properties, node);\n\t\t\t});\t// dojo/NodeList\n\t\t},\n\t\tat: function(/*===== index =====*/){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a new NodeList comprised of items in this NodeList\n\t\t\t//\t\tat the given index or indices.\n\t\t\t//\n\t\t\t// index: Integer...\n\t\t\t//\t\tOne or more 0-based indices of items in the current\n\t\t\t//\t\tNodeList. A negative index will start at the end of the\n\t\t\t//\t\tlist and go backwards.\n\t\t\t//\n\t\t\t// example:\n\t\t\t//\tShorten the list to the first, second, and third elements\n\t\t\t//\t|\trequire([\"dojo/query\"\n\t\t\t//\t|\t], function(query){\n\t\t\t//\t|\t\tquery(\"a\").at(0, 1, 2).forEach(fn);\n\t\t\t//\t|\t});\n\t\t\t//\n\t\t\t// example:\n\t\t\t//\tRetrieve the first and last elements of a unordered list:\n\t\t\t//\t|\trequire([\"dojo/query\"\n\t\t\t//\t|\t], function(query){\n\t\t\t//\t|\t\tquery(\"ul > li\").at(0, -1).forEach(cb);\n\t\t\t//\t|\t});\n\t\t\t//\n\t\t\t// example:\n\t\t\t//\tDo something for the first element only, but end() out back to\n\t\t\t//\tthe original list and continue chaining:\n\t\t\t//\t|\trequire([\"dojo/query\"\n\t\t\t//\t|\t], function(query){\n\t\t\t//\t|\t\tquery(\"a\").at(0).onclick(fn).end().forEach(function(n){\n\t\t\t//\t|\t\t\tconsole.log(n); // all anchors on the page.\n\t\t\t//\t|\t})\n\t\t\t//\t|\t});\n\n\t\t\tvar t = new this._NodeListCtor(0);\n\t\t\tforEach(arguments, function(i){\n\t\t\t\tif(i < 0){ i = this.length + i; }\n\t\t\t\tif(this[i]){ t.push(this[i]); }\n\t\t\t}, this);\n\t\t\treturn t._stash(this); // dojo/NodeList\n\t\t}\n\t});\n\n\tfunction queryForEngine(engine, NodeList){\n\t\tvar query = function(/*String*/ query, /*String|DOMNode?*/ root){\n\t\t\t// summary:\n\t\t\t//\t\tReturns nodes which match the given CSS selector, searching the\n\t\t\t//\t\tentire document by default but optionally taking a node to scope\n\t\t\t//\t\tthe search by. Returns an instance of NodeList.\n\t\t\tif(typeof root == \"string\"){\n\t\t\t\troot = dom.byId(root);\n\t\t\t\tif(!root){\n\t\t\t\t\treturn new NodeList([]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar results = typeof query == \"string\" ? engine(query, root) : query ? (query.end && query.on) ? query : [query] : [];\n\t\t\tif(results.end && results.on){\n\t\t\t\t// already wrapped\n\t\t\t\treturn results;\n\t\t\t}\n\t\t\treturn new NodeList(results);\n\t\t};\n\t\tquery.matches = engine.match || function(node, selector, root){\n\t\t\t// summary:\n\t\t\t//\t\tTest to see if a node matches a selector\n\t\t\treturn query.filter([node], selector, root).length > 0;\n\t\t};\n\t\t// the engine provides a filtering function, use it to for matching\n\t\tquery.filter = engine.filter || function(nodes, selector, root){\n\t\t\t// summary:\n\t\t\t//\t\tFilters an array of nodes. Note that this does not guarantee to return a NodeList, just an array.\n\t\t\treturn query(selector, root).filter(function(node){\n\t\t\t\treturn array.indexOf(nodes, node) > -1;\n\t\t\t});\n\t\t};\n\t\tif(typeof engine != \"function\"){\n\t\t\tvar search = engine.search;\n\t\t\tengine = function(selector, root){\n\t\t\t\t// Slick does it backwards (or everyone else does it backwards, probably the latter)\n\t\t\t\treturn search(root || document, selector);\n\t\t\t};\n\t\t}\n\t\treturn query;\n\t}\n\tvar query = queryForEngine(defaultEngine, NodeList);\n\t/*=====\n\tquery = function(selector, context){\n\t\t// summary:\n\t\t//\t\tThis modules provides DOM querying functionality. The module export is a function\n\t\t//\t\tthat can be used to query for DOM nodes by CSS selector and returns a NodeList\n\t\t//\t\trepresenting the matching nodes.\n\t\t// selector: String\n\t\t//\t\tA CSS selector to search for.\n\t\t// context: String|DomNode?\n\t\t//\t\tAn optional context to limit the searching scope. Only nodes under `context` will be\n\t\t//\t\tscanned.\n\t\t// example:\n\t\t//\t\tadd an onclick handler to every submit button in the document\n\t\t//\t\twhich causes the form to be sent via Ajax instead:\n\t\t//\t|\trequire([\"dojo/query\", \"dojo/request\", \"dojo/dom-form\", \"dojo/dom-construct\", \"dojo/dom-style\"\n\t\t//\t|\t], function(query, request, domForm, domConstruct, domStyle){\n\t\t//\t|\t\tquery(\"input[type='submit']\").on(\"click\", function(e){\n\t\t//\t|\t\t\te.preventDefault(); // prevent sending the form\n\t\t//\t|\t\t\tvar btn = e.target;\n\t\t//\t|\t\t\trequest.post(\"http://example.com/\", {\n\t\t//\t|\t\t\t\tdata: domForm.toObject(btn.form)\n\t\t//\t|\t\t\t}).then(function(response){\n\t\t//\t|\t\t\t\t// replace the form with the response\n\t\t//\t|\t\t\t\tdomConstruct.create(div, {innerHTML: response}, btn.form, \"after\");\n\t\t//\t|\t\t\t\tdomStyle.set(btn.form, \"display\", \"none\");\n\t\t//\t|\t\t\t});\n\t\t//\t|\t\t});\n\t\t//\t|\t});\n\t\t//\n\t\t// description:\n\t\t//\t\tdojo/query is responsible for loading the appropriate query engine and wrapping\n\t\t//\t\tits results with a `NodeList`. You can use dojo/query with a specific selector engine\n\t\t//\t\tby using it as a plugin. For example, if you installed the sizzle package, you could\n\t\t//\t\tuse it as the selector engine with:\n\t\t//\t\t|\trequire([\"dojo/query!sizzle\"], function(query){\n\t\t//\t\t|\t\tquery(\"div\")...\n\t\t//\n\t\t//\t\tThe id after the ! can be a module id of the selector engine or one of the following values:\n\t\t//\n\t\t//\t\t- acme: This is the default engine used by Dojo base, and will ensure that the full\n\t\t//\t\tAcme engine is always loaded.\n\t\t//\n\t\t//\t\t- css2: If the browser has a native selector engine, this will be used, otherwise a\n\t\t//\t\tvery minimal lightweight selector engine will be loaded that can do simple CSS2 selectors\n\t\t//\t\t(by #id, .class, tag, and [name=value] attributes, with standard child or descendant (>)\n\t\t//\t\toperators) and nothing more.\n\t\t//\n\t\t//\t\t- css2.1: If the browser has a native selector engine, this will be used, otherwise the\n\t\t//\t\tfull Acme engine will be loaded.\n\t\t//\n\t\t//\t\t- css3: If the browser has a native selector engine with support for CSS3 pseudo\n\t\t//\t\tselectors (most modern browsers except IE8), this will be used, otherwise the\n\t\t//\t\tfull Acme engine will be loaded.\n\t\t//\n\t\t//\t\t- Or the module id of a selector engine can be used to explicitly choose the selector engine\n\t\t//\n\t\t//\t\tFor example, if you are using CSS3 pseudo selectors in module, you can specify that\n\t\t//\t\tyou will need support them with:\n\t\t//\t\t|\trequire([\"dojo/query!css3\"], function(query){\n\t\t//\t\t|\t\tquery('#t > h3:nth-child(odd)')...\n\t\t//\n\t\t//\t\tYou can also choose the selector engine/load configuration by setting the query-selector:\n\t\t//\t\tFor example:\n\t\t//\t\t|\t<script data-dojo-config=\"query-selector:'css3'\" src=\"dojo.js\"></script>\n\t\t//\n\t\treturn new NodeList(); // dojo/NodeList\n\t };\n\t =====*/\n\n\t// the query that is returned from this module is slightly different than dojo.query,\n\t// because dojo.query has to maintain backwards compatibility with returning a\n\t// true array which has performance problems. The query returned from the module\n\t// does not use true arrays, but rather inherits from Array, making it much faster to\n\t// instantiate.\n\tdojo.query = queryForEngine(defaultEngine, function(array){\n\t\t// call it without the new operator to invoke the back-compat behavior that returns a true array\n\t\treturn NodeList(array);\t// dojo/NodeList\n\t});\n\n\tquery.load = function(id, parentRequire, loaded){\n\t\t// summary:\n\t\t//\t\tcan be used as AMD plugin to conditionally load new query engine\n\t\t// example:\n\t\t//\t|\trequire([\"dojo/query!custom\"], function(qsa){\n\t\t//\t|\t\t// loaded selector/custom.js as engine\n\t\t//\t|\t\tqsa(\"#foobar\").forEach(...);\n\t\t//\t|\t});\n\t\tloader.load(id, parentRequire, function(engine){\n\t\t\tloaded(queryForEngine(engine, NodeList));\n\t\t});\n\t};\n\n\tdojo._filterQueryResult = query._filterResult = function(nodes, selector, root){\n\t\treturn new NodeList(query.filter(nodes, selector, root));\n\t};\n\tdojo.NodeList = query.NodeList = NodeList;\n\treturn query;\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 371:\n/*!******************************************************************!*\\\n  !*** ./node_modules/dojox/node_modules/dojo/selector/_loader.js ***!\n  \\******************************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var require;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../has */ 239), __webpack_require__.dj.c(/*! dojo/selector/_loader */ 371)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(has, require){\n\n\"use strict\";\nif (typeof document !== \"undefined\") {\n\tvar testDiv = document.createElement(\"div\");\n\thas.add(\"dom-qsa2.1\", !!testDiv.querySelectorAll);\n\thas.add(\"dom-qsa3\", function(){\n\t\t// test to see if we have a reasonable native selector engine available\n\t\ttry{\n\t\t\ttestDiv.innerHTML = \"<p class='TEST'></p>\"; // test kind of from sizzle\n\t\t\t// Safari can't handle uppercase or unicode characters when\n\t\t\t// in quirks mode, IE8 can't handle pseudos like :empty\n\t\t\treturn testDiv.querySelectorAll(\".TEST:empty\").length == 1;\n\t\t}catch(e){}\n\t});\n}\n\nvar fullEngine;\nvar acme = \"./acme\", lite = \"./lite\";\nreturn {\n\t// summary:\n\t//\t\tThis module handles loading the appropriate selector engine for the given browser\n\n\tload: function(id, parentRequire, loaded, config){\n\t\tif (config && config.isBuild) {\n\t\t\t//Indicate that the optimizer should not wait\n\t\t\t//for this resource any more and complete optimization.\n\t\t\t//This resource will be resolved dynamically during\n\t\t\t//run time in the web browser.\n\t\t\tloaded();\n\t\t\treturn;\n\t\t}\n\n\t\tvar req = require;\n\t\t// here we implement the default logic for choosing a selector engine\n\t\tid = id == \"default\" ? has(\"config-selectorEngine\") || \"css3\" : id;\n\t\tid = id == \"css2\" || id == \"lite\" ? lite :\n\t\t\t\tid == \"css2.1\" ? has(\"dom-qsa2.1\") ? lite : acme :\n\t\t\t\tid == \"css3\" ? has(\"dom-qsa3\") ? lite : acme :\n\t\t\t\tid == \"acme\" ? acme : (req = parentRequire) && id;\n\t\tif(id.charAt(id.length-1) == '?'){\n\t\t\tid = id.substring(0,id.length - 1);\n\t\t\tvar optionalLoad = true;\n\t\t}\n\t\t// the query engine is optional, only load it if a native one is not available or existing one has not been loaded\n\t\tif(optionalLoad && (has(\"dom-compliant-qsa\") || fullEngine)){\n\t\t\treturn loaded(fullEngine);\n\t\t}\n\t\t// load the referenced selector engine\n\t\treq([id], function(engine){\n\t\t\tif(id != \"./lite\"){\n\t\t\t\tfullEngine = engine;\n\t\t\t}\n\t\t\tloaded(engine);\n\t\t});\n\t}\n};\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 372:\n/*!***************************************************************!*\\\n  !*** ./node_modules/dojox/node_modules/dojo/selector/lite.js ***!\n  \\***************************************************************/\n/*! dynamic exports provided */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../has */ 239), __webpack_require__(/*! ../_base/kernel */ 238)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(has, dojo){\n\"use strict\";\n\nvar testDiv = document.createElement(\"div\");\nvar matchesSelector = testDiv.matches || testDiv.webkitMatchesSelector || testDiv.mozMatchesSelector || testDiv.msMatchesSelector || testDiv.oMatchesSelector;\nvar querySelectorAll = testDiv.querySelectorAll;\nvar unionSplit = /([^\\s,](?:\"(?:\\\\.|[^\"])+\"|'(?:\\\\.|[^'])+'|[^,])*)/g;\nhas.add(\"dom-matches-selector\", !!matchesSelector);\nhas.add(\"dom-qsa\", !!querySelectorAll); \n\n// this is a simple query engine. It has handles basic selectors, and for simple\n// common selectors is extremely fast\nvar liteEngine = function(selector, root){\n\t// summary:\n\t//\t\tA small lightweight query selector engine that implements CSS2.1 selectors\n\t//\t\tminus pseudo-classes and the sibling combinator, plus CSS3 attribute selectors\n\n\tif(combine && selector.indexOf(',') > -1){\n\t\treturn combine(selector, root);\n\t}\n\t// use the root's ownerDocument if provided, otherwise try to use dojo.doc. Note \n\t// that we don't use dojo/_base/window's doc to reduce dependencies, and \n\t// fallback to plain document if dojo.doc hasn't been defined (by dojo/_base/window).\n\t// presumably we will have a better way to do this in 2.0 \n\tvar doc = root ? root.ownerDocument || root : dojo.doc || document, \n\t\tmatch = (querySelectorAll ? \n\t\t\t/^([\\w]*)#([\\w\\-]+$)|^(\\.)([\\w\\-\\*]+$)|^(\\w+$)/ : // this one only matches on simple queries where we can beat qSA with specific methods\n\t\t\t/^([\\w]*)#([\\w\\-]+)(?:\\s+(.*))?$|(?:^|(>|.+\\s+))([\\w\\-\\*]+)(\\S*$)/) // this one matches parts of the query that we can use to speed up manual filtering\n\t\t\t.exec(selector);\n\troot = root || doc;\n\tif(match){\n\t\tvar isInsideDomTree = has('ie') === 8 && has('quirks')?\n\t\t\troot.nodeType === doc.nodeType:\n\t\t\troot.parentNode !== null && root.nodeType !== 9 && root.parentNode === doc;\n\n\t\t// fast path regardless of whether or not querySelectorAll exists\n\t\tif(match[2] && isInsideDomTree){\n\t\t\t// an #id\n\t\t\t// use dojo.byId if available as it fixes the id retrieval in IE, note that we can't use the dojo namespace in 2.0, but if there is a conditional module use, we will use that\n\t\t\tvar found = dojo.byId ? dojo.byId(match[2], doc) : doc.getElementById(match[2]);\n\t\t\tif(!found || (match[1] && match[1] != found.tagName.toLowerCase())){\n\t\t\t\t// if there is a tag qualifer and it doesn't match, no matches\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tif(root != doc){\n\t\t\t\t// there is a root element, make sure we are a child of it\n\t\t\t\tvar parent = found;\n\t\t\t\twhile(parent != root){\n\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t\tif(!parent){\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn match[3] ?\n\t\t\t\t\tliteEngine(match[3], found) \n\t\t\t\t\t: [found];\n\t\t}\n\t\tif(match[3] && root.getElementsByClassName){\n\t\t\t// a .class\n\t\t\treturn root.getElementsByClassName(match[4]);\n\t\t}\n\t\tvar found;\n\t\tif(match[5]){\n\t\t\t// a tag\n\t\t\tfound = root.getElementsByTagName(match[5]);\n\t\t\tif(match[4] || match[6]){\n\t\t\t\tselector = (match[4] || \"\") + match[6];\n\t\t\t}else{\n\t\t\t\t// that was the entirety of the query, return results\n\t\t\t\treturn found;\n\t\t\t}\n\t\t}\n\t}\n\tif(querySelectorAll){\n\t\t// qSA works strangely on Element-rooted queries\n\t\t// We can work around this by specifying an extra ID on the root\n\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n\t\t// IE 8 doesn't work on object elements\n\t\tif (root.nodeType === 1 && root.nodeName.toLowerCase() !== \"object\"){\t\t\t\t\n\t\t\treturn useRoot(root, selector, root.querySelectorAll);\n\t\t}else{\n\t\t\t// we can use the native qSA\n\t\t\treturn root.querySelectorAll(selector);\n\t\t}\n\t}else if(!found){\n\t\t// search all children and then filter\n\t\tfound = root.getElementsByTagName(\"*\");\n\t}\n\t// now we filter the nodes that were found using the matchesSelector\n\tvar results = [];\n\tfor(var i = 0, l = found.length; i < l; i++){\n\t\tvar node = found[i];\n\t\tif(node.nodeType == 1 && jsMatchesSelector(node, selector, root)){\n\t\t\t// keep the nodes that match the selector\n\t\t\tresults.push(node);\n\t\t}\n\t}\n\treturn results;\n};\nvar useRoot = function(context, query, method){\n\t// this function creates a temporary id so we can do rooted qSA queries, this is taken from sizzle\n\tvar oldContext = context,\n\t\told = context.getAttribute(\"id\"),\n\t\tnid = old || \"__dojo__\",\n\t\thasParent = context.parentNode,\n\t\trelativeHierarchySelector = /^\\s*[+~]/.test(query);\n\n\tif(relativeHierarchySelector && !hasParent){\n\t\treturn [];\n\t}\n\tif(!old){\n\t\tcontext.setAttribute(\"id\", nid);\n\t}else{\n\t\tnid = nid.replace(/'/g, \"\\\\$&\");\n\t}\n\tif(relativeHierarchySelector && hasParent){\n\t\tcontext = context.parentNode;\n\t}\n\tvar selectors = query.match(unionSplit);\n\tfor(var i = 0; i < selectors.length; i++){\n\t\tselectors[i] = \"[id='\" + nid + \"'] \" + selectors[i];\n\t}\n\tquery = selectors.join(\",\");\n\n\ttry{\n\t\treturn method.call(context, query);\n\t}finally{\n\t\tif(!old){\n\t\t\toldContext.removeAttribute(\"id\");\n\t\t}\n\t}\n};\n\nif(!has(\"dom-matches-selector\")){\n\tvar jsMatchesSelector = (function(){\n\t\t// a JS implementation of CSS selector matching, first we start with the various handlers\n\t\tvar caseFix = testDiv.tagName == \"div\" ? \"toLowerCase\" : \"toUpperCase\";\n\t\tvar selectorTypes = {\n\t\t\t\"\": function(tagName){\n\t\t\t\ttagName = tagName[caseFix]();\n\t\t\t\treturn function(node){\n\t\t\t\t\treturn node.tagName == tagName;\n\t\t\t\t};\n\t\t\t},\n\t\t\t\".\": function(className){\n\t\t\t\tvar classNameSpaced = ' ' + className + ' ';\n\t\t\t\treturn function(node){\n\t\t\t\t\treturn node.className.indexOf(className) > -1 && (' ' + node.className + ' ').indexOf(classNameSpaced) > -1;\n\t\t\t\t};\n\t\t\t},\n\t\t\t\"#\": function(id){\n\t\t\t\treturn function(node){\n\t\t\t\t\treturn node.id == id;\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tvar attrComparators = {\n\t\t\t\"^=\": function(attrValue, value){\n\t\t\t\treturn attrValue.indexOf(value) == 0;\n\t\t\t},\n\t\t\t\"*=\": function(attrValue, value){\n\t\t\t\treturn attrValue.indexOf(value) > -1;\n\t\t\t},\n\t\t\t\"$=\": function(attrValue, value){\n\t\t\t\treturn attrValue.substring(attrValue.length - value.length, attrValue.length) == value;\n\t\t\t},\n\t\t\t\"~=\": function(attrValue, value){\n\t\t\t\treturn (' ' + attrValue + ' ').indexOf(' ' + value + ' ') > -1;\n\t\t\t},\n\t\t\t\"|=\": function(attrValue, value){\n\t\t\t\treturn (attrValue + '-').indexOf(value + '-') == 0;\n\t\t\t},\n\t\t\t\"=\": function(attrValue, value){\n\t\t\t\treturn attrValue == value;\n\t\t\t},\n\t\t\t\"\": function(attrValue, value){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tfunction attr(name, value, type){\n\t\t\tvar firstChar = value.charAt(0);\n\t\t\tif(firstChar == '\"' || firstChar == \"'\"){\n\t\t\t\t// it is quoted, remove the quotes\n\t\t\t\tvalue = value.slice(1, -1);\n\t\t\t}\n\t\t\tvalue = value.replace(/\\\\/g,'');\n\t\t\tvar comparator = attrComparators[type || \"\"];\n\t\t\treturn function(node){\n\t\t\t\tvar attrValue = node.getAttribute(name);\n\t\t\t\treturn attrValue && comparator(attrValue, value);\n\t\t\t};\n\t\t}\n\t\tfunction ancestor(matcher){\n\t\t\treturn function(node, root){\n\t\t\t\twhile((node = node.parentNode) != root){\n\t\t\t\t\tif(matcher(node, root)){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tfunction parent(matcher){\n\t\t\treturn function(node, root){\n\t\t\t\tnode = node.parentNode;\n\t\t\t\treturn matcher ? \n\t\t\t\t\tnode != root && matcher(node, root)\n\t\t\t\t\t: node == root;\n\t\t\t};\n\t\t}\n\t\tvar cache = {};\n\t\tfunction and(matcher, next){\n\t\t\treturn matcher ?\n\t\t\t\tfunction(node, root){\n\t\t\t\t\treturn next(node) && matcher(node, root);\n\t\t\t\t}\n\t\t\t\t: next;\n\t\t}\n\t\treturn function(node, selector, root){\n\t\t\t// this returns true or false based on if the node matches the selector (optionally within the given root)\n\t\t\tvar matcher = cache[selector]; // check to see if we have created a matcher function for the given selector\n\t\t\tif(!matcher){\n\t\t\t\t// create a matcher function for the given selector\n\t\t\t\t// parse the selectors\n\t\t\t\tif(selector.replace(/(?:\\s*([> ])\\s*)|(#|\\.)?((?:\\\\.|[\\w-])+)|\\[\\s*([\\w-]+)\\s*(.?=)?\\s*(\"(?:\\\\.|[^\"])+\"|'(?:\\\\.|[^'])+'|(?:\\\\.|[^\\]])*)\\s*\\]/g, function(t, combinator, type, value, attrName, attrType, attrValue){\n\t\t\t\t\tif(value){\n\t\t\t\t\t\tmatcher = and(matcher, selectorTypes[type || \"\"](value.replace(/\\\\/g, '')));\n\t\t\t\t\t}\n\t\t\t\t\telse if(combinator){\n\t\t\t\t\t\tmatcher = (combinator == \" \" ? ancestor : parent)(matcher);\n\t\t\t\t\t}\n\t\t\t\t\telse if(attrName){\n\t\t\t\t\t\tmatcher = and(matcher, attr(attrName, attrValue, attrType));\n\t\t\t\t\t}\n\t\t\t\t\treturn \"\";\n\t\t\t\t})){\n\t\t\t\t\tthrow new Error(\"Syntax error in query\");\n\t\t\t\t}\n\t\t\t\tif(!matcher){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tcache[selector] = matcher;\n\t\t\t}\n\t\t\t// now run the matcher function on the node\n\t\t\treturn matcher(node, root);\n\t\t};\n\t})();\n}\nif(!has(\"dom-qsa\")){\n\tvar combine = function(selector, root){\n\t\t// combined queries\n\t\tvar selectors = selector.match(unionSplit);\n\t\tvar indexed = [];\n\t\t// add all results and keep unique ones, this only runs in IE, so we take advantage \n\t\t// of known IE features, particularly sourceIndex which is unique and allows us to \n\t\t// order the results \n\t\tfor(var i = 0; i < selectors.length; i++){\n\t\t\tselector = new String(selectors[i].replace(/\\s*$/,''));\n\t\t\tselector.indexOf = escape; // keep it from recursively entering combine\n\t\t\tvar results = liteEngine(selector, root);\n\t\t\tfor(var j = 0, l = results.length; j < l; j++){\n\t\t\t\tvar node = results[j];\n\t\t\t\tindexed[node.sourceIndex] = node;\n\t\t\t}\n\t\t}\n\t\t// now convert from a sparse array to a dense array\n\t\tvar totalResults = [];\n\t\tfor(i in indexed){\n\t\t\ttotalResults.push(indexed[i]);\n\t\t}\n\t\treturn totalResults;\n\t};\n}\n\nliteEngine.match = matchesSelector ? function(node, selector, root){\n\tif(root && root.nodeType != 9){\n\t\t// doesn't support three args, use rooted id trick\n\t\treturn useRoot(root, selector, function(query){\n\t\t\treturn matchesSelector.call(node, query);\n\t\t});\n\t}\n\t// we have a native matchesSelector, use that\n\treturn matchesSelector.call(node, selector);\n} : jsMatchesSelector; // otherwise use the JS matches impl\n\nreturn liteEngine;\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 4.bundle.js","define([\n\t\"require\", \"./_base/kernel\", \"./_base/lang\", \"./_base/array\", \"./_base/config\", \"./dom\", \"./_base/window\",\n\t\t\"./_base/url\", \"./aspect\", \"./promise/all\", \"./date/stamp\", \"./Deferred\", \"./has\", \"./query\", \"./on\", \"./ready\"\n], function(require, dojo, dlang, darray, config, dom, dwindow, _Url, aspect, all, dates, Deferred, has, query, don, ready){\n\n\t// module:\n\t//\t\tdojo/parser\n\n\tnew Date(\"X\"); // workaround for #11279, new Date(\"\") == NaN\n\n\t// data-dojo-props etc. is not restricted to JSON, it can be any javascript\n\tfunction myEval(text){\n\t\treturn eval(\"(\" + text + \")\");\n\t}\n\n\t// Widgets like BorderContainer add properties to _Widget via dojo.extend().\n\t// If BorderContainer is loaded after _Widget's parameter list has been cached,\n\t// we need to refresh that parameter list (for _Widget and all widgets that extend _Widget).\n\tvar extendCnt = 0;\n\taspect.after(dlang, \"extend\", function(){\n\t\textendCnt++;\n\t}, true);\n\n\tfunction getNameMap(ctor){\n\t\t// summary:\n\t\t//\t\tReturns map from lowercase name to attribute name in class, ex: {onclick: \"onClick\"}\n\t\tvar map = ctor._nameCaseMap, proto = ctor.prototype;\n\n\t\t// Create the map if it's undefined.\n\t\t// Refresh the map if a superclass was possibly extended with new methods since the map was created.\n\t\tif(!map || map._extendCnt < extendCnt){\n\t\t\tmap = ctor._nameCaseMap = {};\n\t\t\tfor(var name in proto){\n\t\t\t\tif(name.charAt(0) === \"_\"){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\t// skip internal properties\n\t\t\t\tmap[name.toLowerCase()] = name;\n\t\t\t}\n\t\t\tmap._extendCnt = extendCnt;\n\t\t}\n\t\treturn map;\n\t}\n\n\tfunction getCtor(/*String[]*/ types, /*Function?*/ contextRequire){\n\t\t// summary:\n\t\t//\t\tRetrieves a constructor.  If the types array contains more than one class/MID then the\n\t\t//\t\tsubsequent classes will be mixed into the first class and a unique constructor will be\n\t\t//\t\treturned for that array.\n\n\t\tif(!contextRequire){\n\t\t\tcontextRequire = require;\n\t\t}\n\n\t\t// Map from widget name or list of widget names(ex: \"dijit/form/Button,acme/MyMixin\") to a constructor.\n\t\t// Keep separate map for each requireContext to avoid false matches (ex: \"./Foo\" can mean different things\n\t\t// depending on context.)\n\t\tvar ctorMap = contextRequire._dojoParserCtorMap || (contextRequire._dojoParserCtorMap = {});\n\n\t\tvar ts = types.join();\n\t\tif(!ctorMap[ts]){\n\t\t\tvar mixins = [];\n\t\t\tfor(var i = 0, l = types.length; i < l; i++){\n\t\t\t\tvar t = types[i];\n\t\t\t\t// TODO: Consider swapping getObject and require in the future\n\t\t\t\tmixins[mixins.length] = (ctorMap[t] = ctorMap[t] || (dlang.getObject(t) || (~t.indexOf('/') &&\n\t\t\t\t\tcontextRequire(t))));\n\t\t\t}\n\t\t\tvar ctor = mixins.shift();\n\t\t\tctorMap[ts] = mixins.length ? (ctor.createSubclass ? ctor.createSubclass(mixins) : ctor.extend.apply(ctor, mixins)) : ctor;\n\t\t}\n\n\t\treturn ctorMap[ts];\n\t}\n\n\tvar parser = {\n\t\t// summary:\n\t\t//\t\tThe Dom/Widget parsing package\n\n\t\t_clearCache: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear cached data.   Used mainly for benchmarking.\n\t\t\textendCnt++;\n\t\t\t_ctorMap = {};\n\t\t},\n\n\t\t_functionFromScript: function(script, attrData){\n\t\t\t// summary:\n\t\t\t//\t\tConvert a `<script type=\"dojo/method\" args=\"a, b, c\"> ... </script>`\n\t\t\t//\t\tinto a function\n\t\t\t// script: DOMNode\n\t\t\t//\t\tThe `<script>` DOMNode\n\t\t\t// attrData: String\n\t\t\t//\t\tFor HTML5 compliance, searches for attrData + \"args\" (typically\n\t\t\t//\t\t\"data-dojo-args\") instead of \"args\"\n\t\t\tvar preamble = \"\",\n\t\t\t\tsuffix = \"\",\n\t\t\t\targsStr = (script.getAttribute(attrData + \"args\") || script.getAttribute(\"args\")),\n\t\t\t\twithStr = script.getAttribute(\"with\");\n\n\t\t\t// Convert any arguments supplied in script tag into an array to be passed to the\n\t\t\tvar fnArgs = (argsStr || \"\").split(/\\s*,\\s*/);\n\n\t\t\tif(withStr && withStr.length){\n\t\t\t\tdarray.forEach(withStr.split(/\\s*,\\s*/), function(part){\n\t\t\t\t\tpreamble += \"with(\" + part + \"){\";\n\t\t\t\t\tsuffix += \"}\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Function(fnArgs, preamble + script.innerHTML + suffix);\n\t\t},\n\n\t\tinstantiate: function(nodes, mixin, options){\n\t\t\t// summary:\n\t\t\t//\t\tTakes array of nodes, and turns them into class instances and\n\t\t\t//\t\tpotentially calls a startup method to allow them to connect with\n\t\t\t//\t\tany children.\n\t\t\t// nodes: Array\n\t\t\t//\t\tArray of DOM nodes\n\t\t\t// mixin: Object?\n\t\t\t//\t\tAn object that will be mixed in with each node in the array.\n\t\t\t//\t\tValues in the mixin will override values in the node, if they\n\t\t\t//\t\texist.\n\t\t\t// options: Object?\n\t\t\t//\t\tAn object used to hold kwArgs for instantiation.\n\t\t\t//\t\tSee parse.options argument for details.\n\t\t\t// returns:\n\t\t\t//\t\tArray of instances.\n\n\t\t\tmixin = mixin || {};\n\t\t\toptions = options || {};\n\n\t\t\tvar dojoType = (options.scope || dojo._scopeName) + \"Type\", // typically \"dojoType\"\n\t\t\t\tattrData = \"data-\" + (options.scope || dojo._scopeName) + \"-\", // typically \"data-dojo-\"\n\t\t\t\tdataDojoType = attrData + \"type\", // typically \"data-dojo-type\"\n\t\t\t\tdataDojoMixins = attrData + \"mixins\";\t\t\t\t\t// typically \"data-dojo-mixins\"\n\n\t\t\tvar list = [];\n\t\t\tdarray.forEach(nodes, function(node){\n\t\t\t\tvar type = dojoType in mixin ? mixin[dojoType] : node.getAttribute(dataDojoType) || node.getAttribute(dojoType);\n\t\t\t\tif(type){\n\t\t\t\t\tvar mixinsValue = node.getAttribute(dataDojoMixins),\n\t\t\t\t\t\ttypes = mixinsValue ? [type].concat(mixinsValue.split(/\\s*,\\s*/)) : [type];\n\n\t\t\t\t\tlist.push({\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\ttypes: types\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Instantiate the nodes and return the list of instances.\n\t\t\treturn this._instantiate(list, mixin, options);\n\t\t},\n\n\t\t_instantiate: function(nodes, mixin, options, returnPromise){\n\t\t\t// summary:\n\t\t\t//\t\tTakes array of objects representing nodes, and turns them into class instances and\n\t\t\t//\t\tpotentially calls a startup method to allow them to connect with\n\t\t\t//\t\tany children.\n\t\t\t// nodes: Array\n\t\t\t//\t\tArray of objects like\n\t\t\t//\t|\t\t{\n\t\t\t//\t|\t\t\tctor: Function (may be null)\n\t\t\t//\t|\t\t\ttypes: [\"dijit/form/Button\", \"acme/MyMixin\"] (used if ctor not specified)\n\t\t\t//\t|\t\t\tnode: DOMNode,\n\t\t\t//\t|\t\t\tscripts: [ ... ],\t// array of <script type=\"dojo/...\"> children of node\n\t\t\t//\t|\t\t\tinherited: { ... }\t// settings inherited from ancestors like dir, theme, etc.\n\t\t\t//\t|\t\t}\n\t\t\t// mixin: Object\n\t\t\t//\t\tAn object that will be mixed in with each node in the array.\n\t\t\t//\t\tValues in the mixin will override values in the node, if they\n\t\t\t//\t\texist.\n\t\t\t// options: Object\n\t\t\t//\t\tAn options object used to hold kwArgs for instantiation.\n\t\t\t//\t\tSee parse.options argument for details.\n\t\t\t// returnPromise: Boolean\n\t\t\t//\t\tReturn a Promise rather than the instance; supports asynchronous widget creation.\n\t\t\t// returns:\n\t\t\t//\t\tArray of instances, or if returnPromise is true, a promise for array of instances\n\t\t\t//\t\tthat resolves when instances have finished initializing.\n\n\t\t\t// Call widget constructors.   Some may be asynchronous and return promises.\n\t\t\tvar thelist = darray.map(nodes, function(obj){\n\t\t\t\tvar ctor = obj.ctor || getCtor(obj.types, options.contextRequire);\n\t\t\t\t// If we still haven't resolved a ctor, it is fatal now\n\t\t\t\tif(!ctor){\n\t\t\t\t\tthrow new Error(\"Unable to resolve constructor for: '\" + obj.types.join() + \"'\");\n\t\t\t\t}\n\t\t\t\treturn this.construct(ctor, obj.node, mixin, options, obj.scripts, obj.inherited);\n\t\t\t}, this);\n\n\t\t\t// After all widget construction finishes, call startup on each top level instance if it makes sense (as for\n\t\t\t// widgets).  Parent widgets will recursively call startup on their (non-top level) children\n\t\t\tfunction onConstruct(thelist){\n\t\t\t\tif(!mixin._started && !options.noStart){\n\t\t\t\t\tdarray.forEach(thelist, function(instance){\n\t\t\t\t\t\tif(typeof instance.startup === \"function\" && !instance._started){\n\t\t\t\t\t\t\tinstance.startup();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn thelist;\n\t\t\t}\n\n\t\t\tif(returnPromise){\n\t\t\t\treturn all(thelist).then(onConstruct);\n\t\t\t}else{\n\t\t\t\t// Back-compat path, remove for 2.0\n\t\t\t\treturn onConstruct(thelist);\n\t\t\t}\n\t\t},\n\n\t\tconstruct: function(ctor, node, mixin, options, scripts, inherited){\n\t\t\t// summary:\n\t\t\t//\t\tCalls new ctor(params, node), where params is the hash of parameters specified on the node,\n\t\t\t//\t\texcluding data-dojo-type and data-dojo-mixins.   Does not call startup().\n\t\t\t// ctor: Function\n\t\t\t//\t\tWidget constructor.\n\t\t\t// node: DOMNode\n\t\t\t//\t\tThis node will be replaced/attached to by the widget.  It also specifies the arguments to pass to ctor.\n\t\t\t// mixin: Object?\n\t\t\t//\t\tAttributes in this object will be passed as parameters to ctor,\n\t\t\t//\t\toverriding attributes specified on the node.\n\t\t\t// options: Object?\n\t\t\t//\t\tAn options object used to hold kwArgs for instantiation.   See parse.options argument for details.\n\t\t\t// scripts: DomNode[]?\n\t\t\t//\t\tArray of `<script type=\"dojo/*\">` DOMNodes.  If not specified, will search for `<script>` tags inside node.\n\t\t\t// inherited: Object?\n\t\t\t//\t\tSettings from dir=rtl or lang=... on a node above this node.   Overrides options.inherited.\n\t\t\t// returns:\n\t\t\t//\t\tInstance or Promise for the instance, if markupFactory() itself returned a promise\n\n\t\t\tvar proto = ctor && ctor.prototype;\n\t\t\toptions = options || {};\n\n\t\t\t// Setup hash to hold parameter settings for this widget.\tStart with the parameter\n\t\t\t// settings inherited from ancestors (\"dir\" and \"lang\").\n\t\t\t// Inherited setting may later be overridden by explicit settings on node itself.\n\t\t\tvar params = {};\n\n\t\t\tif(options.defaults){\n\t\t\t\t// settings for the document itself (or whatever subtree is being parsed)\n\t\t\t\tdlang.mixin(params, options.defaults);\n\t\t\t}\n\t\t\tif(inherited){\n\t\t\t\t// settings from dir=rtl or lang=... on a node above this node\n\t\t\t\tdlang.mixin(params, inherited);\n\t\t\t}\n\n\t\t\t// Get list of attributes explicitly listed in the markup\n\t\t\tvar attributes;\n\t\t\tif(has(\"dom-attributes-explicit\")){\n\t\t\t\t// Standard path to get list of user specified attributes\n\t\t\t\tattributes = node.attributes;\n\t\t\t}else if(has(\"dom-attributes-specified-flag\")){\n\t\t\t\t// Special processing needed for IE8, to skip a few faux values in attributes[]\n\t\t\t\tattributes = darray.filter(node.attributes, function(a){\n\t\t\t\t\treturn a.specified;\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\t// Special path for IE6-7, avoid (sometimes >100) bogus entries in node.attributes\n\t\t\t\tvar clone = /^input$|^img$/i.test(node.nodeName) ? node : node.cloneNode(false),\n\t\t\t\t\tattrs = clone.outerHTML.replace(/=[^\\s\"']+|=\"[^\"]*\"|='[^']*'/g, \"\").replace(/^\\s*<[a-zA-Z0-9]*\\s*/, \"\").replace(/\\s*>.*$/, \"\");\n\n\t\t\t\tattributes = darray.map(attrs.split(/\\s+/), function(name){\n\t\t\t\t\tvar lcName = name.toLowerCase();\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t// getAttribute() doesn't work for button.value, returns innerHTML of button.\n\t\t\t\t\t\t// but getAttributeNode().value doesn't work for the form.encType or li.value\n\t\t\t\t\t\tvalue: (node.nodeName == \"LI\" && name == \"value\") || lcName == \"enctype\" ?\n\t\t\t\t\t\t\tnode.getAttribute(lcName) : node.getAttributeNode(lcName).value\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Hash to convert scoped attribute name (ex: data-dojo17-params) to something friendly (ex: data-dojo-params)\n\t\t\t// TODO: remove scope for 2.0\n\t\t\tvar scope = options.scope || dojo._scopeName,\n\t\t\t\tattrData = \"data-\" + scope + \"-\", // typically \"data-dojo-\"\n\t\t\t\thash = {};\n\t\t\tif(scope !== \"dojo\"){\n\t\t\t\thash[attrData + \"props\"] = \"data-dojo-props\";\n\t\t\t\thash[attrData + \"type\"] = \"data-dojo-type\";\n\t\t\t\thash[attrData + \"mixins\"] = \"data-dojo-mixins\";\n\t\t\t\thash[scope + \"type\"] = \"dojotype\";\n\t\t\t\thash[attrData + \"id\"] = \"data-dojo-id\";\n\t\t\t}\n\n\t\t\t// Read in attributes and process them, including data-dojo-props, data-dojo-type,\n\t\t\t// dojoAttachPoint, etc., as well as normal foo=bar attributes.\n\t\t\tvar i = 0, item, funcAttrs = [], jsname, extra;\n\t\t\twhile(item = attributes[i++]){\n\t\t\t\tvar name = item.name,\n\t\t\t\t\tlcName = name.toLowerCase(),\n\t\t\t\t\tvalue = item.value;\n\n\t\t\t\tswitch(hash[lcName] || lcName){\n\t\t\t\t// Already processed, just ignore\n\t\t\t\tcase \"data-dojo-type\":\n\t\t\t\tcase \"dojotype\":\n\t\t\t\tcase \"data-dojo-mixins\":\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Data-dojo-props.   Save for later to make sure it overrides direct foo=bar settings\n\t\t\t\tcase \"data-dojo-props\":\n\t\t\t\t\textra = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// data-dojo-id or jsId. TODO: drop jsId in 2.0\n\t\t\t\tcase \"data-dojo-id\":\n\t\t\t\tcase \"jsid\":\n\t\t\t\t\tjsname = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// For the benefit of _Templated\n\t\t\t\tcase \"data-dojo-attach-point\":\n\t\t\t\tcase \"dojoattachpoint\":\n\t\t\t\t\tparams.dojoAttachPoint = value;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"data-dojo-attach-event\":\n\t\t\t\tcase \"dojoattachevent\":\n\t\t\t\t\tparams.dojoAttachEvent = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Special parameter handling needed for IE\n\t\t\t\tcase \"class\":\n\t\t\t\t\tparams[\"class\"] = node.className;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"style\":\n\t\t\t\t\tparams[\"style\"] = node.style && node.style.cssText;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// Normal attribute, ex: value=\"123\"\n\n\t\t\t\t\t// Find attribute in widget corresponding to specified name.\n\t\t\t\t\t// May involve case conversion, ex: onclick --> onClick\n\t\t\t\t\tif(!(name in proto)){\n\t\t\t\t\t\tvar map = getNameMap(ctor);\n\t\t\t\t\t\tname = map[lcName] || name;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set params[name] to value, doing type conversion\n\t\t\t\t\tif(name in proto){\n\t\t\t\t\t\tswitch(typeof proto[name]){\n\t\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\t\tparams[name] = value;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"number\":\n\t\t\t\t\t\t\tparams[name] = value.length ? Number(value) : NaN;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"boolean\":\n\t\t\t\t\t\t\t// for checked/disabled value might be \"\" or \"checked\".\t interpret as true.\n\t\t\t\t\t\t\tparams[name] = value.toLowerCase() != \"false\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\t\tif(value === \"\" || value.search(/[^\\w\\.]+/i) != -1){\n\t\t\t\t\t\t\t\t// The user has specified some text for a function like \"return x+5\"\n\t\t\t\t\t\t\t\tparams[name] = new Function(value);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t// The user has specified the name of a global function like \"myOnClick\"\n\t\t\t\t\t\t\t\t// or a single word function \"return\"\n\t\t\t\t\t\t\t\tparams[name] = dlang.getObject(value, false) || new Function(value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfuncAttrs.push(name);\t// prevent \"double connect\", see #15026\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tvar pVal = proto[name];\n\t\t\t\t\t\t\tparams[name] =\n\t\t\t\t\t\t\t\t(pVal && \"length\" in pVal) ? (value ? value.split(/\\s*,\\s*/) : []) :\t// array\n\t\t\t\t\t\t\t\t\t(pVal instanceof Date) ?\n\t\t\t\t\t\t\t\t\t\t(value == \"\" ? new Date(\"\") :\t// the NaN of dates\n\t\t\t\t\t\t\t\t\t\tvalue == \"now\" ? new Date() :\t// current date\n\t\t\t\t\t\t\t\t\t\tdates.fromISOString(value)) :\n\t\t\t\t\t\t\t\t(pVal instanceof _Url) ? (dojo.baseUrl + value) :\n\t\t\t\t\t\t\t\tmyEval(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tparams[name] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove function attributes from DOMNode to prevent \"double connect\" problem, see #15026.\n\t\t\t// Do this as a separate loop since attributes[] is often a live collection (depends on the browser though).\n\t\t\tfor(var j = 0; j < funcAttrs.length; j++){\n\t\t\t\tvar lcfname = funcAttrs[j].toLowerCase();\n\t\t\t\tnode.removeAttribute(lcfname);\n\t\t\t\tnode[lcfname] = null;\n\t\t\t}\n\n\t\t\t// Mix things found in data-dojo-props into the params, overriding any direct settings\n\t\t\tif(extra){\n\t\t\t\ttry{\n\t\t\t\t\textra = myEval.call(options.propsThis, \"{\" + extra + \"}\");\n\t\t\t\t\tdlang.mixin(params, extra);\n\t\t\t\t}catch(e){\n\t\t\t\t\t// give the user a pointer to their invalid parameters. FIXME: can we kill this in production?\n\t\t\t\t\tthrow new Error(e.toString() + \" in data-dojo-props='\" + extra + \"'\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Any parameters specified in \"mixin\" override everything else.\n\t\t\tdlang.mixin(params, mixin);\n\n\t\t\t// Get <script> nodes associated with this widget, if they weren't specified explicitly\n\t\t\tif(!scripts){\n\t\t\t\tscripts = (ctor && (ctor._noScript || proto._noScript) ? [] : query(\"> script[type^='dojo/']\", node));\n\t\t\t}\n\n\t\t\t// Process <script type=\"dojo/*\"> script tags\n\t\t\t// <script type=\"dojo/method\" data-dojo-event=\"foo\"> tags are added to params, and passed to\n\t\t\t// the widget on instantiation.\n\t\t\t// <script type=\"dojo/method\"> tags (with no event) are executed after instantiation\n\t\t\t// <script type=\"dojo/connect\" data-dojo-event=\"foo\"> tags are dojo.connected after instantiation,\n\t\t\t// and likewise with <script type=\"dojo/aspect\" data-dojo-method=\"foo\">\n\t\t\t// <script type=\"dojo/watch\" data-dojo-prop=\"foo\"> tags are dojo.watch after instantiation\n\t\t\t// <script type=\"dojo/on\" data-dojo-event=\"foo\"> tags are dojo.on after instantiation\n\t\t\t// note: dojo/* script tags cannot exist in self closing widgets, like <input />\n\t\t\tvar aspects = [],\t// aspects to connect after instantiation\n\t\t\t\tcalls = [],\t\t// functions to call after instantiation\n\t\t\t\twatches = [],  // functions to watch after instantiation\n\t\t\t\tons = []; // functions to on after instantiation\n\n\t\t\tif(scripts){\n\t\t\t\tfor(i = 0; i < scripts.length; i++){\n\t\t\t\t\tvar script = scripts[i];\n\t\t\t\t\tnode.removeChild(script);\n\t\t\t\t\t// FIXME: drop event=\"\" support in 2.0. use data-dojo-event=\"\" instead\n\t\t\t\t\tvar event = (script.getAttribute(attrData + \"event\") || script.getAttribute(\"event\")),\n\t\t\t\t\t\tprop = script.getAttribute(attrData + \"prop\"),\n\t\t\t\t\t\tmethod = script.getAttribute(attrData + \"method\"),\n\t\t\t\t\t\tadvice = script.getAttribute(attrData + \"advice\"),\n\t\t\t\t\t\tscriptType = script.getAttribute(\"type\"),\n\t\t\t\t\t\tnf = this._functionFromScript(script, attrData);\n\t\t\t\t\tif(event){\n\t\t\t\t\t\tif(scriptType == \"dojo/connect\"){\n\t\t\t\t\t\t\taspects.push({ method: event, func: nf });\n\t\t\t\t\t\t}else if(scriptType == \"dojo/on\"){\n\t\t\t\t\t\t\tons.push({ event: event, func: nf });\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t// <script type=\"dojo/method\" data-dojo-event=\"foo\">\n\t\t\t\t\t\t\t// TODO for 2.0: use data-dojo-method=\"foo\" instead (also affects dijit/Declaration)\n\t\t\t\t\t\t\tparams[event] = nf;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(scriptType == \"dojo/aspect\"){\n\t\t\t\t\t\taspects.push({ method: method, advice: advice, func: nf });\n\t\t\t\t\t}else if(scriptType == \"dojo/watch\"){\n\t\t\t\t\t\twatches.push({ prop: prop, func: nf });\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcalls.push(nf);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// create the instance\n\t\t\tvar markupFactory = ctor.markupFactory || proto.markupFactory;\n\t\t\tvar instance = markupFactory ? markupFactory(params, node, ctor) : new ctor(params, node);\n\n\t\t\tfunction onInstantiate(instance){\n\t\t\t\t// map it to the JS namespace if that makes sense\n\t\t\t\tif(jsname){\n\t\t\t\t\tdlang.setObject(jsname, instance);\n\t\t\t\t}\n\n\t\t\t\t// process connections and startup functions\n\t\t\t\tfor(i = 0; i < aspects.length; i++){\n\t\t\t\t\taspect[aspects[i].advice || \"after\"](instance, aspects[i].method, dlang.hitch(instance, aspects[i].func), true);\n\t\t\t\t}\n\t\t\t\tfor(i = 0; i < calls.length; i++){\n\t\t\t\t\tcalls[i].call(instance);\n\t\t\t\t}\n\t\t\t\tfor(i = 0; i < watches.length; i++){\n\t\t\t\t\tinstance.watch(watches[i].prop, watches[i].func);\n\t\t\t\t}\n\t\t\t\tfor(i = 0; i < ons.length; i++){\n\t\t\t\t\tdon(instance, ons[i].event, ons[i].func);\n\t\t\t\t}\n\n\t\t\t\treturn instance;\n\t\t\t}\n\n\t\t\tif(instance.then){\n\t\t\t\treturn instance.then(onInstantiate);\n\t\t\t}else{\n\t\t\t\treturn onInstantiate(instance);\n\t\t\t}\n\t\t},\n\n\t\tscan: function(root, options){\n\t\t\t// summary:\n\t\t\t//\t\tScan a DOM tree and return an array of objects representing the DOMNodes\n\t\t\t//\t\tthat need to be turned into widgets.\n\t\t\t// description:\n\t\t\t//\t\tSearch specified node (or document root node) recursively for class instances\n\t\t\t//\t\tand return an array of objects that represent potential widgets to be\n\t\t\t//\t\tinstantiated. Searches for either data-dojo-type=\"MID\" or dojoType=\"MID\" where\n\t\t\t//\t\t\"MID\" is a module ID like \"dijit/form/Button\" or a fully qualified Class name\n\t\t\t//\t\tlike \"dijit/form/Button\".  If the MID is not currently available, scan will\n\t\t\t//\t\tattempt to require() in the module.\n\t\t\t//\n\t\t\t//\t\tSee parser.parse() for details of markup.\n\t\t\t// root: DomNode?\n\t\t\t//\t\tA default starting root node from which to start the parsing. Can be\n\t\t\t//\t\tomitted, defaulting to the entire document. If omitted, the `options`\n\t\t\t//\t\tobject can be passed in this place. If the `options` object has a\n\t\t\t//\t\t`rootNode` member, that is used.\n\t\t\t// options: Object\n\t\t\t//\t\ta kwArgs options object, see parse() for details\n\t\t\t//\n\t\t\t// returns: Promise\n\t\t\t//\t\tA promise that is resolved with the nodes that have been parsed.\n\n\t\t\tvar list = [], // Output List\n\t\t\t\tmids = [], // An array of modules that are not yet loaded\n\t\t\t\tmidsHash = {}; // Used to keep the mids array unique\n\n\t\t\tvar dojoType = (options.scope || dojo._scopeName) + \"Type\", // typically \"dojoType\"\n\t\t\t\tattrData = \"data-\" + (options.scope || dojo._scopeName) + \"-\", // typically \"data-dojo-\"\n\t\t\t\tdataDojoType = attrData + \"type\", // typically \"data-dojo-type\"\n\t\t\t\tdataDojoTextDir = attrData + \"textdir\", // typically \"data-dojo-textdir\"\n\t\t\t\tdataDojoMixins = attrData + \"mixins\";\t\t\t\t\t// typically \"data-dojo-mixins\"\n\n\t\t\t// Info on DOMNode currently being processed\n\t\t\tvar node = root.firstChild;\n\n\t\t\t// Info on parent of DOMNode currently being processed\n\t\t\t//\t- inherited: dir, lang, and textDir setting of parent, or inherited by parent\n\t\t\t//\t- parent: pointer to identical structure for my parent (or null if no parent)\n\t\t\t//\t- scripts: if specified, collects <script type=\"dojo/...\"> type nodes from children\n\t\t\tvar inherited = options.inherited;\n\t\t\tif(!inherited){\n\t\t\t\tfunction findAncestorAttr(node, attr){\n\t\t\t\t\treturn (node.getAttribute && node.getAttribute(attr)) ||\n\t\t\t\t\t\t(node.parentNode && findAncestorAttr(node.parentNode, attr));\n\t\t\t\t}\n\n\t\t\t\tinherited = {\n\t\t\t\t\tdir: findAncestorAttr(root, \"dir\"),\n\t\t\t\t\tlang: findAncestorAttr(root, \"lang\"),\n\t\t\t\t\ttextDir: findAncestorAttr(root, dataDojoTextDir)\n\t\t\t\t};\n\t\t\t\tfor(var key in inherited){\n\t\t\t\t\tif(!inherited[key]){\n\t\t\t\t\t\tdelete inherited[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Metadata about parent node\n\t\t\tvar parent = {\n\t\t\t\tinherited: inherited\n\t\t\t};\n\n\t\t\t// For collecting <script type=\"dojo/...\"> type nodes (when null, we don't need to collect)\n\t\t\tvar scripts;\n\n\t\t\t// when true, only look for <script type=\"dojo/...\"> tags, and don't recurse to children\n\t\t\tvar scriptsOnly;\n\n\t\t\tfunction getEffective(parent){\n\t\t\t\t// summary:\n\t\t\t\t//\t\tGet effective dir, lang, textDir settings for specified obj\n\t\t\t\t//\t\t(matching \"parent\" object structure above), and do caching.\n\t\t\t\t//\t\tTake care not to return null entries.\n\t\t\t\tif(!parent.inherited){\n\t\t\t\t\tparent.inherited = {};\n\t\t\t\t\tvar node = parent.node,\n\t\t\t\t\t\tgrandparent = getEffective(parent.parent);\n\t\t\t\t\tvar inherited = {\n\t\t\t\t\t\tdir: node.getAttribute(\"dir\") || grandparent.dir,\n\t\t\t\t\t\tlang: node.getAttribute(\"lang\") || grandparent.lang,\n\t\t\t\t\t\ttextDir: node.getAttribute(dataDojoTextDir) || grandparent.textDir\n\t\t\t\t\t};\n\t\t\t\t\tfor(var key in inherited){\n\t\t\t\t\t\tif(inherited[key]){\n\t\t\t\t\t\t\tparent.inherited[key] = inherited[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn parent.inherited;\n\t\t\t}\n\n\t\t\t// DFS on DOM tree, collecting nodes with data-dojo-type specified.\n\t\t\twhile(true){\n\t\t\t\tif(!node){\n\t\t\t\t\t// Finished this level, continue to parent's next sibling\n\t\t\t\t\tif(!parent || !parent.node){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent.node.nextSibling;\n\t\t\t\t\tscriptsOnly = false;\n\t\t\t\t\tparent = parent.parent;\n\t\t\t\t\tscripts = parent.scripts;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(node.nodeType != 1){\n\t\t\t\t\t// Text or comment node, skip to next sibling\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(scripts && node.nodeName.toLowerCase() == \"script\"){\n\t\t\t\t\t// Save <script type=\"dojo/...\"> for parent, then continue to next sibling\n\t\t\t\t\ttype = node.getAttribute(\"type\");\n\t\t\t\t\tif(type && /^dojo\\/\\w/i.test(type)){\n\t\t\t\t\t\tscripts.push(node);\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(scriptsOnly){\n\t\t\t\t\t// scriptsOnly flag is set, we have already collected scripts if the parent wants them, so now we shouldn't\n\t\t\t\t\t// continue further analysis of the node and will continue to the next sibling\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Check for data-dojo-type attribute, fallback to backward compatible dojoType\n\t\t\t\t// TODO: Remove dojoType in 2.0\n\t\t\t\tvar type = node.getAttribute(dataDojoType) || node.getAttribute(dojoType);\n\n\t\t\t\t// Short circuit for leaf nodes containing nothing [but text]\n\t\t\t\tvar firstChild = node.firstChild;\n\t\t\t\tif(!type && (!firstChild || (firstChild.nodeType == 3 && !firstChild.nextSibling))){\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Meta data about current node\n\t\t\t\tvar current;\n\n\t\t\t\tvar ctor = null;\n\t\t\t\tif(type){\n\t\t\t\t\t// If dojoType/data-dojo-type specified, add to output array of nodes to instantiate.\n\t\t\t\t\tvar mixinsValue = node.getAttribute(dataDojoMixins),\n\t\t\t\t\t\ttypes = mixinsValue ? [type].concat(mixinsValue.split(/\\s*,\\s*/)) : [type];\n\n\t\t\t\t\t// Note: won't find classes declared via dojo/Declaration or any modules that haven't been\n\t\t\t\t\t// loaded yet so use try/catch to avoid throw from require()\n\t\t\t\t\ttry{\n\t\t\t\t\t\tctor = getCtor(types, options.contextRequire);\n\t\t\t\t\t}catch(e){}\n\n\t\t\t\t\t// If the constructor was not found, check to see if it has modules that can be loaded\n\t\t\t\t\tif(!ctor){\n\t\t\t\t\t\tdarray.forEach(types, function(t){\n\t\t\t\t\t\t\tif(~t.indexOf('/') && !midsHash[t]){\n\t\t\t\t\t\t\t\t// If the type looks like a MID and it currently isn't in the array of MIDs to load, add it.\n\t\t\t\t\t\t\t\tmidsHash[t] = true;\n\t\t\t\t\t\t\t\tmids[mids.length] = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tvar childScripts = ctor && !ctor.prototype._noScript ? [] : null; // <script> nodes that are parent's children\n\n\t\t\t\t\t// Setup meta data about this widget node, and save it to list of nodes to instantiate\n\t\t\t\t\tcurrent = {\n\t\t\t\t\t\ttypes: types,\n\t\t\t\t\t\tctor: ctor,\n\t\t\t\t\t\tparent: parent,\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\tscripts: childScripts\n\t\t\t\t\t};\n\t\t\t\t\tcurrent.inherited = getEffective(current); // dir & lang settings for current node, explicit or inherited\n\t\t\t\t\tlist.push(current);\n\t\t\t\t}else{\n\t\t\t\t\t// Meta data about this non-widget node\n\t\t\t\t\tcurrent = {\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\tscripts: scripts,\n\t\t\t\t\t\tparent: parent\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Recurse, collecting <script type=\"dojo/...\"> children, and also looking for\n\t\t\t\t// descendant nodes with dojoType specified (unless the widget has the stopParser flag).\n\t\t\t\t// When finished with children, go to my next sibling.\n\t\t\t\tscripts = childScripts;\n\t\t\t\tscriptsOnly = node.stopParser || (ctor && ctor.prototype.stopParser && !(options.template));\n\t\t\t\tparent = current;\n\t\t\t\tnode = firstChild;\n\t\t\t}\n\n\t\t\tvar d = new Deferred();\n\n\t\t\t// If there are modules to load then require them in\n\t\t\tif(mids.length){\n\t\t\t\t// Warn that there are modules being auto-required\n\t\t\t\tif(has(\"dojo-debug-messages\")){\n\t\t\t\t\tconsole.warn(\"WARNING: Modules being Auto-Required: \" + mids.join(\", \"));\n\t\t\t\t}\n\t\t\t\tvar r = options.contextRequire || require;\n\t\t\t\tr(mids, function(){\n\t\t\t\t\t// Go through list of widget nodes, filling in missing constructors, and filtering out nodes that shouldn't\n\t\t\t\t\t// be instantiated due to a stopParser flag on an ancestor that we belatedly learned about due to\n\t\t\t\t\t// auto-require of a module like ContentPane.   Assumes list is in DFS order.\n\t\t\t\t\td.resolve(darray.filter(list, function(widget){\n\t\t\t\t\t\tif(!widget.ctor){\n\t\t\t\t\t\t\t// Attempt to find the constructor again.   Still won't find classes defined via\n\t\t\t\t\t\t\t// dijit/Declaration so need to try/catch.\n\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\twidget.ctor = getCtor(widget.types, options.contextRequire);\n\t\t\t\t\t\t\t}catch(e){}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Get the parent widget\n\t\t\t\t\t\tvar parent = widget.parent;\n\t\t\t\t\t\twhile(parent && !parent.types){\n\t\t\t\t\t\t\tparent = parent.parent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Return false if this node should be skipped due to stopParser on an ancestor.\n\t\t\t\t\t\t// Since list[] is in DFS order, this loop will always set parent.instantiateChildren before\n\t\t\t\t\t\t// trying to compute widget.instantiate.\n\t\t\t\t\t\tvar proto = widget.ctor && widget.ctor.prototype;\n\t\t\t\t\t\twidget.instantiateChildren = !(proto && proto.stopParser && !(options.template));\n\t\t\t\t\t\twidget.instantiate = !parent || (parent.instantiate && parent.instantiateChildren);\n\t\t\t\t\t\treturn widget.instantiate;\n\t\t\t\t\t}));\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\t// There were no modules to load, so just resolve with the parsed nodes.   This separate code path is for\n\t\t\t\t// efficiency, to avoid running the require() and the callback code above.\n\t\t\t\td.resolve(list);\n\t\t\t}\n\n\t\t\t// Return the promise\n\t\t\treturn d.promise;\n\t\t},\n\n\t\t_require: function(/*DOMNode*/ script, /*Object?*/ options){\n\t\t\t// summary:\n\t\t\t//\t\tHelper for _scanAMD().  Takes a `<script type=dojo/require>bar: \"acme/bar\", ...</script>` node,\n\t\t\t//\t\tcalls require() to load the specified modules and (asynchronously) assign them to the specified global\n\t\t\t//\t\tvariables, and returns a Promise for when that operation completes.\n\t\t\t//\n\t\t\t//\t\tIn the example above, it is effectively doing a require([\"acme/bar\", ...], function(a){ bar = a; }).\n\n\t\t\tvar hash = myEval(\"{\" + script.innerHTML + \"}\"), // can't use dojo/json::parse() because maybe no quotes\n\t\t\t\tvars = [],\n\t\t\t\tmids = [],\n\t\t\t\td = new Deferred();\n\n\t\t\tvar contextRequire = (options && options.contextRequire) || require;\n\n\t\t\tfor(var name in hash){\n\t\t\t\tvars.push(name);\n\t\t\t\tmids.push(hash[name]);\n\t\t\t}\n\n\t\t\tcontextRequire(mids, function(){\n\t\t\t\tfor(var i = 0; i < vars.length; i++){\n\t\t\t\t\tdlang.setObject(vars[i], arguments[i]);\n\t\t\t\t}\n\t\t\t\td.resolve(arguments);\n\t\t\t});\n\n\t\t\treturn d.promise;\n\t\t},\n\n\t\t_scanAmd: function(root, options){\n\t\t\t// summary:\n\t\t\t//\t\tScans the DOM for any declarative requires and returns their values.\n\t\t\t// description:\n\t\t\t//\t\tLooks for `<script type=dojo/require>bar: \"acme/bar\", ...</script>` node, calls require() to load the\n\t\t\t//\t\tspecified modules and (asynchronously) assign them to the specified global variables,\n\t\t\t//\t\tand returns a Promise for when those operations complete.\n\t\t\t// root: DomNode\n\t\t\t//\t\tThe node to base the scan from.\n\t\t\t// options: Object?\n\t\t\t//\t\ta kwArgs options object, see parse() for details\n\n\t\t\t// Promise that resolves when all the <script type=dojo/require> nodes have finished loading.\n\t\t\tvar deferred = new Deferred(),\n\t\t\t\tpromise = deferred.promise;\n\t\t\tdeferred.resolve(true);\n\n\t\t\tvar self = this;\n\t\t\tquery(\"script[type='dojo/require']\", root).forEach(function(node){\n\t\t\t\t// Fire off require() call for specified modules.  Chain this require to fire after\n\t\t\t\t// any previous requires complete, so that layers can be loaded before individual module require()'s fire.\n\t\t\t\tpromise = promise.then(function(){\n\t\t\t\t\treturn self._require(node, options);\n\t\t\t\t});\n\n\t\t\t\t// Remove from DOM so it isn't seen again\n\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t});\n\n\t\t\treturn promise;\n\t\t},\n\n\t\tparse: function(rootNode, options){\n\t\t\t// summary:\n\t\t\t//\t\tScan the DOM for class instances, and instantiate them.\n\t\t\t// description:\n\t\t\t//\t\tSearch specified node (or root node) recursively for class instances,\n\t\t\t//\t\tand instantiate them. Searches for either data-dojo-type=\"Class\" or\n\t\t\t//\t\tdojoType=\"Class\" where \"Class\" is a a fully qualified class name,\n\t\t\t//\t\tlike `dijit/form/Button`\n\t\t\t//\n\t\t\t//\t\tUsing `data-dojo-type`:\n\t\t\t//\t\tAttributes using can be mixed into the parameters used to instantiate the\n\t\t\t//\t\tClass by using a `data-dojo-props` attribute on the node being converted.\n\t\t\t//\t\t`data-dojo-props` should be a string attribute to be converted from JSON.\n\t\t\t//\n\t\t\t//\t\tUsing `dojoType`:\n\t\t\t//\t\tAttributes are read from the original domNode and converted to appropriate\n\t\t\t//\t\ttypes by looking up the Class prototype values. This is the default behavior\n\t\t\t//\t\tfrom Dojo 1.0 to Dojo 1.5. `dojoType` support is deprecated, and will\n\t\t\t//\t\tgo away in Dojo 2.0.\n\t\t\t// rootNode: DomNode?\n\t\t\t//\t\tA default starting root node from which to start the parsing. Can be\n\t\t\t//\t\tomitted, defaulting to the entire document. If omitted, the `options`\n\t\t\t//\t\tobject can be passed in this place. If the `options` object has a\n\t\t\t//\t\t`rootNode` member, that is used.\n\t\t\t// options: Object?\n\t\t\t//\t\tA hash of options.\n\t\t\t//\n\t\t\t//\t\t- noStart: Boolean?:\n\t\t\t//\t\t\twhen set will prevent the parser from calling .startup()\n\t\t\t//\t\t\twhen locating the nodes.\n\t\t\t//\t\t- rootNode: DomNode?:\n\t\t\t//\t\t\tidentical to the function's `rootNode` argument, though\n\t\t\t//\t\t\tallowed to be passed in via this `options object.\n\t\t\t//\t\t- template: Boolean:\n\t\t\t//\t\t\tIf true, ignores ContentPane's stopParser flag and parses contents inside of\n\t\t\t//\t\t\ta ContentPane inside of a template.   This allows dojoAttachPoint on widgets/nodes\n\t\t\t//\t\t\tnested inside the ContentPane to work.\n\t\t\t//\t\t- inherited: Object:\n\t\t\t//\t\t\tHash possibly containing dir and lang settings to be applied to\n\t\t\t//\t\t\tparsed widgets, unless there's another setting on a sub-node that overrides\n\t\t\t//\t\t- scope: String:\n\t\t\t//\t\t\tRoot for attribute names to search for.   If scopeName is dojo,\n\t\t\t//\t\t\twill search for data-dojo-type (or dojoType).   For backwards compatibility\n\t\t\t//\t\t\treasons defaults to dojo._scopeName (which is \"dojo\" except when\n\t\t\t//\t\t\tmulti-version support is used, when it will be something like dojo16, dojo20, etc.)\n\t\t\t//\t\t- propsThis: Object:\n\t\t\t//\t\t\tIf specified, \"this\" referenced from data-dojo-props will refer to propsThis.\n\t\t\t//\t\t\tIntended for use from the widgets-in-template feature of `dijit._WidgetsInTemplateMixin`\n\t\t\t//\t\t- contextRequire: Function:\n\t\t\t//\t\t\tIf specified, this require is utilised for looking resolving modules instead of the\n\t\t\t//\t\t\t`dojo/parser` context `require()`.  Intended for use from the widgets-in-template feature of\n\t\t\t//\t\t\t`dijit._WidgetsInTemplateMixin`.\n\t\t\t// returns: Mixed\n\t\t\t//\t\tReturns a blended object that is an array of the instantiated objects, but also can include\n\t\t\t//\t\ta promise that is resolved with the instantiated objects.  This is done for backwards\n\t\t\t//\t\tcompatibility.  If the parser auto-requires modules, it will always behave in a promise\n\t\t\t//\t\tfashion and `parser.parse().then(function(instances){...})` should be used.\n\t\t\t// example:\n\t\t\t//\t\tParse all widgets on a page:\n\t\t\t//\t|\t\tparser.parse();\n\t\t\t// example:\n\t\t\t//\t\tParse all classes within the node with id=\"foo\"\n\t\t\t//\t|\t\tparser.parse(dojo.byId('foo'));\n\t\t\t// example:\n\t\t\t//\t\tParse all classes in a page, but do not call .startup() on any\n\t\t\t//\t\tchild\n\t\t\t//\t|\t\tparser.parse({ noStart: true })\n\t\t\t// example:\n\t\t\t//\t\tParse all classes in a node, but do not call .startup()\n\t\t\t//\t|\t\tparser.parse(someNode, { noStart:true });\n\t\t\t//\t|\t\t// or\n\t\t\t//\t|\t\tparser.parse({ noStart:true, rootNode: someNode });\n\n\t\t\t// determine the root node and options based on the passed arguments.\n\t\t\tif(rootNode && typeof rootNode != \"string\" && !(\"nodeType\" in rootNode)){\n\t\t\t\t// If called as parse(options) rather than parse(), parse(rootNode), or parse(rootNode, options)...\n\t\t\t\toptions = rootNode;\n\t\t\t\trootNode = options.rootNode;\n\t\t\t}\n\t\t\tvar root = rootNode ? dom.byId(rootNode) : dwindow.body();\n\t\t\toptions = options || {};\n\n\t\t\tvar mixin = options.template ? { template: true } : {},\n\t\t\t\tinstances = [],\n\t\t\t\tself = this;\n\n\t\t\t// First scan for any <script type=dojo/require> nodes, and execute.\n\t\t\t// Then scan for all nodes with data-dojo-type, and load any unloaded modules.\n\t\t\t// Then build the object instances.  Add instances to already existing (but empty) instances[] array,\n\t\t\t// which may already have been returned to caller.  Also, use otherwise to collect and throw any errors\n\t\t\t// that occur during the parse().\n\t\t\tvar p =\n\t\t\t\tthis._scanAmd(root, options).then(function(){\n\t\t\t\t\treturn self.scan(root, options);\n\t\t\t\t}).then(function(parsedNodes){\n\t\t\t\t\treturn self._instantiate(parsedNodes, mixin, options, true);\n\t\t\t\t}).then(function(_instances){\n\t\t\t\t\t// Copy the instances into the instances[] array we declared above, and are accessing as\n\t\t\t\t\t// our return value.\n\t\t\t\t\treturn instances = instances.concat(_instances);\n\t\t\t\t}).otherwise(function(e){\n\t\t\t\t\t// TODO Modify to follow better pattern for promise error management when available\n\t\t\t\t\tconsole.error(\"dojo/parser::parse() error\", e);\n\t\t\t\t\tthrow e;\n\t\t\t\t});\n\n\t\t\t// Blend the array with the promise\n\t\t\tdlang.mixin(instances, p);\n\t\t\treturn instances;\n\t\t}\n\t};\n\n\tif(has(\"extend-dojo\")){\n\t\tdojo.parser = parser;\n\t}\n\n\t// Register the parser callback. It should be the first callback\n\t// after the a11y test.\n\tif(config.parseOnLoad){\n\t\tready(100, parser, \"parse\");\n\t}\n\n\treturn parser;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dojox/node_modules/dojo/parser.js\n// module id = 366\n// module chunks = 4","define([\n\t\"../_base/array\",\n\t\"../Deferred\",\n\t\"../when\"\n], function(array, Deferred, when){\n\t\"use strict\";\n\n\t// module:\n\t//\t\tdojo/promise/all\n\n\tvar some = array.some;\n\n\treturn function all(objectOrArray){\n\t\t// summary:\n\t\t//\t\tTakes multiple promises and returns a new promise that is fulfilled\n\t\t//\t\twhen all promises have been resolved or one has been rejected.\n\t\t// description:\n\t\t//\t\tTakes multiple promises and returns a new promise that is fulfilled\n\t\t//\t\twhen all promises have been resolved or one has been rejected. If one of\n\t\t//\t\tthe promises is rejected, the returned promise is also rejected. Canceling\n\t\t//\t\tthe returned promise will *not* cancel any passed promises.\n\t\t// objectOrArray: Object|Array?\n\t\t//\t\tThe promise will be fulfilled with a list of results if invoked with an\n\t\t//\t\tarray, or an object of results when passed an object (using the same\n\t\t//\t\tkeys). If passed neither an object or array it is resolved with an\n\t\t//\t\tundefined value.\n\t\t// returns: dojo/promise/Promise\n\n\t\tvar object, array;\n\t\tif(objectOrArray instanceof Array){\n\t\t\tarray = objectOrArray;\n\t\t}else if(objectOrArray && typeof objectOrArray === \"object\"){\n\t\t\tobject = objectOrArray;\n\t\t}\n\n\t\tvar results;\n\t\tvar keyLookup = [];\n\t\tif(object){\n\t\t\tarray = [];\n\t\t\tfor(var key in object){\n\t\t\t\tif(Object.hasOwnProperty.call(object, key)){\n\t\t\t\t\tkeyLookup.push(key);\n\t\t\t\t\tarray.push(object[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresults = {};\n\t\t}else if(array){\n\t\t\tresults = [];\n\t\t}\n\n\t\tif(!array || !array.length){\n\t\t\treturn new Deferred().resolve(results);\n\t\t}\n\n\t\tvar deferred = new Deferred();\n\t\tdeferred.promise.always(function(){\n\t\t\tresults = keyLookup = null;\n\t\t});\n\t\tvar waiting = array.length;\n\t\tsome(array, function(valueOrPromise, index){\n\t\t\tif(!object){\n\t\t\t\tkeyLookup.push(index);\n\t\t\t}\n\t\t\twhen(valueOrPromise, function(value){\n\t\t\t\tif(!deferred.isFulfilled()){\n\t\t\t\t\tresults[keyLookup[index]] = value;\n\t\t\t\t\tif(--waiting === 0){\n\t\t\t\t\t\tdeferred.resolve(results);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, deferred.reject);\n\t\t\treturn deferred.isFulfilled();\n\t\t});\n\t\treturn deferred.promise;\t// dojo/promise/Promise\n\t};\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dojox/node_modules/dojo/promise/all.js\n// module id = 367\n// module chunks = 4","define([\"./kernel\"], function(dojo){\n\t// module:\n\t//\t\tdojo/url\n\n\tvar\n\t\tore = new RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?$\"),\n\t\tire = new RegExp(\"^((([^\\\\[:]+):)?([^@]+)@)?(\\\\[([^\\\\]]+)\\\\]|([^\\\\[:]*))(:([0-9]+))?$\"),\n\t\t_Url = function(){\n\t\t\tvar n = null,\n\t\t\t\t_a = arguments,\n\t\t\t\turi = [_a[0]];\n\t\t\t// resolve uri components relative to each other\n\t\t\tfor(var i = 1; i<_a.length; i++){\n\t\t\t\tif(!_a[i]){ continue; }\n\n\t\t\t\t// Safari doesn't support this.constructor so we have to be explicit\n\t\t\t\t// FIXME: Tracked (and fixed) in Webkit bug 3537.\n\t\t\t\t//\t\thttp://bugs.webkit.org/show_bug.cgi?id=3537\n\t\t\t\tvar relobj = new _Url(_a[i]+\"\"),\n\t\t\t\t\turiobj = new _Url(uri[0]+\"\");\n\n\t\t\t\tif(\n\t\t\t\t\trelobj.path == \"\" &&\n\t\t\t\t\t!relobj.scheme &&\n\t\t\t\t\t!relobj.authority &&\n\t\t\t\t\t!relobj.query\n\t\t\t\t){\n\t\t\t\t\tif(relobj.fragment != n){\n\t\t\t\t\t\turiobj.fragment = relobj.fragment;\n\t\t\t\t\t}\n\t\t\t\t\trelobj = uriobj;\n\t\t\t\t}else if(!relobj.scheme){\n\t\t\t\t\trelobj.scheme = uriobj.scheme;\n\n\t\t\t\t\tif(!relobj.authority){\n\t\t\t\t\t\trelobj.authority = uriobj.authority;\n\n\t\t\t\t\t\tif(relobj.path.charAt(0) != \"/\"){\n\t\t\t\t\t\t\tvar path = uriobj.path.substring(0,\n\t\t\t\t\t\t\t\turiobj.path.lastIndexOf(\"/\") + 1) + relobj.path;\n\n\t\t\t\t\t\t\tvar segs = path.split(\"/\");\n\t\t\t\t\t\t\tfor(var j = 0; j < segs.length; j++){\n\t\t\t\t\t\t\t\tif(segs[j] == \".\"){\n\t\t\t\t\t\t\t\t\t// flatten \"./\" references\n\t\t\t\t\t\t\t\t\tif(j == segs.length - 1){\n\t\t\t\t\t\t\t\t\t\tsegs[j] = \"\";\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tsegs.splice(j, 1);\n\t\t\t\t\t\t\t\t\t\tj--;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}else if(j > 0 && !(j == 1 && segs[0] == \"\") &&\n\t\t\t\t\t\t\t\t\tsegs[j] == \"..\" && segs[j-1] != \"..\"){\n\t\t\t\t\t\t\t\t\t// flatten \"../\" references\n\t\t\t\t\t\t\t\t\tif(j == (segs.length - 1)){\n\t\t\t\t\t\t\t\t\t\tsegs.splice(j, 1);\n\t\t\t\t\t\t\t\t\t\tsegs[j - 1] = \"\";\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tsegs.splice(j - 1, 2);\n\t\t\t\t\t\t\t\t\t\tj -= 2;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trelobj.path = segs.join(\"/\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\turi = [];\n\t\t\t\tif(relobj.scheme){\n\t\t\t\t\turi.push(relobj.scheme, \":\");\n\t\t\t\t}\n\t\t\t\tif(relobj.authority){\n\t\t\t\t\turi.push(\"//\", relobj.authority);\n\t\t\t\t}\n\t\t\t\turi.push(relobj.path);\n\t\t\t\tif(relobj.query){\n\t\t\t\t\turi.push(\"?\", relobj.query);\n\t\t\t\t}\n\t\t\t\tif(relobj.fragment){\n\t\t\t\t\turi.push(\"#\", relobj.fragment);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.uri = uri.join(\"\");\n\n\t\t\t// break the uri into its main components\n\t\t\tvar r = this.uri.match(ore);\n\n\t\t\tthis.scheme = r[2] || (r[1] ? \"\" : n);\n\t\t\tthis.authority = r[4] || (r[3] ? \"\" : n);\n\t\t\tthis.path = r[5]; // can never be undefined\n\t\t\tthis.query = r[7] || (r[6] ? \"\" : n);\n\t\t\tthis.fragment\t = r[9] || (r[8] ? \"\" : n);\n\n\t\t\tif(this.authority != n){\n\t\t\t\t// server based naming authority\n\t\t\t\tr = this.authority.match(ire);\n\n\t\t\t\tthis.user = r[3] || n;\n\t\t\t\tthis.password = r[4] || n;\n\t\t\t\tthis.host = r[6] || r[7]; // ipv6 || ipv4\n\t\t\t\tthis.port = r[9] || n;\n\t\t\t}\n\t\t};\n\t_Url.prototype.toString = function(){ return this.uri; };\n\n\treturn dojo._Url = _Url;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dojox/node_modules/dojo/_base/url.js\n// module id = 368\n// module chunks = 4","define([\"../_base/lang\", \"../_base/array\"], function(lang, array){\n\n// module:\n//\t\tdojo/date/stamp\n\nvar stamp = {\n\t// summary:\n\t//\t\tTODOC\n};\nlang.setObject(\"dojo.date.stamp\", stamp);\n\n// Methods to convert dates to or from a wire (string) format using well-known conventions\n\nstamp.fromISOString = function(/*String*/ formattedString, /*Number?*/ defaultTime){\n\t// summary:\n\t//\t\tReturns a Date object given a string formatted according to a subset of the ISO-8601 standard.\n\t//\n\t// description:\n\t//\t\tAccepts a string formatted according to a profile of ISO8601 as defined by\n\t//\t\t[RFC3339](http://www.ietf.org/rfc/rfc3339.txt), except that partial input is allowed.\n\t//\t\tCan also process dates as specified [by the W3C](http://www.w3.org/TR/NOTE-datetime)\n\t//\t\tThe following combinations are valid:\n\t//\n\t//\t\t- dates only\n\t//\t\t\t- yyyy\n\t//\t\t\t- yyyy-MM\n\t//\t\t\t- yyyy-MM-dd\n\t//\t\t- times only, with an optional time zone appended\n\t//\t\t\t- THH:mm\n\t//\t\t\t- THH:mm:ss\n\t//\t\t\t- THH:mm:ss.SSS\n\t//\t\t- and \"datetimes\" which could be any combination of the above\n\t//\n\t//\t\ttimezones may be specified as Z (for UTC) or +/- followed by a time expression HH:mm\n\t//\t\tAssumes the local time zone if not specified.  Does not validate.  Improperly formatted\n\t//\t\tinput may return null.  Arguments which are out of bounds will be handled\n\t//\t\tby the Date constructor (e.g. January 32nd typically gets resolved to February 1st)\n\t//\t\tOnly years between 100 and 9999 are supported.\n  \t// formattedString:\n\t//\t\tA string such as 2005-06-30T08:05:00-07:00 or 2005-06-30 or T08:05:00\n\t// defaultTime:\n\t//\t\tUsed for defaults for fields omitted in the formattedString.\n\t//\t\tUses 1970-01-01T00:00:00.0Z by default.\n\n\tif(!stamp._isoRegExp){\n\t\tstamp._isoRegExp =\n//TODO: could be more restrictive and check for 00-59, etc.\n\t\t\t/^(?:(\\d{4})(?:-(\\d{2})(?:-(\\d{2}))?)?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(.\\d+)?)?((?:[+-](\\d{2}):(\\d{2}))|Z)?)?$/;\n\t}\n\n\tvar match = stamp._isoRegExp.exec(formattedString),\n\t\tresult = null;\n\n\tif(match){\n\t\tmatch.shift();\n\t\tif(match[1]){match[1]--;} // Javascript Date months are 0-based\n\t\tif(match[6]){match[6] *= 1000;} // Javascript Date expects fractional seconds as milliseconds\n\n\t\tif(defaultTime){\n\t\t\t// mix in defaultTime.  Relatively expensive, so use || operators for the fast path of defaultTime === 0\n\t\t\tdefaultTime = new Date(defaultTime);\n\t\t\tarray.forEach(array.map([\"FullYear\", \"Month\", \"Date\", \"Hours\", \"Minutes\", \"Seconds\", \"Milliseconds\"], function(prop){\n\t\t\t\treturn defaultTime[\"get\" + prop]();\n\t\t\t}), function(value, index){\n\t\t\t\tmatch[index] = match[index] || value;\n\t\t\t});\n\t\t}\n\t\tresult = new Date(match[0]||1970, match[1]||0, match[2]||1, match[3]||0, match[4]||0, match[5]||0, match[6]||0); //TODO: UTC defaults\n\t\tif(match[0] < 100){\n\t\t\tresult.setFullYear(match[0] || 1970);\n\t\t}\n\n\t\tvar offset = 0,\n\t\t\tzoneSign = match[7] && match[7].charAt(0);\n\t\tif(zoneSign != 'Z'){\n\t\t\toffset = ((match[8] || 0) * 60) + (Number(match[9]) || 0);\n\t\t\tif(zoneSign != '-'){ offset *= -1; }\n\t\t}\n\t\tif(zoneSign){\n\t\t\toffset -= result.getTimezoneOffset();\n\t\t}\n\t\tif(offset){\n\t\t\tresult.setTime(result.getTime() + offset * 60000);\n\t\t}\n\t}\n\n\treturn result; // Date or null\n};\n\n/*=====\nvar __Options = {\n\t// selector: String\n\t//\t\t\"date\" or \"time\" for partial formatting of the Date object.\n\t//\t\tBoth date and time will be formatted by default.\n\t// zulu: Boolean\n\t//\t\tif true, UTC/GMT is used for a timezone\n\t// milliseconds: Boolean\n\t//\t\tif true, output milliseconds\n};\n=====*/\n\nstamp.toISOString = function(/*Date*/ dateObject, /*__Options?*/ options){\n\t// summary:\n\t//\t\tFormat a Date object as a string according a subset of the ISO-8601 standard\n\t//\n\t// description:\n\t//\t\tWhen options.selector is omitted, output follows [RFC3339](http://www.ietf.org/rfc/rfc3339.txt)\n\t//\t\tThe local time zone is included as an offset from GMT, except when selector=='time' (time without a date)\n\t//\t\tDoes not check bounds.  Only years between 100 and 9999 are supported.\n\t//\n\t// dateObject:\n\t//\t\tA Date object\n\n\tvar _ = function(n){ return (n < 10) ? \"0\" + n : n; };\n\toptions = options || {};\n\tvar formattedDate = [],\n\t\tgetter = options.zulu ? \"getUTC\" : \"get\",\n\t\tdate = \"\";\n\tif(options.selector != \"time\"){\n\t\tvar year = dateObject[getter+\"FullYear\"]();\n\t\tdate = [\"0000\".substr((year+\"\").length)+year, _(dateObject[getter+\"Month\"]()+1), _(dateObject[getter+\"Date\"]())].join('-');\n\t}\n\tformattedDate.push(date);\n\tif(options.selector != \"date\"){\n\t\tvar time = [_(dateObject[getter+\"Hours\"]()), _(dateObject[getter+\"Minutes\"]()), _(dateObject[getter+\"Seconds\"]())].join(':');\n\t\tvar millis = dateObject[getter+\"Milliseconds\"]();\n\t\tif(options.milliseconds){\n\t\t\ttime += \".\"+ (millis < 100 ? \"0\" : \"\") + _(millis);\n\t\t}\n\t\tif(options.zulu){\n\t\t\ttime += \"Z\";\n\t\t}else if(options.selector != \"time\"){\n\t\t\tvar timezoneOffset = dateObject.getTimezoneOffset();\n\t\t\tvar absOffset = Math.abs(timezoneOffset);\n\t\t\ttime += (timezoneOffset > 0 ? \"-\" : \"+\") +\n\t\t\t\t_(Math.floor(absOffset/60)) + \":\" + _(absOffset%60);\n\t\t}\n\t\tformattedDate.push(time);\n\t}\n\treturn formattedDate.join('T'); // String\n};\n\nreturn stamp;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dojox/node_modules/dojo/date/stamp.js\n// module id = 369\n// module chunks = 4","define([\"./_base/kernel\", \"./has\", \"./dom\", \"./on\", \"./_base/array\", \"./_base/lang\", \"./selector/_loader\", \"./selector/_loader!default\"],\n\tfunction(dojo, has, dom, on, array, lang, loader, defaultEngine){\n\n\t\"use strict\";\n\n\thas.add(\"array-extensible\", function(){\n\t\t// test to see if we can extend an array (not supported in old IE)\n\t\treturn lang.delegate([], {length: 1}).length == 1 && !has(\"bug-for-in-skips-shadowed\");\n\t});\n\t\n\tvar ap = Array.prototype, aps = ap.slice, apc = ap.concat, forEach = array.forEach;\n\n\tvar tnl = function(/*Array*/ a, /*dojo/NodeList?*/ parent, /*Function?*/ NodeListCtor){\n\t\t// summary:\n\t\t//\t\tdecorate an array to make it look like a `dojo/NodeList`.\n\t\t// a:\n\t\t//\t\tArray of nodes to decorate.\n\t\t// parent:\n\t\t//\t\tAn optional parent NodeList that generated the current\n\t\t//\t\tlist of nodes. Used to call _stash() so the parent NodeList\n\t\t//\t\tcan be accessed via end() later.\n\t\t// NodeListCtor:\n\t\t//\t\tAn optional constructor function to use for any\n\t\t//\t\tnew NodeList calls. This allows a certain chain of\n\t\t//\t\tNodeList calls to use a different object than dojo/NodeList.\n\t\tvar nodeList = new (NodeListCtor || this._NodeListCtor || nl)(a);\n\t\treturn parent ? nodeList._stash(parent) : nodeList;\n\t};\n\n\tvar loopBody = function(f, a, o){\n\t\ta = [0].concat(aps.call(a, 0));\n\t\to = o || dojo.global;\n\t\treturn function(node){\n\t\t\ta[0] = node;\n\t\t\treturn f.apply(o, a);\n\t\t};\n\t};\n\n\t// adapters\n\n\tvar adaptAsForEach = function(f, o){\n\t\t// summary:\n\t\t//\t\tadapts a single node function to be used in the forEach-type\n\t\t//\t\tactions. The initial object is returned from the specialized\n\t\t//\t\tfunction.\n\t\t// f: Function\n\t\t//\t\ta function to adapt\n\t\t// o: Object?\n\t\t//\t\tan optional context for f\n\t\treturn function(){\n\t\t\tthis.forEach(loopBody(f, arguments, o));\n\t\t\treturn this;\t// Object\n\t\t};\n\t};\n\n\tvar adaptAsMap = function(f, o){\n\t\t// summary:\n\t\t//\t\tadapts a single node function to be used in the map-type\n\t\t//\t\tactions. The return is a new array of values, as via `dojo/_base/array.map`\n\t\t// f: Function\n\t\t//\t\ta function to adapt\n\t\t// o: Object?\n\t\t//\t\tan optional context for f\n\t\treturn function(){\n\t\t\treturn this.map(loopBody(f, arguments, o));\n\t\t};\n\t};\n\n\tvar adaptAsFilter = function(f, o){\n\t\t// summary:\n\t\t//\t\tadapts a single node function to be used in the filter-type actions\n\t\t// f: Function\n\t\t//\t\ta function to adapt\n\t\t// o: Object?\n\t\t//\t\tan optional context for f\n\t\treturn function(){\n\t\t\treturn this.filter(loopBody(f, arguments, o));\n\t\t};\n\t};\n\n\tvar adaptWithCondition = function(f, g, o){\n\t\t// summary:\n\t\t//\t\tadapts a single node function to be used in the map-type\n\t\t//\t\tactions, behaves like forEach() or map() depending on arguments\n\t\t// f: Function\n\t\t//\t\ta function to adapt\n\t\t// g: Function\n\t\t//\t\ta condition function, if true runs as map(), otherwise runs as forEach()\n\t\t// o: Object?\n\t\t//\t\tan optional context for f and g\n\t\treturn function(){\n\t\t\tvar a = arguments, body = loopBody(f, a, o);\n\t\t\tif(g.call(o || dojo.global, a)){\n\t\t\t\treturn this.map(body);\t// self\n\t\t\t}\n\t\t\tthis.forEach(body);\n\t\t\treturn this;\t// self\n\t\t};\n\t};\n\n\tvar NodeList = function(array){\n\t\t// summary:\n\t\t//\t\tArray-like object which adds syntactic\n\t\t//\t\tsugar for chaining, common iteration operations, animation, and\n\t\t//\t\tnode manipulation. NodeLists are most often returned as the\n\t\t//\t\tresult of dojo/query() calls.\n\t\t// description:\n\t\t//\t\tNodeList instances provide many utilities that reflect\n\t\t//\t\tcore Dojo APIs for Array iteration and manipulation, DOM\n\t\t//\t\tmanipulation, and event handling. Instead of needing to dig up\n\t\t//\t\tfunctions in the dojo package, NodeLists generally make the\n\t\t//\t\tfull power of Dojo available for DOM manipulation tasks in a\n\t\t//\t\tsimple, chainable way.\n\t\t// example:\n\t\t//\t\tcreate a node list from a node\n\t\t//\t\t|\trequire([\"dojo/query\", \"dojo/dom\"\n\t\t//\t\t|\t], function(query, dom){\n\t\t//\t\t|\t\tquery.NodeList(dom.byId(\"foo\"));\n\t\t//\t\t|\t});\n\t\t// example:\n\t\t//\t\tget a NodeList from a CSS query and iterate on it\n\t\t//\t\t|\trequire([\"dojo/on\", \"dojo/dom\"\n\t\t//\t\t|\t], function(on, dom){\n\t\t//\t\t|\t\tvar l = query(\".thinger\");\n\t\t//\t\t|\t\tl.forEach(function(node, index, nodeList){\n\t\t//\t\t|\t\t\tconsole.log(index, node.innerHTML);\n\t\t//\t\t|\t\t});\n\t\t//\t\t|\t});\n\t\t// example:\n\t\t//\t\tuse native and Dojo-provided array methods to manipulate a\n\t\t//\t\tNodeList without needing to use dojo.* functions explicitly:\n\t\t//\t\t|\trequire([\"dojo/query\", \"dojo/dom-construct\", \"dojo/dom\"\n\t\t//\t\t|\t], function(query, domConstruct, dom){\n\t\t//\t\t|\t\tvar l = query(\".thinger\");\n\t\t//\t\t|\t\t// since NodeLists are real arrays, they have a length\n\t\t//\t\t|\t\t// property that is both readable and writable and\n\t\t//\t\t|\t\t// push/pop/shift/unshift methods\n\t\t//\t\t|\t\tconsole.log(l.length);\n\t\t//\t\t|\t\tl.push(domConstruct.create(\"span\"));\n\t\t//\t\t|\n\t\t//\t\t|\t\t// dojo's normalized array methods work too:\n\t\t//\t\t|\t\tconsole.log( l.indexOf(dom.byId(\"foo\")) );\n\t\t//\t\t|\t\t// ...including the special \"function as string\" shorthand\n\t\t//\t\t|\t\tconsole.log( l.every(\"item.nodeType == 1\") );\n\t\t//\t\t|\n\t\t//\t\t|\t\t// NodeLists can be [..] indexed, or you can use the at()\n\t\t//\t\t|\t\t// function to get specific items wrapped in a new NodeList:\n\t\t//\t\t|\t\tvar node = l[3]; // the 4th element\n\t\t//\t\t|\t\tvar newList = l.at(1, 3); // the 2nd and 4th elements\n\t\t//\t\t|\t});\n\t\t// example:\n\t\t//\t\tchainability is a key advantage of NodeLists:\n\t\t//\t\t|\trequire([\"dojo/query\", \"dojo/NodeList-dom\"\n\t\t//\t\t|\t], function(query){\n\t\t//\t\t|\t\tquery(\".thinger\")\n\t\t//\t\t|\t\t\t.onclick(function(e){ /* ... */ })\n\t\t//\t\t|\t\t\t.at(1, 3, 8) // get a subset\n\t\t//\t\t|\t\t\t\t.style(\"padding\", \"5px\")\n\t\t//\t\t|\t\t\t\t.forEach(console.log);\n\t\t//\t\t|\t});\n\n\t\tvar isNew = this instanceof nl && has(\"array-extensible\");\n\t\tif(typeof array == \"number\"){\n\t\t\tarray = Array(array);\n\t\t}\n\t\tvar nodeArray = (array && \"length\" in array) ? array : arguments;\n\t\tif(isNew || !nodeArray.sort){\n\t\t\t// make sure it's a real array before we pass it on to be wrapped \n\t\t\tvar target = isNew ? this : [],\n\t\t\t\tl = target.length = nodeArray.length;\n\t\t\tfor(var i = 0; i < l; i++){\n\t\t\t\ttarget[i] = nodeArray[i];\n\t\t\t}\n\t\t\tif(isNew){\n\t\t\t\t// called with new operator, this means we are going to use this instance and push\n\t\t\t\t// the nodes on to it. This is usually much faster since the NodeList properties\n\t\t\t\t//\tdon't need to be copied (unless the list of nodes is extremely large).\n\t\t\t\treturn target;\n\t\t\t}\n\t\t\tnodeArray = target;\n\t\t}\n\t\t// called without new operator, use a real array and copy prototype properties,\n\t\t// this is slower and exists for back-compat. Should be removed in 2.0.\n\t\tlang._mixin(nodeArray, nlp);\n\t\tnodeArray._NodeListCtor = function(array){\n\t\t\t// call without new operator to preserve back-compat behavior\n\t\t\treturn nl(array);\n\t\t};\n\t\treturn nodeArray;\n\t};\n\t\n\tvar nl = NodeList, nlp = nl.prototype = \n\t\thas(\"array-extensible\") ? [] : {};// extend an array if it is extensible\n\n\t// expose adapters and the wrapper as private functions\n\n\tnl._wrap = nlp._wrap = tnl;\n\tnl._adaptAsMap = adaptAsMap;\n\tnl._adaptAsForEach = adaptAsForEach;\n\tnl._adaptAsFilter  = adaptAsFilter;\n\tnl._adaptWithCondition = adaptWithCondition;\n\n\t// mass assignment\n\n\t// add array redirectors\n\tforEach([\"slice\", \"splice\"], function(name){\n\t\tvar f = ap[name];\n\t\t//Use a copy of the this array via this.slice() to allow .end() to work right in the splice case.\n\t\t// CANNOT apply ._stash()/end() to splice since it currently modifies\n\t\t// the existing this array -- it would break backward compatibility if we copy the array before\n\t\t// the splice so that we can use .end(). So only doing the stash option to this._wrap for slice.\n\t\tnlp[name] = function(){ return this._wrap(f.apply(this, arguments), name == \"slice\" ? this : null); };\n\t});\n\t// concat should be here but some browsers with native NodeList have problems with it\n\n\t// add array.js redirectors\n\tforEach([\"indexOf\", \"lastIndexOf\", \"every\", \"some\"], function(name){\n\t\tvar f = array[name];\n\t\tnlp[name] = function(){ return f.apply(dojo, [this].concat(aps.call(arguments, 0))); };\n\t});\n\n\tlang.extend(NodeList, {\n\t\t// copy the constructors\n\t\tconstructor: nl,\n\t\t_NodeListCtor: nl,\n\t\ttoString: function(){\n\t\t\t// Array.prototype.toString can't be applied to objects, so we use join\n\t\t\treturn this.join(\",\");\n\t\t},\n\t\t_stash: function(parent){\n\t\t\t// summary:\n\t\t\t//\t\tprivate function to hold to a parent NodeList. end() to return the parent NodeList.\n\t\t\t//\n\t\t\t// example:\n\t\t\t//\t\tHow to make a `dojo/NodeList` method that only returns the third node in\n\t\t\t//\t\tthe dojo/NodeList but allows access to the original NodeList by using this._stash:\n\t\t\t//\t|\trequire([\"dojo/query\", \"dojo/_base/lang\", \"dojo/NodeList\", \"dojo/NodeList-dom\"\n\t\t\t//\t|\t], function(query, lang){\n\t\t\t//\t|\t\tlang.extend(NodeList, {\n\t\t\t//\t|\t\t\tthird: function(){\n\t\t\t//\t|\t\t\t\tvar newNodeList = NodeList(this[2]);\n\t\t\t//\t|\t\t\t\treturn newNodeList._stash(this);\n\t\t\t//\t|\t\t\t}\n\t\t\t//\t|\t\t});\n\t\t\t//\t|\t\t// then see how _stash applies a sub-list, to be .end()'ed out of\n\t\t\t//\t|\t\tquery(\".foo\")\n\t\t\t//\t|\t\t\t.third()\n\t\t\t//\t|\t\t\t\t.addClass(\"thirdFoo\")\n\t\t\t//\t|\t\t\t.end()\n\t\t\t//\t|\t\t\t// access to the orig .foo list\n\t\t\t//\t|\t\t\t.removeClass(\"foo\")\n\t\t\t//\t|\t});\n\t\t\t//\n\t\t\tthis._parent = parent;\n\t\t\treturn this; // dojo/NodeList\n\t\t},\n\n\t\ton: function(eventName, listener){\n\t\t\t// summary:\n\t\t\t//\t\tListen for events on the nodes in the NodeList. Basic usage is:\n\t\t\t//\n\t\t\t// example:\n\t\t\t//\t\t|\trequire([\"dojo/query\"\n\t\t\t//\t\t|\t], function(query){\n\t\t\t//\t\t|\t\tquery(\".my-class\").on(\"click\", listener);\n\t\t\t//\t\t\tThis supports event delegation by using selectors as the first argument with the event names as\n\t\t\t//\t\t\tpseudo selectors. For example:\n\t\t\t//\t\t| \t\tquery(\"#my-list\").on(\"li:click\", listener);\n\t\t\t//\t\t\tThis will listen for click events within `<li>` elements that are inside the `#my-list` element.\n\t\t\t//\t\t\tBecause on supports CSS selector syntax, we can use comma-delimited events as well:\n\t\t\t//\t\t| \t\tquery(\"#my-list\").on(\"li button:mouseover, li:click\", listener);\n\t\t\t//\t\t|\t});\n\t\t\tvar handles = this.map(function(node){\n\t\t\t\treturn on(node, eventName, listener); // TODO: apply to the NodeList so the same selector engine is used for matches\n\t\t\t});\n\t\t\thandles.remove = function(){\n\t\t\t\tfor(var i = 0; i < handles.length; i++){\n\t\t\t\t\thandles[i].remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn handles;\n\t\t},\n\n\t\tend: function(){\n\t\t\t// summary:\n\t\t\t//\t\tEnds use of the current `NodeList` by returning the previous NodeList\n\t\t\t//\t\tthat generated the current NodeList.\n\t\t\t// description:\n\t\t\t//\t\tReturns the `NodeList` that generated the current `NodeList`. If there\n\t\t\t//\t\tis no parent NodeList, an empty NodeList is returned.\n\t\t\t// example:\n\t\t\t//\t|\trequire([\"dojo/query\", \"dojo/NodeList-dom\"\n\t\t\t//\t|\t], function(query){\n\t\t\t//\t|\t\tquery(\"a\")\n\t\t\t//\t|\t\t\t.filter(\".disabled\")\n\t\t\t//\t|\t\t\t\t// operate on the anchors that only have a disabled class\n\t\t\t//\t|\t\t\t\t.style(\"color\", \"grey\")\n\t\t\t//\t|\t\t\t.end()\n\t\t\t//\t|\t\t\t// jump back to the list of anchors\n\t\t\t//\t|\t\t\t.style(...)\n\t\t\t//\t|\t});\n\t\t\t//\n\t\t\tif(this._parent){\n\t\t\t\treturn this._parent;\n\t\t\t}else{\n\t\t\t\t//Just return empty list.\n\t\t\t\treturn new this._NodeListCtor(0);\n\t\t\t}\n\t\t},\n\n\t\t// http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Global_Objects:Array#Methods\n\n\t\t// FIXME: handle return values for #3244\n\t\t//\t\thttp://trac.dojotoolkit.org/ticket/3244\n\n\t\t// FIXME:\n\t\t//\t\tneed to wrap or implement:\n\t\t//\t\t\tjoin (perhaps w/ innerHTML/outerHTML overload for toString() of items?)\n\t\t//\t\t\treduce\n\t\t//\t\t\treduceRight\n\n\t\t/*=====\n\t\tslice: function(begin, end){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a new NodeList, maintaining this one in place\n\t\t\t// description:\n\t\t\t//\t\tThis method behaves exactly like the Array.slice method\n\t\t\t//\t\twith the caveat that it returns a `dojo/NodeList` and not a\n\t\t\t//\t\traw Array. For more details, see Mozilla's [slice\n\t\t\t//\t\tdocumentation](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/slice)\n\t\t\t// begin: Integer\n\t\t\t//\t\tCan be a positive or negative integer, with positive\n\t\t\t//\t\tintegers noting the offset to begin at, and negative\n\t\t\t//\t\tintegers denoting an offset from the end (i.e., to the left\n\t\t\t//\t\tof the end)\n\t\t\t// end: Integer?\n\t\t\t//\t\tOptional parameter to describe what position relative to\n\t\t\t//\t\tthe NodeList's zero index to end the slice at. Like begin,\n\t\t\t//\t\tcan be positive or negative.\n\t\t\treturn this._wrap(a.slice.apply(this, arguments));\n\t\t},\n\n\t\tsplice: function(index, howmany, item){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a new NodeList, manipulating this NodeList based on\n\t\t\t//\t\tthe arguments passed, potentially splicing in new elements\n\t\t\t//\t\tat an offset, optionally deleting elements\n\t\t\t// description:\n\t\t\t//\t\tThis method behaves exactly like the Array.splice method\n\t\t\t//\t\twith the caveat that it returns a `dojo/NodeList` and not a\n\t\t\t//\t\traw Array. For more details, see Mozilla's [splice\n\t\t\t//\t\tdocumentation](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice)\n\t\t\t//\t\tFor backwards compatibility, calling .end() on the spliced NodeList\n\t\t\t//\t\tdoes not return the original NodeList -- splice alters the NodeList in place.\n\t\t\t// index: Integer\n\t\t\t//\t\tbegin can be a positive or negative integer, with positive\n\t\t\t//\t\tintegers noting the offset to begin at, and negative\n\t\t\t//\t\tintegers denoting an offset from the end (i.e., to the left\n\t\t\t//\t\tof the end)\n\t\t\t// howmany: Integer?\n\t\t\t//\t\tOptional parameter to describe what position relative to\n\t\t\t//\t\tthe NodeList's zero index to end the slice at. Like begin,\n\t\t\t//\t\tcan be positive or negative.\n\t\t\t// item: Object...?\n\t\t\t//\t\tAny number of optional parameters may be passed in to be\n\t\t\t//\t\tspliced into the NodeList\n\t\t\treturn this._wrap(a.splice.apply(this, arguments));\t// dojo/NodeList\n\t\t},\n\n\t\tindexOf: function(value, fromIndex){\n\t\t\t// summary:\n\t\t\t//\t\tsee `dojo/_base/array.indexOf()`. The primary difference is that the acted-on\n\t\t\t//\t\tarray is implicitly this NodeList\n\t\t\t// value: Object\n\t\t\t//\t\tThe value to search for.\n\t\t\t// fromIndex: Integer?\n\t\t\t//\t\tThe location to start searching from. Optional. Defaults to 0.\n\t\t\t// description:\n\t\t\t//\t\tFor more details on the behavior of indexOf, see Mozilla's\n\t\t\t//\t\t[indexOf\n\t\t\t//\t\tdocs](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf)\n\t\t\t// returns:\n\t\t\t//\t\tPositive Integer or 0 for a match, -1 of not found.\n\t\t\treturn d.indexOf(this, value, fromIndex); // Integer\n\t\t},\n\n\t\tlastIndexOf: function(value, fromIndex){\n\t\t\t// summary:\n\t\t\t//\t\tsee `dojo/_base/array.lastIndexOf()`. The primary difference is that the\n\t\t\t//\t\tacted-on array is implicitly this NodeList\n\t\t\t// description:\n\t\t\t//\t\tFor more details on the behavior of lastIndexOf, see\n\t\t\t//\t\tMozilla's [lastIndexOf\n\t\t\t//\t\tdocs](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf)\n\t\t\t// value: Object\n\t\t\t//\t\tThe value to search for.\n\t\t\t// fromIndex: Integer?\n\t\t\t//\t\tThe location to start searching from. Optional. Defaults to 0.\n\t\t\t// returns:\n\t\t\t//\t\tPositive Integer or 0 for a match, -1 of not found.\n\t\t\treturn d.lastIndexOf(this, value, fromIndex); // Integer\n\t\t},\n\n\t\tevery: function(callback, thisObject){\n\t\t\t// summary:\n\t\t\t//\t\tsee `dojo/_base/array.every()` and the [Array.every\n\t\t\t//\t\tdocs](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every).\n\t\t\t//\t\tTakes the same structure of arguments and returns as\n\t\t\t//\t\tdojo/_base/array.every() with the caveat that the passed array is\n\t\t\t//\t\timplicitly this NodeList\n\t\t\t// callback: Function\n\t\t\t//\t\tthe callback\n\t\t\t// thisObject: Object?\n\t\t\t//\t\tthe context\n\t\t\treturn d.every(this, callback, thisObject); // Boolean\n\t\t},\n\n\t\tsome: function(callback, thisObject){\n\t\t\t// summary:\n\t\t\t//\t\tTakes the same structure of arguments and returns as\n\t\t\t//\t\t`dojo/_base/array.some()` with the caveat that the passed array is\n\t\t\t//\t\timplicitly this NodeList.  See `dojo/_base/array.some()` and Mozilla's\n\t\t\t//\t\t[Array.some\n\t\t\t//\t\tdocumentation](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some).\n\t\t\t// callback: Function\n\t\t\t//\t\tthe callback\n\t\t\t// thisObject: Object?\n\t\t\t//\t\tthe context\n\t\t\treturn d.some(this, callback, thisObject); // Boolean\n\t\t},\n\t\t=====*/\n\n\t\tconcat: function(item){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a new NodeList comprised of items in this NodeList\n\t\t\t//\t\tas well as items passed in as parameters\n\t\t\t// description:\n\t\t\t//\t\tThis method behaves exactly like the Array.concat method\n\t\t\t//\t\twith the caveat that it returns a `NodeList` and not a\n\t\t\t//\t\traw Array. For more details, see the [Array.concat\n\t\t\t//\t\tdocs](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/concat)\n\t\t\t// item: Object?\n\t\t\t//\t\tAny number of optional parameters may be passed in to be\n\t\t\t//\t\tspliced into the NodeList\n\n\t\t\t//return this._wrap(apc.apply(this, arguments));\n\t\t\t// the line above won't work for the native NodeList, or for Dojo NodeLists either :-(\n\n\t\t\t// implementation notes:\n\t\t\t// Array.concat() doesn't recognize native NodeLists or Dojo NodeLists\n\t\t\t// as arrays, and so does not inline them into a unioned array, but\n\t\t\t// appends them as single entities. Both the original NodeList and the\n\t\t\t// items passed in as parameters must be converted to raw Arrays\n\t\t\t// and then the concatenation result may be re-_wrap()ed as a Dojo NodeList.\n\n\t\t\tvar t = aps.call(this, 0),\n\t\t\t\tm = array.map(arguments, function(a){\n\t\t\t\t\treturn aps.call(a, 0);\n\t\t\t\t});\n\t\t\treturn this._wrap(apc.apply(t, m), this);\t// dojo/NodeList\n\t\t},\n\n\t\tmap: function(/*Function*/ func, /*Function?*/ obj){\n\t\t\t// summary:\n\t\t\t//\t\tsee `dojo/_base/array.map()`. The primary difference is that the acted-on\n\t\t\t//\t\tarray is implicitly this NodeList and the return is a\n\t\t\t//\t\tNodeList (a subclass of Array)\n\t\t\treturn this._wrap(array.map(this, func, obj), this); // dojo/NodeList\n\t\t},\n\n\t\tforEach: function(callback, thisObj){\n\t\t\t// summary:\n\t\t\t//\t\tsee `dojo/_base/array.forEach()`. The primary difference is that the acted-on\n\t\t\t//\t\tarray is implicitly this NodeList. If you want the option to break out\n\t\t\t//\t\tof the forEach loop, use every() or some() instead.\n\t\t\tforEach(this, callback, thisObj);\n\t\t\t// non-standard return to allow easier chaining\n\t\t\treturn this; // dojo/NodeList\n\t\t},\n\t\tfilter: function(/*String|Function*/ filter){\n\t\t\t// summary:\n\t\t\t//\t\t\"masks\" the built-in javascript filter() method (supported\n\t\t\t//\t\tin Dojo via `dojo/_base/array.filter`) to support passing a simple\n\t\t\t//\t\tstring filter in addition to supporting filtering function\n\t\t\t//\t\tobjects.\n\t\t\t// filter:\n\t\t\t//\t\tIf a string, a CSS rule like \".thinger\" or \"div > span\".\n\t\t\t// example:\n\t\t\t//\t\t\"regular\" JS filter syntax as exposed in `dojo/_base/array.filter`:\n\t\t\t//\t\t|\trequire([\"dojo/query\", \"dojo/NodeList-dom\"\n\t\t\t//\t\t|\t], function(query){\n\t\t\t//\t\t|\t\tquery(\"*\").filter(function(item){\n\t\t\t//\t\t|\t\t\t// highlight every paragraph\n\t\t\t//\t\t|\t\t\treturn (item.nodeName == \"p\");\n\t\t\t//\t\t|\t\t}).style(\"backgroundColor\", \"yellow\");\n\t\t\t//\t\t|\t});\n\t\t\t// example:\n\t\t\t//\t\tthe same filtering using a CSS selector\n\t\t\t//\t\t|\trequire([\"dojo/query\", \"dojo/NodeList-dom\"\n\t\t\t//\t\t|\t], function(query){\n\t\t\t//\t\t|\t\tquery(\"*\").filter(\"p\").styles(\"backgroundColor\", \"yellow\");\n\t\t\t//\t\t|\t});\n\n\t\t\tvar a = arguments, items = this, start = 0;\n\t\t\tif(typeof filter == \"string\"){ // inline'd type check\n\t\t\t\titems = query._filterResult(this, a[0]);\n\t\t\t\tif(a.length == 1){\n\t\t\t\t\t// if we only got a string query, pass back the filtered results\n\t\t\t\t\treturn items._stash(this); // dojo/NodeList\n\t\t\t\t}\n\t\t\t\t// if we got a callback, run it over the filtered items\n\t\t\t\tstart = 1;\n\t\t\t}\n\t\t\treturn this._wrap(array.filter(items, a[start], a[start + 1]), this);\t// dojo/NodeList\n\t\t},\n\t\tinstantiate: function(/*String|Object*/ declaredClass, /*Object?*/ properties){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a new instance of a specified class, using the\n\t\t\t//\t\tspecified properties and each node in the NodeList as a\n\t\t\t//\t\tsrcNodeRef.\n\t\t\t// example:\n\t\t\t//\t\tGrabs all buttons in the page and converts them to dijit/form/Button's.\n\t\t\t//\t|\tvar buttons = query(\"button\").instantiate(Button, {showLabel: true});\n\t\t\tvar c = lang.isFunction(declaredClass) ? declaredClass : lang.getObject(declaredClass);\n\t\t\tproperties = properties || {};\n\t\t\treturn this.forEach(function(node){\n\t\t\t\tnew c(properties, node);\n\t\t\t});\t// dojo/NodeList\n\t\t},\n\t\tat: function(/*===== index =====*/){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a new NodeList comprised of items in this NodeList\n\t\t\t//\t\tat the given index or indices.\n\t\t\t//\n\t\t\t// index: Integer...\n\t\t\t//\t\tOne or more 0-based indices of items in the current\n\t\t\t//\t\tNodeList. A negative index will start at the end of the\n\t\t\t//\t\tlist and go backwards.\n\t\t\t//\n\t\t\t// example:\n\t\t\t//\tShorten the list to the first, second, and third elements\n\t\t\t//\t|\trequire([\"dojo/query\"\n\t\t\t//\t|\t], function(query){\n\t\t\t//\t|\t\tquery(\"a\").at(0, 1, 2).forEach(fn);\n\t\t\t//\t|\t});\n\t\t\t//\n\t\t\t// example:\n\t\t\t//\tRetrieve the first and last elements of a unordered list:\n\t\t\t//\t|\trequire([\"dojo/query\"\n\t\t\t//\t|\t], function(query){\n\t\t\t//\t|\t\tquery(\"ul > li\").at(0, -1).forEach(cb);\n\t\t\t//\t|\t});\n\t\t\t//\n\t\t\t// example:\n\t\t\t//\tDo something for the first element only, but end() out back to\n\t\t\t//\tthe original list and continue chaining:\n\t\t\t//\t|\trequire([\"dojo/query\"\n\t\t\t//\t|\t], function(query){\n\t\t\t//\t|\t\tquery(\"a\").at(0).onclick(fn).end().forEach(function(n){\n\t\t\t//\t|\t\t\tconsole.log(n); // all anchors on the page.\n\t\t\t//\t|\t})\n\t\t\t//\t|\t});\n\n\t\t\tvar t = new this._NodeListCtor(0);\n\t\t\tforEach(arguments, function(i){\n\t\t\t\tif(i < 0){ i = this.length + i; }\n\t\t\t\tif(this[i]){ t.push(this[i]); }\n\t\t\t}, this);\n\t\t\treturn t._stash(this); // dojo/NodeList\n\t\t}\n\t});\n\n\tfunction queryForEngine(engine, NodeList){\n\t\tvar query = function(/*String*/ query, /*String|DOMNode?*/ root){\n\t\t\t// summary:\n\t\t\t//\t\tReturns nodes which match the given CSS selector, searching the\n\t\t\t//\t\tentire document by default but optionally taking a node to scope\n\t\t\t//\t\tthe search by. Returns an instance of NodeList.\n\t\t\tif(typeof root == \"string\"){\n\t\t\t\troot = dom.byId(root);\n\t\t\t\tif(!root){\n\t\t\t\t\treturn new NodeList([]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar results = typeof query == \"string\" ? engine(query, root) : query ? (query.end && query.on) ? query : [query] : [];\n\t\t\tif(results.end && results.on){\n\t\t\t\t// already wrapped\n\t\t\t\treturn results;\n\t\t\t}\n\t\t\treturn new NodeList(results);\n\t\t};\n\t\tquery.matches = engine.match || function(node, selector, root){\n\t\t\t// summary:\n\t\t\t//\t\tTest to see if a node matches a selector\n\t\t\treturn query.filter([node], selector, root).length > 0;\n\t\t};\n\t\t// the engine provides a filtering function, use it to for matching\n\t\tquery.filter = engine.filter || function(nodes, selector, root){\n\t\t\t// summary:\n\t\t\t//\t\tFilters an array of nodes. Note that this does not guarantee to return a NodeList, just an array.\n\t\t\treturn query(selector, root).filter(function(node){\n\t\t\t\treturn array.indexOf(nodes, node) > -1;\n\t\t\t});\n\t\t};\n\t\tif(typeof engine != \"function\"){\n\t\t\tvar search = engine.search;\n\t\t\tengine = function(selector, root){\n\t\t\t\t// Slick does it backwards (or everyone else does it backwards, probably the latter)\n\t\t\t\treturn search(root || document, selector);\n\t\t\t};\n\t\t}\n\t\treturn query;\n\t}\n\tvar query = queryForEngine(defaultEngine, NodeList);\n\t/*=====\n\tquery = function(selector, context){\n\t\t// summary:\n\t\t//\t\tThis modules provides DOM querying functionality. The module export is a function\n\t\t//\t\tthat can be used to query for DOM nodes by CSS selector and returns a NodeList\n\t\t//\t\trepresenting the matching nodes.\n\t\t// selector: String\n\t\t//\t\tA CSS selector to search for.\n\t\t// context: String|DomNode?\n\t\t//\t\tAn optional context to limit the searching scope. Only nodes under `context` will be\n\t\t//\t\tscanned.\n\t\t// example:\n\t\t//\t\tadd an onclick handler to every submit button in the document\n\t\t//\t\twhich causes the form to be sent via Ajax instead:\n\t\t//\t|\trequire([\"dojo/query\", \"dojo/request\", \"dojo/dom-form\", \"dojo/dom-construct\", \"dojo/dom-style\"\n\t\t//\t|\t], function(query, request, domForm, domConstruct, domStyle){\n\t\t//\t|\t\tquery(\"input[type='submit']\").on(\"click\", function(e){\n\t\t//\t|\t\t\te.preventDefault(); // prevent sending the form\n\t\t//\t|\t\t\tvar btn = e.target;\n\t\t//\t|\t\t\trequest.post(\"http://example.com/\", {\n\t\t//\t|\t\t\t\tdata: domForm.toObject(btn.form)\n\t\t//\t|\t\t\t}).then(function(response){\n\t\t//\t|\t\t\t\t// replace the form with the response\n\t\t//\t|\t\t\t\tdomConstruct.create(div, {innerHTML: response}, btn.form, \"after\");\n\t\t//\t|\t\t\t\tdomStyle.set(btn.form, \"display\", \"none\");\n\t\t//\t|\t\t\t});\n\t\t//\t|\t\t});\n\t\t//\t|\t});\n\t\t//\n\t\t// description:\n\t\t//\t\tdojo/query is responsible for loading the appropriate query engine and wrapping\n\t\t//\t\tits results with a `NodeList`. You can use dojo/query with a specific selector engine\n\t\t//\t\tby using it as a plugin. For example, if you installed the sizzle package, you could\n\t\t//\t\tuse it as the selector engine with:\n\t\t//\t\t|\trequire([\"dojo/query!sizzle\"], function(query){\n\t\t//\t\t|\t\tquery(\"div\")...\n\t\t//\n\t\t//\t\tThe id after the ! can be a module id of the selector engine or one of the following values:\n\t\t//\n\t\t//\t\t- acme: This is the default engine used by Dojo base, and will ensure that the full\n\t\t//\t\tAcme engine is always loaded.\n\t\t//\n\t\t//\t\t- css2: If the browser has a native selector engine, this will be used, otherwise a\n\t\t//\t\tvery minimal lightweight selector engine will be loaded that can do simple CSS2 selectors\n\t\t//\t\t(by #id, .class, tag, and [name=value] attributes, with standard child or descendant (>)\n\t\t//\t\toperators) and nothing more.\n\t\t//\n\t\t//\t\t- css2.1: If the browser has a native selector engine, this will be used, otherwise the\n\t\t//\t\tfull Acme engine will be loaded.\n\t\t//\n\t\t//\t\t- css3: If the browser has a native selector engine with support for CSS3 pseudo\n\t\t//\t\tselectors (most modern browsers except IE8), this will be used, otherwise the\n\t\t//\t\tfull Acme engine will be loaded.\n\t\t//\n\t\t//\t\t- Or the module id of a selector engine can be used to explicitly choose the selector engine\n\t\t//\n\t\t//\t\tFor example, if you are using CSS3 pseudo selectors in module, you can specify that\n\t\t//\t\tyou will need support them with:\n\t\t//\t\t|\trequire([\"dojo/query!css3\"], function(query){\n\t\t//\t\t|\t\tquery('#t > h3:nth-child(odd)')...\n\t\t//\n\t\t//\t\tYou can also choose the selector engine/load configuration by setting the query-selector:\n\t\t//\t\tFor example:\n\t\t//\t\t|\t<script data-dojo-config=\"query-selector:'css3'\" src=\"dojo.js\"></script>\n\t\t//\n\t\treturn new NodeList(); // dojo/NodeList\n\t };\n\t =====*/\n\n\t// the query that is returned from this module is slightly different than dojo.query,\n\t// because dojo.query has to maintain backwards compatibility with returning a\n\t// true array which has performance problems. The query returned from the module\n\t// does not use true arrays, but rather inherits from Array, making it much faster to\n\t// instantiate.\n\tdojo.query = queryForEngine(defaultEngine, function(array){\n\t\t// call it without the new operator to invoke the back-compat behavior that returns a true array\n\t\treturn NodeList(array);\t// dojo/NodeList\n\t});\n\n\tquery.load = function(id, parentRequire, loaded){\n\t\t// summary:\n\t\t//\t\tcan be used as AMD plugin to conditionally load new query engine\n\t\t// example:\n\t\t//\t|\trequire([\"dojo/query!custom\"], function(qsa){\n\t\t//\t|\t\t// loaded selector/custom.js as engine\n\t\t//\t|\t\tqsa(\"#foobar\").forEach(...);\n\t\t//\t|\t});\n\t\tloader.load(id, parentRequire, function(engine){\n\t\t\tloaded(queryForEngine(engine, NodeList));\n\t\t});\n\t};\n\n\tdojo._filterQueryResult = query._filterResult = function(nodes, selector, root){\n\t\treturn new NodeList(query.filter(nodes, selector, root));\n\t};\n\tdojo.NodeList = query.NodeList = NodeList;\n\treturn query;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dojox/node_modules/dojo/query.js\n// module id = 370\n// module chunks = 4","define([\"../has\", \"require\"],\n\t\tfunction(has, require){\n\n\"use strict\";\nif (typeof document !== \"undefined\") {\n\tvar testDiv = document.createElement(\"div\");\n\thas.add(\"dom-qsa2.1\", !!testDiv.querySelectorAll);\n\thas.add(\"dom-qsa3\", function(){\n\t\t// test to see if we have a reasonable native selector engine available\n\t\ttry{\n\t\t\ttestDiv.innerHTML = \"<p class='TEST'></p>\"; // test kind of from sizzle\n\t\t\t// Safari can't handle uppercase or unicode characters when\n\t\t\t// in quirks mode, IE8 can't handle pseudos like :empty\n\t\t\treturn testDiv.querySelectorAll(\".TEST:empty\").length == 1;\n\t\t}catch(e){}\n\t});\n}\n\nvar fullEngine;\nvar acme = \"./acme\", lite = \"./lite\";\nreturn {\n\t// summary:\n\t//\t\tThis module handles loading the appropriate selector engine for the given browser\n\n\tload: function(id, parentRequire, loaded, config){\n\t\tif (config && config.isBuild) {\n\t\t\t//Indicate that the optimizer should not wait\n\t\t\t//for this resource any more and complete optimization.\n\t\t\t//This resource will be resolved dynamically during\n\t\t\t//run time in the web browser.\n\t\t\tloaded();\n\t\t\treturn;\n\t\t}\n\n\t\tvar req = require;\n\t\t// here we implement the default logic for choosing a selector engine\n\t\tid = id == \"default\" ? has(\"config-selectorEngine\") || \"css3\" : id;\n\t\tid = id == \"css2\" || id == \"lite\" ? lite :\n\t\t\t\tid == \"css2.1\" ? has(\"dom-qsa2.1\") ? lite : acme :\n\t\t\t\tid == \"css3\" ? has(\"dom-qsa3\") ? lite : acme :\n\t\t\t\tid == \"acme\" ? acme : (req = parentRequire) && id;\n\t\tif(id.charAt(id.length-1) == '?'){\n\t\t\tid = id.substring(0,id.length - 1);\n\t\t\tvar optionalLoad = true;\n\t\t}\n\t\t// the query engine is optional, only load it if a native one is not available or existing one has not been loaded\n\t\tif(optionalLoad && (has(\"dom-compliant-qsa\") || fullEngine)){\n\t\t\treturn loaded(fullEngine);\n\t\t}\n\t\t// load the referenced selector engine\n\t\treq([id], function(engine){\n\t\t\tif(id != \"./lite\"){\n\t\t\t\tfullEngine = engine;\n\t\t\t}\n\t\t\tloaded(engine);\n\t\t});\n\t}\n};\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dojox/node_modules/dojo/selector/_loader.js\n// module id = 371\n// module chunks = 4","define([\"../has\", \"../_base/kernel\"], function(has, dojo){\n\"use strict\";\n\nvar testDiv = document.createElement(\"div\");\nvar matchesSelector = testDiv.matches || testDiv.webkitMatchesSelector || testDiv.mozMatchesSelector || testDiv.msMatchesSelector || testDiv.oMatchesSelector;\nvar querySelectorAll = testDiv.querySelectorAll;\nvar unionSplit = /([^\\s,](?:\"(?:\\\\.|[^\"])+\"|'(?:\\\\.|[^'])+'|[^,])*)/g;\nhas.add(\"dom-matches-selector\", !!matchesSelector);\nhas.add(\"dom-qsa\", !!querySelectorAll); \n\n// this is a simple query engine. It has handles basic selectors, and for simple\n// common selectors is extremely fast\nvar liteEngine = function(selector, root){\n\t// summary:\n\t//\t\tA small lightweight query selector engine that implements CSS2.1 selectors\n\t//\t\tminus pseudo-classes and the sibling combinator, plus CSS3 attribute selectors\n\n\tif(combine && selector.indexOf(',') > -1){\n\t\treturn combine(selector, root);\n\t}\n\t// use the root's ownerDocument if provided, otherwise try to use dojo.doc. Note \n\t// that we don't use dojo/_base/window's doc to reduce dependencies, and \n\t// fallback to plain document if dojo.doc hasn't been defined (by dojo/_base/window).\n\t// presumably we will have a better way to do this in 2.0 \n\tvar doc = root ? root.ownerDocument || root : dojo.doc || document, \n\t\tmatch = (querySelectorAll ? \n\t\t\t/^([\\w]*)#([\\w\\-]+$)|^(\\.)([\\w\\-\\*]+$)|^(\\w+$)/ : // this one only matches on simple queries where we can beat qSA with specific methods\n\t\t\t/^([\\w]*)#([\\w\\-]+)(?:\\s+(.*))?$|(?:^|(>|.+\\s+))([\\w\\-\\*]+)(\\S*$)/) // this one matches parts of the query that we can use to speed up manual filtering\n\t\t\t.exec(selector);\n\troot = root || doc;\n\tif(match){\n\t\tvar isInsideDomTree = has('ie') === 8 && has('quirks')?\n\t\t\troot.nodeType === doc.nodeType:\n\t\t\troot.parentNode !== null && root.nodeType !== 9 && root.parentNode === doc;\n\n\t\t// fast path regardless of whether or not querySelectorAll exists\n\t\tif(match[2] && isInsideDomTree){\n\t\t\t// an #id\n\t\t\t// use dojo.byId if available as it fixes the id retrieval in IE, note that we can't use the dojo namespace in 2.0, but if there is a conditional module use, we will use that\n\t\t\tvar found = dojo.byId ? dojo.byId(match[2], doc) : doc.getElementById(match[2]);\n\t\t\tif(!found || (match[1] && match[1] != found.tagName.toLowerCase())){\n\t\t\t\t// if there is a tag qualifer and it doesn't match, no matches\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tif(root != doc){\n\t\t\t\t// there is a root element, make sure we are a child of it\n\t\t\t\tvar parent = found;\n\t\t\t\twhile(parent != root){\n\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t\tif(!parent){\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn match[3] ?\n\t\t\t\t\tliteEngine(match[3], found) \n\t\t\t\t\t: [found];\n\t\t}\n\t\tif(match[3] && root.getElementsByClassName){\n\t\t\t// a .class\n\t\t\treturn root.getElementsByClassName(match[4]);\n\t\t}\n\t\tvar found;\n\t\tif(match[5]){\n\t\t\t// a tag\n\t\t\tfound = root.getElementsByTagName(match[5]);\n\t\t\tif(match[4] || match[6]){\n\t\t\t\tselector = (match[4] || \"\") + match[6];\n\t\t\t}else{\n\t\t\t\t// that was the entirety of the query, return results\n\t\t\t\treturn found;\n\t\t\t}\n\t\t}\n\t}\n\tif(querySelectorAll){\n\t\t// qSA works strangely on Element-rooted queries\n\t\t// We can work around this by specifying an extra ID on the root\n\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n\t\t// IE 8 doesn't work on object elements\n\t\tif (root.nodeType === 1 && root.nodeName.toLowerCase() !== \"object\"){\t\t\t\t\n\t\t\treturn useRoot(root, selector, root.querySelectorAll);\n\t\t}else{\n\t\t\t// we can use the native qSA\n\t\t\treturn root.querySelectorAll(selector);\n\t\t}\n\t}else if(!found){\n\t\t// search all children and then filter\n\t\tfound = root.getElementsByTagName(\"*\");\n\t}\n\t// now we filter the nodes that were found using the matchesSelector\n\tvar results = [];\n\tfor(var i = 0, l = found.length; i < l; i++){\n\t\tvar node = found[i];\n\t\tif(node.nodeType == 1 && jsMatchesSelector(node, selector, root)){\n\t\t\t// keep the nodes that match the selector\n\t\t\tresults.push(node);\n\t\t}\n\t}\n\treturn results;\n};\nvar useRoot = function(context, query, method){\n\t// this function creates a temporary id so we can do rooted qSA queries, this is taken from sizzle\n\tvar oldContext = context,\n\t\told = context.getAttribute(\"id\"),\n\t\tnid = old || \"__dojo__\",\n\t\thasParent = context.parentNode,\n\t\trelativeHierarchySelector = /^\\s*[+~]/.test(query);\n\n\tif(relativeHierarchySelector && !hasParent){\n\t\treturn [];\n\t}\n\tif(!old){\n\t\tcontext.setAttribute(\"id\", nid);\n\t}else{\n\t\tnid = nid.replace(/'/g, \"\\\\$&\");\n\t}\n\tif(relativeHierarchySelector && hasParent){\n\t\tcontext = context.parentNode;\n\t}\n\tvar selectors = query.match(unionSplit);\n\tfor(var i = 0; i < selectors.length; i++){\n\t\tselectors[i] = \"[id='\" + nid + \"'] \" + selectors[i];\n\t}\n\tquery = selectors.join(\",\");\n\n\ttry{\n\t\treturn method.call(context, query);\n\t}finally{\n\t\tif(!old){\n\t\t\toldContext.removeAttribute(\"id\");\n\t\t}\n\t}\n};\n\nif(!has(\"dom-matches-selector\")){\n\tvar jsMatchesSelector = (function(){\n\t\t// a JS implementation of CSS selector matching, first we start with the various handlers\n\t\tvar caseFix = testDiv.tagName == \"div\" ? \"toLowerCase\" : \"toUpperCase\";\n\t\tvar selectorTypes = {\n\t\t\t\"\": function(tagName){\n\t\t\t\ttagName = tagName[caseFix]();\n\t\t\t\treturn function(node){\n\t\t\t\t\treturn node.tagName == tagName;\n\t\t\t\t};\n\t\t\t},\n\t\t\t\".\": function(className){\n\t\t\t\tvar classNameSpaced = ' ' + className + ' ';\n\t\t\t\treturn function(node){\n\t\t\t\t\treturn node.className.indexOf(className) > -1 && (' ' + node.className + ' ').indexOf(classNameSpaced) > -1;\n\t\t\t\t};\n\t\t\t},\n\t\t\t\"#\": function(id){\n\t\t\t\treturn function(node){\n\t\t\t\t\treturn node.id == id;\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\tvar attrComparators = {\n\t\t\t\"^=\": function(attrValue, value){\n\t\t\t\treturn attrValue.indexOf(value) == 0;\n\t\t\t},\n\t\t\t\"*=\": function(attrValue, value){\n\t\t\t\treturn attrValue.indexOf(value) > -1;\n\t\t\t},\n\t\t\t\"$=\": function(attrValue, value){\n\t\t\t\treturn attrValue.substring(attrValue.length - value.length, attrValue.length) == value;\n\t\t\t},\n\t\t\t\"~=\": function(attrValue, value){\n\t\t\t\treturn (' ' + attrValue + ' ').indexOf(' ' + value + ' ') > -1;\n\t\t\t},\n\t\t\t\"|=\": function(attrValue, value){\n\t\t\t\treturn (attrValue + '-').indexOf(value + '-') == 0;\n\t\t\t},\n\t\t\t\"=\": function(attrValue, value){\n\t\t\t\treturn attrValue == value;\n\t\t\t},\n\t\t\t\"\": function(attrValue, value){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tfunction attr(name, value, type){\n\t\t\tvar firstChar = value.charAt(0);\n\t\t\tif(firstChar == '\"' || firstChar == \"'\"){\n\t\t\t\t// it is quoted, remove the quotes\n\t\t\t\tvalue = value.slice(1, -1);\n\t\t\t}\n\t\t\tvalue = value.replace(/\\\\/g,'');\n\t\t\tvar comparator = attrComparators[type || \"\"];\n\t\t\treturn function(node){\n\t\t\t\tvar attrValue = node.getAttribute(name);\n\t\t\t\treturn attrValue && comparator(attrValue, value);\n\t\t\t};\n\t\t}\n\t\tfunction ancestor(matcher){\n\t\t\treturn function(node, root){\n\t\t\t\twhile((node = node.parentNode) != root){\n\t\t\t\t\tif(matcher(node, root)){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tfunction parent(matcher){\n\t\t\treturn function(node, root){\n\t\t\t\tnode = node.parentNode;\n\t\t\t\treturn matcher ? \n\t\t\t\t\tnode != root && matcher(node, root)\n\t\t\t\t\t: node == root;\n\t\t\t};\n\t\t}\n\t\tvar cache = {};\n\t\tfunction and(matcher, next){\n\t\t\treturn matcher ?\n\t\t\t\tfunction(node, root){\n\t\t\t\t\treturn next(node) && matcher(node, root);\n\t\t\t\t}\n\t\t\t\t: next;\n\t\t}\n\t\treturn function(node, selector, root){\n\t\t\t// this returns true or false based on if the node matches the selector (optionally within the given root)\n\t\t\tvar matcher = cache[selector]; // check to see if we have created a matcher function for the given selector\n\t\t\tif(!matcher){\n\t\t\t\t// create a matcher function for the given selector\n\t\t\t\t// parse the selectors\n\t\t\t\tif(selector.replace(/(?:\\s*([> ])\\s*)|(#|\\.)?((?:\\\\.|[\\w-])+)|\\[\\s*([\\w-]+)\\s*(.?=)?\\s*(\"(?:\\\\.|[^\"])+\"|'(?:\\\\.|[^'])+'|(?:\\\\.|[^\\]])*)\\s*\\]/g, function(t, combinator, type, value, attrName, attrType, attrValue){\n\t\t\t\t\tif(value){\n\t\t\t\t\t\tmatcher = and(matcher, selectorTypes[type || \"\"](value.replace(/\\\\/g, '')));\n\t\t\t\t\t}\n\t\t\t\t\telse if(combinator){\n\t\t\t\t\t\tmatcher = (combinator == \" \" ? ancestor : parent)(matcher);\n\t\t\t\t\t}\n\t\t\t\t\telse if(attrName){\n\t\t\t\t\t\tmatcher = and(matcher, attr(attrName, attrValue, attrType));\n\t\t\t\t\t}\n\t\t\t\t\treturn \"\";\n\t\t\t\t})){\n\t\t\t\t\tthrow new Error(\"Syntax error in query\");\n\t\t\t\t}\n\t\t\t\tif(!matcher){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tcache[selector] = matcher;\n\t\t\t}\n\t\t\t// now run the matcher function on the node\n\t\t\treturn matcher(node, root);\n\t\t};\n\t})();\n}\nif(!has(\"dom-qsa\")){\n\tvar combine = function(selector, root){\n\t\t// combined queries\n\t\tvar selectors = selector.match(unionSplit);\n\t\tvar indexed = [];\n\t\t// add all results and keep unique ones, this only runs in IE, so we take advantage \n\t\t// of known IE features, particularly sourceIndex which is unique and allows us to \n\t\t// order the results \n\t\tfor(var i = 0; i < selectors.length; i++){\n\t\t\tselector = new String(selectors[i].replace(/\\s*$/,''));\n\t\t\tselector.indexOf = escape; // keep it from recursively entering combine\n\t\t\tvar results = liteEngine(selector, root);\n\t\t\tfor(var j = 0, l = results.length; j < l; j++){\n\t\t\t\tvar node = results[j];\n\t\t\t\tindexed[node.sourceIndex] = node;\n\t\t\t}\n\t\t}\n\t\t// now convert from a sparse array to a dense array\n\t\tvar totalResults = [];\n\t\tfor(i in indexed){\n\t\t\ttotalResults.push(indexed[i]);\n\t\t}\n\t\treturn totalResults;\n\t};\n}\n\nliteEngine.match = matchesSelector ? function(node, selector, root){\n\tif(root && root.nodeType != 9){\n\t\t// doesn't support three args, use rooted id trick\n\t\treturn useRoot(root, selector, function(query){\n\t\t\treturn matchesSelector.call(node, query);\n\t\t});\n\t}\n\t// we have a native matchesSelector, use that\n\treturn matchesSelector.call(node, selector);\n} : jsMatchesSelector; // otherwise use the JS matches impl\n\nreturn liteEngine;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dojox/node_modules/dojo/selector/lite.js\n// module id = 372\n// module chunks = 4"],"sourceRoot":""}