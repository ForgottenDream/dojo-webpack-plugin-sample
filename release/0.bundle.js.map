{"version":3,"sources":["webpack:///0.bundle.js","webpack:///../dojox/charting/plot2d/Default.js","webpack:///../dojox/charting/axis2d/Default.js","webpack:///../dojox/charting/Chart2D.js","webpack:///../dojox/charting/themes/Wetland.js","webpack:///../dojox/charting/plot2d/common.js","webpack:///../dojox/lang/functional.js","webpack:///../dojox/lang/utils.js","webpack:///../dojox/gfx/_base.js","webpack:///../dojox/gfx.js","webpack:///../dojox/gfx/fx.js","webpack:///../dojox/gfx/matrix.js","webpack:///../dojox/charting/plot2d/_PlotEvents.js","webpack:///../dojox/charting/plot2d/CartesianBase.js","webpack:///../dojox/lang/functional/reversed.js","webpack:///../dojox/gfx/shape.js","webpack:///../dojox/lang/functional/lambda.js","webpack:///../dojox/main.js","webpack:///../dojox/charting/axis2d/common.js","webpack:///../dojox/charting/Element.js","webpack:///../dojox/charting/plot2d/Stacked.js","webpack:///../dojox/charting/plot2d/Base.js","webpack:///../dojox/charting/plot2d/commonStacked.js","webpack:///../dojox/charting/plot2d/Columns.js","webpack:///../dojox/charting/plot2d/Bars.js","webpack:///../dojox/gfx/path.js","webpack:///../dojox/charting/scaler/common.js","webpack:///../dojox/charting/SimpleTheme.js","webpack:///../dojox/gfx/gradutils.js","webpack:///../dojo/_base/html.js","webpack:///../dojox/string/BidiEngine.js","webpack:///../dojox/charting/axis2d/Invisible.js","webpack:///../dojox/charting/scaler/linear.js","webpack:///../dojox/charting/plot2d/StackedAreas.js","webpack:///../dojox/gfx/canvas.js","webpack:///../dojox/gfx/arc.js","webpack:///../dojox/gfx/decompose.js","webpack:///../dojox/gfx/bezierutils.js","webpack:///../dojox/lang/functional/array.js","webpack:///../dojox/lang/functional/object.js","webpack:///../dojox/charting/scaler/primitive.js","webpack:///../dojox/charting/Chart.js","webpack:///../dojox/charting/Series.js","webpack:///../dojox/charting/bidi/Chart.js","webpack:///../dojox/gfx/_gfxBidiSupport.js","webpack:///../dojox/gfx/utils.js","webpack:///../dojox/charting/bidi/_bidiutils.js","webpack:///../dojox/lang/functional/fold.js","webpack:///../dojox/charting/axis2d/Base.js","webpack:///../dojox/charting/bidi/axis2d/Default.js","webpack:///../dojox/charting/plot2d/Lines.js","webpack:///../dojox/charting/plot2d/Areas.js","webpack:///../dojox/charting/plot2d/Markers.js","webpack:///../dojox/charting/plot2d/MarkersOnly.js","webpack:///../dojox/charting/plot2d/Scatter.js","webpack:///../dojox/charting/plot2d/StackedLines.js","webpack:///../dojox/charting/plot2d/StackedColumns.js","webpack:///../dojox/charting/plot2d/ClusteredColumns.js","webpack:///../dojox/charting/plot2d/StackedBars.js","webpack:///../dojox/charting/plot2d/ClusteredBars.js","webpack:///../dojox/charting/plot2d/Grid.js","webpack:///../dojox/charting/plot2d/Pie.js","webpack:///../dojox/charting/plot2d/Bubble.js","webpack:///../dojox/charting/plot2d/Candlesticks.js","webpack:///../dojox/charting/plot2d/OHLC.js","webpack:///../dojox/charting/plot2d/Spider.js","webpack:///../dojo/fx.js","webpack:///../dojo/fx/easing.js","webpack:///../dojox/charting/themes/common.js"],"names":["webpackJsonp","registerAbsMids","dojox/charting/plot2d/Default","dojox/charting/axis2d/Default","dojox/charting/Chart2D","dojox/charting/themes/Wetland","dojox/charting/plot2d/common","dojox/lang/functional","dojox/lang/utils","dojox/gfx/_base","dojox/gfx","dojox/gfx/fx","dojox/gfx/matrix","dojox/charting/plot2d/_PlotEvents","dojox/charting/plot2d/CartesianBase","dojox/lang/functional/reversed","dojox/gfx/shape","dojox/lang/functional/lambda","dojox/main","dojox/charting/axis2d/common","dojox/charting/Element","dojox/charting/plot2d/Stacked","dojox/charting/plot2d/Base","dojox/charting/plot2d/commonStacked","dojox/charting/plot2d/Columns","dojox/charting/plot2d/Bars","dojox/gfx/path","dojox/charting/scaler/common","dojox/charting/SimpleTheme","dojox/gfx/gradutils","dojo/_base/html","dojox/string/BidiEngine","dojox/charting/axis2d/Invisible","dojox/charting/scaler/linear","dojox/charting/plot2d/StackedAreas","dojox/gfx/renderer!","dojox/gfx/arc","dojox/gfx/decompose","dojox/gfx/bezierutils","dojox/lang/functional/array","dojox/lang/functional/object","dojox/charting/scaler/primitive","dojox/charting/Chart","dojox/charting/Series","dojox/charting/bidi/Chart","dojox/gfx/_gfxBidiSupport","dojox/gfx/utils","dojox/charting/bidi/_bidiutils","dojox/lang/functional/fold","dojox/charting/axis2d/Base","dojox/charting/bidi/axis2d/Default","dojox/charting/plot2d/Lines","dojox/charting/plot2d/Areas","dojox/charting/plot2d/Markers","dojox/charting/plot2d/MarkersOnly","dojox/charting/plot2d/Scatter","dojox/charting/plot2d/StackedLines","dojox/charting/plot2d/StackedColumns","dojox/charting/plot2d/ClusteredColumns","dojox/charting/plot2d/StackedBars","dojox/charting/plot2d/ClusteredBars","dojox/charting/plot2d/Grid","dojox/charting/plot2d/Pie","dojox/charting/plot2d/Bubble","dojox/charting/plot2d/Candlesticks","dojox/charting/plot2d/OHLC","dojox/charting/plot2d/Spider","dojo/fx","dojo/fx/easing","dojox/charting/themes/common","225","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","lang","declare","arr","has","CartesianBase","_PlotEvents","dc","df","dfr","du","fx","purgeGroup","lambda","defaultParams","lines","areas","markers","tension","animate","enableCache","interpolate","optionalParams","stroke","outline","shadow","fill","filter","styleFunc","font","fontColor","marker","markerStroke","markerOutline","markerShadow","markerFill","markerFont","markerFontColor","zeroLine","constructor","chart","kwArgs","this","opt","clone","mixin","updateWithObject","updateWithPattern","createPath","run","creator","params","path","_pathFreePool","length","pop","setShape","add","_pathUsePool","push","buildSegments","i","indexed","series","min","Math","max","floor","_hScaler","bounds","from","data","ceil","to","rseg","segments","j","isNullValue","index","hasOwnProperty","y","render","dim","offsets","zoom","isDataDirty","performZoom","resetEvents","dirty","isDirty","s","forEach","_eventSeries","cleanGroup","getGroup","setTransform","forEachRev","item","t","theme","events","concat","lpoly","next","ht","scaler","getTransformerFromModel","vt","_vScaler","eventSeries","name","Array","group","hidden","dyn","symbol","some","rsegments","seg","rsegment","map","v","x","l","height","b","lpath","curve","_plotFill","apoly","isNaN","apath","setFill","getFill","createPolyline","makeStroke","width","frontMarkers","outlineMarkers","shadowMarkers","spoly","c","dx","dy","setStroke","getStroke","color","shape","setFilter","markerBox","markerTheme","tMixin","addMixin","post","labels","getBoundingBox","o","element","cx","cy","_connectEvents","labelBoxW","labelBoxH","createLabel","skip","_reconnectEvents","_checkOrientation","plotGroup","animateTransform","delegate","duration","transform","start","end","play","apply","226","dj","h","connect","domGeom","Invisible","lin","acommon","g","BidiDefault","Default","vertical","fixUpper","fixLower","natural","leftBottom","includeZero","fixed","majorLabels","minorTicks","minorLabels","microTicks","rotation","htmlLabels","dropLabels","labelSizeChange","position","majorTickStep","minorTickStep","microTickStep","labelFunc","maxLabelSize","maxLabelCharCount","trailingSymbol","majorTick","minorTick","microTick","tick","title","titleGap","titleFont","titleFontColor","titleOrientation","_textFreePool","_lineFreePool","_textUsePool","_lineUsePool","_invalidMaxLabelSize","renderingOptions","shape-rendering","setWindow","scale","offset","inherited","arguments","_groupLabelWidth","wcLimit","isObject","label","text","trim","substring","join","_base","_getTextBox","w","_getMaxLabelSize","span","size","_maxLabelSize","minMinorStep","_prevMinMinorStep","ob","sb","buildScaler","_majorStart","major","tb","buildTicks","majLabelW","minLabelW","tickLabelFunc","minor","majLabelH","minLabelH","calculate","_oldSpan","Infinity","ta","axis","labelGap","normalizedLength","splitFontString","labelW","cosr","abs","cos","PI","sinr","sin","gap1","sqrt","gap2","canMinorLabel","_skipInterval","ticks","getOffsets","r","taTitleFont","taTitleGap","gap","taMajorTick","getTick","taMinorTick","tsize","side","labelWidth","createText","labelType","align","textContent","createLine","line","isRtl","_isRtl","stop","titlePos","titleOffset","axisVector","tickVector","anchorOffset","labelOffset","labelAlign","titleRotation","taFont","taFontColor","taTitleFontColor","taTitleOrientation","orientation","taMicroTick","taStroke","cachedLabelW","f","x1","y1","x2","y2","axisTitle","htmlElements","matrix","rotategAt","rel","value","canLabel","elem","getTextWithLimitCharCount","truncated","getTextWithLimitLength","formatTruncatedLabel","labelTooltip","micro","truncatedLabel","elemType","modules","aroundRect","type","fontWidth","fontHeight","firstChild","_events","dojo","handle","e","require","Tooltip","show","hide","shp","getShape","lt","getCoords","round","230","kernel","dojox","Chart","deprecated","setObject","231","SimpleTheme","themes","Wetland","colors","233","Color","sc","common","getObject","doIfLoaded","makeParameters","defaultStroke","augmentColor","target","a","augmentStroke","augmentFill","defaultStats","vmin","Number","POSITIVE_INFINITY","vmax","NEGATIVE_INFINITY","hmin","hmax","collectSimpleStats","stats","old_vmin","old_vmax","val","ymin","ymax","old_hmin","old_hmax","xmin","xmax","calculateBarSize","availableSize","clusterSize","minBarSize","maxBarSize","collectStackedStats","foldl","array","slice","p0","p3","bz1x","bz1y","bz2x","bz2y","p1","p2","p1p2","p0p2","p1p3","p0p2f","p1p3f","getLabel","number","precision","numberLib","format","places","toFixed","toString","234","235","empty","opts","Object","prototype","call","coerceType","source","eval","String","Boolean","conv","pattern","merge","object","m","otype","mtype","236","win","dom","domConstruct","_hasClass","node","classStr","cls","getAttribute","indexOf","_addClass","setAttribute","_removeClass","replace","RegExp","_getFontMeasurements","p","oldStyle","heights","1em","1ex","100%","12pt","16px","xx-small","x-small","small","medium","large","x-large","xx-large","doc","documentElement","style","fontSize","div","create","left","top","borderWidth","margin","padding","lineHeight","overflow","body","offsetHeight","removeChild","fontMeasurements","_getCachedFontMeasurements","recalculate","measuringNode","className","box","al","visibility","innerHTML","getBoundingClientRect","bcr","right","bottom","getMarginBox","_computeTextLocation","textShape","fixHeight","loc","_computeTextBoundingBox","_isRendered","getFont","defaultFont","getTextWidth","parent","getParent","uniqueId","_getUniqueId","id","_scopeName","byId","touchActionProp","_fixMsTouchAction","surface","rawNode","defaultPath","defaultPolyline","points","defaultRect","defaultEllipse","rx","ry","defaultCircle","defaultLine","defaultImage","src","defaultText","decoration","rotated","kerning","defaultTextPath","cap","defaultLinearGradient","defaultRadialGradient","defaultPattern","variant","weight","family","getDefault","typeCtorCache","Function","normalizeColor","normalizeParameters","existed","update","defaults","result","formatNumber","addSpace","point","makeFontString","str","split","charAt","cm_in_pt","mm_in_pt","px_in_pt","pt2px","len","px2pt","parseFloat","pathVmlRegExp","pathSvgRegExp","equalSources","switchTo","renderer","ns","Surface","237","gfxBase","238","Hub","InterpolNumber","InterpolUnit","units","InterpolColor","temp","InterpolValues","values","InterpolObject","def","InterpolTransform","stack","original","getColorInterpol","prop","obj","getNumberInterpol","fxg","getValue","blendColors","ret","Matrix2D","transfMatrix","transparent","animateStroke","args","easing","_defaultEasing","anim","Animation","animateFill","animateFont","getTransform","handlers","__svgContainer","parentNode","__svgRoot","__svgWidth","parseInt","ov","ignore","disconnect","sn","root","setTimeout","removeAttribute","239","_degToRadCache","_degToRad","degree","_radToDeg","radian","arg","xx","yy","normalize","xy","yx","extend","identity","flipX","flipY","flipXY","translate","rotate","angle","rotateg","skewX","tan","skewXg","skewY","skewYg","reflect","a2","b2","n2","project","isIdentity","invert","M","D","_multiplyPoint","multiplyPoint","multiplyRectangle","rect","minx","miny","multiply","_sandwich","scaleAt","d","rotateAt","skewXAt","skewXgAt","skewYAt","skewYgAt","240","hub","_shapeEvents","destroy","plotEvent","raiseEvent","originalEvent","originalPlot","plot","method","after","_connectSingleEvent","eventName","eventMask","event","hAxis","vAxis","seriesName","fireEvent","eventObject","241","Base","primitive","gfx","alwaysFalse","baseParams","labelStyle","omitLabels","axes","zoomQueue","lastWindow","vscale","hscale","xoffset","yoffset","clear","_hAxis","_vAxis","noClip","_nativeClip","setClip","_clippedGroup","createGroup","setAxis","toPage","coord","ah","av","sh","getScaler","sv","th","tv","toData","getTransformerFromPlot","bbox","_getLabel","lbox","renderLabel","vs","hs","vOffset","hBounds","xOffset","lower","vBounds","yOffset","rVScale","rHScale","rXOffset","rYOffset","shift","initializeScalers","initialized","242","filterRev","global","mapRev","n","everyRev","someRev","243","on","matrixLib","Shape","fillStyle","strokeStyle","parentMatrix","uid","register","getUID","dispose","__gfxObject__","getNode","getTransformedBoundingBox","_getRealMatrix","gm","getEventSource","clip","getClip","isArray","_applyTransform","moveToFront","_moveChildToFront","_moveToFront","moveToBack","_moveChildToBack","_moveToBack","applyRightTransform","applyLeftTransform","applyTransform","removeShape","silently","remove","_setParent","_updateParentMatrix","_eventsProcessing","listener","fixCallback","fixTarget","hitch","token","gfxElement","fixFunction","scope","isString","Container","_init","children","_batch","openBatch","closeBatch","oldParent","splice","bb","ct","endX","endY","unshift","_parent","_nodes","lastChild","isLoaded","onLoad","whenLoaded","context","once","Rect","Ellipse","Circle","Line","Polyline","closed","_normalizePoints","Image","Text","fontStyle","setFont","newFont","_setFont","Creator","createShape","createRect","createCircle","createEllipse","createImage","createTextPath","createObject","Group","ellipse","circle","image","Path","TextPath","setText","shapeType","rawShape","244","lcache","sep","exec","sects","match","vars","compose","rawLambda","buildLambda","clearLambdaCache","245","246","clearNode","marginLeft","marginTop","marginRight","marginBottom","paddingLeft","paddingTop","paddingRight","paddingBottom","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","getBoxWidth","html","boxWidth","createElement","getTextDir","dir","appendChild","textAlign","whiteSpace","wrap","insertBefore","htmlElementsRegistry","247","destroyHtmlElements","bgnode","bgNode","namespaceURI","key","overrideShape","limitWidth","minStr","begin","space","spanX","spanY","_shapeFill","_pseudoRadialFill","center","radius","250","commonStacked","getSeriesStats","collectStats","getIndexValue","251","Element","ac","tooltipFunc","assignAxes","addSeries","calculateAxes","block","pointerEvents","getRequiredColors","applyMirroring","252","rearrangeValues","baseline","sets","previousSet","extractedSet","k","minWidth","sum","counter","available","z","pvalue","253","_rectFreePool","_rectUsePool","naturalBaseline","baselineHeight","bar","getBarProperties","serie","extractedValues","extractValues","finalTheme","sshape","thickness","srect","_animateColumn","specialFill","py","seriesIndex","extracted","voffset","vsize","254","baselineWidth","actualLength","_animateBar","hoffset","hsize","260","shapeLib","tbbox","absolute","last","segmented","setAbsoluteMode","mode","_confirmSegmented","getAbsoluteMode","_getRealBBox","_updateWithSegment","getLastPosition","_updateBBox","segment","action","_validSegments","q","_pushSegment","toLowerCase","_collectArgs","moveTo","lineTo","hLineTo","vLineTo","curveTo","smoothCurveTo","qCurveTo","qSmoothCurveTo","arcTo","closePath","_setPath","newShape","lazyPathSegmentation","_2PI","getText","newText","_setText","261","eq","testedModules","moduleName","ifloaded","ifnotloaded","getNumericLabel","lo","hi","mid","262","dlu","dgg","shapeSpaces","shapeX","shapeY","defaultTheme","seriesThemes","defaultColors","markerThemes","defaultMarkers","noGradConv","noRadialConv","reverseFills","_current","_buildMarkerArray","plotarea","grid","indicator","elementType","doPost","old","_markers","markerName","toUpperCase","substr","tickName","inspectObjects","reverse","addMarker","setMarkers","CIRCLE","SQUARE","DIAMOND","CROSS","X","TRIANGLE","TRIANGLE_INVERTED","pageStyle","titleAlign","labelWiring","lineStroke","lineOutline","lineShadow","lineFill","markerSymbol","263","findColor","prev","gradutils","getColor","pt","atan2","projection","pf1","pf2","sort","264","attr","ctr","geom","isDescendant","setSelectable","getAttr","get","setAttr","set","hasAttr","removeAttr","getNodeProp","hasClass","contains","addClass","removeClass","toggleClass","toggle","replaceClass","_toDom","toDom","place","_destroyElement","_getPadExtents","getPadExtents","_getBorderExtents","getBorderExtents","_getPadBorderExtents","getPadBorderExtents","_getMarginExtents","getMarginExtents","_getMarginSize","getMarginSize","_getMarginBox","setMarginBox","_getContentBox","getContentBox","setContentSize","_isBodyLtr","isBodyLtr","_docScroll","docScroll","_getIeDocumentElementOffset","getIeDocumentElementOffset","_fixIeBiDiScrollLeft","fixIeBiDiScrollLeft","marginBox","contentBox","coords","includeScroll","getComputedStyle","mb","getProp","setProp","getStyle","setStyle","__toPixelValue","toPixelValue","265","Stateful","doBidiReorder","inFormat","outFormat","swap","bdx","prepareReorderingParameters","inOrdering","inOrientation","outOrdering","outOrientation","LTR","doReorder","RTL","invertStr","saveSwap","defInFormat","defOutFormat","defSwap","firstStrongDir","lastStrongDir","rtl","compress","str06","Ix","step","nIEnd","compressArray","doShape","outBuf","idx","updateMap","tsMap","stMap","previousCursive","compressArrayIndx","isArabicAlefbet","isArabicDiacritics","isNextAlef","getLamAlefFE","LamAlefInialTableFE","LamAlefMedialTableFE","setAlefToSpace","currentChr","isNextArabic","getMedialFormCharacterFE","getFormCharacterFE","FinalForm","InitialForm","IsolatedForm","isStandAlonCharacter","fdc","chars","deshape","consumeNextSpace","strFE","increase","chNum","charCodeAt","AlefTable","FETo06Table","levels","computeLevels","swapChars","invertLevel","lvMap","impTab","impTabRtl","impTabLtr","prevState","newClass","newLevel","newState","condPos","ix","types","classes","hiLevel","lastArabic","hasUbatAl","hasUbatB","hasUbatS","getCharacterType","getCharClass","ITIL","ITCOND","UBAT_B","handleUbatS","UBAT_S","UBAT_WS","getMirror","ch","uc","MasterTable","TBBASE","UnicodeTable","cArray","cLength","ArabicAlefBetIntervalsBegine","ArabicAlefBetIntervalsEnd","lev","tmp","cType","UBAT_L","UBAT_R","UBAT_ON","UBAT_AN","UBAT_EN","UBAT_AL","UBAT_CS","wType","nType","UBAT_ES","UBAT_ET","UBAT_NSM","rtlCandidate","UBAT_LRE","UBAT_RLE","UBAT_LRO","UBAT_RLO","UBAT_PDF","UBAT_BN","TYPES_NAMES","low","high","SwapTable","StandAlonForm","BaseForm","MedialForm","formArr","getOrientation","oc","alef06","LamAlefForm","initMaps","map1","map2","reverseMap","sourceMap","isGreater","BidiEngine","inputFormat","outputFormat","sourceToTarget","targetToSource","bidiTransform","formatIn","formatOut","checkParameters","BDX","orientIn","orientOut","osIn","osOut","stage1Text","checkContextual","_inputFormatSetter","validFormat","test","Error","_outputFormatSetter","document","hasBidiChar","bidiChars","defoutFormat","hasBlockSep","hasSegSep","TB00","TB05","TB06","TB07","TB20","TBFB","TBFE","TBFF","L","R","EN","AN","ON","B","S","AL","WS","ET","NSM","266","dependOnData","getWindowScale","getWindowOffset","scalerType","tsb","upper","isFinite","getTicks","267","findString","linear","calcTicks","lowerBound","upperBound","useMin","useMax","majorStart","minorStart","microStart","majorCount","minorCount","microCount","minorPerMajor","microPerMinor","majorPrecision","log","LN10","minorPrecision","count","prec","delta","minorDelta","mag","pow","nextMajor","nextMinor","nextMicro","revScale","majorTicks","288","Stacked","289","gs","pathLib","ga","decompose","bezierUtils","drawDashedArc","ctx","dash","sa","ea","ccw","prevResidue","residue","beginPath","arc","splitToDashedBezier","dashArray","newPoints","tAtLength","computeLength","curves","splitBezierAtT","toDashedCurveTo","pts","quadratic","ctx2d","api","canvasDash","toDashedLineTo","dal","tlength","distance","prevx","prevy","canvas","pattrnbuffer","mp","pi","twoPI","halfPI","CanvasRenderingContext2D","getContext","hasNativeDash","setLineDash","hasFillText","fillText","dasharray","solid","shortdash","shortdot","shortdashdot","shortdashdotdot","dot","longdash","dashdot","longdashdot","longdashdotdot","_render","save","_renderTransform","_renderClip","_renderShape","_renderFill","_renderStroke","restore","canvasClip","canvasTransform","angle2","sx","sy","angle1","fs","iw","canvasFillImage","ih","copyctx","clearRect","drawImage","canvasFill","createPattern","lineWidth","lineCap","lineJoin","miterLimit","_renderDashedStroke","clipType","makeClip","_makeDirty","geometry","canvasEllipse","makeEllipse","canvasPath","makeClipPath","canvasPolyline","geo","modifyMethod","extra","createLinearGradient","createRadialGradient","addColorStop","img","downloadImage","st","da","_needsDash","xl","xr","yt","yb","xl2","xr2","yt2","yb2","bezierCircle","u","curvePI4","c1","c2","_dashedPoints","bezierCurveTo","startAngle","canvasImage","canvasFont","measureText","strokeText","pathRenderers","H","V","C","Q","T","A","Z","lastControl","_dashedPath","_dashResidue","_moveToA","doDash","_moveToR","_lineToA","_lineToR","_hLineToA","_hLineToR","_vLineToA","_vLineToR","_curveToA","_curveToR","_smoothCurveToA","valid","_smoothCurveToR","_qCurveToA","_qCurveToR","_qSmoothCurveToA","_qSmoothCurveToR","_arcTo","relative","arcs","arcAsBezier","_closePath","pendingImageCount","makeDirty","setDimensions","getDimensions","force","clearTimeout","pendingRender","pendingImagesCount","url","handler","onImageLoad","onload","onerror","onabort","onImagesLoaded","createSurface","pos","ownerDocument","290","unitArcAsBezier","alpha","cosa","sina","pi4","pi8","pi48","xRotg","sweep","xRot","rx2","ry2","pa","pax2","pay2","ca","elliptic_transform","inversed","sp","ep","endAngle","theta","291","calcFromValues","r1","m1","r2","m2","transpose","scaleSign","eigenvalueDecomposition","l1","l2","vx1","vy1","vx2","vy2","d1","d2","value1","value2","vector1","vector2","decomposeSR","sign","decomposeRS","MT","U","VT","292","bu","bezierutils","currentLen","splitCount","splitFunc","splitQBezierAtT","_compute","error","pLen","newbezier","newBeziers","splitCBezierAtT","t2","p1x","p1y","p2x","p2y","ax","ay","bx","by","px","r3","t3","c1x","c1y","c2x","c2y","mx","my","nx","ny","293","hasNext","every","294","keys","filterIn","forIn","mapIn","295","296","domStyle","Series","BidiChart","func","hSection","vSection","hReplace","vReplace","combineStats","plotArea","plots","purge","makeClean","getName","defaultMargins","margins","_customMargins","delayInMs","chartTitle","runs","declaredClass","tagName","setTheme","addAxis","axisType","axis2d","getAxis","removeAxis","addPlot","plotType","plot2d","getPlot","removePlot","getPlotOrder","setPlotOrder","newOrder","names","order","newStack","movePlotToFront","movePlotToBack","getSeries","removeSeries","updateSeries","_invalidateDependentPlots","getSeriesOrder","plotName","setSeriesOrder","newSeries","moveSeriesToFront","moveSeriesToBack","resize","getGeometry","setAxisWindow","calculateGeometry","zoomIn","range","delayed","delayedRender","fullGeometry","self","_resetLeftBottom","_delayedRenderHandle","fullRender","_makeClean","_renderChartBackground","_renderPlotBackground","foldr","_renderTitle","forceHtmlLabels","tBox","isRightToLeft","posX","connectToPlot","verticalAxis","axisName","setDir","297","setSeriesObject","298","gBidi","domAttr","utils","validateTextDir","textDir","bidiEngine","isMirrored","postscript","truncatedLabelsRegistry","chartDir","setTextDir","newTextDir","tDir","axesKeyArr","reverseMatrix","truncateBidi","299","validValues","isVml","isSvg","svg","useSvgWeb","isSvgWeb","isSilverlight","isCanvas","bidi_const","LRM","LRE","PDF","RLM","RLE","formatText","sourceDir","targetDir","bidiPreprocess","origText","extendMethod","before","rBefore","restoreText","origObj","groupTextDir","textDirPreprocess","300","jsonLib","Deferred","config","gu","serialize","isSurface","toJson","prettyPrint","deserialize","fromJson","json","toSvg","deferred","_cleanSvg","_innerXML","callback","errback","_initSvgSerializerDeferred","_initSvgSerializer","jsonForm","serializer","sDim","_gfxSvgProxy","withDoc","ts","draw","ex","fired","addCallback","_svgSerializerInitialized","display","intv","onreadystatechange","contentWindow","readyState","setInterval","scopeMap","clearInterval","uri","toUrl","innerXML","xml","XMLSerializer","serializeToString","301","302","foldl1","first","foldr1","reduce","reduceRight","unfold","pr","303","304","isChartDirectionRtl","isBaseTextDirRtl","305","306","307","308","309","shadows","_animateScatter","310","311","Columns","312","313","Bars","314","315","sortTicks","hMajorLines","hMinorLines","vMajorLines","vMinorLines","hStripes","vStripes","renderOnAxis","majorHLine","minorHLine","majorVLine","minorVLine","hFill","vFill","hAlternateFill","vAlternateFill","vScaler","_renderHRect","minorLine","_renderHLines","majorLine","hScaler","_renderVRect","_renderVLines","hLine","_animateGrid","vLine","hStripe","allTicks","alternateFill","vStripe","transStart","scaleStart","316","PlotEvents","radGrad","fanSize","runFilter","filteredRun","slices","labelR","labelFont","scircle","cr","nfans","fansx","fansy","fanex","faney","labelAngle","labeledSlices","omit","labelHeight","_getProperLabelRadius","leftColumn","rightColumn","jointX","labelX","wiring","esi","minRidius","leftCenterSlice","rightCenterSlice","leftMinSIN","rightMinSIN","tempSIN","_calculateLabelR","firstSlice","nextLabelR","currentLabelR","317","frontCircles","outlineCircles","shadowCircles","getFinalTheme","_animateBubble","console","warn","318","open","close","doFill","inner","_animateCandlesticks","319","hl","op","cl","_animateOHLC","320","baseFx","coreFx","gfxfx","divisions","axisColor","axisWidth","spiderColor","spiderWidth","seriesWidth","seriesFillAlpha","spiderOrigin","markerSize","spiderType","animationType","backOut","axisTickFont","axisTickFontColor","axisFont","axisFontColor","datas","labelKey","oldSeriePoints","animations","vlist","axisKey","outerPoints","innerPoints","divisionPoints","divisionRadius","labelPoints","serieEntry","asize","ro","dv","ms","spt","at","lboffset","_getObjectLength","_buildPoints","axisGroup","axisStroke","spiderStroke","nd","_drawArrow","labelGroup","spiderGroup","textGroup","_getCoordinate","seriesShapes","sk","seriePoints","tipData","entry","sname","polygonBoundRect","_getBoundary","osps","cs","_createSeriesEntry","po","poly","brect","so","circles","co","tdata","sps","initpoints","anims","np","spl","pshape","cshape","anims1","combine","point2","point3","recursive","321","Evented","arrayUtil","aspect","ready","isAsync","_baseObj","_fire","evt","_chain","_index","_animations","_onAnimateCtx","_onEndCtx","delay","_onAnimate","_onEnd","gotoStart","status","beforeBegin","onBegin","onPlay","pause","gotoPercent","percent","andPlay","gotoEnd","chain","_combine","_connects","_finished","_pseudoAnimation","_doAction","_call","wipeIn","animateProperty","properties","scrollHeight","fini","wipeOut","slideTo","init","offsetTop","offsetLeft","322","easingFuncs","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","quartIn","quartOut","quartInOut","quintIn","quintOut","quintInOut","sineIn","sineOut","sineInOut","expoIn","expoOut","expoInOut","circIn","circOut","circInOut","backIn","backInOut","elasticIn","elasticOut","elasticInOut","bounceIn","bounceOut","bounceInOut","323"],"mappings":"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","file":"0.bundle.js","sourcesContent":["webpackJsonp.registerAbsMids({\n\t'dojox/charting/plot2d/Default':225,\n\t'dojox/charting/axis2d/Default':226,\n\t'dojox/charting/Chart2D':230,\n\t'dojox/charting/themes/Wetland':231,\n\t'dojox/charting/plot2d/common':233,\n\t'dojox/lang/functional':234,\n\t'dojox/lang/utils':235,\n\t'dojox/gfx/_base':236,\n\t'dojox/gfx':237,\n\t'dojox/gfx/fx':238,\n\t'dojox/gfx/matrix':239,\n\t'dojox/charting/plot2d/_PlotEvents':240,\n\t'dojox/charting/plot2d/CartesianBase':241,\n\t'dojox/lang/functional/reversed':242,\n\t'dojox/gfx/shape':243,\n\t'dojox/lang/functional/lambda':244,\n\t'dojox/main':245,\n\t'dojox/charting/axis2d/common':246,\n\t'dojox/charting/Element':247,\n\t'dojox/charting/plot2d/Stacked':250,\n\t'dojox/charting/plot2d/Base':251,\n\t'dojox/charting/plot2d/commonStacked':252,\n\t'dojox/charting/plot2d/Columns':253,\n\t'dojox/charting/plot2d/Bars':254,\n\t'dojox/gfx/path':260,\n\t'dojox/charting/scaler/common':261,\n\t'dojox/charting/SimpleTheme':262,\n\t'dojox/gfx/gradutils':263,\n\t'dojo/_base/html':264,\n\t'dojox/string/BidiEngine':265,\n\t'dojox/charting/axis2d/Invisible':266,\n\t'dojox/charting/scaler/linear':267,\n\t'dojox/charting/plot2d/StackedAreas':288,\n\t'dojox/gfx/renderer!':289,\n\t'dojox/gfx/arc':290,\n\t'dojox/gfx/decompose':291,\n\t'dojox/gfx/bezierutils':292,\n\t'dojox/lang/functional/array':293,\n\t'dojox/lang/functional/object':294,\n\t'dojox/charting/scaler/primitive':295,\n\t'dojox/charting/Chart':296,\n\t'dojox/charting/Series':297,\n\t'dojox/charting/bidi/Chart':298,\n\t'dojox/gfx/_gfxBidiSupport':299,\n\t'dojox/gfx/utils':300,\n\t'dojox/charting/bidi/_bidiutils':301,\n\t'dojox/lang/functional/fold':302,\n\t'dojox/charting/axis2d/Base':303,\n\t'dojox/charting/bidi/axis2d/Default':304,\n\t'dojox/charting/plot2d/Lines':305,\n\t'dojox/charting/plot2d/Areas':306,\n\t'dojox/charting/plot2d/Markers':307,\n\t'dojox/charting/plot2d/MarkersOnly':308,\n\t'dojox/charting/plot2d/Scatter':309,\n\t'dojox/charting/plot2d/StackedLines':310,\n\t'dojox/charting/plot2d/StackedColumns':311,\n\t'dojox/charting/plot2d/ClusteredColumns':312,\n\t'dojox/charting/plot2d/StackedBars':313,\n\t'dojox/charting/plot2d/ClusteredBars':314,\n\t'dojox/charting/plot2d/Grid':315,\n\t'dojox/charting/plot2d/Pie':316,\n\t'dojox/charting/plot2d/Bubble':317,\n\t'dojox/charting/plot2d/Candlesticks':318,\n\t'dojox/charting/plot2d/OHLC':319,\n\t'dojox/charting/plot2d/Spider':320,\n\t'dojo/fx':321,\n\t'dojo/fx/easing':322,\n\t'dojox/charting/themes/common':323\n});\nwebpackJsonp([0],{\n\n/***/ 225:\n/*!*******************************************!*\\\n  !*** ../dojox/charting/plot2d/Default.js ***!\n  \\*******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/has */ 3),\n\t\t__webpack_require__(/*! ./CartesianBase */ 241), __webpack_require__(/*! ./_PlotEvents */ 240), __webpack_require__(/*! ./common */ 233), __webpack_require__(/*! dojox/lang/functional */ 234), __webpack_require__(/*! dojox/lang/functional/reversed */ 242), __webpack_require__(/*! dojox/lang/utils */ 235), __webpack_require__(/*! dojox/gfx/fx */ 238)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, declare, arr, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__DefaultCtorArgs\", dojox.charting.plot2d.__CartesianCtorArgs, {\n\t\t// summary:\n\t\t//\t\tThe arguments used for any/most plots.\n\n\t\t// lines: Boolean?\n\t\t//\t\tWhether or not to draw lines on this plot.  Defaults to true.\n\t\tlines:   true,\n\n\t\t// areas: Boolean?\n\t\t//\t\tWhether or not to draw areas on this plot. Defaults to false.\n\t\tareas:   false,\n\n\t\t// markers: Boolean?\n\t\t//\t\tWhether or not to draw markers at data points on this plot. Default is false.\n\t\tmarkers: false,\n\n\t\t// tension: Number|String?\n\t\t//\t\tWhether or not to apply 'tensioning' to the lines on this chart.\n\t\t//\t\tOptions include a number, \"X\", \"x\", or \"S\"; if a number is used, the\n\t\t//\t\tsimpler bezier curve calculations are used to draw the lines.  If X, x or S\n\t\t//\t\tis used, the more accurate smoothing algorithm is used.\n\t\ttension: \"\",\n\n\t\t// animate: Boolean?|Number?\n\t\t//\t\tWhether or not to animate the chart to place. When a Number it specifies the duration of the animation.\n\t\t//\t\tDefault is false.\n\t\tanimate: false,\n\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use for any series on the plot.\n\t\tstroke:\t\t{},\n\n\t\t// outline: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke used to outline any series on the plot.\n\t\toutline:\t{},\n\n\t\t// shadow: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use to draw any shadows for a series on a plot.\n\t\tshadow:\t\t{},\n\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tAny fill to be used for elements on the plot (such as areas).\n\t\tfill:\t\t{},\n\n\t\t// filter: dojox.gfx.Filter?\n\t\t//\t\tAn SVG filter to be used for elements on the plot. gfx SVG renderer must be used and dojox/gfx/svgext must\n\t\t//\t\tbe required for this to work.\n\t\tfilter:\t\t{},\n\n\t\t// styleFunc: Function?\n\t\t//\t\tA function that returns a styling object for the a given data item.\n\t\tstyleFunc:\tnull,\n\n\t\t// font: String?\n\t\t//\t\tA font definition to be used for labels and other text-based elements on the plot.\n\t\tfont:\t\t\"\",\n\n\t\t// fontColor: String|dojo.Color?\n\t\t//\t\tThe color to be used for any text-based elements on the plot.\n\t\tfontColor:\t\"\",\n\n\t\t// markerStroke: dojo.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use for any markers on the plot.\n\t\tmarkerStroke:\t\t{},\n\n\t\t// markerOutline: dojo.gfx.Stroke?\n\t\t//\t\tAn optional outline to use for any markers on the plot.\n\t\tmarkerOutline:\t\t{},\n\n\t\t// markerShadow: dojo.gfx.Stroke?\n\t\t//\t\tAn optional shadow to use for any markers on the plot.\n\t\tmarkerShadow:\t\t{},\n\n\t\t// markerFill: dojo.gfx.Fill?\n\t\t//\t\tAn optional fill to use for any markers on the plot.\n\t\tmarkerFill:\t\t\t{},\n\n\t\t// markerFont: String?\n\t\t//\t\tAn optional font definition to use for any markers on the plot.\n\t\tmarkerFont:\t\t\t\"\",\n\n\t\t// markerFontColor: String|dojo.Color?\n\t\t//\t\tAn optional color to use for any marker text on the plot.\n\t\tmarkerFontColor:\t\"\",\n\n\t\t// enableCache: Boolean?\n\t\t//\t\tWhether the markers are cached from one rendering to another. This improves the rendering performance of\n\t\t//\t\tsuccessive rendering but penalize the first rendering.  Default false.\n\t\tenableCache: false,\n\n\t\t// interpolate: Boolean?\n\t\t//\t\tWhether when there is a null data point in the data the plot interpolates it or if the lines is split at that\n\t\t//\t\tpoint.\tDefault false.\n\t\tinterpolate: false,\n\n\t\t// zeroLine: Number?\n\t\t//\t\tZero line for an area fill. Should be a numeric value in user coordinates.\n\t\t//\t\tDefault: the lowest value on a vertical axis.\n\t\tzeroLine: 0\n\t});\n=====*/\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\tvar DEFAULT_ANIMATION_LENGTH = 1200;\t// in ms\n\n\treturn declare(\"dojox.charting.plot2d.Default\", [CartesianBase, _PlotEvents], {\n\n\t\t// defaultParams:\n\t\t//\t\tThe default parameters of this plot.\n\t\tdefaultParams: {\n\t\t\tlines:   true,\t// draw lines\n\t\t\tareas:   false,\t// draw areas\n\t\t\tmarkers: false,\t// draw markers\n\t\t\ttension: \"\",\t// draw curved lines (tension is \"X\", \"x\", or \"S\")\n\t\t\tanimate: false, // animate chart to place\n\t\t\tenableCache: false,\n\t\t\tinterpolate: false\n\t\t},\n\n\t\t// optionalParams:\n\t\t//\t\tThe optional parameters of this plot.\n\t\toptionalParams: {\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:     {},\n\t\t\tstyleFunc: null,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\",\n\t\t\tmarker:             \"\",\n\t\t\tmarkerStroke:\t\t{},\n\t\t\tmarkerOutline:\t\t{},\n\t\t\tmarkerShadow:\t\t{},\n\t\t\tmarkerFill:\t\t\t{},\n\t\t\tmarkerFont:\t\t\t\"\",\n\t\t\tmarkerFontColor:\t\"\",\n\t\t\tzeroLine:           0\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tReturn a new plot.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\n\t\t\t//\t\tAn optional arguments object to help define this plot.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\t// animation properties\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\tcreatePath: function(run, creator, params){\n\t\t\tvar path;\n\t\t\tif(this.opt.enableCache && run._pathFreePool.length > 0){\n\t\t\t\tpath = run._pathFreePool.pop();\n\t\t\t\tpath.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(path);\n\t\t\t}else{\n\t\t\t\tpath = creator.createPath(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\trun._pathUsePool.push(path);\n\t\t\t}\n\t\t\treturn path;\n\t\t},\n\n\t\tbuildSegments: function(i, indexed){\n\t\t\tvar run = this.series[i],\n\t\t\t\tmin = indexed?Math.max(0, Math.floor(this._hScaler.bounds.from - 1)):0,\n\t\t\t\tmax = indexed?Math.min(run.data.length, Math.ceil(this._hScaler.bounds.to)):run.data.length,\n\t\t\t\trseg = null, segments = [];\n\n\t\t\t// split the run data into dense segments (each containing no nulls)\n\t\t\t// except if interpolates is false in which case ignore null between valid data\n\t\t\tfor(var j = min; j < max; j++){\n\t\t\t\tif(!this.isNullValue(run.data[j])){\n\t\t\t\t\tif(!rseg){\n\t\t\t\t\t\trseg = [];\n\t\t\t\t\t\tsegments.push({index: j, rseg: rseg});\n\t\t\t\t\t}\n\t\t\t\t\trseg.push((indexed && run.data[j].hasOwnProperty(\"y\"))?run.data[j].y:run.data[j]);\n\t\t\t\t}else{\n\t\t\t\t\tif(!this.opt.interpolate || indexed){\n\t\t\t\t\t\t// we break the line only if not interpolating or if we have indexed data\n\t\t\t\t\t\trseg = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn segments;\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender/draw everything on this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }\n\t\t\t// returns: dojox/charting/plot2d/Default\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\n\t\t\t// make sure all the series is not modified\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\tthis.getGroup().setTransform(null);\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme, stroke, outline, events = this.events();\n\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(this.opt.enableCache){\n\t\t\t\t\trun._pathFreePool = (run._pathFreePool?run._pathFreePool:[]).concat(run._pathUsePool?run._pathUsePool:[]);\n\t\t\t\t\trun._pathUsePool = [];\n\t\t\t\t}\n\t\t\t\tif(!run.data.length){\n\t\t\t\t\trun.dirty = false;\n\t\t\t\t\tt.skip();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar theme = t.next(this.opt.areas ? \"area\" : \"line\", [this.opt, run], true),\n\t\t\t\t\tlpoly,\n\t\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\t\teventSeries = this._eventSeries[run.name] = new Array(run.data.length);\n\n\t\t\t\ts = run.group;\n\t\t\t\tif(run.hidden){\n\t\t\t\t\tif(this.opt.lines){\n\t\t\t\t\t\trun.dyn.stroke = theme.series.stroke;\n\t\t\t\t\t}\n\t\t\t\t\tif (run.markers || (run.markers === undefined && this.opt.markers)) {\n\t\t\t\t\t\trun.dyn.markerFill = theme.marker.fill;\n\t\t\t\t\t\trun.dyn.markerStroke = theme.marker.stroke;\n\t\t\t\t\t\trun.dyn.marker = theme.symbol;\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.areas){\n\t\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// optim works only for index based case\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t});\n\n\t\t\t\tvar rsegments = this.buildSegments(i, indexed);\n\t\t\t\tfor(var seg = 0; seg < rsegments.length; seg++){\n\t\t\t\t\tvar rsegment = rsegments[seg];\n\t\t\t\t\tif(indexed){\n\t\t\t\t\t\tlpoly = arr.map(rsegment.rseg, function(v, i){\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: ht(i + rsegment.index + 1) + offsets.l,\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v),\n\t\t\t\t\t\t\t\tdata: v\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlpoly = arr.map(rsegment.rseg, function(v){\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: ht(v.x) + offsets.l,\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v.y),\n\t\t\t\t\t\t\t\tdata: v\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t}\n\n\t\t\t\t\t// if we are indexed & we interpolate we need to put all the segments as a single one now\n\t\t\t\t\tif(indexed && this.opt.interpolate){\n\t\t\t\t\t\twhile(seg < rsegments.length) {\n\t\t\t\t\t\t\tseg++;\n\t\t\t\t\t\t\trsegment = rsegments[seg];\n\t\t\t\t\t\t\tif(rsegment){\n\t\t\t\t\t\t\t\tlpoly = lpoly.concat(arr.map(rsegment.rseg, function(v, i){\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tx: ht(i + rsegment.index + 1) + offsets.l,\n\t\t\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v),\n\t\t\t\t\t\t\t\t\t\tdata: v\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar lpath = this.opt.tension ? dc.curve(lpoly, this.opt.tension) : \"\";\n\n\t\t\t\t\tif(this.opt.areas && lpoly.length > 1){\n\t\t\t\t\t\tvar fill = this._plotFill(theme.series.fill, dim, offsets), apoly = lang.clone(lpoly),\n\t\t\t\t\t\t\tzeroLine = dim.height - offsets.b;\n\t\t\t\t\t\tif(!isNaN(this.opt.zeroLine)){\n\t\t\t\t\t\t\tzeroLine = Math.max(offsets.t, Math.min(dim.height - offsets.b - vt(this.opt.zeroLine), zeroLine));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.opt.tension){\n\t\t\t\t\t\t\tvar apath = \"L\" + apoly[apoly.length-1].x + \",\" + zeroLine +\n\t\t\t\t\t\t\t\t\" L\" + apoly[0].x + \",\" + zeroLine +\n\t\t\t\t\t\t\t\t\" L\" + apoly[0].x + \",\" + apoly[0].y;\n\t\t\t\t\t\t\trun.dyn.fill = s.createPath(lpath + \" \" + apath).setFill(fill).getFill();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapoly.push({x: lpoly[lpoly.length - 1].x, y: zeroLine});\n\t\t\t\t\t\t\tapoly.push({x: lpoly[0].x, y: zeroLine});\n\t\t\t\t\t\t\tapoly.push(lpoly[0]);\n\t\t\t\t\t\t\trun.dyn.fill = s.createPolyline(apoly).setFill(fill).getFill();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.lines || this.opt.markers){\n\t\t\t\t\t\t// need a stroke\n\t\t\t\t\t\tstroke = theme.series.stroke;\n\t\t\t\t\t\tif(theme.series.outline){\n\t\t\t\t\t\t\toutline = run.dyn.outline = dc.makeStroke(theme.series.outline);\n\t\t\t\t\t\t\toutline.width = 2 * outline.width + (stroke && stroke.width || 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.markers){\n\t\t\t\t\t\trun.dyn.marker = theme.symbol;\n\t\t\t\t\t}\n\t\t\t\t\tvar frontMarkers = null, outlineMarkers = null, shadowMarkers = null;\n\t\t\t\t\tif(stroke && theme.series.shadow && lpoly.length > 1){\n\t\t\t\t\t\tvar shadow = theme.series.shadow,\n\t\t\t\t\t\t\tspoly = arr.map(lpoly, function(c){\n\t\t\t\t\t\t\t\treturn {x: c.x + shadow.dx, y: c.y + shadow.dy};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tif(this.opt.lines){\n\t\t\t\t\t\t\tif(this.opt.tension){\n\t\t\t\t\t\t\t\trun.dyn.shadow = s.createPath(dc.curve(spoly, this.opt.tension)).setStroke(shadow).getStroke();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\trun.dyn.shadow = s.createPolyline(spoly).setStroke(shadow).getStroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.opt.markers && theme.marker.shadow){\n\t\t\t\t\t\t\tshadow = theme.marker.shadow;\n\t\t\t\t\t\t\tshadowMarkers = arr.map(spoly, function(c){\n\t\t\t\t\t\t\t\treturn this.createPath(run, s, \"M\" + c.x + \" \" + c.y + \" \" + theme.symbol).\n\t\t\t\t\t\t\t\t\tsetStroke(shadow).setFill(shadow.color);\n\t\t\t\t\t\t\t}, this);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.lines && lpoly.length > 1){\n\t\t\t\t\t\tvar shape;\n\t\t\t\t\t\tif(outline){\n\t\t\t\t\t\t\tif(this.opt.tension){\n\t\t\t\t\t\t\t\trun.dyn.outline = s.createPath(lpath).setStroke(outline).getStroke();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\trun.dyn.outline = s.createPolyline(lpoly).setStroke(outline).getStroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.opt.tension){\n\t\t\t\t\t\t\trun.dyn.stroke = (shape = s.createPath(lpath)).setStroke(stroke).getStroke();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trun.dyn.stroke = (shape = s.createPolyline(lpoly)).setStroke(stroke).getStroke();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(shape.setFilter && theme.series.filter){\n\t\t\t\t\t\t\tshape.setFilter(theme.series.filter);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar markerBox = null;\n\t\t\t\t\tif(this.opt.markers){\n\t\t\t\t\t\tvar markerTheme = theme;\n\t\t\t\t\t\tfrontMarkers = new Array(lpoly.length);\n\t\t\t\t\t\toutlineMarkers = new Array(lpoly.length);\n\t\t\t\t\t\toutline = null;\n\t\t\t\t\t\tif(markerTheme.marker.outline){\n\t\t\t\t\t\t\toutline = dc.makeStroke(markerTheme.marker.outline);\n\t\t\t\t\t\t\toutline.width = 2 * outline.width + (markerTheme.marker.stroke ? markerTheme.marker.stroke.width : 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tarr.forEach(lpoly, function(c, i){\n\t\t\t\t\t\t\tif(this.opt.styleFunc || typeof c.data != \"number\"){\n\t\t\t\t\t\t\t\tvar tMixin = typeof c.data != \"number\" ? [c.data] : [];\n\t\t\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(c.data));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmarkerTheme = t.addMixin(theme, \"marker\", tMixin, true);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tmarkerTheme = t.post(theme, \"marker\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar path = \"M\" + c.x + \" \" + c.y + \" \" + markerTheme.symbol;\n\t\t\t\t\t\t\tif(outline){\n\t\t\t\t\t\t\t\toutlineMarkers[i] = this.createPath(run, s, path).setStroke(outline);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfrontMarkers[i] = this.createPath(run, s, path).setStroke(markerTheme.marker.stroke).setFill(markerTheme.marker.fill);\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t\trun.dyn.markerFill = markerTheme.marker.fill;\n\t\t\t\t\t\trun.dyn.markerStroke = markerTheme.marker.stroke;\n\t\t\t\t\t\tif(!markerBox && this.opt.labels){\n\t\t\t\t\t\t\tmarkerBox = frontMarkers[0].getBoundingBox();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\tarr.forEach(frontMarkers, function(s, i){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"marker\",\n\t\t\t\t\t\t\t\t\tindex:   i + rsegment.index,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:   s,\n\t\t\t\t\t\t\t\t\toutline: outlineMarkers[i] || null,\n\t\t\t\t\t\t\t\t\tshadow:  shadowMarkers && shadowMarkers[i] || null,\n\t\t\t\t\t\t\t\t\tcx:      lpoly[i].x,\n\t\t\t\t\t\t\t\t\tcy:      lpoly[i].y\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tif(indexed){\n\t\t\t\t\t\t\t\t\to.x = i + rsegment.index + 1;\n\t\t\t\t\t\t\t\t\to.y = run.data[i + rsegment.index];\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\to.x = rsegment.rseg[i].x;\n\t\t\t\t\t\t\t\t\to.y = run.data[i + rsegment.index].y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[i + rsegment.index] = o;\n\t\t\t\t\t\t\t}, this);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tdelete this._eventSeries[run.name];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.labels){\n\t\t\t\t\t\tvar labelBoxW = markerBox?markerBox.width:2;\n\t\t\t\t\t\tvar labelBoxH = markerBox?markerBox.height:2;\n\t\t\t\t\t\tarr.forEach(lpoly, function(c, i){\n\t\t\t\t\t\t\tif(this.opt.styleFunc || typeof c.data != \"number\"){\n\t\t\t\t\t\t\t\tvar tMixin = typeof c.data != \"number\" ? [c.data] : [];\n\t\t\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(c.data));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmarkerTheme = t.addMixin(theme, \"marker\", tMixin, true);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tmarkerTheme = t.post(theme, \"marker\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.createLabel(s, rsegment.rseg[i], { x: c.x - labelBoxW / 2, y: c.y - labelBoxH / 2,\n\t\t\t\t\t\t\t\twidth: labelBoxW , height: labelBoxH }, markerTheme);\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\tif(this.animate){\n\t\t\t\t// grow from the bottom\n\t\t\t\tvar plotGroup = this.getGroup();\n\t\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\t\tshape: plotGroup,\n\t\t\t\t\tduration: DEFAULT_ANIMATION_LENGTH,\n\t\t\t\t\ttransform:[\n\t\t\t\t\t\t{name:\"translate\", start: [0, dim.height - offsets.b], end: [0, 0]},\n\t\t\t\t\t\t{name:\"scale\", start: [1, 0], end:[1, 1]},\n\t\t\t\t\t\t{name:\"original\"}\n\t\t\t\t\t]\n\t\t\t\t}, this.animate)).play();\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Default\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 226:\n/*!*******************************************!*\\\n  !*** ../dojox/charting/axis2d/Default.js ***!\n  \\*******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/sniff */ 8), __webpack_require__(/*! dojo/_base/declare */ 4),\n\t__webpack_require__(/*! dojo/_base/connect */ 36), __webpack_require__(/*! dojo/dom-geometry */ 17), __webpack_require__(/*! ./Invisible */ 266),\n\t__webpack_require__(/*! ../scaler/linear */ 267), __webpack_require__(/*! ./common */ 246), __webpack_require__(/*! dojox/gfx */ 237), __webpack_require__(/*! dojox/lang/utils */ 235), __webpack_require__(/*! dojox/lang/functional */ 234),\n\t__webpack_require__.dj.h(/*! dojo/has!dojo-bidi?../bidi/axis2d/Default */ \"dojo-bidi?304\")], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, arr, has, declare, connect, domGeom, Invisible,\n\t\t\tlin, acommon, g, du, df, BidiDefault){\n\n\t/*=====\n\tvar __AxisCtorArgs = {\n\t\t// summary:\n\t\t//\t\tOptional arguments used in the definition of an axis.\n\t\t// vertical: Boolean?\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\n\t\t// fixUpper: String?\n\t\t//\t\tAlign the greatest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\n\t\t// fixLower: String?\n\t\t//\t\tAlign the smallest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\n\t\t// natural: Boolean?\n\t\t//\t\tEnsure tick marks are made on \"natural\" numbers. Defaults to false.\n\t\t// leftBottom: Boolean?\n\t\t//\t\tDeprecated: use position instead. The position of a vertical axis; if true, will be placed against the left-bottom corner of the chart.  Defaults to true.\n\t\t// includeZero: Boolean?\n\t\t//\t\tInclude 0 on the axis rendering.  Default is false.\n\t\t// fixed: Boolean?\n\t\t//\t\tForce all axis labels to be fixed numbers.  Default is true.\n\t\t// majorLabels: Boolean?\n\t\t//\t\tFlag to draw labels at major ticks. Default is true.\n\t\t// minorTicks: Boolean?\n\t\t//\t\tFlag to draw minor ticks on an axis.  Default is true.\n\t\t// minorLabels: Boolean?\n\t\t//\t\tFlag to labels on minor ticks when there is enough space. Default is true.\n\t\t// microTicks: Boolean?\n\t\t//\t\tFlag to draw micro ticks on an axis. Default is false.\n\t\t// htmlLabels: Boolean?\n\t\t//\t\tFlag to use HTML (as opposed to the native vector graphics engine) to draw labels. Default is true.\n\t\t// min: Number?\n\t\t//\t\tThe smallest value on an axis. Default is 0.\n\t\t// max: Number?\n\t\t//\t\tThe largest value on an axis. Default is 1.\n\t\t// from: Number?\n\t\t//\t\tForce the chart to render data visible from this value. Default is 0.\n\t\t// to: Number?\n\t\t//\t\tForce the chart to render data visible to this value. Default is 1.\n\t\t// majorTickStep: Number?\n\t\t//\t\tThe amount to skip before a major tick is drawn. When not set the major ticks step is computed from\n\t\t//\t\tthe data range.\n\t\t// minorTickStep: Number?\n\t\t//\t\tThe amount to skip before a minor tick is drawn. When not set the minor ticks step is computed from\n\t\t//\t\tthe data range.\n\t\t// microTickStep: Number?\n\t\t//\t\tThe amount to skip before a micro tick is drawn. When not set the micro ticks step is computed from\n\t\t// labels: Object[]?\n\t\t//\t\tAn array of labels for major ticks, with corresponding numeric values, ordered by value.\n\t\t// labelFunc: Function?\n\t\t//\t\tAn optional function to use to compute label text. It takes precedence over\n\t\t//\t\tthe default text when available. The function must be of the following form:\n\t\t//\t|\t\tfunction labelFunc(text, value, precision) {}\n\t\t//\t\t`text` is the already pre-formatted text. Pre-formatting is done using `dojo/number` is available, `Date.toFixed` otherwise.\n\t\t//\t\t`value`  is the raw axis value.\n\t\t//\t\t`precision` is the requested precision to be applied.\n\t\t// maxLabelSize: Number?\n\t\t//\t\tThe maximum size, in pixels, for a label.  To be used with the optional label function.\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to be used for drawing an axis.\n\t\t// majorTick: Object?\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a major tick.\n\t\t// minorTick: Object?\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a minor tick.\n\t\t// microTick: Object?\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a micro tick.\n\t\t// tick: Object?\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a tick.\n\t\t// font: String?\n\t\t//\t\tAn optional font definition (as used in the CSS font property) for labels.\n\t\t// fontColor: String|dojo.Color?\n\t\t//\t\tAn optional color to be used in drawing labels.\n\t\t// titleGap: Number?\n\t\t//\t\tAn optional grap between axis title and axis label\n\t\t// titleFont: String?\n\t\t//\t\tAn optional font definition for axis title\n\t\t// titleFontColor: String?\n\t\t//\t\tAn optional axis title color\n\t\t// titleOrientation: String?\n\t\t//\t\tAn optional orientation for axis title. \"axis\" means the title facing the axis, \"away\" means facing away.\n\t\t//\t\tIf no value is set \"axis\" is used.\n\t\t// enableCache: Boolean?\n\t\t//\t\tWhether the ticks and labels are cached from one rendering to another. This improves the rendering performance of\n\t\t//\t\tsuccessive rendering but penalize the first rendering. For labels it is only working with gfx labels\n\t\t//\t\tnot html ones.  Default false.\n\t\t// dropLabels: Boolean?\n\t\t//\t\tWhether the axis automatically drops labels at regular interval or not to avoid labels overlapping.\n\t\t//\t\tThis gives better results but require more computations.  You can disable it to save computation\n\t\t//\t\ttime when you know your labels won't overlap. Default is true.\n\t\t// labelSizeChange: Boolean?\n\t\t//\t\tIndicates to the axis whether the axis labels are changing their size on zoom. If false this allows to\n\t\t//\t\toptimize the axis by avoiding recomputing labels maximum size on zoom actions. Default is false.\n\t\t// position: String?\n\t\t//\t\tThe position of the axis. Values: \"leftOrBottom\", \"center\" or \"rightOrTop\". Default is \"leftOrBottom\".\n\t};\n\t=====*/\n\n\tvar centerAnchorLimit = 45;\t// in degrees\n\n\tvar Default = declare(has(\"dojo-bidi\")? \"dojox.charting.axis2d.NonBidiDefault\" : \"dojox.charting.axis2d.Default\", Invisible, {\n\t\t// summary:\n\t\t//\t\tThe default axis object used in dojox.charting.  See dojox.charting.Chart.addAxis for details.\n\n\t\t// defaultParams: Object\n\t\t//\t\tThe default parameters used to define any axis.\n\t\t// optionalParams: Object\n\t\t//\t\tAny optional parameters needed to define an axis.\n\n\t\t/*=====\n\t\t// TODO: the documentation tools need these to be pre-defined in order to pick them up\n\t\t//\tcorrectly, but the code here is partially predicated on whether or not the properties\n\t\t//\tactually exist.  For now, we will leave these undocumented but in the code for later. -- TRT\n\n\t\t// opt: Object\n\t\t//\t\tThe actual options used to define this axis, created at initialization.\n\t\t// scaler: Object\n\t\t//\t\tThe calculated helper object to tell charts how to draw an axis and any data.\n\t\t// ticks: Object\n\t\t//\t\tThe calculated tick object that helps a chart draw the scaling on an axis.\n\t\t// dirty: Boolean\n\t\t//\t\tThe state of the axis (whether it needs to be redrawn or not)\n\t\t// scale: Number\n\t\t//\t\tThe current scale of the axis.\n\t\t// offset: Number\n\t\t//\t\tThe current offset of the axis.\n\n\t\topt: null,\n\t\tscaler: null,\n\t\tticks: null,\n\t\tdirty: true,\n\t\tscale: 1,\n\t\toffset: 0,\n\t\t=====*/\n\t\tdefaultParams: {\n\t\t\tvertical:\tfalse,\t\t// true for vertical axis\n\t\t\tfixUpper:\t\"none\",\t// align the upper on ticks: \"major\", \"minor\", \"micro\", \"none\"\n\t\t\tfixLower:\t\"none\",\t// align the lower on ticks: \"major\", \"minor\", \"micro\", \"none\"\n\t\t\tnatural:\t false,\t\t// all tick marks should be made on natural numbers\n\t\t\tleftBottom:  true,\t\t// position of the axis, used with \"vertical\" - deprecated: use position instead\n\t\t\tincludeZero: false,\t\t// 0 should be included\n\t\t\tfixed:\t   true,\t\t// all labels are fixed numbers\n\t\t\tmajorLabels: true,\t\t// draw major labels\n\t\t\tminorTicks:  true,\t\t// draw minor ticks\n\t\t\tminorLabels: true,\t\t// draw minor labels\n\t\t\tmicroTicks:  false,\t\t// draw micro ticks\n\t\t\trotation:\t0,\t\t\t// label rotation angle in degrees\n\t\t\thtmlLabels:  true,\t\t// use HTML to draw labels\n\t\t\tenableCache: false,\t\t// whether we cache or not\n\t\t\tdropLabels: true,\t\t// whether we automatically drop overlapping labels or not\n\t\t\tlabelSizeChange: false, // whether the labels size change on zoom\n\t\t\tposition: \"leftOrBottom\" // position of the axis: \"leftOrBottom\" (default), \"center\" or \"rightOrTop\"\n\t\t},\n\t\toptionalParams: {\n\t\t\tmin:\t\t\t0,\t// minimal value on this axis\n\t\t\tmax:\t\t\t1,\t// maximal value on this axis\n\t\t\tfrom:\t\t\t0,\t// visible from this value\n\t\t\tto:\t\t\t\t1,\t// visible to this value\n\t\t\tmajorTickStep:\t4,\t// major tick step\n\t\t\tminorTickStep:\t2,\t// minor tick step\n\t\t\tmicroTickStep:\t1,\t// micro tick step\n\t\t\tlabels:\t\t\t[],\t// array of labels for major ticks\n\t\t\t// with corresponding numeric values\n\t\t\t// ordered by values\n\t\t\tlabelFunc:\t\tnull, // function to compute label values\n\t\t\tmaxLabelSize:\t0,\t// size in px. For use with labelFunc\n\t\t\tmaxLabelCharCount:\t0,\t// size in word count.\n\t\t\ttrailingSymbol:\tnull,\n\n\t\t\t// TODO: add support for minRange!\n\t\t\t// minRange:\t\t1,\t// smallest distance from min allowed on the axis\n\n\t\t\t// theme components\n\t\t\tstroke:\t\t\t{},\t// stroke for an axis\n\t\t\tmajorTick:\t\t{},\t// stroke + length for a tick\n\t\t\tminorTick:\t\t{},\t// stroke + length for a tick\n\t\t\tmicroTick:\t\t{},\t// stroke + length for a tick\n\t\t\ttick:\t\t   {},\t// stroke + length for a tick\n\t\t\tfont:\t\t\t\"\",\t// font for labels\n\t\t\tfontColor:\t\t\"\",\t// color for labels as a string\n\t\t\ttitle:\t\t\t\t \"\",\t// axis title\n\t\t\ttitleGap:\t\t\t 0,\t\t// gap between axis title and axis label\n\t\t\ttitleFont:\t\t\t \"\",\t\t// axis title font\n\t\t\ttitleFontColor:\t\t \"\",\t\t// axis title font color\n\t\t\ttitleOrientation:\t \"\"\t\t// \"axis\" means the title facing the axis, \"away\" means facing away\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for an axis.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart the axis belongs to.\n\t\t\t// kwArgs: __AxisCtorArgs?\n\t\t\t//\t\tAny optional keyword arguments to be used to define this axis.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._textFreePool = [];\n\t\t\t\tthis._lineFreePool = [];\n\t\t\t\tthis._textUsePool = [];\n\t\t\t\tthis._lineUsePool = [];\n\t\t\t}\n\t\t\tthis._invalidMaxLabelSize = true;\n\t\t\t// replace deprecated leftBotton to position\n\t\t\tif(!(kwArgs && ('position' in kwArgs))){\n\t\t\t    this.opt.position = this.opt.leftBottom ? \"leftOrBottom\" : \"rightOrTop\";\n\t\t\t}\t\t\t\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\n\t\t},\n\t\tsetWindow: function(scale, offset){\n\t\t\t// summary:\n\t\t\t//\t\tSet the drawing \"window\" for the axis.\n\t\t\t// scale: Number\n\t\t\t//\t\tThe new scale for the axis.\n\t\t\t// offset: Number\n\t\t\t//\t\tThe new offset for the axis.\n\t\t\t// returns: dojox/charting/axis2d/Default\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\tif(scale != this.scale){\n\t\t\t\t// if scale changed we need to recompute new max label size\n\t\t\t\tthis._invalidMaxLabelSize = true;\n\t\t\t}\n\t\t\treturn this.inherited(arguments);\n\t\t},\n\n\t\t_groupLabelWidth: function(labels, font, wcLimit){\n\t\t\tif(!labels.length){\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif(labels.length > 50){\n\t\t\t\t// let's avoid degenerated cases\n\t\t\t\tlabels.length = 50;\n\t\t\t}\n\t\t\tif(lang.isObject(labels[0])){\n\t\t\t\tlabels = df.map(labels, function(label){ return label.text; });\n\t\t\t}\n\t\t\tif(wcLimit){\n\t\t\t\tlabels = df.map(labels, function(label){\n\t\t\t\t\treturn lang.trim(label).length == 0 ? \"\" : label.substring(0, wcLimit) + this.trailingSymbol;\n\t\t\t\t}, this);\n\t\t\t}\n\t\t\tvar s = labels.join(\"<br>\");\n\t\t\treturn g._base._getTextBox(s, {font: font}).w || 0;\n\t\t},\n\n\t\t_getMaxLabelSize: function(min, max, span, rotation, font, size){\n\t\t\tif(this._maxLabelSize == null && arguments.length == 6){\n\t\t\t\tvar o = this.opt;\n\t\t\t\t// everything might have changed, reset the minMinorStep value\n\t\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep = 0;\n\t\t\t\tvar ob = lang.clone(o);\n\t\t\t\tdelete ob.to;\n\t\t\t\tdelete ob.from;\n\t\t\t\t// build all the ticks from min, to max not from to to _but_ using the step\n\t\t\t\t// that would be used if we where just displaying from to to from.\n\t\t\t\tvar sb = lin.buildScaler(min, max, span, ob, o.to - o.from);\n\t\t\t\tsb.minMinorStep = 0;\n\t\t\t\tthis._majorStart = sb.major.start;\n\t\t\t\t// we build all the ticks not only the ones we need to draw in order to get\n\t\t\t\t// a correct drop rate computation that works for any offset of this scale\n\t\t\t\tvar tb = lin.buildTicks(sb, o);\n\t\t\t\t// if there is not tick at all tb is null\n\t\t\t\tif(size && tb){\n\t\t\t\t\tvar majLabelW = 0, minLabelW = 0; // non rotated versions\n\t\t\t\t\t// we first collect all labels when needed\n\t\t\t\t\tvar tickLabelFunc = function(tick){\n\t\t\t\t\t\tif(tick.label){\n\t\t\t\t\t\t\tthis.push(tick.label);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tvar labels = [];\n\t\t\t\t\tif(this.opt.majorLabels){\n\t\t\t\t\t\tarr.forEach(tb.major, tickLabelFunc, labels);\n\t\t\t\t\t\tmajLabelW = this._groupLabelWidth(labels, font, ob.maxLabelCharCount);\n\t\t\t\t\t\tif(ob.maxLabelSize){\n\t\t\t\t\t\t\tmajLabelW = Math.min(ob.maxLabelSize, majLabelW);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// do the minor labels computation only if dropLabels is set\n\t\t\t\t\tlabels = [];\n\t\t\t\t\tif(this.opt.dropLabels && this.opt.minorLabels){\n\t\t\t\t\t\tarr.forEach(tb.minor, tickLabelFunc, labels);\n\t\t\t\t\t\tminLabelW = this._groupLabelWidth(labels, font, ob.maxLabelCharCount);\n\t\t\t\t\t\tif(ob.maxLabelSize){\n\t\t\t\t\t\t\tminLabelW = Math.min(ob.maxLabelSize, minLabelW);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._maxLabelSize = {\n\t\t\t\t\t\tmajLabelW: majLabelW, minLabelW: minLabelW,\n\t\t\t\t\t\tmajLabelH: size, minLabelH: size\n\t\t\t\t\t};\n\t\t\t\t}else{\n\t\t\t\t\tthis._maxLabelSize = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._maxLabelSize;\n\t\t},\n\n\t\tcalculate: function(min, max, span){\n\t\t\tthis.inherited(arguments);\n\t\t\t// when the scale has not changed there is no reason for minMinorStep to change\n\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep;\n\t\t\t// we want to recompute the dropping mechanism only when the scale or the size of the axis is changing\n\t\t\t// not when for example when we scroll (otherwise effect would be weird)\n\t\t\tif((this._invalidMaxLabelSize || span != this._oldSpan) && (min != Infinity && max != -Infinity)){\n\t\t\t\tthis._invalidMaxLabelSize = false;\n\t\t\t\tif(this.opt.labelSizeChange){\n\t\t\t\t\tthis._maxLabelSize = null;\n\t\t\t\t}\n\t\t\t\tthis._oldSpan = span;\n\t\t\t\tvar o = this.opt;\n\t\t\t\tvar ta = this.chart.theme.axis, rotation = o.rotation % 360,\n\t\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\n\t\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\n\t\t\t\t\tfont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font),\n\t\t\t\t\tsize = font ? g.normalizedLength(g.splitFontString(font).size) : 0,\n\t\t\t\t\t// even if we don't drop label we need to compute max size for offsets\n\t\t\t\t\tlabelW = this._getMaxLabelSize(min, max, span, rotation, font, size);\n\t\t\t\tif(typeof labelGap != \"number\"){\n\t\t\t\t\tlabelGap = 4; // in pixels\n\t\t\t\t}\n\t\t\t\tif(labelW && o.dropLabels){\n\t\t\t\t\tvar cosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\n\t\t\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180));\n\t\t\t\t\tvar majLabelW, minLabelW;\n\t\t\t\t\tif(rotation < 0){\n\t\t\t\t\t\trotation += 360;\n\t\t\t\t\t}\n\t\t\t\t\tswitch(rotation){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcase 180:\n\t\t\t\t\t\t\t// trivial cases: horizontal labels\n\t\t\t\t\t\t\tif(this.vertical){\n\t\t\t\t\t\t\t\tmajLabelW = minLabelW = size;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tmajLabelW = labelW.majLabelW;\n\t\t\t\t\t\t\t\tminLabelW = labelW.minLabelW;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 90:\n\t\t\t\t\t\tcase 270:\n\t\t\t\t\t\t\t// trivial cases: vertical\n\t\t\t\t\t\t\tif(this.vertical){\n\t\t\t\t\t\t\t\tmajLabelW = labelW.majLabelW;\n\t\t\t\t\t\t\t\tminLabelW = labelW.minLabelW;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tmajLabelW = minLabelW = size;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// all major labels are parallel they can't collapse except if the two ticks are\n\t\t\t\t\t\t\t// closer than the height of the text * cos(90-rotation)\n\t\t\t\t\t\t\tmajLabelW  = this.vertical ? Math.min(labelW.majLabelW, size / cosr) : Math.min(labelW.majLabelW, size / sinr);\n\t\t\t\t\t\t\t// for minor labels we need to rotated them\n\t\t\t\t\t\t\tvar gap1 = Math.sqrt(labelW.minLabelW * labelW.minLabelW + size * size),\n\t\t\t\t\t\t\t\tgap2 = this.vertical ? size * cosr + labelW.minLabelW * sinr : labelW.minLabelW * cosr + size * sinr;\n\t\t\t\t\t\t\tminLabelW = Math.min(gap1, gap2);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// we need to check both minor and major labels fit a minor step\n\t\t\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep =  Math.max(majLabelW, minLabelW) + labelGap;\n\t\t\t\t\tvar canMinorLabel = this.scaler.minMinorStep <= this.scaler.minor.tick * this.scaler.bounds.scale;\n\t\t\t\t\tif(!canMinorLabel){\n\t\t\t\t\t\t// we can't place minor labels, let's see if we can place major ones\n\t\t\t\t\t\t// in a major step and if not which skip interval we must follow\n\t\t\t\t\t\tthis._skipInterval = Math.floor((majLabelW + labelGap) / (this.scaler.major.tick * this.scaler.bounds.scale));\n\t\t\t\t\t}else{\n\t\t\t\t\t\t// everything fit well\n\t\t\t\t\t\tthis._skipInterval = 0;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t// drop label disabled\n\t\t\t\t\tthis._skipInterval = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// computes the tick subset we need for that scale/offset\n\t\t\tthis.ticks = lin.buildTicks(this.scaler, this.opt);\n\t\t\treturn this;\n\t\t},\n\n\t\tgetOffsets: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the physical offset values for this axis (used in drawing data series). This method is not\n\t\t\t//\t\tsupposed to be called by the users but internally.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe calculated offsets in the form of { l, r, t, b } (left, right, top, bottom).\n\t\t\tvar s = this.scaler, offsets = { l: 0, r: 0, t: 0, b: 0 };\n\t\t\tif(!s){\n\t\t\t\treturn offsets;\n\t\t\t}\n\t\t\tvar o = this.opt,\n\t\t\t\tta = this.chart.theme.axis,\n\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\n\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\n\t\t\t\ttaTitleFont = o.titleFont || (ta.title && ta.title.font),\n\t\t\t\ttaTitleGap = (o.titleGap==0) ? 0 : o.titleGap || (ta.title && ta.title.gap),\n\t\t\t\ttaMajorTick = this.chart.theme.getTick(\"major\", o),\n\t\t\t\ttaMinorTick = this.chart.theme.getTick(\"minor\", o),\n\t\t\t\ttsize = taTitleFont ? g.normalizedLength(g.splitFontString(taTitleFont).size) : 0,\n\t\t\t\trotation = o.rotation % 360, position = o.position, \n\t\t\t\tleftBottom = position !== \"rightOrTop\",\n\t\t\t\tcosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\n\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180));\n\t\t\tthis.trailingSymbol = (o.trailingSymbol === undefined || o.trailingSymbol === null) ?\n\t\t\t\tthis.trailingSymbol : o.trailingSymbol;\n\t\t\tif(typeof labelGap != \"number\"){\n\t\t\t\tlabelGap = 4; // in pixels\n\t\t\t}\n\t\t\tif(rotation < 0){\n\t\t\t\trotation += 360;\n\t\t\t}\n\t\t\tvar maxLabelSize = this._getMaxLabelSize(); // don't need parameters, calculate has been called before => we use cached value\n\t\t\tif(maxLabelSize){\n\t\t\t\tvar side;\n\t\t\t\tvar labelWidth = Math.ceil(Math.max(maxLabelSize.majLabelW, maxLabelSize.minLabelW)) + 1,\n\t\t\t\t\tsize = Math.ceil(Math.max(maxLabelSize.majLabelH, maxLabelSize.minLabelH)) + 1;\n\t\t\t\tif(this.vertical){\n\t\t\t\t\tside = leftBottom ? \"l\" : \"r\";\n\t\t\t\t\tswitch(rotation){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcase 180:\n\t\t\t\t\t\t\toffsets[side] = position === \"center\" ? 0 : labelWidth;\n\t\t\t\t\t\t\toffsets.t = offsets.b = size / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 90:\n\t\t\t\t\t\tcase 270:\n\t\t\t\t\t\t\toffsets[side] = size;\n\t\t\t\t\t\t\toffsets.t = offsets.b = labelWidth / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif(rotation <= centerAnchorLimit || (180 < rotation && rotation <= (180 + centerAnchorLimit))){\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr / 2 + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr / 2 + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr / 2;\n\t\t\t\t\t\t\t}else if(rotation > (360 - centerAnchorLimit) || (180 > rotation && rotation > (180 - centerAnchorLimit))){\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr / 2 + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr / 2 + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr / 2;\n\t\t\t\t\t\t\t}else if(rotation < 90 || (180 < rotation && rotation < 270)){\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr + labelWidth * sinr;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr + labelWidth * sinr;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(position === \"center\"){\n\t\t\t\t\t    offsets[side] = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse{\t\t\t\t\t\n\t\t\t\t\t    offsets[side] += labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) + (o.title ? (tsize + taTitleGap) : 0);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tside = leftBottom ? \"b\" : \"t\";\n\t\t\t\t\tswitch(rotation){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcase 180:\n\t\t\t\t\t\t\toffsets[side] = position === \"center\" ? 0 : size;\n\t\t\t\t\t\t\toffsets.l = offsets.r = labelWidth / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 90:\n\t\t\t\t\t\tcase 270:\n\t\t\t\t\t\t\toffsets[side] = labelWidth;\n\t\t\t\t\t\t\toffsets.l = offsets.r = size / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif((90 - centerAnchorLimit) <= rotation && rotation <= 90 || (270 - centerAnchorLimit) <= rotation && rotation <= 270){\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr / 2 + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr / 2 + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr / 2;\n\t\t\t\t\t\t\t}else if(90 <= rotation && rotation <= (90 + centerAnchorLimit) || 270 <= rotation && rotation <= (270 + centerAnchorLimit)){\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr / 2 + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr / 2 + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr / 2;\n\t\t\t\t\t\t\t}else if(rotation < centerAnchorLimit || (180 < rotation && rotation < (180 + centerAnchorLimit))){\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr + labelWidth * cosr;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr + labelWidth * cosr;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(position === \"center\"){\n\t\t\t\t\t    offsets[side] = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse{\t\t\t\t\t\n\t\t\t\t\toffsets[side] += labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) + (o.title ? (tsize + taTitleGap) : 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn offsets;\t//\tObject\n\t\t},\n\t\tcleanGroup: function(creator){\n\t\t\tif(this.opt.enableCache && this.group){\n\t\t\t\tthis._lineFreePool = this._lineFreePool.concat(this._lineUsePool);\n\t\t\t\tthis._lineUsePool = [];\n\t\t\t\tthis._textFreePool = this._textFreePool.concat(this._textUsePool);\n\t\t\t\tthis._textUsePool = [];\n\t\t\t}\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\tcreateText: function(labelType, creator, x, y, align, textContent, font, fontColor, labelWidth){\n\t\t\tif(!this.opt.enableCache || labelType==\"html\"){\n\t\t\t\treturn acommon.createText[labelType](\n\t\t\t\t\t\tthis.chart,\n\t\t\t\t\t\tcreator,\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\talign,\n\t\t\t\t\t\ttextContent,\n\t\t\t\t\t\tfont,\n\t\t\t\t\t\tfontColor,\n\t\t\t\t\t\tlabelWidth\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tvar text;\n\t\t\tif(this._textFreePool.length > 0){\n\t\t\t\ttext = this._textFreePool.pop();\n\t\t\t\ttext.setShape({x: x, y: y, text: textContent, align: align});\n\t\t\t\t// For now all items share the same font, no need to re-set it\n\t\t\t\t//.setFont(font).setFill(fontColor);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(text);\n\t\t\t}else{\n\t\t\t\ttext = acommon.createText[labelType](\n\t\t\t\t\t\tthis.chart,\n\t\t\t\t\t\tcreator,\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\talign,\n\t\t\t\t\t\ttextContent,\n\t\t\t\t\t\tfont,\n\t\t\t\t\t\tfontColor\t\t\t\t\t\t\n\t\t\t\t\t);\t\t\t\n\t\t\t}\n\t\t\tthis._textUsePool.push(text);\n\t\t\treturn text;\n\t\t},\n\t\tcreateLine: function(creator, params){\n\t\t\tvar line;\n\t\t\tif(this.opt.enableCache && this._lineFreePool.length > 0){\n\t\t\t\tline = this._lineFreePool.pop();\n\t\t\t\tline.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(line);\n\t\t\t}else{\n\t\t\t\tline = creator.createLine(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._lineUsePool.push(line);\n\t\t\t}\n\t\t\treturn line;\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender/draw the axis.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height}.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/axis2d/Default\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\t\n\t\t\tvar isRtl = this._isRtl();\t// chart mirroring\n\t\t\tif(!this.dirty || !this.scaler){\n\t\t\t\treturn this;\t//\tdojox/charting/axis2d/Default\n\t\t\t}\n\t\t\t// prepare variable\n\t\t\tvar o = this.opt, ta = this.chart.theme.axis, position = o.position, \n\t\t\t       leftBottom = position !== \"rightOrTop\", rotation = o.rotation % 360,\n\t\t\t\tstart, stop, titlePos, titleRotation=0, titleOffset, axisVector, tickVector, anchorOffset, labelOffset, labelAlign,\n\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\n\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\n\t\t\t\ttaFont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font),\n\t\t\t\ttaTitleFont = o.titleFont || (ta.title && ta.title.font),\n\t\t\t\t// TODO: we use one font color --- we need to use different colors\n\t\t\t\ttaFontColor = o.fontColor || (ta.majorTick && ta.majorTick.fontColor) || (ta.tick && ta.tick.fontColor) || \"black\",\n\t\t\t\ttaTitleFontColor = o.titleFontColor || (ta.title && ta.title.fontColor) || \"black\",\n\t\t\t\ttaTitleGap = (o.titleGap==0) ? 0 : o.titleGap || (ta.title && ta.title.gap) || 15,\n\t\t\t\ttaTitleOrientation = o.titleOrientation || (ta.title && ta.title.orientation) || \"axis\",\n\t\t\t\ttaMajorTick = this.chart.theme.getTick(\"major\", o),\n\t\t\t\ttaMinorTick = this.chart.theme.getTick(\"minor\", o),\n\t\t\t\ttaMicroTick = this.chart.theme.getTick(\"micro\", o),\n\n\t\t\t\ttaStroke = \"stroke\" in o ? o.stroke : ta.stroke,\n\t\t\t\tsize = taFont ? g.normalizedLength(g.splitFontString(taFont).size) : 0,\n\t\t\t\tcosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\n\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180)),\n\t\t\t\ttsize = taTitleFont ? g.normalizedLength(g.splitFontString(taTitleFont).size) : 0;\n\t\t\tif(typeof labelGap != \"number\"){\n\t\t\t\tlabelGap = 4; // in pixels\n\t\t\t}\n\t\t\tif(rotation < 0){\n\t\t\t\trotation += 360;\n\t\t\t}\n\t\t\tvar cachedLabelW = this._getMaxLabelSize();\n\t\t\tcachedLabelW = cachedLabelW && cachedLabelW.majLabelW;\n\t\t\tif(this.vertical){\n\t\t\t\tstart = {y: dim.height - offsets.b};\n\t\t\t\tstop  = {y: offsets.t};\n\t\t\t\ttitlePos = {y: (dim.height - offsets.b + offsets.t)/2};\n\t\t\t\ttitleOffset = size * sinr + (cachedLabelW || 0) * cosr + labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) +\n\t\t\t\t\ttsize + taTitleGap;\n\t\t\t\taxisVector = {x: 0, y: -1};\n\t\t\t\tlabelOffset = {x: 0, y: 0};\n\t\t\t\ttickVector = {x: 1, y: 0};\n\t\t\t\tanchorOffset = {x: labelGap, y: 0};\n\t\t\t\tswitch(rotation){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\tlabelOffset.y = size * 0.4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 90:\n\t\t\t\t\t\tlabelAlign = \"middle\";\n\t\t\t\t\t\tlabelOffset.x = -size;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 180:\n\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\tlabelOffset.y = -size * 0.4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 270:\n\t\t\t\t\t\tlabelAlign = \"middle\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(rotation < centerAnchorLimit){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\n\t\t\t\t\t\t}else if(rotation < 90){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\n\t\t\t\t\t\t}else if(rotation < (180 - centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t}else if(rotation < (180 + centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.y = -size * 0.4;\n\t\t\t\t\t\t}else if(rotation < 270){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.x = leftBottom ? 0 : size * 0.4;\n\t\t\t\t\t\t}else if(rotation < (360 - centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.x = leftBottom ? 0 : size * 0.4;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(leftBottom){\n\t\t\t\t\tstart.x = stop.x = position === \"center\" ? dim.width/2 : offsets.l;\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"away\") ? 90 : 270;\n\t\t\t\t\ttitlePos.x = offsets.l - titleOffset + (titleRotation == 270 ? tsize : 0);\n\t\t\t\t\ttickVector.x = -1;\n\t\t\t\t\tanchorOffset.x = -anchorOffset.x;\n\t\t\t\t}else{\n\t\t\t\t\tstart.x = stop.x = dim.width - offsets.r;\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"axis\") ? 90 : 270;\n\t\t\t\t\ttitlePos.x = dim.width - offsets.r + titleOffset - (titleRotation == 270 ? 0 : tsize);\n\t\t\t\t\tswitch(labelAlign){\n\t\t\t\t\t\tcase \"start\":\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\t\tlabelOffset.x += size;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tstart = {x: offsets.l};\n\t\t\t\tstop  = {x: dim.width - offsets.r};\n\t\t\t\ttitlePos = {x: (dim.width - offsets.r + offsets.l)/2};\n\t\t\t\ttitleOffset = size * cosr + (cachedLabelW || 0) * sinr + labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) +\n\t\t\t\t\ttsize + taTitleGap;\n\t\t\t\taxisVector = {x: isRtl ? -1 : 1, y: 0}; \t// chart mirroring\n\t\t\t\tlabelOffset = {x: 0, y: 0};\n\t\t\t\ttickVector = {x: 0, y: 1};\n\t\t\t\tanchorOffset = {x: 0, y: labelGap};\n\t\t\t\tswitch(rotation){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tlabelAlign = \"middle\";\n\t\t\t\t\t\tlabelOffset.y = size;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 90:\n\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\tlabelOffset.x = -size * 0.4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 180:\n\t\t\t\t\t\tlabelAlign = \"middle\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 270:\n\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\tlabelOffset.x = size * 0.4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(rotation < (90 - centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size : 0;\n\t\t\t\t\t\t}else if(rotation < (90 + centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.x = -size * 0.4;\n\t\t\t\t\t\t}else if(rotation < 180){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? 0 : -size;\n\t\t\t\t\t\t}else if(rotation < (270 - centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? 0 : -size;\n\t\t\t\t\t\t}else if(rotation < (270 + centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size * 0.4 : 0;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size : 0;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(leftBottom){\n\t\t\t\t\tstart.y = stop.y = position === \"center\" ? dim.height/2 : dim.height - offsets.b;\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"axis\") ? 180 : 0;\n\t\t\t\t\ttitlePos.y = dim.height - offsets.b + titleOffset - (titleRotation ? tsize : 0);\n\t\t\t\t}else{\n\t\t\t\t\tstart.y = stop.y = offsets.t;\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"away\") ? 180 : 0;\n\t\t\t\t\ttitlePos.y = offsets.t - titleOffset + (titleRotation ? 0 : tsize);\n\t\t\t\t\ttickVector.y = -1;\n\t\t\t\t\tanchorOffset.y = -anchorOffset.y;\n\t\t\t\t\tswitch(labelAlign){\n\t\t\t\t\t\tcase \"start\":\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\t\tlabelOffset.y -= size;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// render shapes\n\n\t\t\tthis.cleanGroup();\n\n\t\t\tvar s = this.group,\n\t\t\t\tc = this.scaler,\n\t\t\t\tt = this.ticks,\n\t\t\t\tf = lin.getTransformerFromModel(this.scaler),\n\t\t\t\t// GFX Canvas now supports labels, so let's _not_ fallback to HTML anymore on canvas, just use\n\t\t\t\t// HTML labels if explicitly asked + no rotation + no IE + no Opera\n\t\t\t\tlabelType = (!o.title || !titleRotation) && !rotation && this.opt.htmlLabels && !has(\"ie\") && !has(\"opera\") ? \"html\" : \"gfx\",\n\t\t\t\tdx = tickVector.x * taMajorTick.length,\n\t\t\t\tdy = tickVector.y * taMajorTick.length,\n\t\t\t\tskip = this._skipInterval;\n\n\t\t\ts.createLine({\n\t\t\t\tx1: start.x,\n\t\t\t\ty1: start.y,\n\t\t\t\tx2: stop.x,\n\t\t\t\ty2: stop.y\n\t\t\t}).setStroke(taStroke);\n\n\t\t\t//create axis title\n\t\t\tif(o.title){\n\t\t\t\tvar axisTitle = acommon.createText[labelType](\n\t\t\t\t\tthis.chart,\n\t\t\t\t\ts,\n\t\t\t\t\ttitlePos.x,\n\t\t\t\t\ttitlePos.y,\n\t\t\t\t\t\"middle\",\n\t\t\t\t\to.title,\n\t\t\t\t\ttaTitleFont,\n\t\t\t\t\ttaTitleFontColor\n\t\t\t\t);\n\t\t\t\tif(labelType == \"html\"){\n\t\t\t\t\tthis.htmlElements.push(axisTitle);\n\t\t\t\t}else{\n\t\t\t\t\t//as soon as rotation is provided, labelType won't be \"html\"\n\t\t\t\t\t//rotate gfx labels\n\t\t\t\t\taxisTitle.setTransform(g.matrix.rotategAt(titleRotation, titlePos.x, titlePos.y));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// go out nicely instead of try/catch\n\t\t\tif(t == null){\n\t\t\t\tthis.dirty = false;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar rel = (t.major.length > 0)?(t.major[0].value - this._majorStart) / c.major.tick:0;\n\t\t\tvar canLabel = this.opt.majorLabels;\n\t\t\tarr.forEach(t.major, function(tick, i){\n\t\t\t\tvar offset = f(tick.value), elem,\n\t\t\t\t\tx = (isRtl ? stop.x : start.x) + axisVector.x * offset, // chart mirroring\n\t\t\t\t\ty = start.y + axisVector.y * offset;\n\t\t\t\ti += rel;\n\t\t\t\tthis.createLine(s, {\n\t\t\t\t\tx1: x, y1: y,\n\t\t\t\t\tx2: x + dx,\n\t\t\t\t\ty2: y + dy\n\t\t\t\t}).setStroke(taMajorTick);\n\t\t\t\tif(tick.label && (!skip || (i - (1 + skip)) % (1 + skip) == 0)){\n\t\t\t\t\tvar label = o.maxLabelCharCount ? this.getTextWithLimitCharCount(tick.label, taFont, o.maxLabelCharCount) : {\n\t\t\t\t\t\ttext: tick.label,\n\t\t\t\t\t\ttruncated: false\n\t\t\t\t\t};\n\t\t\t\t\tlabel = o.maxLabelSize ? this.getTextWithLimitLength(label.text, taFont, o.maxLabelSize, label.truncated) : label;\n\t\t\t\t\telem = this.createText(labelType,\n\t\t\t\t\t\ts,\n\t\t\t\t\t\tx + (taMajorTick.length > 0 ? dx : 0) + anchorOffset.x + (rotation ? 0 : labelOffset.x),\n\t\t\t\t\t\ty + (taMajorTick.length > 0 ? dy : 0) + anchorOffset.y + (rotation ? 0 : labelOffset.y),\n\t\t\t\t\t\tlabelAlign,\n\t\t\t\t\t\tlabel.text,\n\t\t\t\t\t\ttaFont,\n\t\t\t\t\t\ttaFontColor\n\t\t\t\t\t\t//cachedLabelW\n\t\t\t\t\t);\n\t\t\t\t\t// if bidi support was required, the textDir is \"auto\" and truncation\n\t\t\t\t\t// took place, we need to update the dir of the element for cases as:\n\t\t\t\t\t// Fool label: 111111W (W for bidi character)\n\t\t\t\t\t// truncated label: 11...\n\t\t\t\t\t// in this case for auto textDir the dir will be \"ltr\" which is wrong.\n\t\t\t\t\tif(label.truncated){\n\t\t\t\t\t\tthis.chart.formatTruncatedLabel(elem, tick.label, labelType);\n\t\t\t\t\t}\n\t\t\t\t\tlabel.truncated && this.labelTooltip(elem, this.chart, tick.label, label.text, taFont, labelType);\n\t\t\t\t\tif(labelType == \"html\"){\n\t\t\t\t\t\tthis.htmlElements.push(elem);\n\t\t\t\t\t}else if(rotation){\n\t\t\t\t\t\telem.setTransform([\n\t\t\t\t\t\t\t{dx: labelOffset.x, dy: labelOffset.y},\n\t\t\t\t\t\t\tg.matrix.rotategAt(\n\t\t\t\t\t\t\t\trotation,\n\t\t\t\t\t\t\t\tx + (taMajorTick.length > 0 ? dx : 0) + anchorOffset.x,\n\t\t\t\t\t\t\t\ty + (taMajorTick.length > 0 ? dy : 0) + anchorOffset.y\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\tdx = tickVector.x * taMinorTick.length;\n\t\t\tdy = tickVector.y * taMinorTick.length;\n\t\t\tcanLabel = this.opt.minorLabels && c.minMinorStep <= c.minor.tick * c.bounds.scale;\n\t\t\tarr.forEach(t.minor, function(tick){\n\t\t\t\tvar offset = f(tick.value), elem,\n\t\t\t\t\tx = (isRtl ? stop.x : start.x)  + axisVector.x * offset,\n\t\t\t\t\ty = start.y + axisVector.y * offset; // chart mirroring\n\t\t\t\tthis.createLine(s, {\n\t\t\t\t\tx1: x, y1: y,\n\t\t\t\t\tx2: x + dx,\n\t\t\t\t\ty2: y + dy\n\t\t\t\t}).setStroke(taMinorTick);\n\t\t\t\tif(canLabel && tick.label){\n\t\t\t\t\tvar label = o.maxLabelCharCount ? this.getTextWithLimitCharCount(tick.label, taFont, o.maxLabelCharCount) : {\n\t\t\t\t\t\ttext: tick.label,\n\t\t\t\t\t\ttruncated: false\n\t\t\t\t\t};\n\t\t\t\t\tlabel = o.maxLabelSize ? this.getTextWithLimitLength(label.text, taFont, o.maxLabelSize, label.truncated) : label;\n\t\t\t\t\telem = this.createText(labelType,\n\t\t\t\t\t\ts,\n\t\t\t\t\t\tx + (taMinorTick.length > 0 ? dx : 0) + anchorOffset.x + (rotation ? 0 : labelOffset.x),\n\t\t\t\t\t\ty + (taMinorTick.length  > 0 ? dy : 0) + anchorOffset.y + (rotation ? 0 : labelOffset.y),\n\t\t\t\t\t\tlabelAlign,\n\t\t\t\t\t\tlabel.text,\n\t\t\t\t\t\ttaFont,\n\t\t\t\t\t\ttaFontColor\n\t\t\t\t\t\t//cachedLabelW\n\t\t\t\t\t);\n\t\t\t\t\t// if bidi support was required, the textDir is \"auto\" and truncation\n\t\t\t\t\t// took place, we need to update the dir of the element for cases as:\n\t\t\t\t\t// Fool label: 111111W (W for bidi character)\n\t\t\t\t\t// truncated label: 11...\n\t\t\t\t\t// in this case for auto textDir the dir will be \"ltr\" which is wrong.\n\t\t\t\t\tif(label.truncated){\n\t\t\t\t\t\tthis.chart.formatTruncatedLabel(elem, tick.label, labelType);\n\t\t\t\t\t}\n\t\t\t\t\tlabel.truncated && this.labelTooltip(elem, this.chart, tick.label, label.text, taFont, labelType);\n\t\t\t\t\tif(labelType == \"html\"){\n\t\t\t\t\t\tthis.htmlElements.push(elem);\n\t\t\t\t\t}else if(rotation){\n\t\t\t\t\t\telem.setTransform([\n\t\t\t\t\t\t\t{dx: labelOffset.x, dy: labelOffset.y},\n\t\t\t\t\t\t\tg.matrix.rotategAt(\n\t\t\t\t\t\t\t\trotation,\n\t\t\t\t\t\t\t\tx + (taMinorTick.length > 0 ? dx : 0) + anchorOffset.x,\n\t\t\t\t\t\t\t\ty + (taMinorTick.length > 0 ? dy : 0) + anchorOffset.y\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\tdx = tickVector.x * taMicroTick.length;\n\t\t\tdy = tickVector.y * taMicroTick.length;\n\t\t\tarr.forEach(t.micro, function(tick){\n\t\t\t\tvar offset = f(tick.value),\n\t\t\t\t\tx = start.x + axisVector.x * offset,\n\t\t\t\t\ty = start.y + axisVector.y * offset;\n\t\t\t\t\tthis.createLine(s, {\n\t\t\t\t\t\tx1: x, y1: y,\n\t\t\t\t\t\tx2: x + dx,\n\t\t\t\t\t\ty2: y + dy\n\t\t\t\t\t}).setStroke(taMicroTick);\n\t\t\t}, this);\n\n\t\t\tthis.dirty = false;\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Default\n\t\t},\n\t\tlabelTooltip: function(elem, chart, label, truncatedLabel, font, elemType){\n\t\t\tvar modules = [\"dijit/Tooltip\"];\n\t\t\tvar aroundRect = {type: \"rect\"}, position = [\"above\", \"below\"],\n\t\t\t\tfontWidth = g._base._getTextBox(truncatedLabel, {font: font}).w || 0,\n\t\t\t\tfontHeight = font ? g.normalizedLength(g.splitFontString(font).size) : 0;\n\t\t\tif(elemType == \"html\"){\n\t\t\t\tlang.mixin(aroundRect, domGeom.position(elem.firstChild, true));\n\t\t\t\taroundRect.width = Math.ceil(fontWidth);\n\t\t\t\taroundRect.height = Math.ceil(fontHeight);\n\t\t\t\tthis._events.push({\n\t\t\t\t\tshape:  dojo,\n\t\t\t\t\thandle: connect.connect(elem.firstChild, \"onmouseover\", this, function(e){\n\t\t\t\t\t\trequire(modules, function(Tooltip){\n\t\t\t\t\t\t\tTooltip.show(label, aroundRect, position);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\tthis._events.push({\n\t\t\t\t\tshape:  dojo,\n\t\t\t\t\thandle: connect.connect(elem.firstChild, \"onmouseout\", this, function(e){\n\t\t\t\t\t\trequire(modules, function(Tooltip){\n\t\t\t\t\t\t\tTooltip.hide(aroundRect);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\tvar shp = elem.getShape(),\n\t\t\t\t\tlt = chart.getCoords();\n\t\t\t\taroundRect = lang.mixin(aroundRect, {\n\t\t\t\t\tx: shp.x - fontWidth / 2,\n\t\t\t\t\ty: shp.y\n\t\t\t\t});\n\t\t\t\taroundRect.x += lt.x;\n\t\t\t\taroundRect.y += lt.y;\n\t\t\t\taroundRect.x = Math.round(aroundRect.x);\n\t\t\t\taroundRect.y = Math.round(aroundRect.y);\n\t\t\t\taroundRect.width = Math.ceil(fontWidth);\n\t\t\t\taroundRect.height = Math.ceil(fontHeight);\n\t\t\t\tthis._events.push({\n\t\t\t\t\tshape:  elem,\n\t\t\t\t\thandle: elem.connect(\"onmouseenter\", this, function(e){\n\t\t\t\t\t\trequire(modules, function(Tooltip){\n\t\t\t\t\t\t\tTooltip.show(label, aroundRect, position);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\tthis._events.push({\n\t\t\t\t\tshape:  elem,\n\t\t\t\t\thandle: elem.connect(\"onmouseleave\", this, function(e){\n\t\t\t\t\t\trequire(modules, function(Tooltip){\n\t\t\t\t\t\t\tTooltip.hide(aroundRect);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t_isRtl: function(){\n\t\t\treturn false;\n\t\t}\n\t});\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.axis2d.Default\", [Default, BidiDefault]) : Default;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 230:\n/*!************************************!*\\\n  !*** ../dojox/charting/Chart2D.js ***!\n  \\************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/kernel */ 1), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! .. */ 245), __webpack_require__(/*! ./Chart */ 296),\n\t__webpack_require__(/*! ./axis2d/Default */ 226), __webpack_require__(/*! ./axis2d/Invisible */ 266), __webpack_require__(/*! ./plot2d/Default */ 225), __webpack_require__(/*! ./plot2d/Lines */ 305), __webpack_require__(/*! ./plot2d/Areas */ 306),\n\t__webpack_require__(/*! ./plot2d/Markers */ 307), __webpack_require__(/*! ./plot2d/MarkersOnly */ 308), __webpack_require__(/*! ./plot2d/Scatter */ 309), __webpack_require__(/*! ./plot2d/Stacked */ 250), __webpack_require__(/*! ./plot2d/StackedLines */ 310),\n\t__webpack_require__(/*! ./plot2d/StackedAreas */ 288), __webpack_require__(/*! ./plot2d/Columns */ 253), __webpack_require__(/*! ./plot2d/StackedColumns */ 311), __webpack_require__(/*! ./plot2d/ClusteredColumns */ 312),\n\t__webpack_require__(/*! ./plot2d/Bars */ 254), __webpack_require__(/*! ./plot2d/StackedBars */ 313), __webpack_require__(/*! ./plot2d/ClusteredBars */ 314), __webpack_require__(/*! ./plot2d/Grid */ 315), __webpack_require__(/*! ./plot2d/Pie */ 316),\n\t__webpack_require__(/*! ./plot2d/Bubble */ 317), __webpack_require__(/*! ./plot2d/Candlesticks */ 318), __webpack_require__(/*! ./plot2d/OHLC */ 319), __webpack_require__(/*! ./plot2d/Spider */ 320)], __WEBPACK_AMD_DEFINE_RESULT__ = function(kernel, lang, dojox, Chart){\n\tkernel.deprecated(\"dojox.charting.Chart2D\", \"Use dojox.charting.Chart instead and require all other components explicitly\", \"2.0\");\n\t// module:\n\t//\t\tdojox/charting/Chart2D\n\t// summary:\n\t//\t\tThis is a compatibility module which loads all charting modules that used to be automatically\n\t//\t\tloaded in versions prior to 1.6.  It is highly recommended for performance reasons that\n\t//\t\tthis module no longer be referenced by applications.  Instead, use dojox/charting/Chart.\n\treturn lang.setObject(\"dojox.charting.Chart2D\", Chart);\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 231:\n/*!*******************************************!*\\\n  !*** ../dojox/charting/themes/Wetland.js ***!\n  \\*******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../SimpleTheme */ 262), __webpack_require__(/*! ./common */ 323)], __WEBPACK_AMD_DEFINE_RESULT__ = function(SimpleTheme, themes){\n\tthemes.Wetland = new SimpleTheme({\n\t\tcolors: [\n\t\t\t\"#bfbc64\",\n\t\t\t\"#737130\",\n\t\t\t\"#73373b\",\n\t\t\t\"#7dafca\",\n\t\t\t\"#8d3c42\"\n\t\t]\n\t});\n\treturn themes.Wetland;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 233:\n/*!******************************************!*\\\n  !*** ../dojox/charting/plot2d/common.js ***!\n  \\******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/_base/Color */ 78), \n\t\t__webpack_require__(/*! dojox/gfx */ 237), __webpack_require__(/*! dojox/lang/functional */ 234), __webpack_require__(/*! ../scaler/common */ 261)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, arr, Color, g, df, sc){\n\t\n\tvar common = lang.getObject(\"dojox.charting.plot2d.common\", true);\n\t\n\treturn lang.mixin(common, {\t\n\t\tdoIfLoaded: sc.doIfLoaded,\n\t\tmakeStroke: function(stroke){\n\t\t\tif(!stroke){ return stroke; }\n\t\t\tif(typeof stroke == \"string\" || stroke instanceof Color){\n\t\t\t\tstroke = {color: stroke};\n\t\t\t}\n\t\t\treturn g.makeParameters(g.defaultStroke, stroke);\n\t\t},\n\t\taugmentColor: function(target, color){\n\t\t\tvar t = new Color(target),\n\t\t\t\tc = new Color(color);\n\t\t\tc.a = t.a;\n\t\t\treturn c;\n\t\t},\n\t\taugmentStroke: function(stroke, color){\n\t\t\tvar s = common.makeStroke(stroke);\n\t\t\tif(s){\n\t\t\t\ts.color = common.augmentColor(s.color, color);\n\t\t\t}\n\t\t\treturn s;\n\t\t},\n\t\taugmentFill: function(fill, color){\n\t\t\tvar fc, c = new Color(color);\n\t\t\tif(typeof fill == \"string\" || fill instanceof Color){\n\t\t\t\treturn common.augmentColor(fill, color);\n\t\t\t}\n\t\t\treturn fill;\n\t\t},\n\n\t\tdefaultStats: {\n\t\t\tvmin: Number.POSITIVE_INFINITY, vmax: Number.NEGATIVE_INFINITY,\n\t\t\thmin: Number.POSITIVE_INFINITY, hmax: Number.NEGATIVE_INFINITY\n\t\t},\n\n\t\tcollectSimpleStats: function(series, isNullValue){\n\t\t\tvar stats = lang.delegate(common.defaultStats);\n\t\t\tfor(var i = 0; i < series.length; ++i){\n\t\t\t\tvar run = series[i];\n\t\t\t\tfor(var j = 0; j < run.data.length; j++){\n\t\t\t\t\tif(!isNullValue(run.data[j])){\n\t\t\t\t\t\tif(typeof run.data[j] == \"number\"){\n\t\t\t\t\t\t\t// 1D case\n\t\t\t\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\n\t\t\t\t\t\t\tarr.forEach(run.data, function(val, i){\n\t\t\t\t\t\t\t\tif(!isNullValue(val)){\n\t\t\t\t\t\t\t\t\tvar x = i + 1, y = val;\n\t\t\t\t\t\t\t\t\tif(isNaN(y)){ y = 0; }\n\t\t\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\n\t\t\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\n\t\t\t\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t// 2D case\n\t\t\t\t\t\t\tvar old_hmin = stats.hmin, old_hmax = stats.hmax,\n\t\t\t\t\t\t\t\told_vmin = stats.vmin, old_vmax = stats.vmax;\n\t\t\t\t\t\t\tif(!(\"xmin\" in run) || !(\"xmax\" in run) || !(\"ymin\" in run) || !(\"ymax\" in run)){\n\t\t\t\t\t\t\t\tarr.forEach(run.data, function(val, i){\n\t\t\t\t\t\t\t\t\tif(!isNullValue(val)){\n\t\t\t\t\t\t\t\t\t\tvar x = \"x\" in val ? val.x : i + 1, y = val.y;\n\t\t\t\t\t\t\t\t\t\tif(isNaN(x)){ x = 0; }\n\t\t\t\t\t\t\t\t\t\tif(isNaN(y)){ y = 0; }\n\t\t\t\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\n\t\t\t\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"xmin\" in run){ stats.hmin = Math.min(old_hmin, run.xmin); }\n\t\t\t\t\t\t\tif(\"xmax\" in run){ stats.hmax = Math.max(old_hmax, run.xmax); }\n\t\t\t\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\n\t\t\t\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stats;\n\t\t},\n\n\t\tcalculateBarSize: function(/* Number */ availableSize, /* Object */ opt, /* Number? */ clusterSize){\n\t\t\tif(!clusterSize){\n\t\t\t\tclusterSize = 1;\n\t\t\t}\n\t\t\tvar gap = opt.gap, size = (availableSize - 2 * gap) / clusterSize;\n\t\t\tif(\"minBarSize\" in opt){\n\t\t\t\tsize = Math.max(size, opt.minBarSize);\n\t\t\t}\n\t\t\tif(\"maxBarSize\" in opt){\n\t\t\t\tsize = Math.min(size, opt.maxBarSize);\n\t\t\t}\n\t\t\tsize = Math.max(size, 1);\n\t\t\tgap = (availableSize - size * clusterSize) / 2;\n\t\t\treturn {size: size, gap: gap};\t// Object\n\t\t},\n\n\t\tcollectStackedStats: function(series){\n\t\t\t// collect statistics\n\t\t\tvar stats = lang.clone(common.defaultStats);\n\t\t\tif(series.length){\n\t\t\t\t// 1st pass: find the maximal length of runs\n\t\t\t\tstats.hmin = Math.min(stats.hmin, 1);\n\t\t\t\tstats.hmax = df.foldl(series, \"seed, run -> Math.max(seed, run.data.length)\", stats.hmax);\n\t\t\t\t// 2nd pass: stack values\n\t\t\t\tfor(var i = 0; i < stats.hmax; ++i){\n\t\t\t\t\tvar v = series[0].data[i];\n\t\t\t\t\tv = v && (typeof v == \"number\" ? v : v.y);\n\t\t\t\t\tif(isNaN(v)){ v = 0; }\n\t\t\t\t\tstats.vmin = Math.min(stats.vmin, v);\n\t\t\t\t\tfor(var j = 1; j < series.length; ++j){\n\t\t\t\t\t\tvar t = series[j].data[i];\n\t\t\t\t\t\tt = t && (typeof t == \"number\" ? t : t.y);\n\t\t\t\t\t\tif(isNaN(t)){ t = 0; }\n\t\t\t\t\t\tv += t;\n\t\t\t\t\t}\n\t\t\t\t\tstats.vmax = Math.max(stats.vmax, v);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stats;\n\t\t},\n\n\t\tcurve: function(/* Number[] */a, /* Number|String */tension){\n\t\t\t//\tFIX for #7235, submitted by Enzo Michelangeli.\n\t\t\t//\tEmulates the smoothing algorithms used in a famous, unnamed spreadsheet\n\t\t\t//\t\tprogram ;)\n\t\t\tvar array = a.slice(0);\n\t\t\tif(tension == \"x\") {\n\t\t\t\tarray[array.length] = array[0];   // add a last element equal to the first, closing the loop\n\t\t\t}\n\t\t\tvar p=arr.map(array, function(item, i){\n\t\t\t\tif(i==0){ return \"M\" + item.x + \",\" + item.y; }\n\t\t\t\tif(!isNaN(tension)) { // use standard Dojo smoothing in tension is numeric\n\t\t\t\t\tvar dx=item.x-array[i-1].x, dy=array[i-1].y;\n\t\t\t\t\treturn \"C\"+(item.x-(tension-1)*(dx/tension))+\",\"+dy+\" \"+(item.x-(dx/tension))+\",\"+item.y+\" \"+item.x+\",\"+item.y;\n\t\t\t\t} else if(tension == \"X\" || tension == \"x\" || tension == \"S\") {\n\t\t\t\t\t// use Excel \"line smoothing\" algorithm (http://xlrotor.com/resources/files.shtml)\n\t\t\t\t\tvar p0, p1 = array[i-1], p2 = array[i], p3;\n\t\t\t\t\tvar bz1x, bz1y, bz2x, bz2y;\n\t\t\t\t\tvar f = 1/6;\n\t\t\t\t\tif(i==1) {\n\t\t\t\t\t\tif(tension == \"x\") {\n\t\t\t\t\t\t\tp0 = array[array.length-2];\n\t\t\t\t\t\t} else { // \"tension == X || tension == \"S\"\n\t\t\t\t\t\t\tp0 = p1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tf = 1/3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp0 = array[i-2];\n\t\t\t\t\t}\n\t\t\t\t\tif(i==(array.length-1)) {\n\t\t\t\t\t\tif(tension == \"x\") {\n\t\t\t\t\t\t\tp3 = array[1];\n\t\t\t\t\t\t} else { // \"tension == X || tension == \"S\"\n\t\t\t\t\t\t\tp3 = p2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tf = 1/3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp3 = array[i+1];\n\t\t\t\t\t}\n\t\t\t\t\tvar p1p2 = Math.sqrt((p2.x-p1.x)*(p2.x-p1.x)+(p2.y-p1.y)*(p2.y-p1.y));\n\t\t\t\t\tvar p0p2 = Math.sqrt((p2.x-p0.x)*(p2.x-p0.x)+(p2.y-p0.y)*(p2.y-p0.y));\n\t\t\t\t\tvar p1p3 = Math.sqrt((p3.x-p1.x)*(p3.x-p1.x)+(p3.y-p1.y)*(p3.y-p1.y));\n\n\t\t\t\t\tvar p0p2f = p0p2 * f;\n\t\t\t\t\tvar p1p3f = p1p3 * f;\n\n\t\t\t\t\tif(p0p2f > p1p2/2 && p1p3f > p1p2/2) {\n\t\t\t\t\t\tp0p2f = p1p2/2;\n\t\t\t\t\t\tp1p3f = p1p2/2;\n\t\t\t\t\t} else if(p0p2f > p1p2/2) {\n\t\t\t\t\t\tp0p2f = p1p2/2;\n\t\t\t\t\t\tp1p3f = p1p2/2 * p1p3/p0p2;\n\t\t\t\t\t} else if(p1p3f > p1p2/2) {\n\t\t\t\t\t\tp1p3f = p1p2/2;\n\t\t\t\t\t\tp0p2f = p1p2/2 * p0p2/p1p3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(tension == \"S\") {\n\t\t\t\t\t\tif(p0 == p1) { p0p2f = 0; }\n\t\t\t\t\t\tif(p2 == p3) { p1p3f = 0; }\n\t\t\t\t\t}\n\n\t\t\t\t\tbz1x = p1.x + p0p2f*(p2.x - p0.x)/p0p2;\n\t\t\t\t\tbz1y = p1.y + p0p2f*(p2.y - p0.y)/p0p2;\n\t\t\t\t\tbz2x = p2.x - p1p3f*(p3.x - p1.x)/p1p3;\n\t\t\t\t\tbz2y = p2.y - p1p3f*(p3.y - p1.y)/p1p3;\n\t\t\t\t}\n\t\t\t\treturn \"C\"+(bz1x+\",\"+bz1y+\" \"+bz2x+\",\"+bz2y+\" \"+p2.x+\",\"+p2.y);\n\t\t\t});\n\t\t\treturn p.join(\" \");\n\t\t},\n\t\t\n\t\tgetLabel: function(/*Number*/number, /*Boolean*/fixed, /*Number*/precision){\n\t\t\treturn sc.doIfLoaded(\"dojo/number\", function(numberLib){\n\t\t\t\treturn (fixed ? numberLib.format(number, {places : precision}) :\n\t\t\t\t\tnumberLib.format(number)) || \"\";\n\t\t\t}, function(){\n\t\t\t\treturn fixed ? number.toFixed(precision) : number.toString();\n\t\t\t});\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 234:\n/*!***********************************!*\\\n  !*** ../dojox/lang/functional.js ***!\n  \\***********************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./functional/lambda */ 244), __webpack_require__(/*! ./functional/array */ 293), __webpack_require__(/*! ./functional/object */ 294)], __WEBPACK_AMD_DEFINE_RESULT__ = function(df){\n\treturn df;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 235:\n/*!******************************!*\\\n  !*** ../dojox/lang/utils.js ***!\n  \\******************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! .. */ 245), __webpack_require__(/*! dojo/_base/lang */ 0)], __WEBPACK_AMD_DEFINE_RESULT__ = function(dojox, lang){\n\tvar du = lang.getObject(\"lang.utils\", true, dojox);\n\t\n\tvar empty = {}, opts = Object.prototype.toString;\n\n\tvar clone = function(o){\n\t\tif(o){\n\t\t\tswitch(opts.call(o)){\n\t\t\t\tcase \"[object Array]\":\n\t\t\t\t\treturn o.slice(0);\n\t\t\t\tcase \"[object Object]\":\n\t\t\t\t\treturn lang.delegate(o);\n\t\t\t}\n\t\t}\n\t\treturn o;\n\t}\n\t\n\tlang.mixin(du, {\n\t\tcoerceType: function(target, source){\n\t\t\t// summary:\n\t\t\t//\t\tCoerces one object to the type of another.\n\t\t\t// target: Object\n\t\t\t//\t\tobject, which typeof result is used to coerce \"source\" object.\n\t\t\t// source: Object\n\t\t\t//\t\tobject, which will be forced to change type.\n\t\t\tswitch(typeof target){\n\t\t\t\tcase \"number\":\treturn Number(eval(\"(\" + source + \")\"));\n\t\t\t\tcase \"string\":\treturn String(source);\n\t\t\t\tcase \"boolean\":\treturn Boolean(eval(\"(\" + source + \")\"));\n\t\t\t}\n\t\t\treturn eval(\"(\" + source + \")\");\n\t\t},\n\t\t\n\t\tupdateWithObject: function(target, source, conv){\n\t\t\t// summary:\n\t\t\t//\t\tUpdates an existing object in place with properties from an \"source\" object.\n\t\t\t// target: Object\n\t\t\t//\t\tthe \"target\" object to be updated\n\t\t\t// source: Object\n\t\t\t//\t\tthe \"source\" object, whose properties will be used to source the existed object.\n\t\t\t// conv: Boolean?\n\t\t\t//\t\tforce conversion to the original type\n\t\t\tif(!source){ return target; }\n\t\t\tfor(var x in target){\n\t\t\t\tif(x in source && !(x in empty)){\n\t\t\t\t\tvar t = target[x];\n\t\t\t\t\tif(t && typeof t == \"object\"){\n\t\t\t\t\t\tdu.updateWithObject(t, source[x], conv);\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttarget[x] = conv ? du.coerceType(t, source[x]) : clone(source[x]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn target;\t// Object\n\t\t},\n\t\n\t\tupdateWithPattern: function(target, source, pattern, conv){\n\t\t\t// summary:\n\t\t\t//\t\tUpdates an existing object in place with properties from an \"source\" object.\n\t\t\t// target: Object\n\t\t\t//\t\tthe \"target\" object to be updated\n\t\t\t// source: Object\n\t\t\t//\t\tthe \"source\" object, whose properties will be used to source the existed object.\n\t\t\t// pattern: Object\n\t\t\t//\t\tobject, whose properties will be used to pull values from the \"source\"\n\t\t\t// conv: Boolean?\n\t\t\t//\t\tforce conversion to the original type\n\t\t\tif(!source || !pattern){ return target; }\n\t\t\tfor(var x in pattern){\n\t\t\t\tif(x in source && !(x in empty)){\n\t\t\t\t\ttarget[x] = conv ? du.coerceType(pattern[x], source[x]) : clone(source[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn target;\t// Object\n\t\t},\n\t\t\n\t\tmerge: function(object, mixin){\n\t\t\t// summary:\n\t\t\t//\t\tMerge two objects structurally, mixin properties will override object's properties.\n\t\t\t// object: Object\n\t\t\t//\t\toriginal object.\n\t\t\t// mixin: Object\n\t\t\t//\t\tadditional object, which properties will override object's properties.\n\t\t\tif(mixin){\n\t\t\t\tvar otype = opts.call(object), mtype = opts.call(mixin), t, i, l, m;\n\t\t\t\tswitch(mtype){\n\t\t\t\t\tcase \"[object Array]\":\n\t\t\t\t\t\tif(mtype == otype){\n\t\t\t\t\t\t\tt = new Array(Math.max(object.length, mixin.length));\n\t\t\t\t\t\t\tfor(i = 0, l = t.length; i < l; ++i){\n\t\t\t\t\t\t\t\tt[i] = du.merge(object[i], mixin[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn t;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn mixin.slice(0);\n\t\t\t\t\tcase \"[object Object]\":\n\t\t\t\t\t\tif(mtype == otype && object){\n\t\t\t\t\t\t\tt = lang.delegate(object);\n\t\t\t\t\t\t\tfor(i in mixin){\n\t\t\t\t\t\t\t\tif(i in object){\n\t\t\t\t\t\t\t\t\tl = object[i];\n\t\t\t\t\t\t\t\t\tm = mixin[i];\n\t\t\t\t\t\t\t\t\tif(m !== l){\n\t\t\t\t\t\t\t\t\t\tt[i] = du.merge(l, m);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tt[i] = lang.clone(mixin[i]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn t;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn lang.clone(mixin);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn mixin;\n\t\t}\n\t});\n\t\n\treturn du;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 236:\n/*!*****************************!*\\\n  !*** ../dojox/gfx/_base.js ***!\n  \\*****************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/kernel */ 1), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/Color */ 78), __webpack_require__(/*! dojo/_base/sniff */ 57), __webpack_require__(/*! dojo/_base/window */ 12),\n\t    __webpack_require__(/*! dojo/_base/array */ 5),__webpack_require__(/*! dojo/dom */ 6), __webpack_require__(/*! dojo/dom-construct */ 16),__webpack_require__(/*! dojo/dom-geometry */ 17)], __WEBPACK_AMD_DEFINE_RESULT__ = function(kernel, lang, Color, has, win, arr, dom, domConstruct, domGeom){\n\t// module:\n\t//\t\tdojox/gfx\n\t// summary:\n\t//\t\tThis module contains common core Graphics API used by different graphics renderers.\n\n\tvar g = lang.getObject(\"dojox.gfx\", true),\n\t\tb = g._base = {};\n\t\n\t// candidates for dojox.style (work on VML and SVG nodes)\n\tg._hasClass = function(/*DomNode*/node, /*String*/classStr){\n\t\t// summary:\n\t\t//\t\tReturns whether or not the specified classes are a portion of the\n\t\t//\t\tclass list currently applied to the node.\n\t\t\n\t\t// return (new RegExp('(^|\\\\s+)'+classStr+'(\\\\s+|$)')).test(node.className)\t// Boolean\n\t\tvar cls = node.getAttribute(\"className\");\n\t\treturn cls && (\" \" + cls + \" \").indexOf(\" \" + classStr + \" \") >= 0;  // Boolean\n\t};\n\tg._addClass = function(/*DomNode*/node, /*String*/classStr){\n\t\t// summary:\n\t\t//\t\tAdds the specified classes to the end of the class list on the\n\t\t//\t\tpassed node.\n\t\tvar cls = node.getAttribute(\"className\") || \"\";\n\t\tif(!cls || (\" \" + cls + \" \").indexOf(\" \" + classStr + \" \") < 0){\n\t\t\tnode.setAttribute(\"className\", cls + (cls ? \" \" : \"\") + classStr);\n\t\t}\n\t};\n\tg._removeClass = function(/*DomNode*/node, /*String*/classStr){\n\t\t// summary:\n\t\t//\t\tRemoves classes from node.\n\t\tvar cls = node.getAttribute(\"className\");\n\t\tif(cls){\n\t\t\tnode.setAttribute(\n\t\t\t\t\"className\",\n\t\t\t\tcls.replace(new RegExp('(^|\\\\s+)' + classStr + '(\\\\s+|$)'), \"$1$2\")\n\t\t\t);\n\t\t}\n\t};\n\n\t// candidate for dojox.html.metrics (dynamic font resize handler is not implemented here)\n\n\t//\t\tderived from Morris John's emResized measurer\n\tb._getFontMeasurements = function(){\n\t\t// summary:\n\t\t//\t\tReturns an object that has pixel equivilents of standard font\n\t\t//\t\tsize values.\n\t\tvar heights = {\n\t\t\t'1em': 0, '1ex': 0, '100%': 0, '12pt': 0, '16px': 0, 'xx-small': 0,\n\t\t\t'x-small': 0, 'small': 0, 'medium': 0, 'large': 0, 'x-large': 0,\n\t\t\t'xx-large': 0\n\t\t};\n\t\tvar p, oldStyle;\t\n\t\tif(has(\"ie\")){\n\t\t\t//\tWe do a font-size fix if and only if one isn't applied already.\n\t\t\t// NOTE: If someone set the fontSize on the HTML Element, this will kill it.\n\t\t\toldStyle = win.doc.documentElement.style.fontSize || \"\";\n\t\t\tif(!oldStyle){\n\t\t\t\twin.doc.documentElement.style.fontSize=\"100%\";\n\t\t\t}\n\t\t}\n\n\t\t//\t\tset up the measuring node.\n\t\tvar div = domConstruct.create(\"div\", {style: {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tleft: \"0\",\n\t\t\t\ttop: \"-100px\",\n\t\t\t\twidth: \"30px\",\n\t\t\t\theight: \"1000em\",\n\t\t\t\tborderWidth: \"0\",\n\t\t\t\tmargin: \"0\",\n\t\t\t\tpadding: \"0\",\n\t\t\t\toutline: \"none\",\n\t\t\t\tlineHeight: \"1\",\n\t\t\t\toverflow: \"hidden\"\n\t\t\t}}, win.body());\n\n\t\t//\t\tdo the measurements.\n\t\tfor(p in heights){\n\t\t\tdiv.style.fontSize = p;\n\t\t\theights[p] = Math.round(div.offsetHeight * 12/16) * 16/12 / 1000;\n\t\t}\n\n\t\tif(has(\"ie\")){\n\t\t\t// Restore the font to its old style.\n\t\t\twin.doc.documentElement.style.fontSize = oldStyle;\n\t\t}\n\t\twin.body().removeChild(div);\n\t\treturn heights; //object\n\t};\n\n\tvar fontMeasurements = null;\n\n\tb._getCachedFontMeasurements = function(recalculate){\n\t\tif(recalculate || !fontMeasurements){\n\t\t\tfontMeasurements = b._getFontMeasurements();\n\t\t}\n\t\treturn fontMeasurements;\n\t};\n\n\t// candidate for dojox.html.metrics\n\n\tvar measuringNode = null, empty = {};\n\tb._getTextBox = function(\t/*String*/ text,\n\t\t\t\t\t\t\t\t/*Object*/ style,\n\t\t\t\t\t\t\t\t/*String?*/ className){\n\t\tvar m, s, al = arguments.length;\n\t\tvar i, box;\n\t\tif(!measuringNode){\n\t\t\tmeasuringNode = domConstruct.create(\"div\", {style: {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: \"-10000px\",\n\t\t\t\tleft: \"0\",\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t}}, win.body());\n\t\t}\n\t\tm = measuringNode;\n\t\t// reset styles\n\t\tm.className = \"\";\n\t\ts = m.style;\n\t\ts.borderWidth = \"0\";\n\t\ts.margin = \"0\";\n\t\ts.padding = \"0\";\n\t\ts.outline = \"0\";\n\t\t// set new style\n\t\tif(al > 1 && style){\n\t\t\tfor(i in style){\n\t\t\t\tif(i in empty){ continue; }\n\t\t\t\ts[i] = style[i];\n\t\t\t}\n\t\t}\n\t\t// set classes\n\t\tif(al > 2 && className){\n\t\t\tm.className = className;\n\t\t}\n\t\t// take a measure\n\t\tm.innerHTML = text;\n\n\t\tif(m.getBoundingClientRect){\n\t\t\tvar bcr = m.getBoundingClientRect();\n\t\t\tbox = {l: bcr.left, t: bcr.top, w: bcr.width || (bcr.right - bcr.left), h: bcr.height || (bcr.bottom - bcr.top)};\n\t\t}else{\n\t\t\tbox = domGeom.getMarginBox(m);\n\t\t}\n\t\tm.innerHTML = \"\";\n\t\treturn box;\n\t};\n\n\tb._computeTextLocation = function(/*g.defaultTextShape*/textShape, /*Number*/width, /*Number*/height, /*Boolean*/fixHeight) {\n\t\tvar loc = {}, align = textShape.align;\n\t\tswitch (align) {\n\t\t\tcase 'end':\n\t\t\t\tloc.x = textShape.x - width;\n\t\t\t\tbreak;\n\t\t\tcase 'middle':\n\t\t\t\tloc.x = textShape.x - width / 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tloc.x = textShape.x;\n\t\t\t\tbreak;\n\t\t}\n\t\tvar c = fixHeight ? 0.75 : 1;\n\t\tloc.y = textShape.y - height*c; // **rough** approximation of the ascent...\n\t\treturn loc;\n\t};\n\tb._computeTextBoundingBox = function(/*shape.Text*/s){\n\t\t// summary:\n\t\t//\t\tCompute the bbox of the given shape.Text instance. Note that this method returns an\n\t\t//\t\tapproximation of the bbox, and should be used when the underlying renderer cannot provide precise metrics.\n\t\tif(!g._base._isRendered(s)){\n\t\t\treturn {x:0, y:0, width:0, height:0};\n\t\t}\n\t\tvar loc, textShape = s.getShape(),\n\t\t\tfont = s.getFont() || g.defaultFont,\n\t\t\tw = s.getTextWidth(),\n\t\t\th = g.normalizedLength(font.size);\n\t\tloc = b._computeTextLocation(textShape, w, h, true);\n\t\treturn {\n\t\t\tx: loc.x,\n\t\t\ty: loc.y,\n\t\t\twidth: w,\n\t\t\theight: h\n\t\t};\n\t};\n\tb._isRendered = function(/*Shape*/s){\n\t\tvar p = s.parent;\n\t\twhile(p && p.getParent){\n\t\t\tp = p.parent;\n\t\t}\n\t\treturn p !== null;\n\t};\n\n\t// candidate for dojo.dom\n\n\tvar uniqueId = 0;\n\tb._getUniqueId = function(){\n\t\t// summary:\n\t\t//\t\treturns a unique string for use with any DOM element\n\t\tvar id;\n\t\tdo{\n\t\t\tid = kernel._scopeName + \"xUnique\" + (++uniqueId);\n\t\t}while(dom.byId(id));\n\t\treturn id;\n\t};\n\n\t// IE10\n\n\tvar touchActionProp = has(\"pointer-events\") ? \"touchAction\" : has(\"MSPointer\") ? \"msTouchAction\" : null;\n\tb._fixMsTouchAction = touchActionProp ? function(/*dojox/gfx/shape.Surface*/surface){\n\t\tsurface.rawNode.style[touchActionProp] = \"none\";\n\t} : function() {};\n\n\t/*=====\n\tg.Stroke = {\n\t\t// summary:\n\t\t//\t\tA stroke defines stylistic properties that are used when drawing a path.\n\n\t\t// color: String\n\t\t//\t\tThe color of the stroke, default value 'black'.\n\t\tcolor: \"black\",\n\n\t\t// style: String\n\t\t//\t\tThe style of the stroke, one of 'solid', ... . Default value 'solid'.\n\t\tstyle: \"solid\",\n\n\t\t// width: Number\n\t\t//\t\tThe width of a stroke, default value 1.\n\t\twidth: 1,\n\n\t\t// cap: String\n\t\t//\t\tThe endcap style of the path. One of 'butt', 'round', ... . Default value 'butt'.\n\t\tcap: \"butt\",\n\n\t\t// join: Number\n\t\t//\t\tThe join style to use when combining path segments. Default value 4.\n\t\tjoin: 4\n\t};\n\t\n\tg.Fill = {\n\t\t// summary:\n\t\t//\t\tDefines how to fill a shape. Four types of fills can be used: solid, linear gradient, radial gradient and pattern.\n\t\t//\t\tSee dojox/gfx.LinearGradient, dojox/gfx.RadialGradient and dojox/gfx.Pattern respectively for more information about the properties supported by each type.\n\t\t\n\t\t// type: String?\n\t\t//\t\tThe type of fill. One of 'linear', 'radial', 'pattern' or undefined. If not specified, a solid fill is assumed.\n\t\ttype:\"\",\n\t\t\n\t\t// color: String|dojo/Color?\n\t\t//\t\tThe color of a solid fill type.\n\t\tcolor:null,\n\t\t\n\t};\n\t\n\tg.LinearGradient = {\n\t\t// summary:\n\t\t//\t\tAn object defining the default stylistic properties used for Linear Gradient fills.\n\t\t//\t\tLinear gradients are drawn along a virtual line, which results in appearance of a rotated pattern in a given direction/orientation.\n\n\t\t// type: String\n\t\t//\t\tSpecifies this object is a Linear Gradient, value 'linear'\n\t\ttype: \"linear\",\n\n\t\t// x1: Number\n\t\t//\t\tThe X coordinate of the start of the virtual line along which the gradient is drawn, default value 0.\n\t\tx1: 0,\n\n\t\t// y1: Number\n\t\t//\t\tThe Y coordinate of the start of the virtual line along which the gradient is drawn, default value 0.\n\t\ty1: 0,\n\n\t\t// x2: Number\n\t\t//\t\tThe X coordinate of the end of the virtual line along which the gradient is drawn, default value 100.\n\t\tx2: 100,\n\n\t\t// y2: Number\n\t\t//\t\tThe Y coordinate of the end of the virtual line along which the gradient is drawn, default value 100.\n\t\ty2: 100,\n\n\t\t// colors: Array\n\t\t//\t\tAn array of colors at given offsets (from the start of the line).  The start of the line is\n\t\t//\t\tdefined at offest 0 with the end of the line at offset 1.\n\t\t//\t\tDefault value, [{ offset: 0, color: 'black'},{offset: 1, color: 'white'}], is a gradient from black to white.\n\t\tcolors: []\n\t};\n\t\n\tg.RadialGradient = {\n\t\t// summary:\n\t\t//\t\tSpecifies the properties for RadialGradients using in fills patterns.\n\n\t\t// type: String\n\t\t//\t\tSpecifies this is a RadialGradient, value 'radial'\n\t\ttype: \"radial\",\n\n\t\t// cx: Number\n\t\t//\t\tThe X coordinate of the center of the radial gradient, default value 0.\n\t\tcx: 0,\n\n\t\t// cy: Number\n\t\t//\t\tThe Y coordinate of the center of the radial gradient, default value 0.\n\t\tcy: 0,\n\n\t\t// r: Number\n\t\t//\t\tThe radius to the end of the radial gradient, default value 100.\n\t\tr: 100,\n\n\t\t// colors: Array\n\t\t//\t\tAn array of colors at given offsets (from the center of the radial gradient).\n\t\t//\t\tThe center is defined at offest 0 with the outer edge of the gradient at offset 1.\n\t\t//\t\tDefault value, [{ offset: 0, color: 'black'},{offset: 1, color: 'white'}], is a gradient from black to white.\n\t\tcolors: []\n\t};\n\t\n\tg.Pattern = {\n\t\t// summary:\n\t\t//\t\tAn object specifying the default properties for a Pattern using in fill operations.\n\n\t\t// type: String\n\t\t//\t\tSpecifies this object is a Pattern, value 'pattern'.\n\t\ttype: \"pattern\",\n\n\t\t// x: Number\n\t\t//\t\tThe X coordinate of the position of the pattern, default value is 0.\n\t\tx: 0,\n\n\t\t// y: Number\n\t\t//\t\tThe Y coordinate of the position of the pattern, default value is 0.\n\t\ty: 0,\n\n\t\t// width: Number\n\t\t//\t\tThe width of the pattern image, default value is 0.\n\t\twidth: 0,\n\n\t\t// height: Number\n\t\t//\t\tThe height of the pattern image, default value is 0.\n\t\theight: 0,\n\n\t\t// src: String\n\t\t//\t\tA url specifying the image to use for the pattern.\n\t\tsrc: \"\"\n\t};\n\n\tg.Text = {\n\t\t//\tsummary:\n\t\t//\t\tA keyword argument object defining both the text to be rendered in a VectorText shape,\n\t\t//\t\tand specifying position, alignment, and fitting.\n\t\t//\ttext: String\n\t\t//\t\tThe text to be rendered.\n\t\t//\tx: Number?\n\t\t//\t\tThe left coordinate for the text's bounding box.\n\t\t//\ty: Number?\n\t\t//\t\tThe top coordinate for the text's bounding box.\n\t\t//\twidth: Number?\n\t\t//\t\tThe width of the text's bounding box.\n\t\t//\theight: Number?\n\t\t//\t\tThe height of the text's bounding box.\n\t\t//\talign: String?\n\t\t//\t\tThe alignment of the text, as defined in SVG. Can be \"start\", \"end\" or \"middle\".\n\t\t//\tfitting: Number?\n\t\t//\t\tHow the text is to be fitted to the bounding box. Can be 0 (no fitting), 1 (fitting based on\n\t\t//\t\tpassed width of the bounding box and the size of the font), or 2 (fit text to the bounding box,\n\t\t//\t\tand ignore any size parameters).\n\t\t//\tleading: Number?\n\t\t//\t\tThe leading to be used between lines in the text.\n\t\t//\tdecoration: String?\n\t\t//\t\tAny text decoration to be used.\n\t};\n\n\tg.Font = {\n\t\t// summary:\n\t\t//\t\tAn object specifying the properties for a Font used in text operations.\n\t\n\t\t// type: String\n\t\t//\t\tSpecifies this object is a Font, value 'font'.\n\t\ttype: \"font\",\n\t\n\t\t// style: String\n\t\t//\t\tThe font style, one of 'normal', 'bold', default value 'normal'.\n\t\tstyle: \"normal\",\n\t\n\t\t// variant: String\n\t\t//\t\tThe font variant, one of 'normal', ... , default value 'normal'.\n\t\tvariant: \"normal\",\n\t\n\t\t// weight: String\n\t\t//\t\tThe font weight, one of 'normal', ..., default value 'normal'.\n\t\tweight: \"normal\",\n\t\n\t\t// size: String\n\t\t//\t\tThe font size (including units), default value '10pt'.\n\t\tsize: \"10pt\",\n\t\n\t\t// family: String\n\t\t//\t\tThe font family, one of 'serif', 'sanserif', ..., default value 'serif'.\n\t\tfamily: \"serif\"\n\t};\n\n\t=====*/\n\n\tlang.mixin(g, {\n\t\t// summary:\n\t\t//\t\tdefines constants, prototypes, and utility functions for the core Graphics API\n\n\t\t// default shapes, which are used to fill in missing parameters\n\t\tdefaultPath: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Path prototype object.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a Path, default value 'path'.\n\t\t\ttype: \"path\", \n\n\t\t\t// path: String\n\t\t\t//\t\tThe path commands. See W32C SVG 1.0 specification.\n\t\t\t//\t\tDefaults to empty string value.\n\t\t\tpath: \"\"\n\t\t},\n\t\tdefaultPolyline: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default PolyLine prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a PolyLine, default value 'polyline'.\n\t\t\ttype: \"polyline\",\n\n\t\t\t// points: Array\n\t\t\t//\t\tAn array of point objects [{x:0,y:0},...] defining the default polyline's line segments. Value is an empty array [].\n\t\t\tpoints: []\n\t\t},\n\t\tdefaultRect: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Rect prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this default object is a type of Rect. Value is 'rect'\n\t\t\ttype: \"rect\",\n\n\t\t\t// x: Number\n\t\t\t//\t\tThe X coordinate of the default rectangles position, value 0.\n\t\t\tx: 0,\n\n\t\t\t// y: Number\n\t\t\t//\t\tThe Y coordinate of the default rectangle's position, value 0.\n\t\t\ty: 0,\n\n\t\t\t// width: Number\n\t\t\t//\t\tThe width of the default rectangle, value 100.\n\t\t\twidth: 100,\n\n\t\t\t// height: Number\n\t\t\t//\t\tThe height of the default rectangle, value 100.\n\t\t\theight: 100,\n\n\t\t\t// r: Number\n\t\t\t//\t\tThe corner radius for the default rectangle, value 0.\n\t\t\tr: 0\n\t\t},\n\t\tdefaultEllipse: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Ellipse prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies that this object is a type of Ellipse, value is 'ellipse'\n\t\t\ttype: \"ellipse\",\n\n\t\t\t// cx: Number\n\t\t\t//\t\tThe X coordinate of the center of the ellipse, default value 0.\n\t\t\tcx: 0,\n\n\t\t\t// cy: Number\n\t\t\t//\t\tThe Y coordinate of the center of the ellipse, default value 0.\n\t\t\tcy: 0,\n\n\t\t\t// rx: Number\n\t\t\t//\t\tThe radius of the ellipse in the X direction, default value 200.\n\t\t\trx: 200,\n\n\t\t\t// ry: Number\n\t\t\t//\t\tThe radius of the ellipse in the Y direction, default value 200.\n\t\t\try: 100\n\t\t},\n\t\tdefaultCircle: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object defining the default Circle prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a circle, value 'circle'\n\t\t\ttype: \"circle\",\n\n\t\t\t// cx: Number\n\t\t\t//\t\tThe X coordinate of the center of the circle, default value 0.\n\t\t\tcx: 0,\n\t\t\t// cy: Number\n\t\t\t//\t\tThe Y coordinate of the center of the circle, default value 0.\n\t\t\tcy: 0,\n\n\t\t\t// r: Number\n\t\t\t//\t\tThe radius, default value 100.\n\t\t\tr: 100\n\t\t},\n\t\tdefaultLine: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object defining the default Line prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this is a Line, value 'line'\n\t\t\ttype: \"line\",\n\n\t\t\t// x1: Number\n\t\t\t//\t\tThe X coordinate of the start of the line, default value 0.\n\t\t\tx1: 0,\n\n\t\t\t// y1: Number\n\t\t\t//\t\tThe Y coordinate of the start of the line, default value 0.\n\t\t\ty1: 0,\n\n\t\t\t// x2: Number\n\t\t\t//\t\tThe X coordinate of the end of the line, default value 100.\n\t\t\tx2: 100,\n\n\t\t\t// y2: Number\n\t\t\t//\t\tThe Y coordinate of the end of the line, default value 100.\n\t\t\ty2: 100\n\t\t},\n\t\tdefaultImage: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Image prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is an image, value 'image'.\n\t\t\ttype: \"image\",\n\n\t\t\t// x: Number\n\t\t\t//\t\tThe X coordinate of the image's position, default value 0.\n\t\t\tx: 0,\n\n\t\t\t// y: Number\n\t\t\t//\t\tThe Y coordinate of the image's position, default value 0.\n\t\t\ty: 0,\n\n\t\t\t// width: Number\n\t\t\t//\t\tThe width of the image, default value 0.\n\t\t\twidth: 0,\n\n\t\t\t// height: Number\n\t\t\t//\t\tThe height of the image, default value 0.\n\t\t\theight: 0,\n\n\t\t\t// src: String\n\t\t\t//\t\tThe src url of the image, defaults to empty string.\n\t\t\tsrc: \"\"\n\t\t},\n\t\tdefaultText: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Text prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this is a Text shape, value 'text'.\n\t\t\ttype: \"text\",\n\n\t\t\t// x: Number\n\t\t\t//\t\tThe X coordinate of the text position, default value 0.\n\t\t\tx: 0,\n\n\t\t\t// y: Number\n\t\t\t//\t\tThe Y coordinate of the text position, default value 0.\n\t\t\ty: 0,\n\n\t\t\t// text: String\n\t\t\t//\t\tThe text to be displayed, default value empty string.\n\t\t\ttext: \"\",\n\n\t\t\t// align:\tString\n\t\t\t//\t\tThe horizontal text alignment, one of 'start', 'end', 'center'. Default value 'start'.\n\t\t\talign: \"start\",\n\n\t\t\t// decoration: String\n\t\t\t//\t\tThe text decoration , one of 'none', ... . Default value 'none'.\n\t\t\tdecoration: \"none\",\n\n\t\t\t// rotated: Boolean\n\t\t\t//\t\tWhether the text is rotated, boolean default value false.\n\t\t\trotated: false,\n\n\t\t\t// kerning: Boolean\n\t\t\t//\t\tWhether kerning is used on the text, boolean default value true.\n\t\t\tkerning: true\n\t\t},\n\t\tdefaultTextPath: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default TextPath prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this is a TextPath, value 'textpath'.\n\t\t\ttype: \"textpath\",\n\n\t\t\t// text: String\n\t\t\t//\t\tThe text to be displayed, default value empty string.\n\t\t\ttext: \"\",\n\n\t\t\t// align: String\n\t\t\t//\t\tThe horizontal text alignment, one of 'start', 'end', 'center'. Default value 'start'.\n\t\t\talign: \"start\",\n\n\t\t\t// decoration: String\n\t\t\t//\t\tThe text decoration , one of 'none', ... . Default value 'none'.\n\t\t\tdecoration: \"none\",\n\n\t\t\t// rotated: Boolean\n\t\t\t//\t\tWhether the text is rotated, boolean default value false.\n\t\t\trotated: false,\n\n\t\t\t// kerning: Boolean\n\t\t\t//\t\tWhether kerning is used on the text, boolean default value true.\n\t\t\tkerning: true\n\t\t},\n\n\t\t// default stylistic attributes\n\t\tdefaultStroke: {\n\t\t\t// summary:\n\t\t\t//\t\tA stroke defines stylistic properties that are used when drawing a path.\n\t\t\t//\t\tThis object defines the default Stroke prototype.\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a type of Stroke, value 'stroke'.\n\t\t\ttype: \"stroke\",\n\n\t\t\t// color: String\n\t\t\t//\t\tThe color of the stroke, default value 'black'.\n\t\t\tcolor: \"black\",\n\n\t\t\t// style: String\n\t\t\t//\t\tThe style of the stroke, one of 'solid', ... . Default value 'solid'.\n\t\t\tstyle: \"solid\",\n\n\t\t\t// width: Number\n\t\t\t//\t\tThe width of a stroke, default value 1.\n\t\t\twidth: 1,\n\n\t\t\t// cap: String\n\t\t\t//\t\tThe endcap style of the path. One of 'butt', 'round', ... . Default value 'butt'.\n\t\t\tcap: \"butt\",\n\n\t\t\t// join: Number\n\t\t\t//\t\tThe join style to use when combining path segments. Default value 4.\n\t\t\tjoin: 4\n\t\t},\n\t\tdefaultLinearGradient: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object defining the default stylistic properties used for Linear Gradient fills.\n\t\t\t//\t\tLinear gradients are drawn along a virtual line, which results in appearance of a rotated pattern in a given direction/orientation.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a Linear Gradient, value 'linear'\n\t\t\ttype: \"linear\",\n\n\t\t\t// x1: Number\n\t\t\t//\t\tThe X coordinate of the start of the virtual line along which the gradient is drawn, default value 0.\n\t\t\tx1: 0,\n\n\t\t\t// y1: Number\n\t\t\t//\t\tThe Y coordinate of the start of the virtual line along which the gradient is drawn, default value 0.\n\t\t\ty1: 0,\n\n\t\t\t// x2: Number\n\t\t\t//\t\tThe X coordinate of the end of the virtual line along which the gradient is drawn, default value 100.\n\t\t\tx2: 100,\n\n\t\t\t// y2: Number\n\t\t\t//\t\tThe Y coordinate of the end of the virtual line along which the gradient is drawn, default value 100.\n\t\t\ty2: 100,\n\n\t\t\t// colors: Array\n\t\t\t//\t\tAn array of colors at given offsets (from the start of the line).  The start of the line is\n\t\t\t//\t\tdefined at offest 0 with the end of the line at offset 1.\n\t\t\t//\t\tDefault value, [{ offset: 0, color: 'black'},{offset: 1, color: 'white'}], is a gradient from black to white.\n\t\t\tcolors: [\n\t\t\t\t{ offset: 0, color: \"black\" }, { offset: 1, color: \"white\" }\n\t\t\t]\n\t\t},\n\t\tdefaultRadialGradient: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object specifying the default properties for RadialGradients using in fills patterns.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this is a RadialGradient, value 'radial'\n\t\t\ttype: \"radial\",\n\n\t\t\t// cx: Number\n\t\t\t//\t\tThe X coordinate of the center of the radial gradient, default value 0.\n\t\t\tcx: 0,\n\n\t\t\t// cy: Number\n\t\t\t//\t\tThe Y coordinate of the center of the radial gradient, default value 0.\n\t\t\tcy: 0,\n\n\t\t\t// r: Number\n\t\t\t//\t\tThe radius to the end of the radial gradient, default value 100.\n\t\t\tr: 100,\n\n\t\t\t// colors: Array\n\t\t\t//\t\tAn array of colors at given offsets (from the center of the radial gradient).\n\t\t\t//\t\tThe center is defined at offest 0 with the outer edge of the gradient at offset 1.\n\t\t\t//\t\tDefault value, [{ offset: 0, color: 'black'},{offset: 1, color: 'white'}], is a gradient from black to white.\n\t\t\tcolors: [\n\t\t\t\t{ offset: 0, color: \"black\" }, { offset: 1, color: \"white\" }\n\t\t\t]\n\t\t},\n\t\tdefaultPattern: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object specifying the default properties for a Pattern using in fill operations.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a Pattern, value 'pattern'.\n\t\t\ttype: \"pattern\",\n\n\t\t\t// x: Number\n\t\t\t//\t\tThe X coordinate of the position of the pattern, default value is 0.\n\t\t\tx: 0,\n\n\t\t\t// y: Number\n\t\t\t//\t\tThe Y coordinate of the position of the pattern, default value is 0.\n\t\t\ty: 0,\n\n\t\t\t// width: Number\n\t\t\t//\t\tThe width of the pattern image, default value is 0.\n\t\t\twidth: 0,\n\n\t\t\t// height: Number\n\t\t\t//\t\tThe height of the pattern image, default value is 0.\n\t\t\theight: 0,\n\n\t\t\t// src: String\n\t\t\t//\t\tA url specifying the image to use for the pattern.\n\t\t\tsrc: \"\"\n\t\t},\n\t\tdefaultFont: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object specifying the default properties for a Font used in text operations.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a Font, value 'font'.\n\t\t\ttype: \"font\",\n\n\t\t\t// style: String\n\t\t\t//\t\tThe font style, one of 'normal', 'bold', default value 'normal'.\n\t\t\tstyle: \"normal\",\n\n\t\t\t// variant: String\n\t\t\t//\t\tThe font variant, one of 'normal', ... , default value 'normal'.\n\t\t\tvariant: \"normal\",\n\n\t\t\t// weight: String\n\t\t\t//\t\tThe font weight, one of 'normal', ..., default value 'normal'.\n\t\t\tweight: \"normal\",\n\n\t\t\t// size: String\n\t\t\t//\t\tThe font size (including units), default value '10pt'.\n\t\t\tsize: \"10pt\",\n\n\t\t\t// family: String\n\t\t\t//\t\tThe font family, one of 'serif', 'sanserif', ..., default value 'serif'.\n\t\t\tfamily: \"serif\"\n\t\t},\n\n\t\tgetDefault: (function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a function used to access default memoized prototype objects (see them defined above).\n\t\t\tvar typeCtorCache = {};\n\t\t\t// a memoized delegate()\n\t\t\treturn function(/*String*/ type){\n\t\t\t\tvar t = typeCtorCache[type];\n\t\t\t\tif(t){\n\t\t\t\t\treturn new t();\n\t\t\t\t}\n\t\t\t\tt = typeCtorCache[type] = new Function();\n\t\t\t\tt.prototype = g[ \"default\" + type ];\n\t\t\t\treturn new t();\n\t\t\t}\n\t\t})(),\n\n\t\tnormalizeColor: function(/*dojo/Color|Array|string|Object*/ color){\n\t\t\t// summary:\n\t\t\t//\t\tconverts any legal color representation to normalized\n\t\t\t//\t\tdojo/Color object\n\t\t\t// color:\n\t\t\t//\t\tA color representation.\n\t\t\treturn (color instanceof Color) ? color : new Color(color); // dojo/Color\n\t\t},\n\t\tnormalizeParameters: function(existed, update){\n\t\t\t// summary:\n\t\t\t//\t\tupdates an existing object with properties from an 'update'\n\t\t\t//\t\tobject\n\t\t\t// existed: Object\n\t\t\t//\t\tthe target object to be updated\n\t\t\t// update: Object\n\t\t\t//\t\tthe 'update' object, whose properties will be used to update\n\t\t\t//\t\tthe existed object\n\t\t\tvar x;\n\t\t\tif(update){\n\t\t\t\tvar empty = {};\n\t\t\t\tfor(x in existed){\n\t\t\t\t\tif(x in update && !(x in empty)){\n\t\t\t\t\t\texisted[x] = update[x];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn existed;\t// Object\n\t\t},\n\t\tmakeParameters: function(defaults, update){\n\t\t\t// summary:\n\t\t\t//\t\tcopies the original object, and all copied properties from the\n\t\t\t//\t\t'update' object\n\t\t\t// defaults: Object\n\t\t\t//\t\tthe object to be cloned before updating\n\t\t\t// update: Object\n\t\t\t//\t\tthe object, which properties are to be cloned during updating\n\t\t\t// returns: Object\n\t\t\t//      new object with new and default properties\n\t\t\tvar i = null;\n\t\t\tif(!update){\n\t\t\t\t// return dojo.clone(defaults);\n\t\t\t\treturn lang.delegate(defaults);\n\t\t\t}\n\t\t\tvar result = {};\n\t\t\tfor(i in defaults){\n\t\t\t\tif(!(i in result)){\n\t\t\t\t\tresult[i] = lang.clone((i in update) ? update[i] : defaults[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result; // Object\n\t\t},\n\t\tformatNumber: function(x, addSpace){\n\t\t\t// summary:\n\t\t\t//\t\tconverts a number to a string using a fixed notation\n\t\t\t// x: Number\n\t\t\t//\t\tnumber to be converted\n\t\t\t// addSpace: Boolean\n\t\t\t//\t\twhether to add a space before a positive number\n\t\t\t// returns: String\n\t\t\t//      the formatted value\n\t\t\tvar val = x.toString();\n\t\t\tif(val.indexOf(\"e\") >= 0){\n\t\t\t\tval = x.toFixed(4);\n\t\t\t}else{\n\t\t\t\tvar point = val.indexOf(\".\");\n\t\t\t\tif(point >= 0 && val.length - point > 5){\n\t\t\t\t\tval = x.toFixed(4);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(x < 0){\n\t\t\t\treturn val; // String\n\t\t\t}\n\t\t\treturn addSpace ? \" \" + val : val; // String\n\t\t},\n\t\t// font operations\n\t\tmakeFontString: function(font){\n\t\t\t// summary:\n\t\t\t//\t\tconverts a font object to a CSS font string\n\t\t\t// font: Object\n\t\t\t//\t\tfont object (see dojox/gfx.defaultFont)\n\t\t\treturn font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \" \" + font.family; // Object\n\t\t},\n\t\tsplitFontString: function(str){\n\t\t\t// summary:\n\t\t\t//\t\tconverts a CSS font string to a font object\n\t\t\t// description:\n\t\t\t//\t\tConverts a CSS font string to a gfx font object. The CSS font\n\t\t\t//\t\tstring components should follow the W3C specified order\n\t\t\t//\t\t(see http://www.w3.org/TR/CSS2/fonts.html#font-shorthand):\n\t\t\t//\t\tstyle, variant, weight, size, optional line height (will be\n\t\t\t//\t\tignored), and family. Note that the Font.size attribute is limited to numeric CSS length.\n\t\t\t// str: String\n\t\t\t//\t\ta CSS font string.\n\t\t\t// returns: Object\n\t\t\t//      object in dojox/gfx.defaultFont format\n\t\t\tvar font = g.getDefault(\"Font\");\n\t\t\tvar t = str.split(/\\s+/);\n\t\t\tdo{\n\t\t\t\tif(t.length < 5){ break; }\n\t\t\t\tfont.style   = t[0];\n\t\t\t\tfont.variant = t[1];\n\t\t\t\tfont.weight  = t[2];\n\t\t\t\tvar i = t[3].indexOf(\"/\");\n\t\t\t\tfont.size = i < 0 ? t[3] : t[3].substring(0, i);\n\t\t\t\tvar j = 4;\n\t\t\t\tif(i < 0){\n\t\t\t\t\tif(t[4] == \"/\"){\n\t\t\t\t\t\tj = 6;\n\t\t\t\t\t}else if(t[4].charAt(0) == \"/\"){\n\t\t\t\t\t\tj = 5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(j < t.length){\n\t\t\t\t\tfont.family = t.slice(j).join(\" \");\n\t\t\t\t}\n\t\t\t}while(false);\n\t\t\treturn font;\t// Object\n\t\t},\n\t\t// length operations\n\n\t\t// cm_in_pt: Number\n\t\t//\t\tpoints per centimeter (constant)\n\t\tcm_in_pt: 72 / 2.54,\n\n\t\t// mm_in_pt: Number\n\t\t//\t\tpoints per millimeter (constant)\n\t\tmm_in_pt: 7.2 / 2.54,\n\n\t\tpx_in_pt: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current number of pixels per point.\n\t\t\treturn g._base._getCachedFontMeasurements()[\"12pt\"] / 12;\t// Number\n\t\t},\n\n\t\tpt2px: function(len){\n\t\t\t// summary:\n\t\t\t//\t\tconverts points to pixels\n\t\t\t// len: Number\n\t\t\t//\t\ta value in points\n\t\t\treturn len * g.px_in_pt();\t// Number\n\t\t},\n\n\t\tpx2pt: function(len){\n\t\t\t// summary:\n\t\t\t//\t\tconverts pixels to points\n\t\t\t// len: Number\n\t\t\t//\t\ta value in pixels\n\t\t\treturn len / g.px_in_pt();\t// Number\n\t\t},\n\n\t\tnormalizedLength: function(len) {\n\t\t\t// summary:\n\t\t\t//\t\tconverts any length value to pixels\n\t\t\t// len: String\n\t\t\t//\t\ta length, e.g., '12pc'\n\t\t\t// returns: Number\n\t\t\t//      pixels\n\t\t\tif(len.length === 0){ return 0; }\n\t\t\tif(len.length > 2){\n\t\t\t\tvar px_in_pt = g.px_in_pt();\n\t\t\t\tvar val = parseFloat(len);\n\t\t\t\tswitch(len.slice(-2)){\n\t\t\t\t\tcase \"px\": return val;\n\t\t\t\t\tcase \"pt\": return val * px_in_pt;\n\t\t\t\t\tcase \"in\": return val * 72 * px_in_pt;\n\t\t\t\t\tcase \"pc\": return val * 12 * px_in_pt;\n\t\t\t\t\tcase \"mm\": return val * g.mm_in_pt * px_in_pt;\n\t\t\t\t\tcase \"cm\": return val * g.cm_in_pt * px_in_pt;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn parseFloat(len);\t// Number\n\t\t},\n\n\t\t// pathVmlRegExp: RegExp\n\t\t//\t\ta constant regular expression used to split a SVG/VML path into primitive components\n\t\t// tags:\n\t\t//\t\tprivate\n\t\tpathVmlRegExp: /([A-Za-z]+)|(\\d+(\\.\\d+)?)|(\\.\\d+)|(-\\d+(\\.\\d+)?)|(-\\.\\d+)/g,\n\n\t\t// pathVmlRegExp: RegExp\n\t\t//\t\ta constant regular expression used to split a SVG/VML path into primitive components\n\t\t// tags:\n\t\t//\t\tprivate\n\t\tpathSvgRegExp: /([A-DF-Za-df-z])|([-+]?\\d*[.]?\\d+(?:[eE][-+]?\\d+)?)/g,\n\n\t\tequalSources: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tcompares event sources, returns true if they are equal\n\t\t\t// a: Object\n\t\t\t//\t\tfirst event source\n\t\t\t// b: Object\n\t\t\t//\t\tevent source to compare against a\n\t\t\t// returns: Boolean\n\t\t\t//      true, if objects are truthy and the same\n\t\t\treturn a && b && a === b;\n\t\t},\n\n\t\tswitchTo: function(/*String|Object*/ renderer){\n\t\t\t// summary:\n\t\t\t//\t\tswitch the graphics implementation to the specified renderer.\n\t\t\t// renderer:\n\t\t\t//\t\tEither the string name of a renderer (eg. 'canvas', 'svg, ...) or the renderer\n\t\t\t//\t\tobject to switch to.\n\t\t\tvar ns = typeof renderer == \"string\" ? g[renderer] : renderer;\n\t\t\tif(ns){\n\t\t\t\t// If more options are added, update the docblock at the end of shape.js!\n\t\t\t\tarr.forEach([\"Group\", \"Rect\", \"Ellipse\", \"Circle\", \"Line\",\n\t\t\t\t\t\t\"Polyline\", \"Image\", \"Text\", \"Path\", \"TextPath\",\n\t\t\t\t\t\t\"Surface\", \"createSurface\", \"fixTarget\"], function(name){\n\t\t\t\t\tg[name] = ns[name];\n\t\t\t\t});\n\t\t\t\tif(typeof renderer == \"string\"){\n\t\t\t\t\tg.renderer = renderer;\n\t\t\t\t}else{\n\t\t\t\t\tarr.some([\"svg\",\"vml\",\"canvas\",\"canvasWithEvents\",\"silverlight\"], function(r){\n\t\t\t\t\t\treturn (g.renderer = g[r] && g[r].Surface === g.Surface ? r : null);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\t\n\t/*=====\n\t\tg.createSurface = function(parentNode, width, height){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a surface\n\t\t\t// parentNode: Node\n\t\t\t//\t\ta parent node\n\t\t\t// width: String|Number\n\t\t\t//\t\twidth of surface, e.g., \"100px\" or 100\n\t\t\t// height: String|Number\n\t\t\t//\t\theight of surface, e.g., \"100px\" or 100\n\t\t\t// returns: dojox/gfx.Surface\n\t\t\t//     newly created surface\n\t\t};\n\t\tg.fixTarget = function(){\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t};\n\t=====*/\n\t\n\treturn g; // defaults object api\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 237:\n/*!***********************!*\\\n  !*** ../dojox/gfx.js ***!\n  \\***********************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! ./gfx/_base */ 236), __webpack_require__(/*! ./gfx/renderer */ 289)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, gfxBase, renderer){\n\t// module:\n\t//\t\tdojox/gfx\n\t// summary:\n\t//\t\tThis the root of the Dojo Graphics package\n\tgfxBase.switchTo(renderer);\n\treturn gfxBase;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 238:\n/*!**************************!*\\\n  !*** ../dojox/gfx/fx.js ***!\n  \\**************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! ./_base */ 236), __webpack_require__(/*! ./matrix */ 239), __webpack_require__(/*! dojo/_base/Color */ 78), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/_base/fx */ 79), __webpack_require__(/*! dojo/_base/connect */ 36), __webpack_require__(/*! dojo/sniff */ 8)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, g, m, Color, arr, fx, Hub, has){\n\tvar fxg = g.fx = {};\n\n\t// Generic interpolators. Should they be moved to dojox.fx?\n\n\tfunction InterpolNumber(start, end){\n\t\tthis.start = start, this.end = end;\n\t}\n\tInterpolNumber.prototype.getValue = function(r){\n\t\treturn (this.end - this.start) * r + this.start;\n\t};\n\n\tfunction InterpolUnit(start, end, units){\n\t\tthis.start = start, this.end = end;\n\t\tthis.units = units;\n\t}\n\tInterpolUnit.prototype.getValue = function(r){\n\t\treturn (this.end - this.start) * r + this.start + this.units;\n\t};\n\n\tfunction InterpolColor(start, end){\n\t\tthis.start = start, this.end = end;\n\t\tthis.temp = new Color();\n\t}\n\tInterpolColor.prototype.getValue = function(r){\n\t\treturn Color.blendColors(this.start, this.end, r, this.temp);\n\t};\n\n\tfunction InterpolValues(values){\n\t\tthis.values = values;\n\t\tthis.length = values.length;\n\t}\n\tInterpolValues.prototype.getValue = function(r){\n\t\treturn this.values[Math.min(Math.floor(r * this.length), this.length - 1)];\n\t};\n\n\tfunction InterpolObject(values, def){\n\t\tthis.values = values;\n\t\tthis.def = def ? def : {};\n\t}\n\tInterpolObject.prototype.getValue = function(r){\n\t\tvar ret = lang.clone(this.def);\n\t\tfor(var i in this.values){\n\t\t\tret[i] = this.values[i].getValue(r);\n\t\t}\n\t\treturn ret;\n\t};\n\n\tfunction InterpolTransform(stack, original){\n\t\tthis.stack = stack;\n\t\tthis.original = original;\n\t}\n\tInterpolTransform.prototype.getValue = function(r){\n\t\tvar ret = [];\n\t\tarr.forEach(this.stack, function(t){\n\t\t\tif(t instanceof m.Matrix2D){\n\t\t\t\tret.push(t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(t.name == \"original\" && this.original){\n\t\t\t\tret.push(this.original);\n\t\t\t\treturn;\n\t\t\t}\n \t\t\t// Adding support for custom matrices\n \t\t\tif(t.name == \"matrix\"){\n \t\t\t\tif((t.start instanceof m.Matrix2D) && (t.end instanceof m.Matrix2D)){\n \t\t\t\t\tvar transfMatrix = new m.Matrix2D();\n \t\t\t\t\tfor(var p in t.start) {\n \t\t\t\t\t\ttransfMatrix[p] = (t.end[p] - t.start[p])*r + t.start[p];\n \t\t\t\t\t}\n \t\t\t\t\tret.push(transfMatrix);\n \t\t\t\t}\n \t\t\t\treturn;\n \t\t\t}\n\t\t\tif(!(t.name in m)){ return; }\n\t\t\tvar f = m[t.name];\n\t\t\tif(typeof f != \"function\"){\n\t\t\t\t// constant\n\t\t\t\tret.push(f);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar val = arr.map(t.start, function(v, i){\n\t\t\t\t\t\t\treturn (t.end[i] - v) * r + v;\n\t\t\t\t\t\t}),\n\t\t\t\tmatrix = f.apply(m, val);\n\t\t\tif(matrix instanceof m.Matrix2D){\n\t\t\t\tret.push(matrix);\n\t\t\t}\n\t\t}, this);\n\t\treturn ret;\n\t};\n\n\tvar transparent = new Color(0, 0, 0, 0);\n\n\tfunction getColorInterpol(prop, obj, name, def){\n\t\tif(prop.values){\n\t\t\treturn new InterpolValues(prop.values);\n\t\t}\n\t\tvar value, start, end;\n\t\tif(prop.start){\n\t\t\tstart = g.normalizeColor(prop.start);\n\t\t}else{\n\t\t\tstart = value = obj ? (name ? obj[name] : obj) : def;\n\t\t}\n\t\tif(prop.end){\n\t\t\tend = g.normalizeColor(prop.end);\n\t\t}else{\n\t\t\tif(!value){\n\t\t\t\tvalue = obj ? (name ? obj[name] : obj) : def;\n\t\t\t}\n\t\t\tend = value;\n\t\t}\n\t\treturn new InterpolColor(start, end);\n\t}\n\n\tfunction getNumberInterpol(prop, obj, name, def){\n\t\tif(prop.values){\n\t\t\treturn new InterpolValues(prop.values);\n\t\t}\n\t\tvar value, start, end;\n\t\tif(prop.start){\n\t\t\tstart = prop.start;\n\t\t}else{\n\t\t\tstart = value = obj ? obj[name] : def;\n\t\t}\n\t\tif(prop.end){\n\t\t\tend = prop.end;\n\t\t}else{\n\t\t\tif(typeof value != \"number\"){\n\t\t\t\tvalue = obj ? obj[name] : def;\n\t\t\t}\n\t\t\tend = value;\n\t\t}\n\t\treturn new InterpolNumber(start, end);\n\t}\n\n\tfxg.animateStroke = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tReturns an animation which will change stroke properties over time.\n\t\t// args:\n\t\t//\t\tan object defining the animation setting.\n\t\t// example:\n\t\t//\t|\tfxg.animateStroke{{\n\t\t//\t|\t\tshape: shape,\n\t\t//\t|\t\tduration: 500,\n\t\t//\t|\t\tcolor: {start: \"red\", end: \"green\"},\n\t\t//\t|\t\twidth: {end: 15},\n\t\t//\t|\t\tjoin:  {values: [\"miter\", \"bevel\", \"round\"]}\n\t\t//\t|\t}).play();\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\n\t\tvar anim = new fx.Animation(args), shape = args.shape, stroke;\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\n\t\t\tstroke = shape.getStroke();\n\t\t\tvar prop = args.color, values = {}, value, start, end;\n\t\t\tif(prop){\n\t\t\t\tvalues.color = getColorInterpol(prop, stroke, \"color\", transparent);\n\t\t\t}\n\t\t\tprop = args.style;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.style = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.width;\n\t\t\tif(prop){\n\t\t\t\tvalues.width = getNumberInterpol(prop, stroke, \"width\", 1);\n\t\t\t}\n\t\t\tprop = args.cap;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.cap = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.join;\n\t\t\tif(prop){\n\t\t\t\tif(prop.values){\n\t\t\t\t\tvalues.join = new InterpolValues(prop.values);\n\t\t\t\t}else{\n\t\t\t\t\tstart = prop.start ? prop.start : (stroke && stroke.join || 0);\n\t\t\t\t\tend = prop.end ? prop.end : (stroke && stroke.join || 0);\n\t\t\t\t\tif(typeof start == \"number\" && typeof end == \"number\"){\n\t\t\t\t\t\tvalues.join = new InterpolNumber(start, end);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.curve = new InterpolObject(values, stroke);\n\t\t});\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setStroke\");\n\t\treturn anim; // dojo.Animation\n\t};\n\n\tfxg.animateFill = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tReturns an animation which will change fill color over time.\n\t\t//\t\tOnly solid fill color is supported at the moment\n\t\t// args:\n\t\t//\t\tan object defining the animation setting.\n\t\t// example:\n\t\t//\t|\tgfx.animateFill{{\n\t\t//\t|\t\tshape: shape,\n\t\t//\t|\t\tduration: 500,\n\t\t//\t|\t\tcolor: {start: \"red\", end: \"green\"}\n\t\t//\t|\t}).play();\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\n\t\tvar anim = new fx.Animation(args), shape = args.shape, fill;\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\n\t\t\tfill = shape.getFill();\n\t\t\tvar prop = args.color, values = {};\n\t\t\tif(prop){\n\t\t\t\tthis.curve = getColorInterpol(prop, fill, \"\", transparent);\n\t\t\t}\n\t\t});\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setFill\");\n\t\treturn anim; // dojo.Animation\n\t};\n\n\tfxg.animateFont = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tReturns an animation which will change font properties over time.\n\t\t// args:\n\t\t//\t\tan object defining the animation setting.\n\t\t// example:\n\t\t//\t|\tgfx.animateFont{{\n\t\t//\t|\t\tshape: shape,\n\t\t//\t|\t\tduration: 500,\n\t\t//\t|\t\tvariant: {values: [\"normal\", \"small-caps\"]},\n\t\t//\t|\t\tsize:  {end: 10, units: \"pt\"}\n\t\t//\t|\t}).play();\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\n\t\tvar anim = new fx.Animation(args), shape = args.shape, font;\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\n\t\t\tfont = shape.getFont();\n\t\t\tvar prop = args.style, values = {}, value, start, end;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.style = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.variant;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.variant = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.weight;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.weight = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.family;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.family = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.size;\n\t\t\tif(prop && prop.units){\n\t\t\t\tstart = parseFloat(prop.start ? prop.start : (shape.font && shape.font.size || \"0\"));\n\t\t\t\tend = parseFloat(prop.end ? prop.end : (shape.font && shape.font.size || \"0\"));\n\t\t\t\tvalues.size = new InterpolUnit(start, end, prop.units);\n\t\t\t}\n\t\t\tthis.curve = new InterpolObject(values, font);\n\t\t});\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setFont\");\n\t\treturn anim; // dojo.Animation\n\t};\n\n\tfxg.animateTransform = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tReturns an animation which will change transformation over time.\n\t\t// args:\n\t\t//\t\tan object defining the animation setting.\n\t\t// example:\n\t\t//\t|\tgfx.animateTransform{{\n\t\t//\t|\t\tshape: shape,\n\t\t//\t|\t\tduration: 500,\n\t\t//\t|\t\ttransform: [\n\t\t//\t|\t\t\t{name: \"translate\", start: [0, 0], end: [200, 200]},\n\t\t//\t|\t\t\t{name: \"original\"}\n\t\t//\t|\t\t]\n\t\t//\t|\t}).play();\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\n\t\tvar anim = new fx.Animation(args), shape = args.shape, original;\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\n\t\t\toriginal = shape.getTransform();\n\t\t\tthis.curve = new InterpolTransform(args.transform, original);\n\t\t});\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setTransform\");\n\t\tif(g.renderer === \"svg\" && (has(\"ie\") >= 9 || has(\"ff\"))){\n\t\t\t// fix http://bugs.dojotoolkit.org/ticket/16879\n\t\t\tvar handlers = [\n\t\t\t\t\tHub.connect(anim, \"onBegin\", anim, function(){\n\t\t\t\t\t\tvar parent = shape.getParent();\n\t\t\t\t\t\twhile(parent && parent.getParent){\n\t\t\t\t\t\t\tparent = parent.getParent();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(parent){\n\t\t\t\t\t\t\tshape.__svgContainer = parent.rawNode.parentNode;\n\t\t\t\t\t\t\tshape.__svgRoot = parent.rawNode;\n\t\t\t\t\t\t\tif(shape.__svgRoot && shape.__svgRoot.getAttribute){\n\t\t\t\t\t\t\t\tshape.__svgWidth = parseInt(shape.__svgRoot.getAttribute(\"width\"), 10);\n\t\t\t\t\t\t\t\tif(isNaN(shape.__svgWidth)){\n\t\t\t\t\t\t\t\t\tdelete shape.__svgWidth;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tHub.connect(anim, \"onAnimate\", anim, function(){\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tif(shape.__svgContainer){\n\t\t\t\t\t\t\t\tvar ov = shape.__svgContainer.style.visibility;\n\t\t\t\t\t\t\t\tshape.__svgContainer.style.visibility = \"visible\";\n\t\t\t\t\t\t\t\tvar pokeNode = shape.__svgContainer.offsetHeight;\n\t\t\t\t\t\t\t\tshape.__svgContainer.style.visibility = ov;\n\t\t\t\t\t\t\t\tvar width = shape.__svgWidth;\n\t\t\t\t\t\t\t\tif(!isNaN(width)){\n\t\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\t\tshape.__svgRoot.setAttribute(\"width\", width  - 0.000005);\n\t\t\t\t\t\t\t\t\t\tshape.__svgRoot.setAttribute(\"width\", width);\n\t\t\t\t\t\t\t\t\t}catch(ignore){}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}catch(e){}\n\t\t\t\t\t}),\n\t\t\t\t\tHub.connect(anim, \"onEnd\", anim, function(){\n\t\t\t\t\t\tarr.forEach(handlers, Hub.disconnect);\n\t\t\t\t\t\tif(shape.__svgContainer){\n\t\t\t\t\t\t\tvar sn = shape.__svgContainer;\n\t\t\t\t\t\t\tif(sn.getAttribute(\"__gotVis\") == null){\n\t\t\t\t\t\t\t\tsn.setAttribute(\"__gotVis\", true);\n\t\t\t\t\t\t\t\tvar ov = shape.__svgContainer.style.visibility;\n\t\t\t\t\t\t\t\tvar root = shape.__svgRoot;\n\t\t\t\t\t\t\t\tvar width = shape.__svgWidth;\n\t\t\t\t\t\t\t\tsn.style.visibility = \"visible\";\n\t\t\t\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\t\tsn.style.visibility = ov;\n\t\t\t\t\t\t\t\t\t\tsn.removeAttribute(\"__gotVis\");\n\t\t\t\t\t\t\t\t\t\tsn = null;\n\t\t\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\t\t\tif(!isNaN(width)){\n\t\t\t\t\t\t\t\t\t\t\t\troot.setAttribute(\"width\", width - 0.000005);\n\t\t\t\t\t\t\t\t\t\t\t\troot.setAttribute(\"width\", width);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}catch(ignore){}\n\t\t\t\t\t\t\t\t\t}catch(e){}\n\t\t\t\t\t\t\t\t},100);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete shape.__svgContainer;\n\t\t\t\t\t\tdelete shape.__svgRoot;\n\t\t\t\t\t\tdelete shape.__svgWidth;\n\t\t\t\t\t})\n\t\t\t\t];\n\t\t}\n\t\treturn anim; // dojo.Animation\n\t};\n\t\n\treturn fxg;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 239:\n/*!******************************!*\\\n  !*** ../dojox/gfx/matrix.js ***!\n  \\******************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base */ 236),__webpack_require__(/*! dojo/_base/lang */ 0)], __WEBPACK_AMD_DEFINE_RESULT__ = function(g, lang){\n\tvar m = g.matrix = {};\n\n\t// candidates for dojox.math:\n\tvar _degToRadCache = {};\n\tm._degToRad = function(degree){\n\t\treturn _degToRadCache[degree] || (_degToRadCache[degree] = (Math.PI * degree / 180));\n\t};\n\tm._radToDeg = function(radian){ return radian / Math.PI * 180; };\n\n\tm.Matrix2D = function(arg){\n\t\t// summary:\n\t\t//\t\ta 2D matrix object\n\t\t// description:\n\t\t//\t\tNormalizes a 2D matrix-like object. If arrays is passed,\n\t\t//\t\tall objects of the array are normalized and multiplied sequentially.\n\t\t// arg: Object\n\t\t//\t\ta 2D matrix-like object, a number, or an array of such objects\n\t\tif(arg){\n\t\t\tif(typeof arg == \"number\"){\n\t\t\t\tthis.xx = this.yy = arg;\n\t\t\t}else if(arg instanceof Array){\n\t\t\t\tif(arg.length > 0){\n\t\t\t\t\tvar matrix = m.normalize(arg[0]);\n\t\t\t\t\t// combine matrices\n\t\t\t\t\tfor(var i = 1; i < arg.length; ++i){\n\t\t\t\t\t\tvar l = matrix, r = m.normalize(arg[i]);\n\t\t\t\t\t\tmatrix = new m.Matrix2D();\n\t\t\t\t\t\tmatrix.xx = l.xx * r.xx + l.xy * r.yx;\n\t\t\t\t\t\tmatrix.xy = l.xx * r.xy + l.xy * r.yy;\n\t\t\t\t\t\tmatrix.yx = l.yx * r.xx + l.yy * r.yx;\n\t\t\t\t\t\tmatrix.yy = l.yx * r.xy + l.yy * r.yy;\n\t\t\t\t\t\tmatrix.dx = l.xx * r.dx + l.xy * r.dy + l.dx;\n\t\t\t\t\t\tmatrix.dy = l.yx * r.dx + l.yy * r.dy + l.dy;\n\t\t\t\t\t}\n\t\t\t\t\tlang.mixin(this, matrix);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tlang.mixin(this, arg);\n\t\t\t}\n\t\t}\n\t};\n\n\t// the default (identity) matrix, which is used to fill in missing values\n\tlang.extend(m.Matrix2D, {xx: 1, xy: 0, yx: 0, yy: 1, dx: 0, dy: 0});\n\n\tlang.mixin(m, {\n\t\t// summary:\n\t\t//\t\tclass constants, and methods of dojox/gfx/matrix\n\n\t\t// matrix constants\n\n\t\t// identity: dojox/gfx/matrix.Matrix2D\n\t\t//\t\tan identity matrix constant: identity * (x, y) == (x, y)\n\t\tidentity: new m.Matrix2D(),\n\n\t\t// flipX: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta matrix, which reflects points at x = 0 line: flipX * (x, y) == (-x, y)\n\t\tflipX:    new m.Matrix2D({xx: -1}),\n\n\t\t// flipY: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta matrix, which reflects points at y = 0 line: flipY * (x, y) == (x, -y)\n\t\tflipY:    new m.Matrix2D({yy: -1}),\n\n\t\t// flipXY: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta matrix, which reflects points at the origin of coordinates: flipXY * (x, y) == (-x, -y)\n\t\tflipXY:   new m.Matrix2D({xx: -1, yy: -1}),\n\n\t\t// matrix creators\n\n\t\ttranslate: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tforms a translation matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to translate (move) points by specified offsets.\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x coordinate value, or a point-like object, which specifies offsets for both dimensions\n\t\t\t// b: Number?\n\t\t\t//\t\ta y coordinate value\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 1){\n\t\t\t\treturn new m.Matrix2D({dx: a, dy: b}); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\t// branch\n\t\t\treturn new m.Matrix2D({dx: a.x, dy: a.y}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tscale: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tforms a scaling matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to scale (magnify) points by specified offsets.\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\ta scaling factor used for the x coordinate, or\n\t\t\t//\t\ta uniform scaling factor used for the both coordinates, or\n\t\t\t//\t\ta point-like object, which specifies scale factors for both dimensions\n\t\t\t// b: Number?\n\t\t\t//\t\ta scaling factor used for the y coordinate\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 1){\n\t\t\t\treturn new m.Matrix2D({xx: a, yy: b}); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\tif(typeof a == \"number\"){\n\t\t\t\treturn new m.Matrix2D({xx: a, yy: a}); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn new m.Matrix2D({xx: a.x, yy: a.y}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\trotate: function(angle){\n\t\t\t// summary:\n\t\t\t//\t\tforms a rotating matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to rotate points\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified angle.\n\t\t\t// angle: Number\n\t\t\t//\t\tan angle of rotation in radians (>0 for CW)\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tvar c = Math.cos(angle);\n\t\t\tvar s = Math.sin(angle);\n\t\t\treturn new m.Matrix2D({xx: c, xy: -s, yx: s, yy: c}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\trotateg: function(degree){\n\t\t\t// summary:\n\t\t\t//\t\tforms a rotating matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to rotate points\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified degree.\n\t\t\t//\t\tSee dojox/gfx/matrix.rotate() for comparison.\n\t\t\t// degree: Number\n\t\t\t//\t\tan angle of rotation in degrees (>0 for CW)\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn m.rotate(m._degToRad(degree)); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewX: function(angle) {\n\t\t\t// summary:\n\t\t\t//\t\tforms an x skewing matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to skew points in the x dimension\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified angle.\n\t\t\t// angle: Number\n\t\t\t//\t\ta skewing angle in radians\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn new m.Matrix2D({xy: Math.tan(angle)}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewXg: function(degree){\n\t\t\t// summary:\n\t\t\t//\t\tforms an x skewing matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to skew points in the x dimension\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified degree.\n\t\t\t//\t\tSee dojox/gfx/matrix.skewX() for comparison.\n\t\t\t// degree: Number\n\t\t\t//\t\ta skewing angle in degrees\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn m.skewX(m._degToRad(degree)); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewY: function(angle){\n\t\t\t// summary:\n\t\t\t//\t\tforms a y skewing matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to skew points in the y dimension\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified angle.\n\t\t\t// angle: Number\n\t\t\t//\t\ta skewing angle in radians\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn new m.Matrix2D({yx: Math.tan(angle)}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewYg: function(degree){\n\t\t\t// summary:\n\t\t\t//\t\tforms a y skewing matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to skew points in the y dimension\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified degree.\n\t\t\t//\t\tSee dojox/gfx/matrix.skewY() for comparison.\n\t\t\t// degree: Number\n\t\t\t//\t\ta skewing angle in degrees\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn m.skewY(m._degToRad(degree)); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\treflect: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tforms a reflection matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to reflect points around a vector,\n\t\t\t//\t\twhich goes through the origin.\n\t\t\t// a: dojox/gfx.Point|Number\n\t\t\t//\t\ta point-like object, which specifies a vector of reflection, or an X value\n\t\t\t// b: Number?\n\t\t\t//\t\ta Y value\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length == 1){\n\t\t\t\tb = a.y;\n\t\t\t\ta = a.x;\n\t\t\t}\n\t\t\t// make a unit vector\n\t\t\tvar a2 = a * a, b2 = b * b, n2 = a2 + b2, xy = 2 * a * b / n2;\n\t\t\treturn new m.Matrix2D({xx: 2 * a2 / n2 - 1, xy: xy, yx: xy, yy: 2 * b2 / n2 - 1}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tproject: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tforms an orthogonal projection matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to project points orthogonally on a vector,\n\t\t\t//\t\twhich goes through the origin.\n\t\t\t// a: dojox/gfx.Point|Number\n\t\t\t//\t\ta point-like object, which specifies a vector of projection, or\n\t\t\t//\t\tan x coordinate value\n\t\t\t// b: Number?\n\t\t\t//\t\ta y coordinate value\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length == 1){\n\t\t\t\tb = a.y;\n\t\t\t\ta = a.x;\n\t\t\t}\n\t\t\t// make a unit vector\n\t\t\tvar a2 = a * a, b2 = b * b, n2 = a2 + b2, xy = a * b / n2;\n\t\t\treturn new m.Matrix2D({xx: a2 / n2, xy: xy, yx: xy, yy: b2 / n2}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\n\t\t// ensure matrix 2D conformance\n\t\tnormalize: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tconverts an object to a matrix, if necessary\n\t\t\t// description:\n\t\t\t//\t\tConverts any 2D matrix-like object or an array of\n\t\t\t//\t\tsuch objects to a valid dojox/gfx/matrix.Matrix2D object.\n\t\t\t// matrix: Object\n\t\t\t//\t\tan object, which is converted to a matrix, if necessary\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn (matrix instanceof m.Matrix2D) ? matrix : new m.Matrix2D(matrix); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\n\t\t// common operations\n\n\t\tisIdentity: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\treturns whether the specified matrix is the identity.\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix object to be tested\n\t\t\t// returns: Boolean\n\t\t\treturn matrix.xx == 1 && matrix.xy == 0 && matrix.yx == 0 && matrix.yy == 1 && matrix.dx == 0 && matrix.dy == 0; // Boolean\n\t\t},\n\t\tclone: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a copy of a 2D matrix\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix-like object to be cloned\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tvar obj = new m.Matrix2D();\n\t\t\tfor(var i in matrix){\n\t\t\t\tif(typeof(matrix[i]) == \"number\" && typeof(obj[i]) == \"number\" && obj[i] != matrix[i]) obj[i] = matrix[i];\n\t\t\t}\n\t\t\treturn obj; // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tinvert: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tinverts a 2D matrix\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix-like object to be inverted\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tvar M = m.normalize(matrix),\n\t\t\t\tD = M.xx * M.yy - M.xy * M.yx;\n\t\t\t\tM = new m.Matrix2D({\n\t\t\t\t\txx: M.yy/D, xy: -M.xy/D,\n\t\t\t\t\tyx: -M.yx/D, yy: M.xx/D,\n\t\t\t\t\tdx: (M.xy * M.dy - M.yy * M.dx) / D,\n\t\t\t\t\tdy: (M.yx * M.dx - M.xx * M.dy) / D\n\t\t\t\t});\n\t\t\treturn M; // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\t_multiplyPoint: function(matrix, x, y){\n\t\t\t// summary:\n\t\t\t//\t\tapplies a matrix to a point\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix object to be applied\n\t\t\t// x: Number\n\t\t\t//\t\tan x coordinate of a point\n\t\t\t// y: Number\n\t\t\t//\t\ta y coordinate of a point\n\t\t\t// returns: dojox/gfx.Point\n\t\t\treturn {x: matrix.xx * x + matrix.xy * y + matrix.dx, y: matrix.yx * x + matrix.yy * y + matrix.dy}; // dojox/gfx.Point\n\t\t},\n\t\tmultiplyPoint: function(matrix, /* Number||Point */ a, /* Number? */ b){\n\t\t\t// summary:\n\t\t\t//\t\tapplies a matrix to a point\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix object to be applied\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x coordinate of a point, or a point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y coordinate of a point\n\t\t\t// returns: dojox/gfx.Point\n\t\t\tvar M = m.normalize(matrix);\n\t\t\tif(typeof a == \"number\" && typeof b == \"number\"){\n\t\t\t\treturn m._multiplyPoint(M, a, b); // dojox/gfx.Point\n\t\t\t}\n\t\t\treturn m._multiplyPoint(M, a.x, a.y); // dojox/gfx.Point\n\t\t},\n\t\tmultiplyRectangle: function(matrix, /*Rectangle*/ rect){\n\t\t\t// summary:\n\t\t\t//\t\tApplies a matrix to a rectangle.\n\t\t\t// description:\n\t\t\t//\t\tThe method applies the transformation on all corners of the\n\t\t\t//\t\trectangle and returns the smallest rectangle enclosing the 4 transformed\n\t\t\t//\t\tpoints.\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix object to be applied.\n\t\t\t// rect: Rectangle\n\t\t\t//\t\tthe rectangle to transform.\n\t\t\t// returns: dojox/gfx.Rectangle\n\t\t\tvar M = m.normalize(matrix);\n\t\t\trect = rect || {x:0, y:0, width:0, height:0}; \n\t\t\tif(m.isIdentity(M))\n\t\t\t\treturn {x: rect.x, y: rect.y, width: rect.width, height: rect.height}; // dojo/gfx.Rectangle\n\t\t\tvar p0 = m.multiplyPoint(M, rect.x, rect.y),\n\t\t\t\tp1 = m.multiplyPoint(M, rect.x, rect.y + rect.height),\n\t\t\t\tp2 = m.multiplyPoint(M, rect.x + rect.width, rect.y),\n\t\t\t\tp3 = m.multiplyPoint(M, rect.x + rect.width, rect.y + rect.height),\n\t\t\t\tminx = Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\tminy = Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\t\tmaxx = Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\tmaxy = Math.max(p0.y, p1.y, p2.y, p3.y);\n\t\t\treturn{ // dojo/gfx.Rectangle\n\t\t\t\tx: minx,\n\t\t\t\ty: miny,\n\t\t\t\twidth: maxx - minx,\n\t\t\t\theight: maxy - miny\n\t\t\t};\n\t\t},\n\t\tmultiply: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tcombines matrices by multiplying them sequentially in the given order\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix-like object,\n\t\t\t//\t\tall subsequent arguments are matrix-like objects too\n\t\t\tvar M = m.normalize(matrix);\n\t\t\t// combine matrices\n\t\t\tfor(var i = 1; i < arguments.length; ++i){\n\t\t\t\tvar l = M, r = m.normalize(arguments[i]);\n\t\t\t\tM = new m.Matrix2D();\n\t\t\t\tM.xx = l.xx * r.xx + l.xy * r.yx;\n\t\t\t\tM.xy = l.xx * r.xy + l.xy * r.yy;\n\t\t\t\tM.yx = l.yx * r.xx + l.yy * r.yx;\n\t\t\t\tM.yy = l.yx * r.xy + l.yy * r.yy;\n\t\t\t\tM.dx = l.xx * r.dx + l.xy * r.dy + l.dx;\n\t\t\t\tM.dy = l.yx * r.dx + l.yy * r.dy + l.dy;\n\t\t\t}\n\t\t\treturn M; // dojox/gfx/matrix.Matrix2D\n\t\t},\n\n\t\t// high level operations\n\n\t\t_sandwich: function(matrix, x, y){\n\t\t\t// summary:\n\t\t\t//\t\tapplies a matrix at a central point\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix-like object, which is applied at a central point\n\t\t\t// x: Number\n\t\t\t//\t\tan x component of the central point\n\t\t\t// y: Number\n\t\t\t//\t\ta y component of the central point\n\t\t\treturn m.multiply(m.translate(x, y), matrix, m.translate(-x, -y)); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tscaleAt: function(a, b, c, d){\n\t\t\t// summary:\n\t\t\t//\t\tscales a picture using a specified point as a center of scaling\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.scale().\n\t\t\t// a: Number\n\t\t\t//\t\ta scaling factor used for the x coordinate, or a uniform scaling factor used for both coordinates\n\t\t\t// b: Number?\n\t\t\t//\t\ta scaling factor used for the y coordinate\n\t\t\t// c: Number|Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// d: Number\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tswitch(arguments.length){\n\t\t\t\tcase 4:\n\t\t\t\t\t// a and b are scale factor components, c and d are components of a point\n\t\t\t\t\treturn m._sandwich(m.scale(a, b), c, d); // dojox/gfx/matrix.Matrix2D\n\t\t\t\tcase 3:\n\t\t\t\t\tif(typeof c == \"number\"){\n\t\t\t\t\t\treturn m._sandwich(m.scale(a), b, c); // dojox/gfx/matrix.Matrix2D\n\t\t\t\t\t}\n\t\t\t\t\treturn m._sandwich(m.scale(a, b), c.x, c.y); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.scale(a), b.x, b.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\trotateAt: function(angle, a, b){\n\t\t\t// summary:\n\t\t\t//\t\trotates a picture using a specified point as a center of rotation\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.rotate().\n\t\t\t// angle: Number\n\t\t\t//\t\tan angle of rotation in radians (>0 for CW)\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.rotate(angle), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.rotate(angle), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\trotategAt: function(degree, a, b){\n\t\t\t// summary:\n\t\t\t//\t\trotates a picture using a specified point as a center of rotation\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.rotateg().\n\t\t\t// degree: Number\n\t\t\t//\t\tan angle of rotation in degrees (>0 for CW)\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.rotateg(degree), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.rotateg(degree), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewXAt: function(angle, a, b){\n\t\t\t// summary:\n\t\t\t//\t\tskews a picture along the x axis using a specified point as a center of skewing\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.skewX().\n\t\t\t// angle: Number\n\t\t\t//\t\ta skewing angle in radians\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.skewX(angle), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.skewX(angle), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewXgAt: function(degree, a, b){\n\t\t\t// summary:\n\t\t\t//\t\tskews a picture along the x axis using a specified point as a center of skewing\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.skewXg().\n\t\t\t// degree: Number\n\t\t\t//\t\ta skewing angle in degrees\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.skewXg(degree), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.skewXg(degree), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewYAt: function(angle, a, b){\n\t\t\t// summary:\n\t\t\t//\t\tskews a picture along the y axis using a specified point as a center of skewing\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.skewY().\n\t\t\t// angle: Number\n\t\t\t//\t\ta skewing angle in radians\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.skewY(angle), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.skewY(angle), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewYgAt: function(/* Number */ degree, /* Number||Point */ a, /* Number? */ b){\n\t\t\t// summary:\n\t\t\t//\t\tskews a picture along the y axis using a specified point as a center of skewing\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.skewYg().\n\t\t\t// degree: Number\n\t\t\t//\t\ta skewing angle in degrees\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.skewYg(degree), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.skewYg(degree), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t}\n\n\t\t//TODO: rect-to-rect mapping, scale-to-fit (isotropic and anisotropic versions)\n\n\t});\n\t// propagate Matrix2D up\n\tg.Matrix2D = m.Matrix2D;\n\n\treturn m;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n\n\n/***/ }),\n\n/***/ 240:\n/*!***********************************************!*\\\n  !*** ../dojox/charting/plot2d/_PlotEvents.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/connect */ 36)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, arr, declare, hub){\n\n\treturn declare(\"dojox.charting.plot2d._PlotEvents\", null, {\n\t\tconstructor: function(){\n\t\t\tthis._shapeEvents = [];\n\t\t\tthis._eventSeries = {};\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDestroy any internal elements and event handlers.\n\t\t\tthis.resetEvents();\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\tplotEvent: function(o){\n\t\t\t// summary:\n\t\t\t//\t\tStub function for use by specific plots.\n\t\t\t// o: Object\n\t\t\t//\t\tAn object intended to represent event parameters.\n\t\t},\n\t\traiseEvent: function(o){\n\t\t\t// summary:\n\t\t\t//\t\tRaises events in predefined order\n\t\t\t// o: Object\n\t\t\t//\t\tAn object intended to represent event parameters.\n\t\t\tthis.plotEvent(o);\n\t\t\tvar t = lang.delegate(o);\n\t\t\tt.originalEvent = o.type;\n\t\t\tt.originalPlot  = o.plot;\n\t\t\tt.type = \"onindirect\";\n\t\t\tarr.forEach(this.chart.stack, function(plot){\n\t\t\t\tif(plot !== this && plot.plotEvent){\n\t\t\t\t\tt.plot = plot;\n\t\t\t\t\tplot.plotEvent(t);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\t\tconnect: function(object, method){\n\t\t\t// summary:\n\t\t\t//\t\tHelper function to connect any object's method to our plotEvent.\n\t\t\t// object: Object\n\t\t\t//\t\tThe object to connect to.\n\t\t\t// method: String|Function\n\t\t\t//\t\tThe method to fire when our plotEvent is fired.\n\t\t\t// returns: Array\n\t\t\t//\t\tThe handle as returned from dojo.connect (see dojo.connect).\n\t\t\tthis.dirty = true;\n\t\t\treturn hub.connect(this, \"plotEvent\", object, method);\t//\tArray\n\t\t},\n\t\tevents: function(){\n\t\t\t// summary:\n\t\t\t//\t\tFind out if any event handlers have been connected to our plotEvent.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tA flag indicating that there are handlers attached.\n\t\t\treturn !!this.plotEvent.after;\n\t\t},\n\t\tresetEvents: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReset all events attached to our plotEvent (i.e. disconnect).\n\t\t\tif(this._shapeEvents.length){\n\t\t\t\tarr.forEach(this._shapeEvents, function(item){\n\t\t\t\t\titem.shape.disconnect(item.handle);\n\t\t\t\t});\n\t\t\t\tthis._shapeEvents = [];\n\t\t\t}\n\t\t\tthis.raiseEvent({type: \"onplotreset\", plot: this});\n\t\t},\n\t\t_connectSingleEvent: function(o, eventName){\n\t\t\tthis._shapeEvents.push({\n\t\t\t\tshape:  o.eventMask,\n\t\t\t\thandle: o.eventMask.connect(eventName, this, function(e){\n\t\t\t\t\to.type  = eventName;\n\t\t\t\t\to.event = e;\n\t\t\t\t\tthis.raiseEvent(o);\n\t\t\t\t\to.event = null;\n\t\t\t\t})\n\t\t\t});\n\t\t},\n\t\t_connectEvents: function(o){\n\t\t\tif(o){\n\t\t\t\to.chart = this.chart;\n\t\t\t\to.plot  = this;\n\t\t\t\to.hAxis = this.hAxis || null;\n\t\t\t\to.vAxis = this.vAxis || null;\n\t\t\t\to.eventMask = o.eventMask || o.shape;\n\t\t\t\tthis._connectSingleEvent(o, \"onmouseover\");\n\t\t\t\tthis._connectSingleEvent(o, \"onmouseout\");\n\t\t\t\tthis._connectSingleEvent(o, \"onclick\");\n\t\t\t}\n\t\t},\n\t\t_reconnectEvents: function(seriesName){\n\t\t\tvar a = this._eventSeries[seriesName];\n\t\t\tif(a){\n\t\t\t\tarr.forEach(a, this._connectEvents, this);\n\t\t\t}\n\t\t},\n\t\tfireEvent: function(seriesName, eventName, index, eventObject){\n\t\t\t// summary:\n\t\t\t//\t\tEmulates firing an event for a given data value (specified by\n\t\t\t//\t\tan index) of a given series.\n\t\t\t// seriesName: String\n\t\t\t//\t\tSeries name.\n\t\t\t// eventName: String\n\t\t\t//\t\tEvent name to emulate.\n\t\t\t// index: Number\n\t\t\t//\t\tValid data value index used to raise an event.\n\t\t\t// eventObject: Object?\n\t\t\t//\t\tOptional event object. Especially useful for synthetic events.\n\t\t\t//\t\tDefault: null.\n\t\t\tvar s = this._eventSeries[seriesName];\n\t\t\tif(s && s.length && index < s.length){\n\t\t\t\tvar o = s[index];\n\t\t\t\to.type  = eventName;\n\t\t\t\to.event = eventObject || null;\n\t\t\t\tthis.raiseEvent(o);\n\t\t\t\to.event = null;\n\t\t\t}\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 241:\n/*!*************************************************!*\\\n  !*** ../dojox/charting/plot2d/CartesianBase.js ***!\n  \\*************************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/connect */ 36), __webpack_require__(/*! dojo/has */ 3),\n\t\t__webpack_require__(/*! ./Base */ 251), __webpack_require__(/*! ../scaler/primitive */ 295), __webpack_require__(/*! dojox/gfx */ 237), __webpack_require__(/*! dojox/gfx/fx */ 238), __webpack_require__(/*! dojox/lang/utils */ 235)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, declare, hub, has, Base, primitive, gfx, fx, du){\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__CartesianCtorArgs\", dojox.charting.plot2d.__PlotCtorArgs, {\n\t\t// hAxis: String?\n\t\t//\t\tThe horizontal axis name.\n\t\thAxis: \"x\",\n\n\t\t// vAxis: String?\n\t\t//\t\tThe vertical axis name\n\t\tvAxis: \"y\",\n\n\t\t// labels: Boolean?\n\t\t//\t\tFor plots that support labels, whether or not to draw labels for each data item.  Default is false.\n\t\tlabels:\t\t\tfalse,\n\n\t\t// fixed: Boolean?\n        //\t\tWhether a fixed precision must be applied to data values for display. Default is true.\n\t\tfixed:\t\t\ttrue,\n\n\t\t// precision: Number?\n        //\t\tThe precision at which to round data values for display. Default is 0.\n\t\tprecision:\t\t1,\n\n\t\t// labelOffset: Number?\n\t\t//\t\tThe amount in pixels by which to offset labels when using \"outside\" labelStyle.  Default is 10.\n\t\tlabelOffset:\t10,\n\n\t\t// labelStyle: String?\n\t\t//\t\tOptions as to where to draw labels.  This must be either \"inside\" or \"outside\". By default\n\t\t//      the labels are drawn \"inside\" the shape representing the data point (a column rectangle for a Columns plot\n\t\t//      or a marker for a Line plot for instance). When \"outside\" is used the labels are drawn above the data point shape.\n\t\tlabelStyle:\t\t\"inside\",\n\n\t\t// htmlLabels: Boolean?\n\t\t//\t\tWhether or not to use HTML to render slice labels. Default is true.\n\t\thtmlLabels:\t\ttrue,\n\n\t\t// omitLabels: Boolean?\n\t\t//\t\tWhether labels that do not fit in an item render are omitted or not.\tThis applies only when labelStyle\n\t\t//\t\tis \"inside\".\tDefault is false.\n\t\tomitLabels: true,\n\n\t\t// labelFunc: Function?\n\t\t//\t\tAn optional function to use to compute label text. It takes precedence over\n\t\t//\t\tthe default text when available.\n\t\t//\t|\t\tfunction labelFunc(value, fixed, precision) {}\n\t\t//\t\t`value` is the data value to display\n\t\t//\t\t`fixed` is true if fixed precision must be applied.\n\t\t//\t\t`precision` is the requested precision to be applied.\n\t\tlabelFunc: null\n\t});\n\t=====*/\n\n\tvar alwaysFalse = function(){ return false; }\n\n\treturn declare(\"dojox.charting.plot2d.CartesianBase\", Base, {\n\t\tbaseParams: {\n\t\t\thAxis: \t\t\t\"x\",\n\t\t\tvAxis: \t\t\t\"y\",\n\t\t\tlabels:\t\t\tfalse,\n\t\t\tlabelOffset:    10,\n\t\t\tfixed:\t\t\ttrue,\n\t\t\tprecision:\t\t1,\n\t\t\tlabelStyle:\t\t\"inside\",\n\t\t\thtmlLabels:\t\ttrue,\t\t// use HTML to draw labels\n\t\t\tomitLabels:\t\ttrue,\n\t\t\tlabelFunc:\t\tnull\n        },\n\n\t\t// summary:\n\t\t//\t\tBase class for cartesian plot types.\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a cartesian base plot for cartesian charts.\n\t\t\t// chart: dojox/chart/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__CartesianCtorArgs?\n\t\t\t//\t\tAn optional arguments object to help define the plot.\n\t\t\tthis.axes = [\"hAxis\", \"vAxis\"];\n\t\t\tthis.zoom = null;\n\t\t\tthis.zoomQueue = [];\t// zooming action task queue\n\t\t\tthis.lastWindow = {vscale: 1, hscale: 1, xoffset: 0, yoffset: 0};\n\t\t\tthis.hAxis = (kwArgs && kwArgs.hAxis) || \"x\";\n\t\t\tthis.vAxis = (kwArgs && kwArgs.vAxis) || \"y\";\n\t\t\tthis.series = [];\n\t\t\tthis.opt = lang.clone(this.baseParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all of the information tied to this plot.\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.inherited(arguments);\n\t\t\tthis._hAxis = null;\n\t\t\tthis._vAxis = null;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\n\t\t},\n\t\tcleanGroup: function(creator, noClip){\n\t\t\tthis.inherited(arguments);\n\t\t\tif(!noClip && this.chart._nativeClip){\n\t\t\t\tvar offsets = this.chart.offsets, dim = this.chart.dim;\n\t\t\t\tvar w = Math.max(0, dim.width  - offsets.l - offsets.r),\n\t\t\t\t\th = Math.max(0, dim.height - offsets.t - offsets.b);\n\t\t\t\tthis.group.setClip({ x: offsets.l, y: offsets.t, width: w, height: h });\n\t\t\t\tif(!this._clippedGroup){\n\t\t\t\t\tthis._clippedGroup = this.group.createGroup();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tpurgeGroup: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tthis._clippedGroup = null;\n\t\t},\n\t\tgetGroup: function(){\n\t\t\treturn this._clippedGroup || this.group;\n\t\t},\n\t\tsetAxis: function(axis){\n\t\t\t// summary:\n\t\t\t//\t\tSet an axis for this plot.\n\t\t\t// axis: dojox/charting/axis2d/Base\n\t\t\t//\t\tThe axis to set.\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(axis){\n\t\t\t\tthis[axis.vertical ? \"_vAxis\" : \"_hAxis\"] = axis;\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\n\t\t},\n\t\ttoPage: function(coord){\n\t\t\t// summary:\n\t\t\t//\t\tCompute page coordinates from plot axis data coordinates.\n\t\t\t// coord: Object?\n\t\t\t//\t\tThe coordinates in plot axis data coordinate space. For cartesian charts that is of the following form:\n\t\t\t//\t\t`{ hAxisName: 50, vAxisName: 200 }`\n\t\t\t//\t\tIf not provided return the transform method instead of the result of the transformation.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe resulting page pixel coordinates. That is of the following form:\n\t\t\t//\t\t`{ x: 50, y: 200 }`\n\t\t\tvar ah = this._hAxis, av = this._vAxis,\n\t\t\t\tsh = ah.getScaler(), sv = av.getScaler(),\n\t\t\t\tth = sh.scaler.getTransformerFromModel(sh),\n\t\t\t\ttv = sv.scaler.getTransformerFromModel(sv),\n\t\t\t\tc = this.chart.getCoords(),\n\t\t\t\to = this.chart.offsets, dim = this.chart.dim;\n\t\t\tvar t = function(coord){\n\t\t\t\tvar r = {};\n\t\t\t\tr.x = th(coord[ah.name]) + c.x + o.l;\n\t\t\t\tr.y = c.y + dim.height - o.b - tv(coord[av.name]);\n\t\t\t\treturn r;\n\t\t\t};\n\t\t\t// if no coord return the function so that we can capture the current transforms\n\t\t\t// and reuse them later on\n\t\t\treturn coord?t(coord):t; // Object\n\t\t},\n\t\ttoData: function(coord){\n\t\t\t// summary:\n\t\t\t//\t\tCompute plot axis data coordinates from page coordinates.\n\t\t\t// coord: Object\n\t\t\t//\t\tThe pixel coordinate in page coordinate space. That is of the following form:\n\t\t\t//\t\t`{ x: 50, y: 200 }`\n\t\t\t//\t\tIf not provided return the tranform method instead of the result of the transformation.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe resulting plot axis data coordinates. For cartesian charts that is of the following form:\n\t\t\t//\t\t`{ hAxisName: 50, vAxisName: 200 }`\n\t\t\tvar ah = this._hAxis, av = this._vAxis,\n\t\t\t\tsh = ah.getScaler(), sv = av.getScaler(),\n\t\t\t\tth = sh.scaler.getTransformerFromPlot(sh),\n\t\t\t\ttv = sv.scaler.getTransformerFromPlot(sv),\n\t\t\t\tc = this.chart.getCoords(),\n\t\t\t\to = this.chart.offsets, dim = this.chart.dim;\n\t\t\tvar t = function(coord){\n\t\t\t\tvar r = {};\n\t\t\t\tr[ah.name] = th(coord.x - c.x - o.l);\n\t\t\t\tr[av.name] = tv(c.y + dim.height - coord.y  - o.b);\n\t\t\t\treturn r;\n\t\t\t};\n\t\t\t// if no coord return the function so that we can capture the current transforms\n\t\t\t// and reuse them later on\n\t\t\treturn coord?t(coord):t; // Object\n\t\t},\n\t\tisDirty: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns whether or not this plot needs to be rendered.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tThe state of the plot.\n\t\t\treturn this.dirty || this._hAxis && this._hAxis.dirty || this._vAxis && this._vAxis.dirty;\t//\tBoolean\n\t\t},\n\t\tcreateLabel: function(group, value, bbox, theme){\n\t\t\tif(this.opt.labels){\n\t\t\t\tvar x, y, label = this.opt.labelFunc?this.opt.labelFunc.apply(this, [value, this.opt.fixed, this.opt.precision]):\n\t\t\t\t\tthis._getLabel(isNaN(value.y)?value:value.y);\n\t\t\t\tif(this.opt.labelStyle == \"inside\"){\n\t\t\t\t\tvar lbox = gfx._base._getTextBox(label, { font: theme.series.font } );\n\t\t\t\t\tx = bbox.x + bbox.width / 2;\n\t\t\t\t\ty = bbox.y + bbox.height / 2 + lbox.h / 4;\n\t\t\t\t\tif(lbox.w > bbox.width || lbox.h > bbox.height){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t}else{\n\t\t\t\t\tx = bbox.x + bbox.width / 2;\n\t\t\t\t\ty = bbox.y - this.opt.labelOffset;\n\t\t\t\t}\n\t\t\t\tthis.renderLabel(group, x, y, label, theme, this.opt.labelStyle == \"inside\");\n\t\t\t}\n\t\t},\n\t\tperformZoom: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tCreate/alter any zooming windows on this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\n\t\t\t// get current zooming various\n\t\t\tvar vs = this._vAxis.scale || 1,\n\t\t\t\ths = this._hAxis.scale || 1,\n\t\t\t\tvOffset = dim.height - offsets.b,\n\t\t\t\thBounds = this._hScaler.bounds,\n\t\t\t\txOffset = (hBounds.from - hBounds.lower) * hBounds.scale,\n\t\t\t\tvBounds = this._vScaler.bounds,\n\t\t\t\tyOffset = (vBounds.from - vBounds.lower) * vBounds.scale,\n\t\t\t\t// get incremental zooming various\n\t\t\t\trVScale = vs / this.lastWindow.vscale,\n\t\t\t\trHScale = hs / this.lastWindow.hscale,\n\t\t\t\trXOffset = (this.lastWindow.xoffset - xOffset)/\n\t\t\t\t\t((this.lastWindow.hscale == 1)? hs : this.lastWindow.hscale),\n\t\t\t\trYOffset = (yOffset - this.lastWindow.yoffset)/\n\t\t\t\t\t((this.lastWindow.vscale == 1)? vs : this.lastWindow.vscale),\n\n\t\t\t\tshape = this.getGroup(),\n\t\t\t\tanim = fx.animateTransform(lang.delegate({\n\t\t\t\t\tshape: shape,\n\t\t\t\t\tduration: 1200,\n\t\t\t\t\ttransform:[\n\t\t\t\t\t\t{name:\"translate\", start:[0, 0], end: [offsets.l * (1 - rHScale), vOffset * (1 - rVScale)]},\n\t\t\t\t\t\t{name:\"scale\", start:[1, 1], end: [rHScale, rVScale]},\n\t\t\t\t\t\t{name:\"original\"},\n\t\t\t\t\t\t{name:\"translate\", start: [0, 0], end: [rXOffset, rYOffset]}\n\t\t\t\t\t]}, this.zoom));\n\n\t\t\tlang.mixin(this.lastWindow, {vscale: vs, hscale: hs, xoffset: xOffset, yoffset: yOffset});\n\t\t\t//add anim to zooming action queue,\n\t\t\t//in order to avoid several zooming action happened at the same time\n\t\t\tthis.zoomQueue.push(anim);\n\t\t\t//perform each anim one by one in zoomQueue\n\t\t\thub.connect(anim, \"onEnd\", this, function(){\n\t\t\t\tthis.zoom = null;\n\t\t\t\tthis.zoomQueue.shift();\n\t\t\t\tif(this.zoomQueue.length > 0){\n\t\t\t\t\tthis.zoomQueue[0].play();\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(this.zoomQueue.length == 1){\n\t\t\t\tthis.zoomQueue[0].play();\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\n\t\t},\n\t\tinitializeScalers: function(dim, stats){\n\t\t\t// summary:\n\t\t\t//\t\tInitializes scalers using attached axes.\n\t\t\t// dim: Object\n\t\t\t//\t\tSize of a plot area in pixels as {width, height}.\n\t\t\t// stats: Object\n\t\t\t//\t\tMin/max of data in both directions as {hmin, hmax, vmin, vmax}.\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this._hAxis){\n\t\t\t\tif(!this._hAxis.initialized()){\n\t\t\t\t\tthis._hAxis.calculate(stats.hmin, stats.hmax, dim.width);\n\t\t\t\t}\n\t\t\t\tthis._hScaler = this._hAxis.getScaler();\n\t\t\t}else{\n\t\t\t\tthis._hScaler = primitive.buildScaler(stats.hmin, stats.hmax, dim.width);\n\t\t\t}\n\t\t\tif(this._vAxis){\n\t\t\t\tif(!this._vAxis.initialized()){\n\t\t\t\t\tthis._vAxis.calculate(stats.vmin, stats.vmax, dim.height);\n\t\t\t\t}\n\t\t\t\tthis._vScaler = this._vAxis.getScaler();\n\t\t\t}else{\n\t\t\t\tthis._vScaler = primitive.buildScaler(stats.vmin, stats.vmax, dim.height);\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\n\t\t},\n\t\tisNullValue: function(value){\n\t\t\tif(value === null || typeof value == \"undefined\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar h = this._hAxis ? this._hAxis.isNullValue : alwaysFalse,\n\t\t\t\tv = this._vAxis ? this._vAxis.isNullValue : alwaysFalse;\n\t\t\tif(typeof value == \"number\"){\n\t\t\t\treturn h(1) || v(value);\n\t\t\t}\n\t\t\treturn h(isNaN(value.x) ? 1 : value.x) || value.y === null || v(value.y);\n\t\t}\t\t\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 242:\n/*!********************************************!*\\\n  !*** ../dojox/lang/functional/reversed.js ***!\n  \\********************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/kernel */ 1) ,__webpack_require__(/*! ./lambda */ 244)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, kernel, df){\n// This module adds high-level functions and related constructs:\n//\t- reversed versions of array-processing functions similar to standard JS functions\n\n// Notes:\n//\t- this module provides reversed versions of standard array-processing functions:\n//\t\tforEachRev, mapRev, filterRev\n\n// Defined methods:\n//\t- take any valid lambda argument as the functional argument\n//\t- operate on dense arrays\n//\t- take a string as the array argument\n\n\tlang.mixin(df, {\n\t\t// JS 1.6 standard array functions, which can take a lambda as a parameter.\n\t\t// Consider using dojo._base.array functions, if you don't need the lambda support.\n\t\tfilterRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a new array with all elements that pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t = [], v, i = a.length - 1;\n\t\t\tfor(; i >= 0; --i){\n\t\t\t\tv = a[i];\n\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\n\t\t\t}\n\t\t\treturn t;\t// Array\n\t\t},\n\t\tforEachRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\texecutes a provided function once per array element.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i = a.length - 1; i >= 0; f.call(o, a[i], i, a), --i);\n\t\t},\n\t\tmapRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a new array with the results of calling\n\t\t\t//\t\ta provided function on every element in this array.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar n = a.length, t = new Array(n), i = n - 1, j = 0;\n\t\t\tfor(; i >= 0; t[j++] = f.call(o, a[i], i, a), --i);\n\t\t\treturn t;\t// Array\n\t\t},\n\t\teveryRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\ttests whether all elements in the array pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i = a.length - 1; i >= 0; --i){\n\t\t\t\tif(!f.call(o, a[i], i, a)){\n\t\t\t\t\treturn false;\t// Boolean\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\t// Boolean\n\t\t},\n\t\tsomeRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\ttests whether some element in the array passes the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i = a.length - 1; i >= 0; --i){\n\t\t\t\tif(f.call(o, a[i], i, a)){\n\t\t\t\t\treturn true;\t// Boolean\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\t// Boolean\n\t\t}\n\t});\n\t\n\treturn df;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 243:\n/*!*****************************!*\\\n  !*** ../dojox/gfx/shape.js ***!\n  \\*****************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base */ 236), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/kernel */ 1), __webpack_require__(/*! dojo/_base/sniff */ 57),\n\t__webpack_require__(/*! dojo/on */ 7), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/dom-construct */ 16), __webpack_require__(/*! dojo/_base/Color */ 78), __webpack_require__(/*! ./matrix */ 239) ], __WEBPACK_AMD_DEFINE_RESULT__ = function(g, lang, declare, kernel, has, on, arr, domConstruct, Color, matrixLib){\n\n\tvar shape = g.shape = {\n\t\t// summary:\n\t\t//\t\tThis module contains the core graphics Shape API.\n\t\t//\t\tDifferent graphics renderer implementation modules (svg, canvas, vml, silverlight, etc.) extend this\n\t\t//\t\tbasic api to provide renderer-specific implementations for each shape.\n\t};\n\n\tshape.Shape = declare(\"dojox.gfx.shape.Shape\", null, {\n\t\t// summary:\n\t\t//\t\ta Shape object, which knows how to apply\n\t\t//\t\tgraphical attributes and transformations\n\t\n\t\tconstructor: function(){\n\t\t\t// rawNode: Node\n\t\t\t//\t\tunderlying graphics-renderer-specific implementation object (if applicable)\n\t\t\tthis.rawNode = null;\n\n\t\t\t// shape: Object\n\t\t\t//\t\tan abstract shape object\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\n\t\t\t//\t\tdojox/gfx.defaultRect,\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\n\t\t\t//\t\tdojox/gfx.defaultCircle,\n\t\t\t//\t\tdojox/gfx.defaultLine,\n\t\t\t//\t\tor dojox/gfx.defaultImage)\n\t\t\tthis.shape = null;\n\t\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta transformation matrix\n\t\t\tthis.matrix = null;\n\t\n\t\t\t// fillStyle: dojox/gfx.Fill\n\t\t\t//\t\ta fill object\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\n\t\t\t//\t\tdojox/gfx.defaultPattern,\n\t\t\t//\t\tor dojo/Color)\n\t\t\tthis.fillStyle = null;\n\t\n\t\t\t// strokeStyle: dojox/gfx.Stroke\n\t\t\t//\t\ta stroke object\n\t\t\t//\t\t(see dojox/gfx.defaultStroke)\n\t\t\tthis.strokeStyle = null;\n\t\n\t\t\t// bbox: dojox/gfx.Rectangle\n\t\t\t//\t\ta bounding box of this shape\n\t\t\t//\t\t(see dojox/gfx.defaultRect)\n\t\t\tthis.bbox = null;\n\t\n\t\t\t// virtual group structure\n\t\n\t\t\t// parent: Object\n\t\t\t//\t\ta parent or null\n\t\t\t//\t\t(see dojox/gfx/shape.Surface,\n\t\t\t//\t\tor dojox/gfx.Group)\n\t\t\tthis.parent = null;\n\t\n\t\t\t// parentMatrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta transformation matrix inherited from the parent\n\t\t\tthis.parentMatrix = null;\n\n\t\t\tif(has(\"gfxRegistry\")){\n\t\t\t\tvar uid = shape.register(this);\n\t\t\t\tthis.getUID = function(){\n\t\t\t\t\treturn uid;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReleases all internal resources owned by this shape. Once this method has been called,\n\t\t\t//\t\tthe instance is considered destroyed and should not be used anymore.\n\t\t\tif(has(\"gfxRegistry\")){\n\t\t\t\tshape.dispose(this);\n\t\t\t}\n\t\t\tif(this.rawNode && \"__gfxObject__\" in this.rawNode){\n\t\t\t\tthis.rawNode.__gfxObject__ = null;\n\t\t\t}\n\t\t\tthis.rawNode = null;\n\t\t},\n\t\n\t\t// trivial getters\n\t\n\t\tgetNode: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDifferent graphics rendering subsystems implement shapes in different ways.  This\n\t\t\t//\t\tmethod provides access to the underlying graphics subsystem object.  Clients calling this\n\t\t\t//\t\tmethod and using the return value must be careful not to try sharing or using the underlying node\n\t\t\t//\t\tin a general way across renderer implementation.\n\t\t\t//\t\tReturns the underlying graphics Node, or null if no underlying graphics node is used by this shape.\n\t\t\treturn this.rawNode; // Node\n\t\t},\n\t\tgetShape: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current Shape object or null\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\n\t\t\t//\t\tdojox/gfx.defaultRect,\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\n\t\t\t//\t\tdojox/gfx.defaultCircle,\n\t\t\t//\t\tdojox/gfx.defaultLine,\n\t\t\t//\t\tor dojox/gfx.defaultImage)\n\t\t\treturn this.shape; // Object\n\t\t},\n\t\tgetTransform: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the current transformation matrix applied to this Shape or null\n\t\t\treturn this.matrix;\t// dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tgetFill: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the current fill object or null\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\n\t\t\t//\t\tdojox/gfx.defaultPattern,\n\t\t\t//\t\tor dojo/Color)\n\t\t\treturn this.fillStyle;\t// Object\n\t\t},\n\t\tgetStroke: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the current stroke object or null\n\t\t\t//\t\t(see dojox/gfx.defaultStroke)\n\t\t\treturn this.strokeStyle;\t// Object\n\t\t},\n\t\tgetParent: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the parent Shape, Group or null if this Shape is unparented.\n\t\t\t//\t\t(see dojox/gfx/shape.Surface,\n\t\t\t//\t\tor dojox/gfx.Group)\n\t\t\treturn this.parent;\t// Object\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the bounding box Rectangle for this shape or null if a BoundingBox cannot be\n\t\t\t//\t\tcalculated for the shape on the current renderer or for shapes with no geometric area (points).\n\t\t\t//\t\tA bounding box is a rectangular geometric region\n\t\t\t//\t\tdefining the X and Y extent of the shape.\n\t\t\t//\t\t(see dojox/gfx.defaultRect)\n\t\t\t//\t\tNote that this method returns a direct reference to the attribute of this instance. Therefore you should\n\t\t\t//\t\tnot modify its value directly but clone it instead.\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t},\n\t\tgetTransformedBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns an array of four points or null\n\t\t\t//\t\tfour points represent four corners of the untransformed bounding box\n\t\t\tvar b = this.getBoundingBox();\n\t\t\tif(!b){\n\t\t\t\treturn null;\t// null\n\t\t\t}\n\t\t\tvar m = this._getRealMatrix(),\n\t\t\t\tgm = matrixLib;\n\t\t\treturn [\t// Array\n\t\t\t\t\tgm.multiplyPoint(m, b.x, b.y),\n\t\t\t\t\tgm.multiplyPoint(m, b.x + b.width, b.y),\n\t\t\t\t\tgm.multiplyPoint(m, b.x + b.width, b.y + b.height),\n\t\t\t\t\tgm.multiplyPoint(m, b.x, b.y + b.height)\n\t\t\t\t];\n\t\t},\n\t\tgetEventSource: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns a Node, which is used as\n\t\t\t//\t\ta source of events for this shape\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\treturn this.rawNode;\t// Node\n\t\t},\n\t\n\t\t// empty settings\n\t\t\n\t\tsetClip: function(clip){\n\t\t\t// summary:\n\t\t\t//\t\tsets the clipping area of this shape.\n\t\t\t// description:\n\t\t\t//\t\tThe clipping area defines the shape area that will be effectively visible. Everything that\n\t\t\t//\t\twould be drawn outside of the clipping area will not be rendered.\n\t\t\t//\t\tThe possible clipping area types are rectangle, ellipse, polyline and path, but all are not\n\t\t\t//\t\tsupported by all the renderers. vml only supports rectangle clipping, while the gfx silverlight renderer does not\n\t\t\t//\t\tsupport path clipping.\n\t\t\t//\t\tThe clip parameter defines the clipping area geometry, and should be an object with the following properties:\n\t\t\t//\n\t\t\t//\t\t- {x:Number, y:Number, width:Number, height:Number} for rectangular clip\n\t\t\t//\t\t- {cx:Number, cy:Number, rx:Number, ry:Number} for ellipse clip\n\t\t\t//\t\t- {points:Array} for polyline clip\n\t\t\t//\t\t- {d:String} for a path clip.\n\t\t\t//\n\t\t\t//\t\tThe clip geometry coordinates are expressed in the coordinate system used to draw the shape. In other\n\t\t\t//\t\twords, the clipping area is defined in the shape parent coordinate system and the shape transform is automatically applied.\n\t\t\t// example:\n\t\t\t//\t\tThe following example shows how to clip a gfx image with all the possible clip geometry: a rectangle,\n\t\t\t//\t\tan ellipse, a circle (using the ellipse geometry), a polyline and a path:\n\t\t\t//\n\t\t\t//\t|\tsurface.createImage({src:img, width:200,height:200}).setClip({x:10,y:10,width:50,height:50});\n\t\t\t//\t|\tsurface.createImage({src:img, x:100,y:50,width:200,height:200}).setClip({cx:200,cy:100,rx:20,ry:30});\n\t\t\t//\t|\tsurface.createImage({src:img, x:0,y:350,width:200,height:200}).setClip({cx:100,cy:425,rx:60,ry:60});\n\t\t\t//\t|\tsurface.createImage({src:img, x:300,y:0,width:200,height:200}).setClip({points:[350,0,450,50,380,130,300,110]});\n\t\t\t//\t|\tsurface.createImage({src:img, x:300,y:350,width:200,height:200}).setClip({d:\"M 350,350 C314,414 317,557 373,450.0000 z\"});\n\n\t\t\t// clip: Object\n\t\t\t//\t\tan object that defines the clipping geometry, or null to remove clip.\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tthis.clip = clip;\n\t\t},\n\t\t\n\t\tgetClip: function(){\n\t\t\treturn this.clip;\n\t\t},\n\t\n\t\tsetShape: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tsets a shape object\n\t\t\t//\t\t(the default implementation simply ignores it)\n\t\t\t// shape: Object\n\t\t\t//\t\ta shape object\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\n\t\t\t//\t\tdojox/gfx.defaultRect,\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\n\t\t\t//\t\tdojox/gfx.defaultCircle,\n\t\t\t//\t\tdojox/gfx.defaultLine,\n\t\t\t//\t\tor dojox/gfx.defaultImage)\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tthis.shape = g.makeParameters(this.shape, shape);\n\t\t\tthis.bbox = null;\n\t\t\treturn this;\t// self\n\t\t},\n\t\tsetFill: function(fill){\n\t\t\t// summary:\n\t\t\t//\t\tsets a fill object\n\t\t\t//\t\t(the default implementation simply ignores it)\n\t\t\t// fill: Object\n\t\t\t//\t\ta fill object\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\n\t\t\t//\t\tdojox/gfx.defaultPattern,\n\t\t\t//\t\tor dojo/_base/Color)\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tif(!fill){\n\t\t\t\t// don't fill\n\t\t\t\tthis.fillStyle = null;\n\t\t\t\treturn this;\t// self\n\t\t\t}\n\t\t\tvar f = null;\n\t\t\tif(typeof(fill) == \"object\" && \"type\" in fill){\n\t\t\t\t// gradient or pattern\n\t\t\t\tswitch(fill.type){\n\t\t\t\t\tcase \"linear\":\n\t\t\t\t\t\tf = g.makeParameters(g.defaultLinearGradient, fill);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"radial\":\n\t\t\t\t\t\tf = g.makeParameters(g.defaultRadialGradient, fill);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"pattern\":\n\t\t\t\t\t\tf = g.makeParameters(g.defaultPattern, fill);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// color object\n\t\t\t\tf = g.normalizeColor(fill);\n\t\t\t}\n\t\t\tthis.fillStyle = f;\n\t\t\treturn this;\t// self\n\t\t},\n\t\tsetStroke: function(stroke){\n\t\t\t// summary:\n\t\t\t//\t\tsets a stroke object\n\t\t\t//\t\t(the default implementation simply ignores it)\n\t\t\t// stroke: Object\n\t\t\t//\t\ta stroke object\n\t\t\t//\t\t(see dojox/gfx.defaultStroke)\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tif(!stroke){\n\t\t\t\t// don't stroke\n\t\t\t\tthis.strokeStyle = null;\n\t\t\t\treturn this;\t// self\n\t\t\t}\n\t\t\t// normalize the stroke\n\t\t\tif(typeof stroke == \"string\" || lang.isArray(stroke) || stroke instanceof Color){\n\t\t\t\tstroke = {color: stroke};\n\t\t\t}\n\t\t\tvar s = this.strokeStyle = g.makeParameters(g.defaultStroke, stroke);\n\t\t\ts.color = g.normalizeColor(s.color);\n\t\t\treturn this;\t// self\n\t\t},\n\t\tsetTransform: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tsets a transformation matrix\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta matrix or a matrix-like object\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tthis.matrix = matrixLib.clone(matrix ? matrixLib.normalize(matrix) : matrixLib.identity);\n\t\t\treturn this._applyTransform();\t// self\n\t\t},\n\t\n\t\t_applyTransform: function(){\n\t\t\t// summary:\n\t\t\t//\t\tphysically sets a matrix\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\treturn this;\t// self\n\t\t},\n\t\n\t\t// z-index\n\t\n\t\tmoveToFront: function(){\n\t\t\t// summary:\n\t\t\t//\t\tmoves a shape to front of its parent's list of shapes\n\t\t\tvar p = this.getParent();\n\t\t\tif(p){\n\t\t\t\tp._moveChildToFront(this);\n\t\t\t\tthis._moveToFront();\t// execute renderer-specific action\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\tmoveToBack: function(){\n\t\t\t// summary:\n\t\t\t//\t\tmoves a shape to back of its parent's list of shapes\n\t\t\tvar p = this.getParent();\n\t\t\tif(p){\n\t\t\t\tp._moveChildToBack(this);\n\t\t\t\tthis._moveToBack();\t// execute renderer-specific action\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t_moveToFront: function(){\n\t\t\t// summary:\n\t\t\t//\t\trenderer-specific hook, see dojox/gfx/shape.Shape.moveToFront()\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t},\n\t\t_moveToBack: function(){\n\t\t\t// summary:\n\t\t\t//\t\trenderer-specific hook, see dojox/gfx/shape.Shape.moveToFront()\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t},\n\t\n\t\t// apply left & right transformation\n\t\n\t\tapplyRightTransform: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tmultiplies the existing matrix with an argument on right side\n\t\t\t//\t\t(this.matrix * matrix)\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta matrix or a matrix-like object\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\n\t\t\treturn matrix ? this.setTransform([this.matrix, matrix]) : this;\t// self\n\t\t},\n\t\tapplyLeftTransform: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tmultiplies the existing matrix with an argument on left side\n\t\t\t//\t\t(matrix * this.matrix)\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta matrix or a matrix-like object\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\n\t\t\treturn matrix ? this.setTransform([matrix, this.matrix]) : this;\t// self\n\t\t},\n\t\tapplyTransform: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\ta shortcut for dojox/gfx/shape.Shape.applyRightTransform\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta matrix or a matrix-like object\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\n\t\t\treturn matrix ? this.setTransform([this.matrix, matrix]) : this;\t// self\n\t\t},\n\t\n\t\t// virtual group methods\n\t\n\t\tremoveShape: function(silently){\n\t\t\t// summary:\n\t\t\t//\t\tremoves the shape from its parent's list of shapes\n\t\t\t// silently: Boolean\n\t\t\t//\t\tif true, do not redraw a picture yet\n\t\t\tif(this.parent){\n\t\t\t\tthis.parent.remove(this, silently);\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\t_setParent: function(parent, matrix){\n\t\t\t// summary:\n\t\t\t//\t\tsets a parent\n\t\t\t// parent: Object\n\t\t\t//\t\ta parent or null\n\t\t\t//\t\t(see dojox/gfx/shape.Surface,\n\t\t\t//\t\tor dojox/gfx.Group)\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix or a matrix-like object\n\t\t\tthis.parent = parent;\n\t\t\treturn this._updateParentMatrix(matrix);\t// self\n\t\t},\n\t\t_updateParentMatrix: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tupdates the parent matrix with new matrix\n\t\t\t// matrix: dojox/gfx/Matrix2D\n\t\t\t//\t\ta 2D matrix or a matrix-like object\n\t\t\tthis.parentMatrix = matrix ? matrixLib.clone(matrix) : null;\n\t\t\treturn this._applyTransform();\t// self\n\t\t},\n\t\t_getRealMatrix: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the cumulative ('real') transformation matrix\n\t\t\t//\t\tby combining the shape's matrix with its parent's matrix\n\t\t\tvar m = this.matrix;\n\t\t\tvar p = this.parent;\n\t\t\twhile(p){\n\t\t\t\tif(p.matrix){\n\t\t\t\t\tm = matrixLib.multiply(p.matrix, m);\n\t\t\t\t}\n\t\t\t\tp = p.parent;\n\t\t\t}\n\t\t\treturn m;\t// dojox/gfx/matrix.Matrix2D\n\t\t}\n\t});\n\t\n\tshape._eventsProcessing = {\n\t\ton: function(type, listener){\n\t\t\t//\tsummary:\n\t\t\t//\t\tConnects an event to this shape.\n\n\t\t\treturn on(this.getEventSource(), type, shape.fixCallback(this, g.fixTarget, listener));\n\t\t},\n\n\t\tconnect: function(name, object, method){\n\t\t\t// summary:\n\t\t\t//\t\tconnects a handler to an event on this shape\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\t// redirect to fixCallback to normalize events and add the gfxTarget to the event. The latter\n\t\t\t// is done by dojox/gfx.fixTarget which is defined by each renderer\n\t\t\tif(name.substring(0, 2) == \"on\"){\n\t\t\t\tname = name.substring(2);\n\t\t\t}\n\t\t\treturn this.on(name, method ? lang.hitch(object, method) : object);\n\t\t},\n\n\t\tdisconnect: function(token){\n\t\t\t// summary:\n\t\t\t//\t\tconnects a handler by token from an event on this shape\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\n\t\t\treturn token.remove();\n\t\t}\n\t};\n\t\n\tshape.fixCallback = function(gfxElement, fixFunction, scope, method){\n\t\t// summary:\n\t\t//\t\tWraps the callback to allow for tests and event normalization\n\t\t//\t\tbefore it gets invoked. This is where 'fixTarget' is invoked.\n\t\t// tags:\n\t\t//      private\n\t\t// gfxElement: Object\n\t\t//\t\tThe GFX object that triggers the action (ex.:\n\t\t//\t\tdojox/gfx.Surface and dojox/gfx/shape.Shape). A new event property\n\t\t//\t\t'gfxTarget' is added to the event to reference this object.\n\t\t//\t\tfor easy manipulation of GFX objects by the event handlers.\n\t\t// fixFunction: Function\n\t\t//\t\tThe function that implements the logic to set the 'gfxTarget'\n\t\t//\t\tproperty to the event. It should be 'dojox/gfx.fixTarget' for\n\t\t//\t\tmost of the cases\n\t\t// scope: Object\n\t\t//\t\tOptional. The scope to be used when invoking 'method'. If\n\t\t//\t\tomitted, a global scope is used.\n\t\t// method: Function|String\n\t\t//\t\tThe original callback to be invoked.\n\t\tif(!method){\n\t\t\tmethod = scope;\n\t\t\tscope = null;\n\t\t}\n\t\tif(lang.isString(method)){\n\t\t\tscope = scope || kernel.global;\n\t\t\tif(!scope[method]){ throw(['dojox.gfx.shape.fixCallback: scope[\"', method, '\"] is null (scope=\"', scope, '\")'].join('')); }\n\t\t\treturn function(e){  \n\t\t\t\treturn fixFunction(e,gfxElement) ? scope[method].apply(scope, arguments || []) : undefined; }; // Function\n\t\t}\n\t\treturn !scope \n\t\t\t? function(e){ \n\t\t\t\treturn fixFunction(e,gfxElement) ? method.apply(scope, arguments) : undefined; } \n\t\t\t: function(e){ \n\t\t\t\treturn fixFunction(e,gfxElement) ? method.apply(scope, arguments || []) : undefined; }; // Function\n\t};\n\tlang.extend(shape.Shape, shape._eventsProcessing);\n\t\n\tshape.Container = {\n\t\t// summary:\n\t\t//\t\ta container of shapes, which can be used\n\t\t//\t\tas a foundation for renderer-specific groups, or as a way\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\n\t\n\t\t_init: function() {\n\t\t\t// children: Array\n\t\t\t//\t\ta list of children\n\t\t\tthis.children = [];\n\t\t\tthis._batch = 0;\n\t\t},\n\t\n\t\t// group management\n\t\n\t\topenBatch: function() {\n\t\t\t// summary:\n\t\t\t//\t\tstarts a new batch, subsequent new child shapes will be held in\n\t\t\t//\t\tthe batch instead of appending to the container directly.\n\t\t\t// description:\n\t\t\t//\t\tBecause the canvas renderer has no DOM hierarchy, the canvas implementation differs\n\t\t\t//\t\tsuch that it suspends the repaint requests for this container until the current batch is closed by a call to closeBatch().\n\t\t\treturn this;\n\t\t},\n\t\tcloseBatch: function() {\n\t\t\t// summary:\n\t\t\t//\t\tsubmits the current batch, append all pending child shapes to DOM\n\t\t\t// description:\n\t\t\t//\t\tOn canvas, this method flushes the pending redraws queue.\n\t\t\treturn this;\n\t\t},\n\t\tadd: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tadds a shape to the list\n\t\t\t// shape: dojox/gfx/shape.Shape\n\t\t\t//\t\tthe shape to add to the list\n\t\t\tvar oldParent = shape.getParent();\n\t\t\tif(oldParent){\n\t\t\t\toldParent.remove(shape, true);\n\t\t\t}\n\t\t\tthis.children.push(shape);\n\t\t\treturn shape._setParent(this, this._getRealMatrix());\t// self\n\t\t},\n\t\tremove: function(shape, silently){\n\t\t\t// summary:\n\t\t\t//\t\tremoves a shape from the list\n\t\t\t// shape: dojox/gfx/shape.Shape\n\t\t\t//\t\tthe shape to remove\n\t\t\t// silently: Boolean\n\t\t\t//\t\tif true, do not redraw a picture yet\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tif(this.children[i] == shape){\n\t\t\t\t\tif(silently){\n\t\t\t\t\t\t// skip for now\n\t\t\t\t\t}else{\n\t\t\t\t\t\tshape.parent = null;\n\t\t\t\t\t\tshape.parentMatrix = null;\n\t\t\t\t\t}\n\t\t\t\t\tthis.children.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\tclear: function(/*Boolean?*/ destroy){\n\t\t\t// summary:\n\t\t\t//\t\tremoves all shapes from a group/surface.\n\t\t\t// destroy: Boolean\n\t\t\t//\t\tIndicates whether the children should be destroyed. Optional.\n\t\t\tvar shape;\n\t\t\tfor(var i = 0; i < this.children.length;++i){\n\t\t\t\tshape = this.children[i];\n\t\t\t\tshape.parent = null;\n\t\t\t\tshape.parentMatrix = null;\n\t\t\t\tif(destroy){\n\t\t\t\t\tshape.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.children = [];\n\t\t\treturn this;\t// self\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the bounding box Rectangle for this shape.\n\t\t\tif(this.children){\n\t\t\t\t// if this is a composite shape, then sum up all the children\n\t\t\t\tvar result = null;\n\t\t\t\tarr.forEach(this.children, function(shape){\n\t\t\t\t\tvar bb = shape.getBoundingBox();\n\t\t\t\t\tif(bb){\n\t\t\t\t\t\tvar ct = shape.getTransform();\n\t\t\t\t\t\tif(ct){\n\t\t\t\t\t\t\tbb = matrixLib.multiplyRectangle(ct, bb);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(result){\n\t\t\t\t\t\t\t// merge two bbox \n\t\t\t\t\t\t\tresult.x = Math.min(result.x, bb.x);\n\t\t\t\t\t\t\tresult.y = Math.min(result.y, bb.y);\n\t\t\t\t\t\t\tresult.endX = Math.max(result.endX, bb.x + bb.width);\n\t\t\t\t\t\t\tresult.endY = Math.max(result.endY, bb.y + bb.height);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t// first bbox \n\t\t\t\t\t\t\tresult = {\n\t\t\t\t\t\t\t\tx: bb.x,\n\t\t\t\t\t\t\t\ty: bb.y,\n\t\t\t\t\t\t\t\tendX: bb.x + bb.width,\n\t\t\t\t\t\t\t\tendY: bb.y + bb.height\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif(result){\n\t\t\t\t\tresult.width = result.endX - result.x;\n\t\t\t\t\tresult.height = result.endY - result.y;\n\t\t\t\t}\n\t\t\t\treturn result; // dojox/gfx.Rectangle\n\t\t\t}\n\t\t\t// unknown/empty bounding box, subclass shall override this impl \n\t\t\treturn null;\n\t\t},\n\t\t// moving child nodes\n\t\t_moveChildToFront: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tmoves a shape to front of the list of shapes\n\t\t\t// shape: dojox/gfx/shape.Shape\n\t\t\t//\t\tone of the child shapes to move to the front\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tif(this.children[i] == shape){\n\t\t\t\t\tthis.children.splice(i, 1);\n\t\t\t\t\tthis.children.push(shape);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\t_moveChildToBack: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tmoves a shape to back of the list of shapes\n\t\t\t// shape: dojox/gfx/shape.Shape\n\t\t\t//\t\tone of the child shapes to move to the front\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tif(this.children[i] == shape){\n\t\t\t\t\tthis.children.splice(i, 1);\n\t\t\t\t\tthis.children.unshift(shape);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t}\n\t};\n\n\tshape.Surface = declare(\"dojox.gfx.shape.Surface\", null, {\n\t\t// summary:\n\t\t//\t\ta surface object to be used for drawings\n\t\tconstructor: function(){\n\t\t\t// underlying node\n\t\t\tthis.rawNode = null;\n\t\t\t// the parent node\n\t\t\tthis._parent = null;\n\t\t\t// the list of DOM nodes to be deleted in the case of destruction\n\t\t\tthis._nodes = [];\n\t\t\t// the list of events to be detached in the case of destruction\n\t\t\tthis._events = [];\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tdestroy all relevant external resources and release all\n\t\t\t//\t\texternal references to make this object garbage-collectible\n\t\t\tarr.forEach(this._nodes, domConstruct.destroy);\n\t\t\tthis._nodes = [];\n\t\t\tarr.forEach(this._events, function(h){ if(h){ h.remove(); } });\n\t\t\tthis._events = [];\n\t\t\tthis.rawNode = null;\t// recycle it in _nodes, if it needs to be recycled\n\t\t\tif(has(\"ie\")){\n\t\t\t\twhile(this._parent.lastChild){\n\t\t\t\t\tdomConstruct.destroy(this._parent.lastChild);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis._parent.innerHTML = \"\";\n\t\t\t}\n\t\t\tthis._parent = null;\n\t\t},\n\t\tgetEventSource: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns a node, which can be used to attach event listeners\n\t\t\treturn this.rawNode; // Node\n\t\t},\n\t\t_getRealMatrix: function(){\n\t\t\t// summary:\n\t\t\t//\t\talways returns the identity matrix\n\t\t\treturn null;\t// dojox/gfx/Matrix2D\n\t\t},\n\t\t/*=====\n\t\t setDimensions: function(width, height){\n\t\t\t // summary:\n\t\t\t //\t\tsets the width and height of the rawNode\n\t\t\t // width: String\n\t\t\t //\t\twidth of surface, e.g., \"100px\"\n\t\t\t // height: String\n\t\t\t //\t\theight of surface, e.g., \"100px\"\n\t\t\t return this;\t// self\n\t\t },\n\t\t getDimensions: function(){\n\t\t\t // summary:\n\t\t\t //     gets current width and height in pixels\n\t\t\t // returns: Object\n\t\t\t //     object with properties \"width\" and \"height\"\n\t\t },\n\t\t =====*/\n\t\tisLoaded: true,\n\t\tonLoad: function(/*dojox/gfx/shape.Surface*/ surface){\n\t\t\t// summary:\n\t\t\t//\t\tlocal event, fired once when the surface is created\n\t\t\t//\t\tasynchronously, used only when isLoaded is false, required\n\t\t\t//\t\tonly for Silverlight.\n\t\t},\n\t\twhenLoaded: function(/*Object|Null*/ context, /*Function|String*/ method){\n\t\t\tvar f = lang.hitch(context, method);\n\t\t\tif(this.isLoaded){\n\t\t\t\tf(this);\n\t\t\t}else{\n\t\t\t\ton.once(this, \"load\", function(surface){\n\t\t\t\t\tf(surface);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\tlang.extend(shape.Surface, shape._eventsProcessing);\n\n\t/*=====\n\tg.Point = declare(\"dojox/gfx.Point\", null, {\n\t\t// summary:\n\t\t//\t\t2D point for drawings - {x, y}\n\t\t// description:\n\t\t//\t\tDo not use this object directly!\n\t\t//\t\tUse the naked object instead: {x: 1, y: 2}.\n\t});\n\n\tg.Rectangle = declare(\"dojox.gfx.Rectangle\", null, {\n\t\t// summary:\n\t\t//\t\trectangle - {x, y, width, height}\n\t\t// description:\n\t\t//\t\tDo not use this object directly!\n\t\t//\t\tUse the naked object instead: {x: 1, y: 2, width: 100, height: 200}.\n\t});\n\t =====*/\n\n\n\tshape.Rect = declare(\"dojox.gfx.shape.Rect\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic rectangle\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\tThe underlying graphics system object (typically a DOM Node)\n\t\t\tthis.shape = g.getDefault(\"Rect\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box (its shape in this case)\n\t\t\treturn this.shape;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Ellipse = declare(\"dojox.gfx.shape.Ellipse\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic ellipse\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Ellipse\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box\n\t\t\tif(!this.bbox){\n\t\t\t\tvar shape = this.shape;\n\t\t\t\tthis.bbox = {x: shape.cx - shape.rx, y: shape.cy - shape.ry,\n\t\t\t\t\twidth: 2 * shape.rx, height: 2 * shape.ry};\n\t\t\t}\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Circle = declare(\"dojox.gfx.shape.Circle\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic circle\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Circle\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box\n\t\t\tif(!this.bbox){\n\t\t\t\tvar shape = this.shape;\n\t\t\t\tthis.bbox = {x: shape.cx - shape.r, y: shape.cy - shape.r,\n\t\t\t\t\twidth: 2 * shape.r, height: 2 * shape.r};\n\t\t\t}\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Line = declare(\"dojox.gfx.shape.Line\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic line (do not instantiate it directly)\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Line\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box\n\t\t\tif(!this.bbox){\n\t\t\t\tvar shape = this.shape;\n\t\t\t\tthis.bbox = {\n\t\t\t\t\tx:\t\tMath.min(shape.x1, shape.x2),\n\t\t\t\t\ty:\t\tMath.min(shape.y1, shape.y2),\n\t\t\t\t\twidth:\tMath.abs(shape.x2 - shape.x1),\n\t\t\t\t\theight:\tMath.abs(shape.y2 - shape.y1)\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Polyline = declare(\"dojox.gfx.shape.Polyline\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic polyline/polygon (do not instantiate it directly)\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Polyline\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tsetShape: function(points, closed){\n\t\t\t// summary:\n\t\t\t//\t\tsets a polyline/polygon shape object\n\t\t\t// points: Object|Array\n\t\t\t//\t\ta polyline/polygon shape object, or an array of points\n\t\t\t// closed: Boolean\n\t\t\t//\t\tclose the polyline to make a polygon\n\t\t\tif(points && points instanceof Array){\n\t\t\t\tthis.inherited(arguments, [{points: points}]);\n\t\t\t\tif(closed && this.shape.points.length){\n\t\t\t\t\tthis.shape.points.push(this.shape.points[0]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis.inherited(arguments, [points]);\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\t_normalizePoints: function(){\n\t\t\t// summary:\n\t\t\t//\t\tnormalize points to array of {x:number, y:number}\n\t\t\tvar p = this.shape.points, l = p && p.length;\n\t\t\tif(l && typeof p[0] == \"number\"){\n\t\t\t\tvar points = [];\n\t\t\t\tfor(var i = 0; i < l; i += 2){\n\t\t\t\t\tpoints.push({x: p[i], y: p[i + 1]});\n\t\t\t\t}\n\t\t\t\tthis.shape.points = points;\n\t\t\t}\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box\n\t\t\tif(!this.bbox && this.shape.points.length){\n\t\t\t\tvar p = this.shape.points;\n\t\t\t\tvar l = p.length;\n\t\t\t\tvar t = p[0];\n\t\t\t\tvar bbox = {l: t.x, t: t.y, r: t.x, b: t.y};\n\t\t\t\tfor(var i = 1; i < l; ++i){\n\t\t\t\t\tt = p[i];\n\t\t\t\t\tif(bbox.l > t.x) bbox.l = t.x;\n\t\t\t\t\tif(bbox.r < t.x) bbox.r = t.x;\n\t\t\t\t\tif(bbox.t > t.y) bbox.t = t.y;\n\t\t\t\t\tif(bbox.b < t.y) bbox.b = t.y;\n\t\t\t\t}\n\t\t\t\tthis.bbox = {\n\t\t\t\t\tx:\t\tbbox.l,\n\t\t\t\t\ty:\t\tbbox.t,\n\t\t\t\t\twidth:\tbbox.r - bbox.l,\n\t\t\t\t\theight:\tbbox.b - bbox.t\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Image = declare(\"dojox.gfx.shape.Image\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic image (do not instantiate it directly)\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Image\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box (its shape in this case)\n\t\t\treturn this.shape;\t// dojox/gfx.Rectangle\n\t\t},\n\t\tsetStroke: function(){\n\t\t\t// summary:\n\t\t\t//\t\tignore setting a stroke style\n\t\t\treturn this;\t// self\n\t\t},\n\t\tsetFill: function(){\n\t\t\t// summary:\n\t\t\t//\t\tignore setting a fill style\n\t\t\treturn this;\t// self\n\t\t}\n\t});\n\t\n\tshape.Text = declare(shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic text (do not instantiate it directly)\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.fontStyle = null;\n\t\t\tthis.shape = g.getDefault(\"Text\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetFont: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current font object or null\n\t\t\treturn this.fontStyle;\t// Object\n\t\t},\n\t\tsetFont: function(newFont){\n\t\t\t// summary:\n\t\t\t//\t\tsets a font for text\n\t\t\t// newFont: Object\n\t\t\t//\t\ta font object (see dojox/gfx.defaultFont) or a font string\n\t\t\tthis.fontStyle = typeof newFont == \"string\" ? g.splitFontString(newFont) :\n\t\t\t\tg.makeParameters(g.defaultFont, newFont);\n\t\t\tthis._setFont();\n\t\t\treturn this;\t// self\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\tvar bbox = null, s = this.getShape();\n\t\t\tif(s.text){\n\t\t\t\tbbox = g._base._computeTextBoundingBox(this);\n\t\t\t}\n\t\t\treturn bbox;\n\t\t}\n\t});\n\t\n\tshape.Creator = {\n\t\t// summary:\n\t\t//\t\tshape creators\n\t\tcreateShape: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a shape object based on its type; it is meant to be used\n\t\t\t//\t\tby group-like objects\n\t\t\t// shape: Object\n\t\t\t//\t\ta shape descriptor object\n\t\t\t// returns: dojox/gfx/shape.Shape | Null\n\t\t\t//      a fully instantiated surface-specific Shape object\n\t\t\tswitch(shape.type){\n\t\t\t\tcase g.defaultPath.type:\t\treturn this.createPath(shape);\n\t\t\t\tcase g.defaultRect.type:\t\treturn this.createRect(shape);\n\t\t\t\tcase g.defaultCircle.type:\t    return this.createCircle(shape);\n\t\t\t\tcase g.defaultEllipse.type:\t    return this.createEllipse(shape);\n\t\t\t\tcase g.defaultLine.type:\t\treturn this.createLine(shape);\n\t\t\t\tcase g.defaultPolyline.type:\treturn this.createPolyline(shape);\n\t\t\t\tcase g.defaultImage.type:\t\treturn this.createImage(shape);\n\t\t\t\tcase g.defaultText.type:\t\treturn this.createText(shape);\n\t\t\t\tcase g.defaultTextPath.type:\treturn this.createTextPath(shape);\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tcreateGroup: function(){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a group shape\n\t\t\treturn this.createObject(g.Group);\t// dojox/gfx/Group\n\t\t},\n\t\tcreateRect: function(rect){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a rectangle shape\n\t\t\t// rect: Object\n\t\t\t//\t\ta path object (see dojox/gfx.defaultRect)\n\t\t\treturn this.createObject(g.Rect, rect);\t// dojox/gfx/shape.Rect\n\t\t},\n\t\tcreateEllipse: function(ellipse){\n\t\t\t// summary:\n\t\t\t//\t\tcreates an ellipse shape\n\t\t\t// ellipse: Object\n\t\t\t//\t\tan ellipse object (see dojox/gfx.defaultEllipse)\n\t\t\treturn this.createObject(g.Ellipse, ellipse);\t// dojox/gfx/shape.Ellipse\n\t\t},\n\t\tcreateCircle: function(circle){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a circle shape\n\t\t\t// circle: Object\n\t\t\t//\t\ta circle object (see dojox/gfx.defaultCircle)\n\t\t\treturn this.createObject(g.Circle, circle);\t// dojox/gfx/shape.Circle\n\t\t},\n\t\tcreateLine: function(line){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a line shape\n\t\t\t// line: Object\n\t\t\t//\t\ta line object (see dojox/gfx.defaultLine)\n\t\t\treturn this.createObject(g.Line, line);\t// dojox/gfx/shape.Line\n\t\t},\n\t\tcreatePolyline: function(points){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a polyline/polygon shape\n\t\t\t// points: Object\n\t\t\t//\t\ta points object (see dojox/gfx.defaultPolyline)\n\t\t\t//\t\tor an Array of points\n\t\t\treturn this.createObject(g.Polyline, points);\t// dojox/gfx/shape.Polyline\n\t\t},\n\t\tcreateImage: function(image){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a image shape\n\t\t\t// image: Object\n\t\t\t//\t\tan image object (see dojox/gfx.defaultImage)\n\t\t\treturn this.createObject(g.Image, image);\t// dojox/gfx/shape.Image\n\t\t},\n\t\tcreateText: function(text){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a text shape\n\t\t\t// text: Object\n\t\t\t//\t\ta text object (see dojox/gfx.defaultText)\n\t\t\treturn this.createObject(g.Text, text);\t// dojox/gfx/shape.Text\n\t\t},\n\t\tcreatePath: function(path){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a path shape\n\t\t\t// path: Object\n\t\t\t//\t\ta path object (see dojox/gfx.defaultPath)\n\t\t\treturn this.createObject(g.Path, path);\t// dojox/gfx/shape.Path\n\t\t},\n\t\tcreateTextPath: function(text){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a text shape\n\t\t\t// text: Object\n\t\t\t//\t\ta textpath object (see dojox/gfx.defaultTextPath)\n\t\t\treturn this.createObject(g.TextPath, {}).setText(text);\t// dojox/gfx/shape.TextPath\n\t\t},\n\t\tcreateObject: function(shapeType, rawShape){\n\t\t\t// summary:\n\t\t\t//\t\tcreates an instance of the passed shapeType class\n\t\t\t// shapeType: Function\n\t\t\t//\t\ta class constructor to create an instance of\n\t\t\t// rawShape: Object \n\t\t\t//\t\tproperties to be passed in to the classes 'setShape' method\n\t\n\t\t\t// SHOULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\treturn null;\t// dojox/gfx/shape.Shape\n\t\t}\n\t};\n\t\n\t/*=====\n\t lang.extend(shape.Surface, shape.Container);\n\t lang.extend(shape.Surface, shape.Creator);\n\n\t g.Group = declare(shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta group shape, which can be used\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\n\t});\n\tlang.extend(g.Group, shape.Container);\n\tlang.extend(g.Group, shape.Creator);\n\n\tg.Rect     = shape.Rect;\n\tg.Circle   = shape.Circle;\n\tg.Ellipse  = shape.Ellipse;\n\tg.Line     = shape.Line;\n\tg.Polyline = shape.Polyline;\n\tg.Text     = shape.Text;\n\tg.Surface  = shape.Surface;\n\t=====*/\n\n\treturn shape;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 244:\n/*!******************************************!*\\\n  !*** ../dojox/lang/functional/lambda.js ***!\n  \\******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../.. */ 245), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5)], __WEBPACK_AMD_DEFINE_RESULT__ = function(dojox, lang, arr){\n\tvar df = lang.getObject(\"lang.functional\", true, dojox);\n\n// This module adds high-level functions and related constructs:\n//\t- anonymous functions built from the string\n\n// Acknowledgements:\n//\t- lambda() is based on work by Oliver Steele\n//\t\t(http://osteele.com/sources/javascript/functional/functional.js)\n//\t\twhich was published under MIT License\n\n// Notes:\n//\t- lambda() produces functions, which after the compilation step are\n//\t\tas fast as regular JS functions (at least theoretically).\n\n// Lambda input values:\n//\t- returns functions unchanged\n//\t- converts strings to functions\n//\t- converts arrays to a functional composition\n\n\tvar lcache = {};\n\n\t// split() is augmented on IE6 to ensure the uniform behavior\n\tvar split = \"ab\".split(/a*/).length > 1 ? String.prototype.split :\n\t\t\tfunction(sep){\n\t\t\t\t var r = this.split.call(this, sep),\n\t\t\t\t\t m = sep.exec(this);\n\t\t\t\t if(m && m.index == 0){ r.unshift(\"\"); }\n\t\t\t\t return r;\n\t\t\t};\n\t\t\t\n\tvar lambda = function(/*String*/ s){\n\t\tvar args = [], sects = split.call(s, /\\s*->\\s*/m);\n\t\tif(sects.length > 1){\n\t\t\twhile(sects.length){\n\t\t\t\ts = sects.pop();\n\t\t\t\targs = sects.pop().split(/\\s*,\\s*|\\s+/m);\n\t\t\t\tif(sects.length){ sects.push(\"(function(\" + args.join(\", \") + \"){ return (\" + s + \"); })\"); }\n\t\t\t}\n\t\t}else if(s.match(/\\b_\\b/)){\n\t\t\targs = [\"_\"];\n\t\t}else{\n\t\t\tvar l = s.match(/^\\s*(?:[+*\\/%&|\\^\\.=<>]|!=)/m),\n\t\t\t\tr = s.match(/[+\\-*\\/%&|\\^\\.=<>!]\\s*$/m);\n\t\t\tif(l || r){\n\t\t\t\tif(l){\n\t\t\t\t\targs.push(\"$1\");\n\t\t\t\t\ts = \"$1\" + s;\n\t\t\t\t}\n\t\t\t\tif(r){\n\t\t\t\t\targs.push(\"$2\");\n\t\t\t\t\ts = s + \"$2\";\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// the point of the long regex below is to exclude all well-known\n\t\t\t\t// lower-case words from the list of potential arguments\n\t\t\t\tvar vars = s.\n\t\t\t\t\treplace(/(?:\\b[A-Z]|\\.[a-zA-Z_$])[a-zA-Z_$\\d]*|[a-zA-Z_$][a-zA-Z_$\\d]*:|this|true|false|null|undefined|typeof|instanceof|in|delete|new|void|arguments|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|escape|eval|isFinite|isNaN|parseFloat|parseInt|unescape|dojo|dijit|dojox|window|document|'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"/g, \"\").\n\t\t\t\t\tmatch(/([a-z_$][a-z_$\\d]*)/gi) || [], t = {};\n\t\t\t\tarr.forEach(vars, function(v){\n\t\t\t\t\tif(!t.hasOwnProperty(v)){\n\t\t\t\t\t\targs.push(v);\n\t\t\t\t\t\tt[v] = 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn {args: args, body: s};\t// Object\n\t};\n\n\tvar compose = function(/*Array*/ a){\n\t\treturn a.length ?\n\t\t\t\t\tfunction(){\n\t\t\t\t\t\tvar i = a.length - 1, x = df.lambda(a[i]).apply(this, arguments);\n\t\t\t\t\t\tfor(--i; i >= 0; --i){ x = df.lambda(a[i]).call(this, x); }\n\t\t\t\t\t\treturn x;\n\t\t\t\t\t}\n\t\t\t\t:\n\t\t\t\t\t// identity\n\t\t\t\t\tfunction(x){ return x; };\n\t};\n\n\tlang.mixin(df, {\n\t\t// lambda\n\t\trawLambda: function(/*String*/ s){\n\t\t\t// summary:\n\t\t\t//\t\tbuilds a function from a snippet, or array (composing),\n\t\t\t//\t\treturns an object describing the function; functions are\n\t\t\t//\t\tpassed through unmodified.\n\t\t\t// description:\n\t\t\t//\t\tThis method is to normalize a functional representation (a\n\t\t\t//\t\ttext snippet) to an object that contains an array of\n\t\t\t//\t\targuments, and a body , which is used to calculate the\n\t\t\t//\t\treturning value.\n\t\t\treturn lambda(s);\t// Object\n\t\t},\n\t\tbuildLambda: function(/*String*/ s){\n\t\t\t// summary:\n\t\t\t//\t\tbuilds a function from a snippet, returns a string, which\n\t\t\t//\t\trepresents the function.\n\t\t\t// description:\n\t\t\t//\t\tThis method returns a textual representation of a function\n\t\t\t//\t\tbuilt from the snippet. It is meant to be evaled in the\n\t\t\t//\t\tproper context, so local variables can be pulled from the\n\t\t\t//\t\tenvironment.\n\t\t\tvar l = lambda(s);\n\t\t\treturn \"function(\" + l.args.join(\",\") + \"){return (\" + l.body + \");}\";\t// String\n\t\t},\n\t\tlambda: function(/*Function|String|Array*/ s){\n\t\t\t// summary:\n\t\t\t//\t\tbuilds a function from a snippet, or array (composing),\n\t\t\t//\t\treturns a function object; functions are passed through\n\t\t\t//\t\tunmodified.\n\t\t\t// description:\n\t\t\t//\t\tThis method is used to normalize a functional\n\t\t\t//\t\trepresentation (a text snippet, an array, or a function) to\n\t\t\t//\t\ta function object.\n\t\t\tif(typeof s == \"function\"){ return s; }\n\t\t\tif(s instanceof Array){ return compose(s); }\n\t\t\tif(lcache.hasOwnProperty(s)){ return lcache[s]; }\n\t\t\tvar l = lambda(s);\n\t\t\treturn lcache[s] = new Function(l.args, \"return (\" + l.body + \");\");\t// Function\n\t\t},\n\t\tclearLambdaCache: function(){\n\t\t\t// summary:\n\t\t\t//\t\tclears internal cache of lambdas\n\t\t\tlcache = {};\n\t\t}\n\t});\n\t\n\treturn df;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 245:\n/*!************************!*\\\n  !*** ../dojox/main.js ***!\n  \\************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/kernel */ 1)], __WEBPACK_AMD_DEFINE_RESULT__ = function(dojo) {\n\t// module:\n\t//\t\tdojox/main\n\n\t/*=====\n\treturn {\n\t\t// summary:\n\t\t//\t\tThe dojox package main module; dojox package is somewhat unusual in that the main module currently just provides an empty object.\n\t\t//\t\tApps should require modules from the dojox packages directly, rather than loading this module.\n\t};\n\t=====*/\n\n\treturn dojo.dojox;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ 246:\n/*!******************************************!*\\\n  !*** ../dojox/charting/axis2d/common.js ***!\n  \\******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/window */ 12), __webpack_require__(/*! dojo/dom-geometry */ 17), __webpack_require__(/*! dojox/gfx */ 237), __webpack_require__(/*! dojo/has */ 3)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, win, domGeom, g, has){\n\n\tvar common = lang.getObject(\"dojox.charting.axis2d.common\", true);\n\t\n\tvar clearNode = function(s){\n\t\ts.marginLeft   = \"0px\";\n\t\ts.marginTop    = \"0px\";\n\t\ts.marginRight  = \"0px\";\n\t\ts.marginBottom = \"0px\";\n\t\ts.paddingLeft   = \"0px\";\n\t\ts.paddingTop    = \"0px\";\n\t\ts.paddingRight  = \"0px\";\n\t\ts.paddingBottom = \"0px\";\n\t\ts.borderLeftWidth   = \"0px\";\n\t\ts.borderTopWidth    = \"0px\";\n\t\ts.borderRightWidth  = \"0px\";\n\t\ts.borderBottomWidth = \"0px\";\n\t};\n\n\tvar getBoxWidth = function(n){\n\t\t// marginBox is incredibly slow, so avoid it if we can\n\t\tif(n[\"getBoundingClientRect\"]){\n\t\t\tvar bcr = n.getBoundingClientRect();\n\t\t\treturn bcr.width || (bcr.right - bcr.left);\n\t\t}else{\n\t\t\treturn domGeom.getMarginBox(n).w;\n\t\t}\n\t};\n\n\treturn lang.mixin(common, {\n\t\t// summary:\n\t\t//\t\tCommon methods to be used by any axis.  This is considered \"static\".\n\t\tcreateText: {\n\t\t\tgfx: function(chart, creator, x, y, align, text, font, fontColor){\n\t\t\t\t// summary:\n\t\t\t\t//\t\tUse dojox.gfx to create any text.\n\t\t\t\t// chart: dojox.charting.Chart\n\t\t\t\t//\t\tThe chart to create the text into.\n\t\t\t\t// creator: dojox.gfx.Surface\n\t\t\t\t//\t\tThe graphics surface to use for creating the text.\n\t\t\t\t// x: Number\n\t\t\t\t//\t\tWhere to create the text along the x axis (CSS left).\n\t\t\t\t// y: Number\n\t\t\t\t//\t\tWhere to create the text along the y axis (CSS top).\n\t\t\t\t// align: String\n\t\t\t\t//\t\tHow to align the text.  Can be \"left\", \"right\", \"center\".\n\t\t\t\t// text: String\n\t\t\t\t//\t\tThe text to render.\n\t\t\t\t// font: String\n\t\t\t\t//\t\tThe font definition, a la CSS \"font\".\n\t\t\t\t// fontColor: String|dojo.Color\n\t\t\t\t//\t\tThe color of the resultant text.\n\t\t\t\t// returns: dojox.gfx.Text\n\t\t\t\t//\t\tThe resultant GFX object.\n\t\t\t\treturn creator.createText({\n\t\t\t\t\tx: x, y: y, text: text, align: align\n\t\t\t\t}).setFont(font).setFill(fontColor);\t//\tdojox.gfx.Text\n\t\t\t},\n\t\t\thtml: function(chart, creator, x, y, align, text, font, fontColor, labelWidth){\n\t\t\t\t// summary:\n\t\t\t\t//\t\tUse the HTML DOM to create any text.\n\t\t\t\t// chart: dojox.charting.Chart\n\t\t\t\t//\t\tThe chart to create the text into.\n\t\t\t\t// creator: dojox.gfx.Surface\n\t\t\t\t//\t\tThe graphics surface to use for creating the text.\n\t\t\t\t// x: Number\n\t\t\t\t//\t\tWhere to create the text along the x axis (CSS left).\n\t\t\t\t// y: Number\n\t\t\t\t//\t\tWhere to create the text along the y axis (CSS top).\n\t\t\t\t// align: String\n\t\t\t\t//\t\tHow to align the text.  Can be \"left\", \"right\", \"center\".\n\t\t\t\t// text: String\n\t\t\t\t//\t\tThe text to render.\n\t\t\t\t// font: String\n\t\t\t\t//\t\tThe font definition, a la CSS \"font\".\n\t\t\t\t// fontColor: String|dojo.Color\n\t\t\t\t//\t\tThe color of the resultant text.\n\t\t\t\t// labelWidth: Number?\n\t\t\t\t//\t\tThe maximum width of the resultant DOM node.\n\t\t\t\t// returns: DOMNode\n\t\t\t\t//\t\tThe resultant DOMNode (a \"div\" element).\n\n\t\t\t\t// setup the text node\n\t\t\t\tvar p = win.doc.createElement(\"div\"), s = p.style, boxWidth;\n\t\t\t\t// bidi support, if this function exists the module was loaded \n\t\t\t\tif(chart.getTextDir){\n\t\t\t\t\tp.dir = chart.getTextDir(text);\n\t\t\t\t}\n\t\t\t\tclearNode(s);\n\t\t\t\ts.font = font;\n\t\t\t\tp.innerHTML = String(text).replace(/\\s/g, \"&nbsp;\");\n\t\t\t\ts.color = fontColor;\n\t\t\t\t// measure the size\n\t\t\t\ts.position = \"absolute\";\n\t\t\t\ts.left = \"-10000px\";\n\t\t\t\twin.body().appendChild(p);\n\t\t\t\tvar size = g.normalizedLength(g.splitFontString(font).size);\n\n\t\t\t\t// do we need to calculate the label width?\n\t\t\t\tif(!labelWidth){\n\t\t\t\t\tboxWidth = getBoxWidth(p);\n\t\t\t\t}\n\t\t\t\t// when the textDir is rtl, but the UI ltr needs\n\t\t\t\t// to recalculate the starting point\n\t\t\t\tif(p.dir == \"rtl\"){\n\t\t\t\t\tx += labelWidth ? labelWidth : boxWidth;\n\t\t\t\t}\n\n\t\t\t\t// new settings for the text node\n\t\t\t\twin.body().removeChild(p);\n\n\t\t\t\ts.position = \"relative\";\n\t\t\t\tif(labelWidth){\n\t\t\t\t\ts.width = labelWidth + \"px\";\n\t\t\t\t\t// s.border = \"1px dotted grey\";\n\t\t\t\t\tswitch(align){\n\t\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\t\ts.textAlign = \"center\";\n\t\t\t\t\t\t\ts.left = (x - labelWidth / 2) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\ts.textAlign = \"right\";\n\t\t\t\t\t\t\ts.left = (x - labelWidth) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ts.left = x + \"px\";\n\t\t\t\t\t\t\ts.textAlign = \"left\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tswitch(align){\n\t\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\t\ts.left = Math.floor(x - boxWidth / 2) + \"px\";\n\t\t\t\t\t\t\t// s.left = Math.floor(x - p.offsetWidth / 2) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\ts.left = Math.floor(x - boxWidth) + \"px\";\n\t\t\t\t\t\t\t// s.left = Math.floor(x - p.offsetWidth) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t//case \"start\":\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ts.left = Math.floor(x) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts.top = Math.floor(y - size) + \"px\";\n\t\t\t\ts.whiteSpace = \"nowrap\";\t// hack for WebKit\n\t\t\t\t// setup the wrapper node\n\t\t\t\tvar wrap = win.doc.createElement(\"div\"), w = wrap.style;\n\t\t\t\tclearNode(w);\n\t\t\t\tw.width = \"0px\";\n\t\t\t\tw.height = \"0px\";\n\t\t\t\t// insert nodes\n\t\t\t\twrap.appendChild(p);\n\t\t\t\tchart.node.insertBefore(wrap, chart.node.firstChild);\n\t\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\t\tchart.htmlElementsRegistry.push([wrap, x, y, align, text, font, fontColor]);\n\t\t\t\t}\n\t\t\t\treturn wrap;\t//\tDOMNode\n\t\t\t}\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 247:\n/*!************************************!*\\\n  !*** ../dojox/charting/Element.js ***!\n  \\************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/dom-construct */ 16),__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojox/gfx */ 237), __webpack_require__(/*! dojox/gfx/shape */ 243)], __WEBPACK_AMD_DEFINE_RESULT__ = function(arr, domConstruct, declare, gfx, shape){\n\n\treturn declare(\"dojox.charting.Element\", null, {\n\t\t// summary:\n\t\t//\t\tA base class that is used to build other elements of a chart, such as\n\t\t//\t\ta series.\n\t\t// chart: dojox/charting/Chart\n\t\t//\t\tThe parent chart for this element.\n\t\t// group: dojox/gfx/shape.Group\n\t\t//\t\tThe visual GFX group representing this element.\n\t\t// htmlElement: Array\n\t\t//\t\tAny DOMNodes used as a part of this element (such as HTML-based labels).\n\t\t// dirty: Boolean\n\t\t//\t\tA flag indicating whether or not this element needs to be rendered.\n\n\t\tchart: null,\n\t\tgroup: null,\n\t\thtmlElements: null,\n\t\tdirty: true,\n\t\trenderingOptions: null,\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreates a new charting element.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart that this element belongs to.\n\t\t\tthis.chart = chart;\n\t\t\tthis.group = null;\n\t\t\tthis.htmlElements = [];\n\t\t\tthis.dirty = true;\n\t\t\tthis.trailingSymbol = \"...\";\n\t\t\tthis._events = [];\n\t\t\tif (kwArgs && kwArgs.renderingOptions) {\n\t\t\t\tthis.renderingOptions = kwArgs.renderingOptions;\n\t\t\t}\n\t\t},\n\t\tpurgeGroup: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear any elements out of our group, and destroy the group.\n\t\t\t// returns: dojox/charting/Element\n\t\t\t//\t\tA reference to this object for functional chaining.\n\t\t\tthis.destroyHtmlElements();\n\t\t\tif(this.group){\n\t\t\t\t// since 1.7.x we need dispose shape otherwise there is a memoryleak\n\t\t\t\tthis.getGroup().removeShape();\n\t\t\t\tvar children = this.getGroup().children;\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\t\tif(shape.dispose){\n\t\t\t\t\tfor(var i = 0; i < children.length;++i){\n\t\t\t\t\t\tshape.dispose(children[i], true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this.getGroup().rawNode){\n\t\t\t\t\tdomConstruct.empty(this.getGroup().rawNode);\n\t\t\t\t}\n\t\t\t\tthis.getGroup().clear();\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\t\tif(shape.dispose){\n\t\t\t\t\tshape.dispose(this.getGroup(), true);\n\t\t\t\t}\n\t\t\t\tif(this.getGroup() != this.group){\n\t\t\t\t\t// we do have an intermediary clipping group (see CartesianBase)\n\t\t\t\t\tif(this.group.rawNode){\n\t\t\t\t\t\tdomConstruct.empty(this.group.rawNode);\n\t\t\t\t\t}\n\t\t\t\t\tthis.group.clear();\n\t\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\t\t\tif(shape.dispose){\n\t\t\t\t\t\tshape.dispose(this.group, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.group = null;\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\tif(this._events.length){\n\t\t\t\tarr.forEach(this._events, function(item){\n\t\t\t\t\titem.shape.disconnect(item.handle);\n\t\t\t\t});\n\t\t\t\tthis._events = [];\n\t\t\t}\n\t\t\treturn this;\t//\tdojox.charting.Element\n\t\t},\n\t\tcleanGroup: function(creator){\n\t\t\t// summary:\n\t\t\t//\t\tClean any elements (HTML or GFX-based) out of our group, and create a new one.\n\t\t\t// creator: dojox/gfx/shape.Surface?\n\t\t\t//\t\tAn optional surface to work with.\n\t\t\t// returns: dojox/charting/Element\n\t\t\t//\t\tA reference to this object for functional chaining.\n\t\t\tthis.destroyHtmlElements();\n\t\t\tif(!creator){ creator = this.chart.surface; }\n\t\t\tif(this.group){\n\t\t\t\tvar bgnode;\n\t\t\t\tvar children = this.getGroup().children;\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\t\tif(shape.dispose){\n\t\t\t\t\tfor(var i = 0; i < children.length;++i){\n\t\t\t\t\t\tshape.dispose(children[i], true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this.getGroup().rawNode){\n\t\t\t\t\tbgnode = this.getGroup().bgNode;\n\t\t\t\t\tdomConstruct.empty(this.getGroup().rawNode);\n\t\t\t\t}\n\t\t\t\tthis.getGroup().clear();\n\t\t\t\tif(bgnode){\n\t\t\t\t\tthis.getGroup().rawNode.appendChild(bgnode);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis.group = creator.createGroup();\n\t\t\t\t// in some cases we have a rawNode but this is not an actual DOM element (CanvasWithEvents) so check\n\t\t\t\t// the actual rawNode type.\n\t\t\t\tif (this.renderingOptions && this.group.rawNode &&\n\t\t\t\t\tthis.group.rawNode.namespaceURI == \"http://www.w3.org/2000/svg\") {\n\t\t\t\t\tfor (var key in this.renderingOptions) {\n\t\t\t\t\t\tthis.group.rawNode.setAttribute(key, this.renderingOptions[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox.charting.Element\n\t\t},\n\t\tgetGroup: function(){\n\t\t\treturn this.group;\n\t\t},\n\t\tdestroyHtmlElements: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDestroy any DOMNodes that may have been created as a part of this element.\n\t\t\tif(this.htmlElements.length){\n\t\t\t\tarr.forEach(this.htmlElements, domConstruct.destroy);\n\t\t\t\tthis.htmlElements = [];\n\t\t\t}\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tAPI addition to conform to the rest of the Dojo Toolkit's standard.\n\t\t\tthis.purgeGroup();\n\t\t},\n\t\toverrideShape: function(shape, params){\n\t\t\t// summary:\n\t\t\t//\t\tExtension point for overriding the charting shape\n\t\t},\n\t\t//text utilities\n\t\tgetTextWidth: function(s, font){\n\t\t\treturn gfx._base._getTextBox(s, {font: font}).w || 0;\n\t\t},\n\t\tgetTextWithLimitLength: function(s, font, limitWidth, truncated){\n\t\t\t// summary:\n\t\t\t//\t\tGet the truncated string based on the limited width in px(dichotomy algorithm)\n\t\t\t// s: String?\n\t\t\t//\t\tcandidate text.\n\t\t\t// font: String?\n\t\t\t//\t\ttext's font style.\n\t\t\t// limitWidth: Number?\n\t\t\t//\t\ttext limited width in px.\n\t\t\t// truncated: Boolean?\n\t\t\t//\t\twhether the input text(s) has already been truncated.\n\t\t\t// returns: Object\n\t\t\t// |\t{\n\t\t\t// |\t\ttext: processed text, maybe truncated or not,\n\t\t\t// |\t\ttruncated: whether text has been truncated\n\t\t\t// |\t}\n\t\t\tif(!s || s.length <= 0){\n\t\t\t\treturn {\n\t\t\t\t\ttext: \"\",\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif(!limitWidth || limitWidth <= 0){\n\t\t\t\treturn {\n\t\t\t\t\ttext: s,\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}\n\t\t\tvar delta = 2,\n\t\t\t\t//golden section for dichotomy algorithm\n\t\t\t\ttrucPercentage = 0.618,\n\t\t\t\tminStr = s.substring(0,1) + this.trailingSymbol,\n\t\t\t\tminWidth = this.getTextWidth(minStr, font);\n\t\t\tif(limitWidth <= minWidth){\n\t\t\t\treturn {\n\t\t\t\t\ttext: minStr,\n\t\t\t\t\ttruncated: true\n\t\t\t\t};\n\t\t\t}\n\t\t\tvar width = this.getTextWidth(s, font);\n\t\t\tif(width <= limitWidth){\n\t\t\t\treturn {\n\t\t\t\t\ttext: s,\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}else{\n\t\t\t\tvar begin = 0,\n\t\t\t\t\tend = s.length;\n\t\t\t\twhile(begin < end){\n\t\t\t\t\tif(end - begin <= delta ){\n\t\t\t\t\t\twhile (this.getTextWidth(s.substring(0, begin) + this.trailingSymbol, font) > limitWidth) {\n\t\t\t\t\t\t\tbegin -= 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: (s.substring(0,begin) + this.trailingSymbol),\n\t\t\t\t\t\t\ttruncated: true\n\t\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tvar index = begin + Math.round((end - begin) * trucPercentage),\n\t\t\t\t\t\twidthIntercepted = this.getTextWidth(s.substring(0, index), font);\n\t\t\t\t\tif(widthIntercepted < limitWidth){\n\t\t\t\t\t\tbegin = index;\n\t\t\t\t\t\tend = end;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbegin = begin;\n\t\t\t\t\t\tend = index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTextWithLimitCharCount: function(s, font, wcLimit, truncated){\n\t\t\t// summary:\n\t\t\t//\t\tGet the truncated string based on the limited character count(dichotomy algorithm)\n\t\t\t// s: String?\n\t\t\t//\t\tcandidate text.\n\t\t\t// font: String?\n\t\t\t//\t\ttext's font style.\n\t\t\t// wcLimit: Number?\n\t\t\t//\t\ttext limited character count.\n\t\t\t// truncated: Boolean?\n\t\t\t//\t\twhether the input text(s) has already been truncated.\n\t\t\t// returns: Object\n\t\t\t// |\t{\n\t\t\t// |\t\ttext: processed text, maybe truncated or not,\n\t\t\t// |\t\ttruncated: whether text has been truncated\n\t\t\t// |\t}\n\t\t\tif (!s || s.length <= 0) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: \"\",\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif(!wcLimit || wcLimit <= 0 || s.length <= wcLimit){\n\t\t\t\treturn {\n\t\t\t\t\ttext: s,\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttext: s.substring(0, wcLimit) + this.trailingSymbol,\n\t\t\t\ttruncated: true\n\t\t\t};\n\t\t},\n\t\t// fill utilities\n\t\t_plotFill: function(fill, dim, offsets){\n\t\t\t// process a plot-wide fill\n\t\t\tif(!fill || !fill.type || !fill.space){\n\t\t\t\treturn fill;\n\t\t\t}\n\t\t\tvar space = fill.space, span;\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\" || space === \"shapeY\"){\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultLinearGradient, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process dimensions\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\"){\n\t\t\t\t\t\t\t// process Y\n\t\t\t\t\t\t\tspan = dim.height - offsets.t - offsets.b;\n\t\t\t\t\t\t\tfill.y1 = offsets.t + span * fill.y1 / 100;\n\t\t\t\t\t\t\tfill.y2 = offsets.t + span * fill.y2 / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeY\"){\n\t\t\t\t\t\t\t// process X\n\t\t\t\t\t\t\tspan = dim.width - offsets.l - offsets.r;\n\t\t\t\t\t\t\tfill.x1 = offsets.l + span * fill.x1 / 100;\n\t\t\t\t\t\t\tfill.x2 = offsets.l + span * fill.x2 / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"radial\":\n\t\t\t\t\tif(space === \"plot\"){\n\t\t\t\t\t\t// this one is used exclusively for scatter charts\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process both dimensions\n\t\t\t\t\t\tvar spanX = dim.width  - offsets.l - offsets.r,\n\t\t\t\t\t\t\tspanY = dim.height - offsets.t - offsets.b;\n\t\t\t\t\t\tfill.cx = offsets.l + spanX * fill.cx / 100;\n\t\t\t\t\t\tfill.cy = offsets.t + spanY * fill.cy / 100;\n\t\t\t\t\t\tfill.r  = fill.r * Math.sqrt(spanX * spanX + spanY * spanY) / 200;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pattern\":\n\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\" || space === \"shapeY\"){\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultPattern, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process dimensions\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\"){\n\t\t\t\t\t\t\t// process Y\n\t\t\t\t\t\t\tspan = dim.height - offsets.t - offsets.b;\n\t\t\t\t\t\t\tfill.y = offsets.t + span * fill.y / 100;\n\t\t\t\t\t\t\tfill.height = span * fill.height / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeY\"){\n\t\t\t\t\t\t\t// process X\n\t\t\t\t\t\t\tspan = dim.width - offsets.l - offsets.r;\n\t\t\t\t\t\t\tfill.x = offsets.l + span * fill.x / 100;\n\t\t\t\t\t\t\tfill.width = span * fill.width / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn fill;\n\t\t},\n\t\t_shapeFill: function(fill, bbox){\n\t\t\t// process shape-specific fill\n\t\t\tif(!fill || !fill.space){\n\t\t\t\treturn fill;\n\t\t\t}\n\t\t\tvar space = fill.space, span;\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\" || space === \"shapeY\"){\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultLinearGradient, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process dimensions\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\"){\n\t\t\t\t\t\t\t// process X\n\t\t\t\t\t\t\tspan = bbox.width;\n\t\t\t\t\t\t\tfill.x1 = bbox.x + span * fill.x1 / 100;\n\t\t\t\t\t\t\tfill.x2 = bbox.x + span * fill.x2 / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeY\"){\n\t\t\t\t\t\t\t// process Y\n\t\t\t\t\t\t\tspan = bbox.height;\n\t\t\t\t\t\t\tfill.y1 = bbox.y + span * fill.y1 / 100;\n\t\t\t\t\t\t\tfill.y2 = bbox.y + span * fill.y2 / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"radial\":\n\t\t\t\t\tif(space === \"shape\"){\n\t\t\t\t\t\t// this one is used exclusively for bubble charts and pie charts\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process both dimensions\n\t\t\t\t\t\tfill.cx = bbox.x + bbox.width  / 2;\n\t\t\t\t\t\tfill.cy = bbox.y + bbox.height / 2;\n\t\t\t\t\t\tfill.r  = fill.r * bbox.width  / 200;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pattern\":\n\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\" || space === \"shapeY\"){\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultPattern, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process dimensions\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\"){\n\t\t\t\t\t\t\t// process X\n\t\t\t\t\t\t\tspan = bbox.width;\n\t\t\t\t\t\t\tfill.x = bbox.x + span * fill.x / 100;\n\t\t\t\t\t\t\tfill.width = span * fill.width / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeY\"){\n\t\t\t\t\t\t\t// process Y\n\t\t\t\t\t\t\tspan = bbox.height;\n\t\t\t\t\t\t\tfill.y = bbox.y + span * fill.y / 100;\n\t\t\t\t\t\t\tfill.height = span * fill.height / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn fill;\n\t\t},\n\t\t_pseudoRadialFill: function(fill, center, radius, start, end){\n\t\t\t// process pseudo-radial fills\n\t\t\tif(!fill || fill.type !== \"radial\" || fill.space !== \"shape\"){\n\t\t\t\treturn fill;\n\t\t\t}\n\t\t\t// clone and normalize fill\n\t\t\tvar space = fill.space;\n\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\n\t\t\tfill.space = space;\n\t\t\tif(arguments.length < 4){\n\t\t\t\t// process both dimensions\n\t\t\t\tfill.cx = center.x;\n\t\t\t\tfill.cy = center.y;\n\t\t\t\tfill.r  = fill.r * radius / 100;\n\t\t\t\treturn fill;\n\t\t\t}\n\t\t\t// convert to a linear gradient\n\t\t\tvar angle = arguments.length < 5 ? start : (end + start) / 2;\n\t\t\treturn {\n\t\t\t\ttype: \"linear\",\n\t\t\t\tx1: center.x,\n\t\t\t\ty1: center.y,\n\t\t\t\tx2: center.x + fill.r * radius * Math.cos(angle) / 100,\n\t\t\t\ty2: center.y + fill.r * radius * Math.sin(angle) / 100,\n\t\t\t\tcolors: fill.colors\n\t\t\t};\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 250:\n/*!*******************************************!*\\\n  !*** ../dojox/charting/plot2d/Stacked.js ***!\n  \\*******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! ./Default */ 225), __webpack_require__(/*! ./commonStacked */ 252)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, lang, Default, commonStacked){\n\n\treturn declare(\"dojox.charting.plot2d.Stacked\", Default, {\n\t\t// summary:\n\t\t//\t\tLike the default plot, Stacked sets up lines, areas and markers\n\t\t//\t\tin a stacked fashion (values on the y axis added to each other)\n\t\t//\t\tas opposed to a direct one.\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = commonStacked.collectStats(this.series, lang.hitch(this, \"isNullValue\"));\n\t\t\treturn stats; // Object\n\t\t},\n\t\t\n\t\tbuildSegments: function(i, indexed){\n\t\t\tvar run = this.series[i],\n\t\t\t\tmin = indexed?Math.max(0, Math.floor(this._hScaler.bounds.from - 1)):0,\n\t\t\t\tmax = indexed?Math.min(run.data.length-1, Math.ceil(this._hScaler.bounds.to)):run.data.length-1,\n\t\t\t\trseg = null, segments = [], isNullValue = lang.hitch(this, \"isNullValue\");\n\t\t\t// split the run data into dense segments (each containing no nulls)\n\t\t\t// except if interpolates is false in which case ignore null between valid data\n\t\t\tfor(var j = min; j <= max; j++){\n\t\t\t\tvar value = indexed ? commonStacked.getIndexValue(this.series, i, j, isNullValue) : commonStacked.getValue(this.series, i, run.data[j] ?run.data[j].x: null, isNullValue);\n\t\t\t\tif(!isNullValue(value[0]) && (indexed || value[0].y != null)){\n\t\t\t\t\tif(!rseg){\n\t\t\t\t\t\trseg = [];\n\t\t\t\t\t\tsegments.push({index: j, rseg: rseg});\n\t\t\t\t\t}\n\t\t\t\t\trseg.push(value[0]);\n\t\t\t\t}else{\n\t\t\t\t\tif(!this.opt.interpolate || indexed){\n\t\t\t\t\t\t// we break the line only if not interpolating or if we have indexed data\n\t\t\t\t\t\trseg = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn segments;\n\t\t}\n\t\t\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 251:\n/*!****************************************!*\\\n  !*** ../dojox/charting/plot2d/Base.js ***!\n  \\****************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojox/gfx */ 237),\n\t\t__webpack_require__(/*! ../Element */ 247), __webpack_require__(/*! ./common */ 233), __webpack_require__(/*! ../axis2d/common */ 246), __webpack_require__(/*! dojo/has */ 3)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, arr, lang, gfx, Element, common, ac, has){\n/*=====\ndojox.charting.plot2d.__PlotCtorArgs = {\n\t// summary:\n\t//\t\tThe base keyword arguments object for plot constructors.\n\t//\t\tNote that the parameters for this may change based on the\n\t//\t\tspecific plot type (see the corresponding plot type for\n\t//\t\tdetails).\n\n\t// tooltipFunc: Function?\n\t//\t\tAn optional function used to compute tooltip text for this plot. It takes precedence over\n\t//\t\tthe default function when available.\n\t//\t|\t\tfunction tooltipFunc(o) { return \"text\"; }\n\t//\t\t`o`is the event object that triggered the tooltip.\n\ttooltipFunc: null\n};\n=====*/\n\tvar Base = declare(\"dojox.charting.plot2d.Base\", Element, {\n\t\t// summary:\n\t\t//\t\tBase class for all plot types.\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a base plot for charting.\n\t\t\t// chart: dojox/chart/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__PlotCtorArgs?\n\t\t\t//\t\tAn optional arguments object to help define the plot.\n\t\n\t\t\t// TODO does not work in markup\n\t\t\tif(kwArgs && kwArgs.tooltipFunc){\n\t\t\t\tthis.tooltipFunc = kwArgs.tooltipFunc;\n\t\t\t}\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all of the information tied to this plot.\n\t\t\t// returns: dojox.charting.plot2d.Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.series = [];\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\tsetAxis: function(axis){\n\t\t\t// summary:\n\t\t\t//\t\tSet an axis for this plot.\n\t\t\t// axis: dojox.charting.axis2d.Base\n\t\t\t//\t\tThe axis to set.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\tassignAxes: function(axes){\n\t\t\t// summary:\n\t\t\t//\t\tFrom an array of axes pick the ones that correspond to this plot and\n\t\t\t//\t\tassign them to the plot using setAxis method.\n\t\t\t// axes: Array\n\t\t\t//\t\tAn array of dojox/charting/axis2d/Base\n\t\t\t// tags:\n\t\t\t//\t\tprotected\n\t\t\tarr.forEach(this.axes, function(axis){\n\t\t\t\tif(this[axis]){\n\t\t\t\t\tthis.setAxis(axes[this[axis]]);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\t\taddSeries: function(run){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a data series to this plot.\n\t\t\t// run: dojox.charting.Series\n\t\t\t//\t\tThe series to be added.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.series.push(run);\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\treturn common.collectSimpleStats(this.series, lang.hitch(this, \"isNullValue\"));\n\t\t},\n\t\tcalculateAxes: function(dim){\n\t\t\t// summary:\n\t\t\t//\t\tStub function for running the axis calculations (deprecated).\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.initializeScalers(dim, this.getSeriesStats());\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\tinitializeScalers: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDoes nothing.\n\t\t\treturn this;\n\t\t},\n\t\tisDataDirty: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns whether or not any of this plot's data series need to be rendered.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tFlag indicating if any of this plot's series are invalid and need rendering.\n\t\t\treturn arr.some(this.series, function(item){ return item.dirty; });\t//\tBoolean\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender the plot on the chart.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\trenderLabel: function(group, x, y, label, theme, block, align){\n\t\t\tvar elem = ac.createText[this.opt.htmlLabels && gfx.renderer != \"vml\" ? \"html\" : \"gfx\"]\n\t\t\t\t(this.chart, group, x, y, align?align:\"middle\", label, theme.series.font, theme.series.fontColor);\n\t\t\t// if the label is inside we need to avoid catching events on it this would prevent action on\n\t\t\t// chart elements\n\t\t\tif(block){\n\t\t\t\t// TODO this won't work in IE neither in VML nor in HTML\n\t\t\t\t// a solution would be to catch the event on the label and refire it to the element\n\t\t\t\t// possibly using elementFromPoint or having it already available\n\t\t\t\tif(this.opt.htmlLabels && gfx.renderer != \"vml\"){\n\t\t\t\t\t// we have HTML labels, let's use pointEvents on the HTML node\n\t\t\t\t\telem.style.pointerEvents = \"none\";\n\t\t\t\t}else if(elem.rawNode){\n\t\t\t\t\t// we have SVG labels, let's use pointerEvents on the SVG or VML node\n\t\t\t\t\telem.rawNode.style.pointerEvents = \"none\";\n\t\t\t\t}\n\t\t\t\t// else we have Canvas, we need do nothing, as Canvas text won't catch events\n\t\t\t}\n\t\t\tif(this.opt.htmlLabels && gfx.renderer != \"vml\"){\n\t\t\t\tthis.htmlElements.push(elem);\n\t\t\t}\n\n\t\t\treturn elem;\n\t\t},\n\t\tgetRequiredColors: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet how many data series we have, so we know how many colors to use.\n\t\t\t// returns: Number\n\t\t\t//\t\tThe number of colors needed.\n\t\t\treturn this.series.length;\t//\tNumber\n\t\t},\n\t\t_getLabel: function(number){\n\t\t\treturn common.getLabel(number, this.opt.fixed, this.opt.precision);\n\t\t}\n\t});\n\tif(has(\"dojo-bidi\")){\n\t\tBase.extend({\n\t\t\t_checkOrientation: function(group, dim, offsets){\n\t\t\t\tthis.chart.applyMirroring(this.group, dim, offsets);\n\t\t\t}\t\t\n\t\t});\n\t}\n\treturn Base;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 252:\n/*!*************************************************!*\\\n  !*** ../dojox/charting/plot2d/commonStacked.js ***!\n  \\*************************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t__webpack_require__(/*! dojo/_base/lang */ 0),\n\t__webpack_require__(/*! dojox/lang/functional */ 234),\n\t__webpack_require__(/*! ./common */ 233)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, df, common){\n\t\n\tvar commonStacked = lang.getObject(\"dojox.charting.plot2d.commonStacked\", true);\n\treturn lang.mixin(commonStacked, {\n\t\tcollectStats: function(series, isNullValue){\n\t\t\tvar stats = lang.delegate(common.defaultStats);\n\t\t\tfor(var i = 0; i < series.length; ++i){\n\t\t\t\tvar run = series[i];\n\t\t\t\tfor(var j = 0; j < run.data.length; j++){\n\t\t\t\t\tvar x, y;\n\t\t\t\t\tif(run.data[j] !== null){\n\t\t\t\t\t\tif(typeof run.data[j] == \"number\" || !run.data[j].hasOwnProperty(\"x\")){\n\t\t\t\t\t\t\ty = commonStacked.getIndexValue(series, i, j, isNullValue)[0];\n\t\t\t\t\t\t\tx = j+1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tx = run.data[j].x;\n\t\t\t\t\t\t\tif(x !== null){\n\t\t\t\t\t\t\t\ty = commonStacked.getValue(series, i, x, isNullValue)[0];\n\t\t\t\t\t\t\t\ty = y != null && y.y ? y.y:null; \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\n\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stats;\n\t\t},\n\t\t\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\t// collect references to non-empty sets\n\t\t\tvar sets = df.filter(values, \"x\"), n = sets.length;\n\t\t\tif(!n){\n\t\t\t\t// nothing to do at all\n\t\t\t\treturn values;\n\t\t\t}\n\n\t\t\t// stack values\n\t\t\tvar previousSet = {};\n\t\t\tfor(var i = 0; i < n; ++i){\n\t\t\t\tvar extractedSet = sets[i];\n\t\t\t\tfor(var j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\textractedSet[j] = (extractedSet[j] || 0) + (previousSet[j] || 0);\n\t\t\t\t}\n\t\t\t\tpreviousSet = extractedSet;\n\t\t\t}\n\n\t\t\t// transform to pixels\n\t\t\tfor(i = 0; i < n; ++i){\n\t\t\t\textractedSet = sets[i];\n\t\t\t\tfor(j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\textractedSet[j] = this.isNullValue(extractedSet[j]) ? 0 :\n\t\t\t\t\t\ttransform(extractedSet[j]) - baseline;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// correct the minimal width\n\t\t\tif(this.opt.minWidth){\n\t\t\t\tvar minWidth = this.opt.minWidth;\n\n\t\t\t\t// unstack\n\t\t\t\tfor(i = n - 1; i; --i){\n\t\t\t\t\textractedSet = sets[i];\n\t\t\t\t\tpreviousSet  = sets[i - 1];\n\t\t\t\t\tfor(j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\t\textractedSet[j] = extractedSet[j] - previousSet[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// now let's go over all values and correct them, if needed\n\t\t\t\tvar min = extractedSet.min, max = extractedSet.max;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\n\t\t\t\t\t// find a total length of stack\n\t\t\t\t\tvar sum = 0, counter = 0;\n\t\t\t\t\tfor(i = 0; i < n; ++i){\n\t\t\t\t\t\tvar value = sets[i][j];\n\t\t\t\t\t\tif(value > 0){\n\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t++counter;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(sum <= counter * minWidth){\n\t\t\t\t\t\t// the corner case: all values are very small\n\t\t\t\t\t\tfor(i = 0; i < n; ++i){\n\t\t\t\t\t\t\tvalue = sets[i][j];\n\t\t\t\t\t\t\tif(value > 0){\n\t\t\t\t\t\t\t\tsets[i][j] = minWidth;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\t// next stack\n\t\t\t\t\t}\n\n\t\t\t\t\t// distributing overflow up\n\t\t\t\t\tvar overflow = 0;\n\t\t\t\t\tfor(i = 0; i < n; ++i){\n\t\t\t\t\t\textractedSet = sets[i];\n\t\t\t\t\t\tvalue = extractedSet[j];\n\t\t\t\t\t\tif(value > 0){\n\t\t\t\t\t\t\tif(value < minWidth){\n\t\t\t\t\t\t\t\toverflow += minWidth - value;\n\t\t\t\t\t\t\t\textractedSet[j] = minWidth;\n\t\t\t\t\t\t\t}else if(overflow > 0){\n\t\t\t\t\t\t\t\t// calculate available space\n\t\t\t\t\t\t\t\tvar available = extractedSet[j] - minWidth;\n\t\t\t\t\t\t\t\tif(available >= overflow){\n\t\t\t\t\t\t\t\t\textractedSet[j] -= overflow;\n\t\t\t\t\t\t\t\t\toverflow = 0;\n\t\t\t\t\t\t\t\t}else if(available > 0){\n\t\t\t\t\t\t\t\t\textractedSet[j] = minWidth;\n\t\t\t\t\t\t\t\t\toverflow -= available;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// distributing overflow down, if any\n\t\t\t\t\tif(overflow > 0){\n\t\t\t\t\t\tfor(i = n - 1; i >= 0; --i){\n\t\t\t\t\t\t\textractedSet = sets[i];\n\t\t\t\t\t\t\tvalue = extractedSet[j];\n\t\t\t\t\t\t\tif(value > 0){\n\t\t\t\t\t\t\t\t// calculate available space\n\t\t\t\t\t\t\t\tavailable = extractedSet[j] - minWidth;\n\t\t\t\t\t\t\t\tif(available >= overflow){\n\t\t\t\t\t\t\t\t\textractedSet[j] -= overflow;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}else if(available > 0){\n\t\t\t\t\t\t\t\t\textractedSet[j] = minWidth;\n\t\t\t\t\t\t\t\t\toverflow -= available;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// stack\n\t\t\t\tfor(i = 1; i < n; ++i){\n\t\t\t\t\textractedSet = sets[i];\n\t\t\t\t\tpreviousSet  = sets[i - 1];\n\t\t\t\t\tfor(j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\t\textractedSet[j] = extractedSet[j] + previousSet[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn values;\n\t\t},\n\n\t\tgetIndexValue: function(series, i, index, isNullValue){\n\t\t\tvar value = 0, v, j;\n\t\t\tfor(j = 0; j <= i; ++j){\n\t\t\t\tv = series[j].data[index];\n\t\t\t\tif(!isNullValue(v)){\n\t\t\t\t\tif(isNaN(v)){ v = v.y || 0; }\n\t\t\t\t\tvalue += v;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t},\n\n\t\tgetValue: function(series, i, x, isNullValue){\n\t\t\tvar value = null, j, z;\n\t\t\tfor(j = 0; j <= i; ++j){\n\t\t\t\tfor(z = 0; z < series[j].data.length; z++){\n\t\t\t\t\tv = series[j].data[z];\n\t\t\t\t\tif(!isNullValue(v)){\n\t\t\t\t\t\tif(v.x == x){\n\t\t\t\t\t\t\tif(!value){\n\t\t\t\t\t\t\t\tvalue = {x: x};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(v.y != null){\n\t\t\t\t\t\t\t\tif(value.y == null){\n\t\t\t\t\t\t\t\t\tvalue.y = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue.y += v.y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}else if(v.x > x){break;}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t},\n\t\t\n\t\tgetIndexValue: function(series, i, index, isNullValue){\n\t\t\tvar value = 0, v, j, pvalue;\n\t\t\tfor(j = 0; j <= i; ++j){\n\t\t\t\tif(series[j].hidden){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tpvalue = value;\n\t\t\t\tv = series[j].data[index];\n\t\t\t\tif(!isNullValue(v)){\n\t\t\t\t\tif(isNaN(v)){ v = v.y || 0; }\n\t\t\t\t\tvalue += v;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [value , pvalue];\n\t\t},\n\t\t\n\t\tgetValue: function(series, i, x, isNullValue){\n\t\t\tvar value = null, j, z, v, pvalue;\n\t\t\tfor(j = 0; j <= i; ++j){\n\t\t\t\tif(series[j].hidden){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor(z = 0; z < series[j].data.length; z++){\n\t\t\t\t\tpvalue = value;\n\t\t\t\t\tv = series[j].data[z];\n\t\t\t\t\tif(!isNullValue(v)){\n\t\t\t\t\t\tif(v.x == x){\n\t\t\t\t\t\t\tif(!value){\n\t\t\t\t\t\t\t\tvalue = {x: x};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(v.y != null){\n\t\t\t\t\t\t\t\tif(value.y == null){\n\t\t\t\t\t\t\t\t\tvalue.y = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue.y += v.y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}else if(v.x > x){break;}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [value, pvalue];\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 253:\n/*!*******************************************!*\\\n  !*** ../dojox/charting/plot2d/Columns.js ***!\n  \\*******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/has */ 3), __webpack_require__(/*! ./CartesianBase */ 241), __webpack_require__(/*! ./_PlotEvents */ 240), __webpack_require__(/*! ./common */ 233),\n\t\t__webpack_require__(/*! dojox/lang/functional */ 234), __webpack_require__(/*! dojox/lang/functional/reversed */ 242), __webpack_require__(/*! dojox/lang/utils */ 235), __webpack_require__(/*! dojox/gfx/fx */ 238)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\tvar alwaysFalse = function(){ return false; };\n\n\treturn declare(\"dojox.charting.plot2d.Columns\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tThe plot object representing a column chart (vertical bars).\n\t\tdefaultParams: {\n\t\t\tgap:\t0,\t\t// gap between columns in pixels\n\t\t\tanimate: null,  // animate bars into place\n\t\t\tenableCache: false\n\t\t},\n\t\toptionalParams: {\n\t\t\tminBarSize:\t1,\t// minimal column width in pixels\n\t\t\tmaxBarSize:\t1,\t// maximal column width in pixels\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:     {},\n\t\t\tstyleFunc:  null,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a columns chart.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\n\t\t},\n\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = dc.collectSimpleStats(this.series, lang.hitch(this, \"isNullValue\"));\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\tcreateRect: function(run, creator, params){\n\t\t\tvar rect;\n\t\t\tif(this.opt.enableCache && run._rectFreePool.length > 0){\n\t\t\t\trect = run._rectFreePool.pop();\n\t\t\t\trect.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(rect);\n\t\t\t}else{\n\t\t\t\trect = creator.createRect(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\trun._rectUsePool.push(rect);\n\t\t\t}\n\t\t\treturn rect;\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Columns\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tbaseline = Math.max(this._vScaler.bounds.lower,\n\t\t\t\t\tthis._vAxis ? this._vAxis.naturalBaseline : 0),\n\t\t\t\tbaselineHeight = vt(baseline),\n\t\t\t\tevents = this.events(),\n\t\t\t\tbar = this.getBarProperties();\n\n\t\t\tvar z = this.series.length;\n\t\t\tarr.forEach(this.series, function(serie){if(serie.hidden){z--;}});\n\n\t\t\t// Collect and calculate  all values\n\t\t\tvar extractedValues = this.extractValues(this._hScaler);\n\t\t\textractedValues = this.rearrangeValues(extractedValues, vt, baselineHeight);\n\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(this.opt.enableCache){\n\t\t\t\t\trun._rectFreePool = (run._rectFreePool?run._rectFreePool:[]).concat(run._rectUsePool?run._rectUsePool:[]);\n\t\t\t\t\trun._rectUsePool = [];\n\t\t\t\t}\n\t\t\t\tvar theme = t.next(\"column\", [this.opt, run]),\n\t\t\t\t\teventSeries = new Array(run.data.length);\n\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tz--;\n\n\t\t\t\ts = run.group;\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t});\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\n\t\t\t\t// data point to save time\n\t\t\t\tvar min = indexed?Math.max(0, Math.floor(this._hScaler.bounds.from - 1)):0;\n\t\t\t\tvar max = indexed?Math.min(run.data.length, Math.ceil(this._hScaler.bounds.to)):run.data.length;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\t\t\t\t\tvar value = run.data[j];\n\t\t\t\t\tif(!this.isNullValue(value)){\n\t\t\t\t\t\tvar val = this.getValue(value, j, i, indexed),\n\t\t\t\t\t\t\tvv = vt(val.y),\n\t\t\t\t\t\t\th = extractedValues[i][j],\n\t\t\t\t\t\t\tfinalTheme,\n\t\t\t\t\t\t\tsshape;\n\n\t\t\t\t\t\tif(this.opt.styleFunc || typeof value != \"number\"){\n\t\t\t\t\t\t\tvar tMixin = typeof value != \"number\" ? [value] : [];\n\t\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(value));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfinalTheme = t.addMixin(theme, \"column\", tMixin, true);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tfinalTheme = t.post(theme, \"column\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(bar.width >= 1){\n\t\t\t\t\t\t\tvar rect = {\n\t\t\t\t\t\t\t\tx: offsets.l + ht(val.x + 0.5) + bar.gap + bar.thickness * z,\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - baselineHeight - Math.max(h, 0),\n\t\t\t\t\t\t\t\twidth: bar.width,\n\t\t\t\t\t\t\t\theight: Math.abs(h)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif(finalTheme.series.shadow){\n\t\t\t\t\t\t\t\tvar srect = lang.clone(rect);\n\t\t\t\t\t\t\t\tsrect.x += finalTheme.series.shadow.dx;\n\t\t\t\t\t\t\t\tsrect.y += finalTheme.series.shadow.dy;\n\t\t\t\t\t\t\t\tsshape = this.createRect(run, s, srect).setFill(finalTheme.series.shadow.color).setStroke(finalTheme.series.shadow);\n\t\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\t\tthis._animateColumn(sshape, dim.height - offsets.b + baselineHeight, h);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\n\t\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\n\t\t\t\t\t\t\tvar shape = this.createRect(run, s, rect).setFill(specialFill).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tthis.overrideShape(shape, {index: j, value: val});\n\t\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\n\t\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trun.dyn.fill   = shape.getFill();\n\t\t\t\t\t\t\trun.dyn.stroke = shape.getStroke();\n\t\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"column\",\n\t\t\t\t\t\t\t\t\tindex:   j,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:   shape,\n\t\t\t\t\t\t\t\t\tshadow:  sshape,\n\t\t\t\t\t\t\t\t\tcx:      val.x + 0.5,\n\t\t\t\t\t\t\t\t\tcy:      val.y,\n\t\t\t\t\t\t\t\t\tx:\t     indexed?j:run.data[j].x,\n\t\t\t\t\t\t\t\t\ty:\t \t indexed?run.data[j]:run.data[j].y\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[j] = o;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if val.py is here, this means we are stacking and we need to subtract previous\n\t\t\t\t\t\t\t// value to get the high in which we will lay out the label\n\t\t\t\t\t\t\tif(!isNaN(val.py) && val.py > baseline){\n\t\t\t\t\t\t\t\trect.height = h - vt(val.py);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.createLabel(s, value, rect, finalTheme);\n\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\tthis._animateColumn(shape, dim.height - offsets.b - baselineHeight, h);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Columns\n\t\t},\n\t\tgetValue: function(value, j, seriesIndex, indexed){\n\t\t\tvar y,x;\n\t\t\tif(indexed){\n\t\t\t\tif(typeof value == \"number\"){\n\t\t\t\t\ty = value;\n\t\t\t\t}else{\n\t\t\t\t\ty = value.y;\n\t\t\t\t}\n\t\t\t\tx = j;\n\t\t\t}else{\n\t\t\t\ty = value.y;\n\t\t\t\tx = value.x - 1;\n\t\t\t}\n\t\t\treturn { x: x, y: y };\n\t\t},\n\t\textractValues: function(scaler){\n\t\t\tvar extracted = [];\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\n\t\t\t\t// data point to save time\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t\t}),\n\t\t\t\t\tmin = indexed ? Math.max(0, Math.floor(scaler.bounds.from - 1)) : 0,\n\t\t\t\t\tmax = indexed ? Math.min(run.data.length, Math.ceil(scaler.bounds.to)) : run.data.length,\n\t\t\t\t\textractedSet = extracted[i] = [];\n\t\t\t\textractedSet.min = min;\n\t\t\t\textractedSet.max = max;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\t\t\t\t\tvar value = run.data[j];\n\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 :\n\t\t\t\t\t\t(typeof value == \"number\" ? value : value.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn extracted;\n\t\t},\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\t// transform to pixels\n\t\t\tfor(var i = 0, n = values.length; i < n; ++i){\n\t\t\t\tvar extractedSet = values[i];\n\t\t\t\tif(extractedSet){\n\t\t\t\t\tfor(var j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\t\tvar value = extractedSet[j];\n\t\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 : transform(value) - baseline;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn values;\n\t\t},\n\n\t\tisNullValue: function(value){\n\t\t\tif(value === null || typeof value == \"undefined\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar h = this._hAxis ? this._hAxis.isNullValue : alwaysFalse,\n\t\t\t\tv = this._vAxis ? this._vAxis.isNullValue : alwaysFalse;\n\t\t\tif(typeof value == \"number\"){\n\t\t\t\treturn v(0.5) || h(value);\n\t\t\t}\n\t\t\treturn v(isNaN(value.x) ? 0.5 : value.x + 0.5) || value.y === null || h(value.y);\n\t\t},\n\t\tgetBarProperties: function(){\n\t\t\tvar f = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\n\t\t\treturn {gap: f.gap, width: f.size, thickness: 0};\n\t\t},\n\t\t_animateColumn: function(shape, voffset, vsize){\n\t\t\tif(vsize===0){\n\t\t\t\tvsize = 1;\n\t\t\t}\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 254:\n/*!****************************************!*\\\n  !*** ../dojox/charting/plot2d/Bars.js ***!\n  \\****************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/has */ 3), __webpack_require__(/*! ./CartesianBase */ 241), __webpack_require__(/*! ./_PlotEvents */ 240), __webpack_require__(/*! ./common */ 233),\n\t__webpack_require__(/*! dojox/gfx/fx */ 238), __webpack_require__(/*! dojox/lang/utils */ 235), __webpack_require__(/*! dojox/lang/functional */ 234), __webpack_require__(/*! dojox/lang/functional/reversed */ 242)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, fx, du, df, dfr){\n\t\t\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__BarCtorArgs\", dojox.charting.plot2d.__DefaultCtorArgs, {\n\t\t// summary:\n\t\t//\t\tAdditional keyword arguments for bar charts.\n\t\n\t\t// minBarSize: Number?\n\t\t//\t\tThe minimum size for a bar in pixels.  Default is 1.\n\t\tminBarSize: 1,\n\t\n\t\t// maxBarSize: Number?\n\t\t//\t\tThe maximum size for a bar in pixels.  Default is 1.\n\t\tmaxBarSize: 1,\n\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use for any series on the plot.\n\t\tstroke:\t\t{},\n\n\t\t// outline: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke used to outline any series on the plot.\n\t\toutline:\t{},\n\n\t\t// shadow: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use to draw any shadows for a series on a plot.\n\t\tshadow:\t\t{},\n\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tAny fill to be used for elements on the plot.\n\t\tfill:\t\t{},\n\n\t\t// filter: dojox.gfx.Filter?\n\t \t//\t\tAn SVG filter to be used for elements on the plot. gfx SVG renderer must be used and dojox/gfx/svgext must\n\t \t//\t\tbe required for this to work.\n\t \tfilter:\t\t{},\n\n\t\t// styleFunc: Function?\n\t\t//\t\tA function that returns a styling object for the a given data item.\n\t\tstyleFunc:\tnull,\n\n\t\t// font: String?\n\t\t//\t\tA font definition to be used for labels and other text-based elements on the plot.\n\t\tfont:\t\t\"\",\n\n\t\t// fontColor: String|dojo.Color?\n\t\t//\t\tThe color to be used for any text-based elements on the plot.\n\t\tfontColor:\t\"\",\n\t\t\n\t\t// enableCache: Boolean?\n\t\t//\t\tWhether the bars rect are cached from one rendering to another. This improves the rendering performance of\n\t\t//\t\tsuccessive rendering but penalize the first rendering.  Default false.\n\t\tenableCache: false\n\t});\n\t=====*/\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\t\n\tvar alwaysFalse = function(){ return false; }\n\n\treturn declare(\"dojox.charting.plot2d.Bars\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tThe plot object representing a bar chart (horizontal bars).\n\t\tdefaultParams: {\n\t\t\tgap:\t0,\t\t// gap between columns in pixels\n\t\t\tanimate: null,   // animate bars into place\n\t\t\tenableCache: false\n\t\t},\n\t\toptionalParams: {\n\t\t\tminBarSize:\t1,\t// minimal bar width in pixels\n\t\t\tmaxBarSize:\t1,\t// maximal bar width in pixels\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:\t    {},\n\t\t\tstyleFunc:  null,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a bar chart.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\n\t\t},\n\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = dc.collectSimpleStats(this.series, lang.hitch(this, \"isNullValue\")), t;\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\tt = stats.hmin, stats.hmin = stats.vmin, stats.vmin = t;\n\t\t\tt = stats.hmax, stats.hmax = stats.vmax, stats.vmax = t;\n\t\t\treturn stats; // Object\n\t\t},\n\t\t\n\t\tcreateRect: function(run, creator, params){\n\t\t\tvar rect;\n\t\t\tif(this.opt.enableCache && run._rectFreePool.length > 0){\n\t\t\t\trect = run._rectFreePool.pop();\n\t\t\t\trect.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(rect);\n\t\t\t}else{\n\t\t\t\trect = creator.createRect(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\trun._rectUsePool.push(rect);\n\t\t\t}\n\t\t\treturn rect;\n\t\t},\n\n\t\tcreateLabel: function(group, value, bbox, theme){\n\t\t\tif(this.opt.labels && this.opt.labelStyle == \"outside\"){\n\t\t\t\tvar y = bbox.y + bbox.height / 2;\n\t\t\t\tvar x = bbox.x + bbox.width + this.opt.labelOffset;\n\t\t\t\tthis.renderLabel(group, x, y, this._getLabel(isNaN(value.y)?value:value.y), theme, \"start\");\n          \t}else{\n\t\t\t\tthis.inherited(arguments);\n\t\t\t}\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Bars\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets); // dojox/charting/plot2d/Bars\n\t\t\t}\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tthis.resetEvents();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tbaseline = Math.max(this._hScaler.bounds.lower,\n\t\t\t\t\tthis._hAxis ? this._hAxis.naturalBaseline : 0),\t\t\t\t\n\t\t\t\tbaselineWidth = ht(baseline),\n\t\t\t\tevents = this.events();\n\t\t\tvar bar = this.getBarProperties();\n\n\t\t\tvar actualLength = this.series.length;\n\t\t\tarr.forEach(this.series, function(serie){if(serie.hidden){actualLength--;}});\n\t\t\tvar z = actualLength;\n\t\t\t\n\t\t\t// Collect and calculate all values\n\t\t\tvar extractedValues = this.extractValues(this._vScaler);\n\t\t\textractedValues = this.rearrangeValues(extractedValues, ht, baselineWidth);\n\t\t\t\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(this.opt.enableCache){\n\t\t\t\t\trun._rectFreePool = (run._rectFreePool?run._rectFreePool:[]).concat(run._rectUsePool?run._rectUsePool:[]);\n\t\t\t\t\trun._rectUsePool = [];\n\t\t\t\t}\n\t\t\t\tvar theme = t.next(\"bar\", [this.opt, run]);\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\trun.dyn.stroke = theme.series.stroke;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tz--;\n\n\t\t\t\tvar\teventSeries = new Array(run.data.length);\n\t\t\t\ts = run.group;\t\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t});\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\n\t\t\t\t// data point to save time\n\t\t\t\tvar min = indexed?Math.max(0, Math.floor(this._vScaler.bounds.from - 1)):0;\n\t\t\t\tvar max = indexed?Math.min(run.data.length, Math.ceil(this._vScaler.bounds.to)):run.data.length;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\t\t\t\t\tvar value = run.data[j];\n\t\t\t\t\tif(!this.isNullValue(value)){\n\t\t\t\t\t\tvar val = this.getValue(value, j, i, indexed),\n\t\t\t\t\t\t\tw = extractedValues[i][j], finalTheme, sshape;\n\t\t\t\t\t\tif(this.opt.styleFunc || typeof value != \"number\"){\n\t\t\t\t\t\t\tvar tMixin = typeof value != \"number\" ? [value] : [];\n\t\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(value));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfinalTheme = t.addMixin(theme, \"bar\", tMixin, true);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tfinalTheme = t.post(theme, \"bar\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(w && bar.height >= 1){\n\t\t\t\t\t\t\tvar rect = {\n\t\t\t\t\t\t\t\tx: offsets.l + baselineWidth + Math.min(w, 0),\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(val.x + 1.5) + bar.gap + bar.thickness * (actualLength - z - 1),\n\t\t\t\t\t\t\t\twidth: Math.abs(w),\n\t\t\t\t\t\t\t\theight: bar.height\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif(finalTheme.series.shadow){\n\t\t\t\t\t\t\t\tvar srect = lang.clone(rect);\n\t\t\t\t\t\t\t\tsrect.x += finalTheme.series.shadow.dx;\n\t\t\t\t\t\t\t\tsrect.y += finalTheme.series.shadow.dy;\n\t\t\t\t\t\t\t\tsshape = this.createRect(run, s, srect).setFill(finalTheme.series.shadow.color).setStroke(finalTheme.series.shadow);\n\t\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\t\tthis._animateBar(sshape, offsets.l + baselineWidth, -w);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\n\t\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\n\t\t\t\t\t\t\tvar shape = this.createRect(run, s, rect).setFill(specialFill).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\n\t\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t\trun.dyn.fill   = shape.getFill();\n\t\t\t\t\t\t\trun.dyn.stroke = shape.getStroke();\n\t\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"bar\",\n\t\t\t\t\t\t\t\t\tindex:   j,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:   shape,\n\t\t\t\t\t\t\t\t\tshadow:\t sshape,\n\t\t\t\t\t\t\t\t\tcx:      val.y,\n\t\t\t\t\t\t\t\t\tcy:      val.x + 1.5,\n\t\t\t\t\t\t\t\t\tx:\t     indexed?j:run.data[j].x,\n\t\t\t\t\t\t\t\t\ty:\t \t indexed?run.data[j]:run.data[j].y\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[j] = o;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!isNaN(val.py) && val.py > baseline){\n\t\t\t\t\t\t\t\trect.x += ht(val.py);\n\t\t\t\t\t\t\t\trect.width -= ht(val.py);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.createLabel(s, value, rect, finalTheme);\n\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\tthis._animateBar(shape, offsets.l + baselineWidth, -Math.abs(w));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Bars\n\t\t},\n\t\tgetValue: function(value, j, seriesIndex, indexed){\n\t\t\tvar y, x;\n\t\t\tif(indexed){\n\t\t\t\tif(typeof value == \"number\"){\n\t\t\t\t\ty = value;\n\t\t\t\t}else{\n\t\t\t\t\ty = value.y;\n\t\t\t\t}\n\t\t\t\tx = j;\n\t\t\t}else{\n\t\t\t\ty = value.y;\n\t\t\t\tx = value.x -1;\n\t\t\t}\n\t\t\treturn {y:y, x:x};\n\t\t},\n\t\textractValues: function(scaler){\n\t\t\tvar extracted = [];\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\n\t\t\t\t// data point to save time\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t\t}),\n\t\t\t\t\tmin = indexed ? Math.max(0, Math.floor(scaler.bounds.from - 1)) : 0,\n\t\t\t\t\tmax = indexed ? Math.min(run.data.length, Math.ceil(scaler.bounds.to)) : run.data.length,\n\t\t\t\t\textractedSet = extracted[i] = [];\n\t\t\t\textractedSet.min = min;\n\t\t\t\textractedSet.max = max;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\t\t\t\t\tvar value = run.data[j];\n\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 :\n\t\t\t\t\t\t(typeof value == \"number\" ? value : value.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn extracted;\n\t\t},\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\t// transform to pixels\n\t\t\tfor(var i = 0, n = values.length; i < n; ++i){\n\t\t\t\tvar extractedSet = values[i];\n\t\t\t\tif(extractedSet){\n\t\t\t\t\tfor(var j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\t\tvar value = extractedSet[j];\n\t\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 : transform(value) - baseline;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn values;\n\t\t},\n\t\tisNullValue: function(value){\n\t\t\tif(value === null || typeof value == \"undefined\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar h = this._hAxis ? this._hAxis.isNullValue : alwaysFalse,\n\t\t\t\tv = this._vAxis ? this._vAxis.isNullValue : alwaysFalse;\n\t\t\tif(typeof value == \"number\"){\n\t\t\t\treturn v(0.5) || h(value);\n\t\t\t}\n\t\t\treturn v(isNaN(value.x) ? 0.5 : value.x + 0.5) || value.y === null || h(value.y);\n\t\t},\t\t\n\t\tgetBarProperties: function(){\n\t\t\tvar f = dc.calculateBarSize(this._vScaler.bounds.scale, this.opt);\n\t\t\treturn {gap: f.gap, height: f.size, thickness: 0};\n\t\t},\n\t\t_animateBar: function(shape, hoffset, hsize){\n\t\t\tif(hsize==0){\n\t\t\t\thsize = 1;\n\t\t\t}\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [hoffset - (hoffset/hsize), 0], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [1/hsize, 1], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 260:\n/*!****************************!*\\\n  !*** ../dojox/gfx/path.js ***!\n  \\****************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base */ 236), __webpack_require__(/*! dojo/_base/lang */ 0),__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! ./matrix */ 239), __webpack_require__(/*! ./shape */ 243)], __WEBPACK_AMD_DEFINE_RESULT__ = function(g, lang, declare, matrix, shapeLib){\n\n\t// module:\n\t//\t\tdojox/gfx/path\n\n\tvar Path = declare(\"dojox.gfx.path.Path\", shapeLib.Shape, {\n\t\t// summary:\n\t\t//\t\ta generalized path shape\n\n\t\tconstructor: function(rawNode){\n\t\t\t// summary:\n\t\t\t//\t\ta path constructor\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM node to be used by this path object\n\t\t\tthis.shape = lang.clone(g.defaultPath);\n\t\t\tthis.segments = [];\n\t\t\tthis.tbbox = null;\n\t\t\tthis.absolute = true;\n\t\t\tthis.last = {};\n\t\t\tthis.rawNode = rawNode;\n\t\t\tthis.segmented = false;\n\t\t},\n\n\t\t// mode manipulations\n\t\tsetAbsoluteMode: function(mode){\n\t\t\t// summary:\n\t\t\t//\t\tsets an absolute or relative mode for path points\n\t\t\t// mode: Boolean\n\t\t\t//\t\ttrue/false or \"absolute\"/\"relative\" to specify the mode\n\t\t\tthis._confirmSegmented();\n\t\t\tthis.absolute = typeof mode == \"string\" ? (mode == \"absolute\") : mode;\n\t\t\treturn this; // self\n\t\t},\n\t\tgetAbsoluteMode: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns a current value of the absolute mode\n\t\t\tthis._confirmSegmented();\n\t\t\treturn this.absolute; // Boolean\n\t\t},\n\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box {x, y, width, height} or null\n\t\t\tthis._confirmSegmented();\n\t\t\treturn (this.bbox && (\"l\" in this.bbox)) ? {x: this.bbox.l, y: this.bbox.t, width: this.bbox.r - this.bbox.l, height: this.bbox.b - this.bbox.t} : null; // dojox/gfx.Rectangle\n\t\t},\n\n\t\t_getRealBBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns an array of four points or null\n\t\t\t//\t\tfour points represent four corners of the untransformed bounding box\n\t\t\tthis._confirmSegmented();\n\t\t\tif(this.tbbox){\n\t\t\t\treturn this.tbbox;\t// Array\n\t\t\t}\n\t\t\tvar bbox = this.bbox, matrix = this._getRealMatrix();\n\t\t\tthis.bbox = null;\n\t\t\tfor(var i = 0, len = this.segments.length; i < len; ++i){\n\t\t\t\tthis._updateWithSegment(this.segments[i], matrix);\n\t\t\t}\n\t\t\tvar t = this.bbox;\n\t\t\tthis.bbox = bbox;\n\t\t\tthis.tbbox = t ? [\n\t\t\t\t{x: t.l, y: t.t},\n\t\t\t\t{x: t.r, y: t.t},\n\t\t\t\t{x: t.r, y: t.b},\n\t\t\t\t{x: t.l, y: t.b}\n\t\t\t] : null;\n\t\t\treturn this.tbbox;\t// Array\n\t\t},\n\n\t\tgetLastPosition: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the last point in the path, or null\n\t\t\tthis._confirmSegmented();\n\t\t\treturn \"x\" in this.last ? this.last : null; // Object\n\t\t},\n\n\t\t_applyTransform: function(){\n\t\t\tthis.tbbox = null;\n\t\t\treturn this.inherited(arguments);\n\t\t},\n\n\t\t// segment interpretation\n\t\t_updateBBox: function(x, y, m){\n\t\t\t// summary:\n\t\t\t//\t\tupdates the bounding box of path with new point\n\t\t\t// x: Number\n\t\t\t//\t\tan x coordinate\n\t\t\t// y: Number\n\t\t\t//\t\ta y coordinate\n\n\t\t\tif(m){\n\t\t\t\tvar t = matrix.multiplyPoint(m, x, y);\n\t\t\t\tx = t.x;\n\t\t\t\ty = t.y;\n\t\t\t}\n\n\t\t\t// we use {l, b, r, t} representation of a bbox\n\t\t\tif(this.bbox && (\"l\" in this.bbox)){\n\t\t\t\tif(this.bbox.l > x) this.bbox.l = x;\n\t\t\t\tif(this.bbox.r < x) this.bbox.r = x;\n\t\t\t\tif(this.bbox.t > y) this.bbox.t = y;\n\t\t\t\tif(this.bbox.b < y) this.bbox.b = y;\n\t\t\t}else{\n\t\t\t\tthis.bbox = {l: x, b: y, r: x, t: y};\n\t\t\t}\n\t\t},\n\t\t_updateWithSegment: function(segment, matrix){\n\t\t\t// summary:\n\t\t\t//\t\tupdates the bounding box of path with new segment\n\t\t\t// segment: Object\n\t\t\t//\t\ta segment\n\t\t\tvar n = segment.args, l = n.length, i;\n\t\t\t// update internal variables: bbox, absolute, last\n\t\t\tswitch(segment.action){\n\t\t\t\tcase \"M\":\n\t\t\t\tcase \"L\":\n\t\t\t\tcase \"C\":\n\t\t\t\tcase \"S\":\n\t\t\t\tcase \"Q\":\n\t\t\t\tcase \"T\":\n\t\t\t\t\tfor(i = 0; i < l; i += 2){\n\t\t\t\t\t\tthis._updateBBox(n[i], n[i + 1], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.last.x = n[l - 2];\n\t\t\t\t\tthis.last.y = n[l - 1];\n\t\t\t\t\tthis.absolute = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"H\":\n\t\t\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\t\t\tthis._updateBBox(n[i], this.last.y, matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.last.x = n[l - 1];\n\t\t\t\t\tthis.absolute = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"V\":\n\t\t\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\t\t\tthis._updateBBox(this.last.x, n[i], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.last.y = n[l - 1];\n\t\t\t\t\tthis.absolute = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"m\":\n\t\t\t\t\tvar start = 0;\n\t\t\t\t\tif(!(\"x\" in this.last)){\n\t\t\t\t\t\tthis._updateBBox(this.last.x = n[0], this.last.y = n[1], matrix);\n\t\t\t\t\t\tstart = 2;\n\t\t\t\t\t}\n\t\t\t\t\tfor(i = start; i < l; i += 2){\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y += n[i + 1], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"l\":\n\t\t\t\tcase \"t\":\n\t\t\t\t\tfor(i = 0; i < l; i += 2){\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y += n[i + 1], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"h\":\n\t\t\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y, matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\t\t\tthis._updateBBox(this.last.x, this.last.y += n[i], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\tfor(i = 0; i < l; i += 6){\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i], this.last.y + n[i + 1], matrix);\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i + 2], this.last.y + n[i + 3], matrix);\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 4], this.last.y += n[i + 5], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"s\":\n\t\t\t\tcase \"q\":\n\t\t\t\t\tfor(i = 0; i < l; i += 4){\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i], this.last.y + n[i + 1], matrix);\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 2], this.last.y += n[i + 3], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"A\":\n\t\t\t\t\tfor(i = 0; i < l; i += 7){\n\t\t\t\t\t\tthis._updateBBox(n[i + 5], n[i + 6], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.last.x = n[l - 2];\n\t\t\t\t\tthis.last.y = n[l - 1];\n\t\t\t\t\tthis.absolute = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"a\":\n\t\t\t\t\tfor(i = 0; i < l; i += 7){\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 5], this.last.y += n[i + 6], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// add an SVG path segment\n\t\t\tvar path = [segment.action];\n\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\tpath.push(g.formatNumber(n[i], true));\n\t\t\t}\n\t\t\tif(typeof this.shape.path == \"string\"){\n\t\t\t\tthis.shape.path += path.join(\"\");\n\t\t\t}else{\n\t\t\t\tfor(i = 0, l = path.length; i < l; ++i){\n\t\t\t\t\tthis.shape.path.push(path[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// a dictionary, which maps segment type codes to a number of their arguments\n\t\t_validSegments: {m: 2, l: 2, h: 1, v: 1, c: 6, s: 4, q: 4, t: 2, a: 7, z: 0},\n\n\t\t_pushSegment: function(action, args){\n\t\t\t// summary:\n\t\t\t//\t\tadds a segment\n\t\t\t// action: String\n\t\t\t//\t\tvalid SVG code for a segment's type\n\t\t\t// args: Array\n\t\t\t//\t\ta list of parameters for this segment\n\t\t\tthis.tbbox = null;\n\t\t\tvar group = this._validSegments[action.toLowerCase()], segment;\n\t\t\tif(typeof group == \"number\"){\n\t\t\t\tif(group){\n\t\t\t\t\tif(args.length >= group){\n\t\t\t\t\t\tsegment = {action: action, args: args.slice(0, args.length - args.length % group)};\n\t\t\t\t\t\tthis.segments.push(segment);\n\t\t\t\t\t\tthis._updateWithSegment(segment);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tsegment = {action: action, args: []};\n\t\t\t\t\tthis.segments.push(segment);\n\t\t\t\t\tthis._updateWithSegment(segment);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_collectArgs: function(array, args){\n\t\t\t// summary:\n\t\t\t//\t\tconverts an array of arguments to plain numeric values\n\t\t\t// array: Array\n\t\t\t//\t\tan output argument (array of numbers)\n\t\t\t// args: Array\n\t\t\t//\t\tan input argument (can be values of Boolean, Number, dojox/gfx.Point, or an embedded array of them)\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tvar t = args[i];\n\t\t\t\tif(typeof t == \"boolean\"){\n\t\t\t\t\tarray.push(t ? 1 : 0);\n\t\t\t\t}else if(typeof t == \"number\"){\n\t\t\t\t\tarray.push(t);\n\t\t\t\t}else if(t instanceof Array){\n\t\t\t\t\tthis._collectArgs(array, t);\n\t\t\t\t}else if(\"x\" in t && \"y\" in t){\n\t\t\t\t\tarray.push(t.x, t.y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// segments\n\t\tmoveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a move segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"M\" : \"m\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tlineTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a line segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"L\" : \"l\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\thLineTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a horizontal line segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"H\" : \"h\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tvLineTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a vertical line segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"V\" : \"v\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tcurveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a curve segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"C\" : \"c\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tsmoothCurveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a smooth curve segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"S\" : \"s\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tqCurveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a quadratic curve segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"Q\" : \"q\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tqSmoothCurveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a quadratic smooth curve segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"T\" : \"t\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tarcTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms an elliptic arc segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"A\" : \"a\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tclosePath: function(){\n\t\t\t// summary:\n\t\t\t//\t\tcloses a path\n\t\t\tthis._confirmSegmented();\n\t\t\tthis._pushSegment(\"Z\", []);\n\t\t\treturn this; // self\n\t\t},\n\n\t\t_confirmSegmented: function() {\n\t\t\tif (!this.segmented) {\n\t\t\t\tvar path = this.shape.path;\n\t\t\t\t// switch to non-updating version of path building\n\t\t\t\tthis.shape.path = [];\n\t\t\t\tthis._setPath(path);\n\t\t\t\t// switch back to the string path\n\t\t\t\tthis.shape.path = this.shape.path.join(\"\");\n\t\t\t\t// become segmented\n\t\t\t\tthis.segmented = true;\n\t\t\t}\n\t\t},\n\n\t\t// setShape\n\t\t_setPath: function(path){\n\t\t\t// summary:\n\t\t\t//\t\tforms a path using an SVG path string\n\t\t\t// path: String\n\t\t\t//\t\tan SVG path string\n\t\t\tvar p = lang.isArray(path) ? path : path.match(g.pathSvgRegExp);\n\t\t\tthis.segments = [];\n\t\t\tthis.absolute = true;\n\t\t\tthis.bbox = {};\n\t\t\tthis.last = {};\n\t\t\tif(!p) return;\n\t\t\t// create segments\n\t\t\tvar action = \"\",\t// current action\n\t\t\t\targs = [],\t\t// current arguments\n\t\t\t\tl = p.length;\n\t\t\tfor(var i = 0; i < l; ++i){\n\t\t\t\tvar t = p[i], x = parseFloat(t);\n\t\t\t\tif(isNaN(x)){\n\t\t\t\t\tif(action){\n\t\t\t\t\t\tthis._pushSegment(action, args);\n\t\t\t\t\t}\n\t\t\t\t\targs = [];\n\t\t\t\t\taction = t;\n\t\t\t\t}else{\n\t\t\t\t\targs.push(x);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._pushSegment(action, args);\n\t\t},\n\t\tsetShape: function(newShape){\n\t\t\t// summary:\n\t\t\t//\t\tforms a path using a shape\n\t\t\t// newShape: Object\n\t\t\t//\t\tan SVG path string or a path object (see dojox/gfx.defaultPath)\n\t\t\tthis.inherited(arguments, [typeof newShape == \"string\" ? {path: newShape} : newShape]);\n\n\t\t\tthis.segmented = false;\n\t\t\tthis.segments = [];\n\t\t\tif(!g.lazyPathSegmentation){\n\t\t\t\tthis._confirmSegmented();\n\t\t\t}\n\t\t\treturn this; // self\n\t\t},\n\n\t\t// useful constant for descendants\n\t\t_2PI: Math.PI * 2\n\t});\n\n\tvar TextPath = declare(\"dojox.gfx.path.TextPath\", Path, {\n\t\t// summary:\n\t\t//\t\ta generalized TextPath shape\n\n\t\tconstructor: function(rawNode){\n\t\t\t// summary:\n\t\t\t//\t\ta TextPath shape constructor\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM node to be used by this TextPath object\n\t\t\tif(!(\"text\" in this)){\n\t\t\t\tthis.text = lang.clone(g.defaultTextPath);\n\t\t\t}\n\t\t\tif(!(\"fontStyle\" in this)){\n\t\t\t\tthis.fontStyle = lang.clone(g.defaultFont);\n\t\t\t}\n\t\t},\n\t\tgetText: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current text object or null\n\t\t\treturn this.text;\t// Object\n\t\t},\n\t\tsetText: function(newText){\n\t\t\t// summary:\n\t\t\t//\t\tsets a text to be drawn along the path\n\t\t\tthis.text = g.makeParameters(this.text,\n\t\t\t\ttypeof newText == \"string\" ? {text: newText} : newText);\n\t\t\tthis._setText();\n\t\t\treturn this;\t// self\n\t\t},\n\t\tgetFont: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current font object or null\n\t\t\treturn this.fontStyle;\t// Object\n\t\t},\n\t\tsetFont: function(newFont){\n\t\t\t// summary:\n\t\t\t//\t\tsets a font for text\n\t\t\tthis.fontStyle = typeof newFont == \"string\" ?\n\t\t\t\tg.splitFontString(newFont) :\n\t\t\t\tg.makeParameters(g.defaultFont, newFont);\n\t\t\tthis._setFont();\n\t\t\treturn this;\t// self\n\t\t}\n\t});\n\n\t/*=====\n\tg.Path = Path;\n\tg.TextPath = TextPath;\n\t=====*/\n\n\treturn g.path = {\n\t\t// summary:\n\t\t//\t\tThis module contains the core graphics Path API.\n\t\t//\t\tPath command format follows the W3C SVG 1.0 Path api.\n\n\t\tPath: Path,\n\t\tTextPath: TextPath\n\t};\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 261:\n/*!******************************************!*\\\n  !*** ../dojox/charting/scaler/common.js ***!\n  \\******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang){\n\n\tvar eq = function(/*Number*/ a, /*Number*/ b){\n\t\t// summary:\n\t\t//\t\tcompare two FP numbers for equality\n\t\treturn Math.abs(a - b) <= 1e-6 * (Math.abs(a) + Math.abs(b));\t// Boolean\n\t};\n\n\tvar common = lang.getObject(\"dojox.charting.scaler.common\", true);\n\n\tvar testedModules = {};\n\n\treturn lang.mixin(common, {\n\t\tdoIfLoaded: function(moduleName, ifloaded, ifnotloaded){\n\t\t\tif(testedModules[moduleName] === undefined){\n\t\t\t\ttry{\n\t\t\t\t\ttestedModules[moduleName] = require(moduleName);\n\t\t\t\t}catch(e){\n\t\t\t\t\ttestedModules[moduleName] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(testedModules[moduleName]){\n\t\t\t\treturn ifloaded(testedModules[moduleName]);\n\t\t\t}else{\n\t\t\t\treturn ifnotloaded();\n\t\t\t}\n\t\t},\n\t\tgetNumericLabel: function(/*Number*/ number, /*Number*/ precision, /*Object*/ kwArgs){\n\t\t\tvar def = \"\";\n\t\t\tcommon.doIfLoaded(\"dojo/number\", function(numberLib){\n\t\t\t\tdef = (kwArgs.fixed ? numberLib.format(number, {places : precision < 0 ? -precision : 0}) :\n\t\t\t\t\tnumberLib.format(number)) || \"\";\n\t\t\t}, function(){\n\t\t\t\tdef = kwArgs.fixed ? number.toFixed(precision < 0 ? -precision : 0) : number.toString();\n\t\t\t});\n\t\t\tif(kwArgs.labelFunc){\n\t\t\t\tvar r = kwArgs.labelFunc(def, number, precision);\n\t\t\t\tif(r){ return r; }\n\t\t\t\t// else fall through to the regular labels search\n\t\t\t}\n\t\t\tif(kwArgs.labels){\n\t\t\t\t// classic binary search\n\t\t\t\t// TODO: working only if the array is sorted per value should be better documented or sorted automatically\n\t\t\t\tvar l = kwArgs.labels, lo = 0, hi = l.length;\n\t\t\t\twhile(lo < hi){\n\t\t\t\t\tvar mid = Math.floor((lo + hi) / 2), val = l[mid].value;\n\t\t\t\t\tif(val < number){\n\t\t\t\t\t\tlo = mid + 1;\n\t\t\t\t\t}else{\n\t\t\t\t\t\thi = mid;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// lets take into account FP errors\n\t\t\t\tif(lo < l.length && eq(l[lo].value, number)){\n\t\t\t\t\treturn l[lo].text;\n\t\t\t\t}\n\t\t\t\t--lo;\n\t\t\t\tif(lo >= 0 && lo < l.length && eq(l[lo].value, number)){\n\t\t\t\t\treturn l[lo].text;\n\t\t\t\t}\n\t\t\t\tlo += 2;\n\t\t\t\tif(lo < l.length && eq(l[lo].value, number)){\n\t\t\t\t\treturn l[lo].text;\n\t\t\t\t}\n\t\t\t\t// otherwise we will produce a number\n\t\t\t}\n\t\t\treturn def;\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 262:\n/*!****************************************!*\\\n  !*** ../dojox/charting/SimpleTheme.js ***!\n  \\****************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5),__webpack_require__(/*! dojo/_base/declare */ 4),__webpack_require__(/*! dojo/_base/Color */ 78), __webpack_require__(/*! dojox/lang/utils */ 235), __webpack_require__(/*! dojox/gfx/gradutils */ 263)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, arr, declare, Color, dlu, dgg){\n\t\n\tvar SimpleTheme = declare(\"dojox.charting.SimpleTheme\", null, {\n\t// summary:\n\t//\t\tA SimpleTheme or Theme is a pre-defined object, primarily JSON-based, that makes up the definitions to\n\t//\t\tstyle a chart.\n\t//\n\t// description:\n\t//\t\tWhile you can set up style definitions on a chart directly (usually through the various add methods\n\t//\t\ton a dojox.charting.Chart object), a Theme simplifies this manual setup by allowing you to\n\t//\t\tpre-define all of the various visual parameters of each element in a chart.\n\t//\n\t//\t\tMost of the properties of a Theme are straight-forward; if something is line-based (such as\n\t//\t\tan axis or the ticks on an axis), they will be defined using basic stroke parameters.  Likewise,\n\t//\t\tif an element is primarily block-based (such as the background of a chart), it will be primarily\n\t//\t\tfill-based.\n\t//\n\t//\t\tIn addition (for convenience), a Theme definition does not have to contain the entire JSON-based\n\t//\t\tstructure.  Each theme is built on top of a default theme (which serves as the basis for the theme\n\t//\t\t\"GreySkies\"), and is mixed into the default theme object.  This allows you to create a theme based,\n\t//\t\tsay, solely on colors for data series.\n\t//\n\t//\t\tDefining a new theme is relatively easy; see any of the themes in dojox.charting.themes for examples\n\t//\t\ton how to define your own.\n\t//\n\t//\t\tWhen you set a theme on a chart, the theme itself is deep-cloned.  This means that you cannot alter\n\t//\t\tthe theme itself after setting the theme value on a chart, and expect it to change your chart.  If you\n\t//\t\tare looking to make alterations to a theme for a chart, the suggestion would be to create your own\n\t//\t\ttheme, based on the one you want to use, that makes those alterations before it is applied to a chart.\n\t//\n\t//\t\tFinally, a Theme contains a number of functions to facilitate rendering operations on a chart--the main\n\t//\t\thelper of which is the ~next~ method, in which a chart asks for the information for the next data series\n\t//\t\tto be rendered.\n\t//\n\t//\t\tA note on colors:\n\t//\t\tA theme palette is usually comprised of 5 different color definitions, and\n\t//\t\tno more.  If you have a need to render a chart with more than 5 data elements, you can simply \"push\"\n\t//\t\tnew color definitions into the theme's .color array.  Make sure that you do that with the actual\n\t//\t\ttheme object from a Chart, and not in the theme itself (i.e. either do that before using .setTheme\n\t//\t\ton a chart).\n\t//\n\t// example:\n\t//\t\tThe default theme (and structure) looks like so:\n\t//\t|\t// all objects are structs used directly in dojox.gfx\n\t//\t|\tchart:{\n\t//\t|\t\tmargins: {l: 10, t: 10, r: 10, b: 10},\n\t//\t|\t\tstroke: null,\n\t//\t|\t\tfill: \"white\",\n\t//\t|\t\tpageStyle: null // suggested page style as an object suitable for dojo.style()\n\t//\t|\t},\n\t//\t|\tplotarea:{\n\t//\t|\t\tstroke: null,\n\t//\t|\t\tfill: \"white\"\n\t//\t|\t},\n\t//\t|\taxis:{\n\t//\t|\t\tstroke:\t{ // the axis itself\n\t//\t|\t\t\tcolor: \"#333\",\n\t//\t|\t\t\twidth: 1\n\t//\t|\t\t},\n\t//\t|\t\ttick: {\t// used as a foundation for all ticks\n\t//\t|\t\t\tcolor:     \"#666\",\n\t//\t|\t\t\tposition:  \"center\",\n\t//\t|\t\t\tfont:      \"normal normal normal 7pt Tahoma\",\t// labels on axis\n\t//\t|\t\t\tfontColor: \"#333\"\t\t\t\t\t\t\t\t// color of labels\n\t//\t|\t\t},\n\t//\t|\t\tmajorTick:\t{ // major ticks on axis, and used for major gridlines\n\t//\t|\t\t\twidth:  1,\n\t//\t|\t\t\tlength: 6\n\t//\t|\t\t},\n\t//\t|\t\tminorTick:\t{ // minor ticks on axis, and used for minor gridlines\n\t//\t|\t\t\twidth:  0.8,\n\t//\t|\t\t\tlength: 3\n\t//\t|\t\t},\n\t//\t|\t\tmicroTick:\t{ // minor ticks on axis, and used for minor gridlines\n\t//\t|\t\t\twidth:  0.5,\n\t//\t|\t\t\tlength: 1\n\t//\t|\t\t},\n\t//\t|\t\ttitle: {\n\t//\t|\t\t\tgap:  15,\n\t//\t|\t\t\tfont: \"normal normal normal 11pt Tahoma\",\t// title font\n\t//\t|\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t// title font color\n\t//\t|\t\t\torientation: \"axis\"\t\t\t\t\t\t// \"axis\": facing the axis, \"away\": facing away\n\t//\t|\t\t}\n\t//\t|\t},\n\t//\t|\tseries: {\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// line\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\n\t//\t|\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\n\t//\t|\t\t//filter:  dojox/gfx/filters.createFilter(),\n\t//\t|\t\tfilter: null,\t\t\t\t\t\t\t\t// no filter, to use a filter you must use gfx SVG render and require dojox/gfx/svgext\n\t//\t|\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill, if appropriate\n\t//\t|\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// if there's a label\n\t//\t|\t\tfontColor: \"#000\"\t\t\t\t\t\t\t// color of labels\n\t//\t|\t\tlabelWiring: {width: 1, color: \"#ccc\"},\t\t// connect marker and target data item(slice, column, bar...)\n\t//\t|\t},\n\t//\t|\tmarker: {\t// any markers on a series\n\t//\t|\t\tsymbol:  \"m-3,3 l3,-6 3,6 z\",\t\t\t\t// symbol\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// stroke\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\n\t//\t|\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill if needed\n\t//\t|\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// label\n\t//\t|\t\tfontColor: \"#000\"\n\t//\t|\t},\n\t//\t|\tgrid: {\t// grid, when not present axis tick strokes are used instead\n\t//\t|\t\tmajorLine: {\t// major grid line\n\t//\t|\t\t\tcolor:     \"#666\",\n\t//\t|\t\t\twidth:  1,\n\t//\t|\t\t\tlength: 6\n\t//\t|\t\t},\n\t//\t|\t\tminorLine: {\t// minor grid line\n\t//\t|\t\t\tcolor:     \"#666\",\n\t//\t|\t\t\twidth:  0.8,\n\t//\t|\t\t\tlength: 3\n\t//\t|\t\t},\n\t//\t|\t\tfill: \"grey\",  // every other stripe\n\t//\t|\t\talternateFill: \"grey\" // alternate stripe\n\t//\t|\t},\n\t//\t|\tindicator: {\n\t//\t|\t\tlineStroke:  {width: 1.5, color: \"#333\"},\t\t// line\n\t//\t|\t\tlineOutline: {width: 0.1, color: \"#ccc\"},\t\t// line outline\n\t//\t|\t\tlineShadow: null,\t\t\t\t\t\t\t\t// no line shadow\n\t//\t|\t\tlineFill: null,\t\t\t\t\t\t\t\t\t// fill between lines for dual indicators\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t\t// label background stroke\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t\t// label background outline\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t\t// no label background shadow\n\t//\t|\t\tfill:  \"#ccc\",\t\t\t\t\t\t\t\t\t// label background fill\n\t//\t|\t\tradius: 3,\t\t\t\t\t\t\t\t\t\t// radius of the label background\n\t//\t|\t\tfont:    \"normal normal normal 10pt Tahoma\",\t// label font\n\t//\t|\t\tfontColor: \"#000\"\t\t\t\t\t\t\t\t// label color\n\t//\t|\t\tmarkerFill:    \"#ccc\",\t\t\t\t\t\t\t// marker fill\n\t//\t|\t\tmarkerSymbol:  \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\t// marker symbol\n\t//\t|\t\tmarkerStroke:  {width: 1.5, color: \"#333\"},\t\t// marker stroke\n\t//\t|\t\tmarkerOutline: {width: 0.1, color: \"#ccc\"},\t\t// marker outline\n\t//\t|\t\tmarkerShadow: null,\t\t\t\t\t\t\t\t// no marker shadow\n\t//\t|\t}\n\t//\n\t// example:\n\t//\t\tDefining a new theme is pretty simple:\n\t//\t|\tvar Grasslands = new SimpleTheme({\n\t//\t|\t\tcolors: [ \"#70803a\", \"#dde574\", \"#788062\", \"#b1cc5d\", \"#eff2c2\" ]\n\t//\t|\t});\n\t//\t|\n\t//\t|\tmyChart.setTheme(Grasslands);\n\n\tshapeSpaces: {shape: 1, shapeX: 1, shapeY: 1},\n\n\tconstructor: function(kwArgs){\n\t\t// summary:\n\t\t//\t\tInitialize a theme using the keyword arguments.  Note that the arguments\n\t\t//\t\tlook like the example (above), and may include a few more parameters.\n\t\tkwArgs = kwArgs || {};\n\n\t\t// populate theme with defaults updating them if needed\n\t\tvar def = SimpleTheme.defaultTheme;\n\t\tarr.forEach([\"chart\", \"plotarea\", \"axis\", \"grid\", \"series\", \"marker\", \"indicator\"], function(name){\n\t\t\tthis[name] = lang.delegate(def[name], kwArgs[name]);\n\t\t}, this);\n\n\t\t// personalize theme\n\t\tif(kwArgs.seriesThemes && kwArgs.seriesThemes.length){\n\t\t\tthis.colors  = null;\n\t\t\tthis.seriesThemes = kwArgs.seriesThemes.slice(0);\n\t\t}else{\n\t\t\tthis.seriesThemes = null;\n\t\t\tthis.colors = (kwArgs.colors || SimpleTheme.defaultColors).slice(0);\n\t\t}\n\t\tthis.markerThemes = null;\n\t\tif(kwArgs.markerThemes && kwArgs.markerThemes.length){\n\t\t\tthis.markerThemes = kwArgs.markerThemes.slice(0);\n\t\t}\n\t\tthis.markers = kwArgs.markers ? lang.clone(kwArgs.markers) : lang.delegate(SimpleTheme.defaultMarkers);\n\n\t\t// set flags\n\t\tthis.noGradConv = kwArgs.noGradConv;\n\t\tthis.noRadialConv = kwArgs.noRadialConv;\n\t\tif(kwArgs.reverseFills){\n\t\t\tthis.reverseFills();\n\t\t}\n\n\t\t//\tprivate housekeeping\n\t\tthis._current = 0;\n\t\tthis._buildMarkerArray();\n\t},\n\n\tclone: function(){\n\t\t// summary:\n\t\t//\t\tClone the current theme.\n\t\t// returns: dojox.charting.SimpleTheme\n\t\t//\t\tThe cloned theme; any alterations made will not affect the original.\n\t\tvar theme = new this.constructor({\n\t\t\t// theme components\n\t\t\tchart: this.chart,\n\t\t\tplotarea: this.plotarea,\n\t\t\taxis: this.axis,\n\t\t\tgrid: this.grid,\n\t\t\tseries: this.series,\n\t\t\tmarker: this.marker,\n\t\t\t// individual arrays\n\t\t\tcolors: this.colors,\n\t\t\tmarkers: this.markers,\n\t\t\tindicator: this.indicator,\n\t\t\tseriesThemes: this.seriesThemes,\n\t\t\tmarkerThemes: this.markerThemes,\n\t\t\t// flags\n\t\t\tnoGradConv: this.noGradConv,\n\t\t\tnoRadialConv: this.noRadialConv\n\t\t});\n\t\t// copy custom methods\n\t\tarr.forEach(\n\t\t\t[\"clone\", \"clear\", \"next\", \"skip\", \"addMixin\", \"post\", \"getTick\"],\n\t\t\tfunction(name){\n\t\t\t\tif(this.hasOwnProperty(name)){\n\t\t\t\t\ttheme[name] = this[name];\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis\n\t\t);\n\t\treturn theme;\t//\tdojox.charting.SimpleTheme\n\t},\n\n\tclear: function(){\n\t\t// summary:\n\t\t//\t\tClear and reset the internal pointer to start fresh.\n\t\tthis._current = 0;\n\t},\n\n\tnext: function(elementType, mixin, doPost){\n\t\t// summary:\n\t\t//\t\tGet the next color or series theme.\n\t\t// elementType: String?\n\t\t//\t\tAn optional element type (for use with series themes)\n\t\t// mixin: Object?\n\t\t//\t\tAn optional object to mix into the theme.\n\t\t// doPost: Boolean?\n\t\t//\t\tA flag to post-process the results.\n\t\t// returns: Object\n\t\t//\t\tAn object of the structure { series, marker, symbol }\n\t\tvar merge = dlu.merge, series, marker;\n\t\tif(this.colors){\n\t\t\tseries = lang.delegate(this.series);\n\t\t\tmarker = lang.delegate(this.marker);\n\t\t\tvar color = new Color(this.colors[this._current % this.colors.length]), old;\n\t\t\t// modify the stroke\n\t\t\tif(series.stroke && series.stroke.color){\n\t\t\t\tseries.stroke = lang.delegate(series.stroke);\n\t\t\t\told = new Color(series.stroke.color);\n\t\t\t\tseries.stroke.color = new Color(color);\n\t\t\t\tseries.stroke.color.a = old.a;\n\t\t\t}else{\n\t\t\t\tseries.stroke = {color: color};\n\t\t\t}\n\t\t\tif(marker.stroke && marker.stroke.color){\n\t\t\t\tmarker.stroke = lang.delegate(marker.stroke);\n\t\t\t\told = new Color(marker.stroke.color);\n\t\t\t\tmarker.stroke.color = new Color(color);\n\t\t\t\tmarker.stroke.color.a = old.a;\n\t\t\t}else{\n\t\t\t\tmarker.stroke = {color: color};\n\t\t\t}\n\t\t\t// modify the fill\n\t\t\tif(!series.fill || series.fill.type){\n\t\t\t\tseries.fill = color;\n\t\t\t}else{\n\t\t\t\told = new Color(series.fill);\n\t\t\t\tseries.fill = new Color(color);\n\t\t\t\tseries.fill.a = old.a;\n\t\t\t}\n\t\t\tif(!marker.fill || marker.fill.type){\n\t\t\t\tmarker.fill = color;\n\t\t\t}else{\n\t\t\t\told = new Color(marker.fill);\n\t\t\t\tmarker.fill = new Color(color);\n\t\t\t\tmarker.fill.a = old.a;\n\t\t\t}\n\t\t}else{\n\t\t\tseries = this.seriesThemes ?\n\t\t\t\tmerge(this.series, this.seriesThemes[this._current % this.seriesThemes.length]) :\n\t\t\t\tthis.series;\n\t\t\tmarker = this.markerThemes ?\n\t\t\t\tmerge(this.marker, this.markerThemes[this._current % this.markerThemes.length]) :\n\t\t\t\tseries;\n\t\t}\n\n\t\tvar symbol = marker && marker.symbol || this._markers[this._current % this._markers.length];\n\n\t\tvar theme = {series: series, marker: marker, symbol: symbol};\n\t\t\n\t\t// advance the counter\n\t\t++this._current;\n\n\t\tif(mixin){\n\t\t\ttheme = this.addMixin(theme, elementType, mixin);\n\t\t}\n\t\tif(doPost){\n\t\t\ttheme = this.post(theme, elementType);\n\t\t}\n\n\t\treturn theme;\t//\tObject\n\t},\n\n\tskip: function(){\n\t\t// summary:\n\t\t//\t\tSkip the next internal color.\n\t\t++this._current;\n\t},\n\n\taddMixin: function(theme, elementType, mixin, doPost){\n\t\t// summary:\n\t\t//\t\tAdd a mixin object to the passed theme and process.\n\t\t// theme: dojox/charting/SimpleTheme\n\t\t//\t\tThe theme to mixin to.\n\t\t// elementType: String\n\t\t//\t\tThe type of element in question. Can be \"line\", \"bar\" or \"circle\"\n\t\t// mixin: Object|Array\n\t\t//\t\tThe object or objects to mix into the theme.\n\t\t// doPost: Boolean\n\t\t//\t\tIf true, run the new theme through the post-processor.\n\t\t// returns: dojox/charting/SimpleTheme\n\t\t//\t\tThe new theme.\n\t\tif(lang.isArray(mixin)){\n\t\t\tarr.forEach(mixin, function(m){\n\t\t\t\ttheme = this.addMixin(theme, elementType, m);\n\t\t\t}, this);\n\t\t}else{\n\t\t\tvar t = {};\n\t\t\tif(\"color\" in mixin){\n\t\t\t\tif(elementType == \"line\" || elementType == \"area\"){\n\t\t\t\t\tlang.setObject(\"series.stroke.color\", mixin.color, t);\n\t\t\t\t\tlang.setObject(\"marker.stroke.color\", mixin.color, t);\n\t\t\t\t}else{\n\t\t\t\t\tlang.setObject(\"series.fill\", mixin.color, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tarr.forEach([\"stroke\", \"outline\", \"shadow\", \"fill\", \"filter\", \"font\", \"fontColor\", \"labelWiring\"], function(name){\n\t\t\t\tvar markerName = \"marker\" + name.charAt(0).toUpperCase() + name.substr(1),\n\t\t\t\t\tb = markerName in mixin;\n\t\t\t\tif(name in mixin){\n\t\t\t\t\tlang.setObject(\"series.\" + name, mixin[name], t);\n\t\t\t\t\tif(!b){\n\t\t\t\t\t\tlang.setObject(\"marker.\" + name, mixin[name], t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(b){\n\t\t\t\t\tlang.setObject(\"marker.\" + name, mixin[markerName], t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(\"marker\" in mixin){\n\t\t\t\tt.symbol = mixin.marker;\n\t\t\t\tt.symbol = mixin.marker;\n\t\t\t}\n\t\t\ttheme = dlu.merge(theme, t);\n\t\t}\n\t\tif(doPost){\n\t\t\ttheme = this.post(theme, elementType);\n\t\t}\n\t\treturn theme;\t//\tdojox/charting/SimpleTheme\n\t},\n\n\tpost: function(theme, elementType){\n\t\t// summary:\n\t\t//\t\tProcess any post-shape fills.\n\t\t// theme: dojox/charting/SimpleTheme\n\t\t//\t\tThe theme to post process with.\n\t\t// elementType: String\n\t\t//\t\tThe type of element being filled.  Can be \"bar\" or \"circle\".\n\t\t// returns: dojox/charting/SimpleTheme\n\t\t//\t\tThe post-processed theme.\n\t\tvar fill = theme.series.fill, t;\n\t\tif(!this.noGradConv && this.shapeSpaces[fill.space] && fill.type == \"linear\"){\n\t\t\tif(elementType == \"bar\"){\n\t\t\t\t// transpose start and end points\n\t\t\t\tt = {\n\t\t\t\t\tx1: fill.y1,\n\t\t\t\t\ty1: fill.x1,\n\t\t\t\t\tx2: fill.y2,\n\t\t\t\t\ty2: fill.x2\n\t\t\t\t};\n\t\t\t}else if(!this.noRadialConv && fill.space == \"shape\" && (elementType == \"slice\" || elementType == \"circle\")){\n\t\t\t\t// switch to radial\n\t\t\t\tt = {\n\t\t\t\t\ttype: \"radial\",\n\t\t\t\t\tcx: 0,\n\t\t\t\t\tcy: 0,\n\t\t\t\t\tr:  100\n\t\t\t\t};\n\t\t\t}\n\t\t\tif(t){\n\t\t\t\treturn dlu.merge(theme, {series: {fill: t}});\n\t\t\t}\n\t\t}\n\t\treturn theme;\t//\tdojox/charting/SimpleTheme\n\t},\n\n\tgetTick: function(name, mixin){\n\t\t// summary:\n\t\t//\t\tCalculates and merges tick parameters.\n\t\t// name: String\n\t\t//\t\tTick name, can be \"major\", \"minor\", or \"micro\".\n\t\t// mixin: Object?\n\t\t//\t\tOptional object to mix in to the tick.\n\t\tvar tick = this.axis.tick, tickName = name + \"Tick\",\n\t\t\tmerge = dlu.merge;\n\t\tif(tick){\n\t\t\tif(this.axis[tickName]){\n\t\t\t\ttick = merge(tick, this.axis[tickName]);\n\t\t\t}\n\t\t}else{\n\t\t\ttick = this.axis[tickName];\n\t\t}\n\t\tif(mixin){\n\t\t\tif(tick){\n\t\t\t\tif(mixin[tickName]){\n\t\t\t\t\ttick = merge(tick, mixin[tickName]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\ttick = mixin[tickName];\n\t\t\t}\n\t\t}\n\t\treturn tick;\t//\tObject\n\t},\n\n\tinspectObjects: function(f){\n\t\tarr.forEach([\"chart\", \"plotarea\", \"axis\", \"grid\", \"series\", \"marker\", \"indicator\"], function(name){\n\t\t\tf(this[name]);\n\t\t}, this);\n\t\tif(this.seriesThemes){\n\t\t\tarr.forEach(this.seriesThemes, f);\n\t\t}\n\t\tif(this.markerThemes){\n\t\t\tarr.forEach(this.markerThemes, f);\n\t\t}\n\t},\n\n\treverseFills: function(){\n\t\tthis.inspectObjects(function(o){\n\t\t\tif(o && o.fill){\n\t\t\t\to.fill = dgg.reverse(o.fill);\n\t\t\t}\n\t\t});\n\t},\n\n\taddMarker:function(/*String*/ name, /*String*/ segment){\n\t\t// summary:\n\t\t//\t\tAdd a custom marker to this theme.\n\t\t// example:\n\t\t//\t|\tmyTheme.addMarker(\"Ellipse\", foo);\n\t\tthis.markers[name] = segment;\n\t\tthis._buildMarkerArray();\n\t},\n\n\tsetMarkers:function(/*Object*/ obj){\n\t\t// summary:\n\t\t//\t\tSet all the markers of this theme at once.  obj should be a\n\t\t//\t\tdictionary of keys and path segments.\n\t\t//\n\t\t// example:\n\t\t//\t|\tmyTheme.setMarkers({ \"CIRCLE\": foo });\n\t\tthis.markers = obj;\n\t\tthis._buildMarkerArray();\n\t},\n\n\t_buildMarkerArray: function(){\n\t\tthis._markers = [];\n\t\tfor(var p in this.markers){\n\t\t\tthis._markers.push(this.markers[p]);\n\t\t}\n\t}\n});\n\nlang.mixin(SimpleTheme, {\n\tdefaultMarkers: {\n\t\tCIRCLE:   \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\n\t\tSQUARE:   \"m-3,-3 l0,6 6,0 0,-6 z\",\n\t\tDIAMOND:  \"m0,-3 l3,3 -3,3 -3,-3 z\",\n\t\tCROSS:    \"m0,-3 l0,6 m-3,-3 l6,0\",\n\t\tX:        \"m-3,-3 l6,6 m0,-6 l-6,6\",\n\t\tTRIANGLE: \"m-3,3 l3,-6 3,6 z\",\n\t\tTRIANGLE_INVERTED: \"m-3,-3 l3,6 3,-6 z\"\n\t},\n\n\tdefaultColors:[\n\t\t// gray skies\n\t\t\"#54544c\", \"#858e94\", \"#6e767a\", \"#948585\", \"#474747\"\n\t],\n\n\tdefaultTheme: {\n\t\t// all objects are structs used directly in dojox.gfx\n\t\tchart:{\n\t\t\tstroke: null,\n\t\t\tfill: \"white\",\n\t\t\tpageStyle: null,\n\t\t\ttitleGap:\t\t20,\n\t\t\ttitlePos:\t\t\"top\",\n\t\t\ttitleFont:      \"normal normal bold 14pt Tahoma\",\t// chart title\n\t\t\ttitleFontColor: \"#333\",\n\t\t\ttitleAlign: \"middle\"\n\t\t},\n\t\tplotarea:{\n\t\t\tstroke: null,\n\t\t\tfill: \"white\"\n\t\t},\n\t\t// TODO: label rotation on axis\n\t\taxis:{\n\t\t\tstroke:\t{ // the axis itself\n\t\t\t\tcolor: \"#333\",\n\t\t\t\twidth: 1\n\t\t\t},\n\t\t\ttick: {\t// used as a foundation for all ticks\n\t\t\t\tcolor:     \"#666\",\n\t\t\t\tposition:  \"center\",\n\t\t\t\tfont:      \"normal normal normal 7pt Tahoma\",\t// labels on axis\n\t\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t\t// color of labels\n\t\t\t\tlabelGap:  4                                    // gap between a tick and its label in pixels\n\t\t\t},\n\t\t\tmajorTick:\t{ // major ticks on axis, and used for major gridlines\n\t\t\t\twidth:  1,\n\t\t\t\tlength: 6\n\t\t\t},\n\t\t\tminorTick:\t{ // minor ticks on axis, and used for minor gridlines\n\t\t\t\twidth:  0.8,\n\t\t\t\tlength: 3\n\t\t\t},\n\t\t\tmicroTick:\t{ // minor ticks on axis, and used for minor gridlines\n\t\t\t\twidth:  0.5,\n\t\t\t\tlength: 1\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\tgap:  15,\n\t\t\t\tfont: \"normal normal normal 11pt Tahoma\",\t// title font\n\t\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t// title font color\n\t\t\t\torientation: \"axis\"\t\t\t\t\t\t// \"axis\": facing the axis, \"away\": facing away\n\t\t\t}\n\t\t},\n\t\tseries: {\n\t\t\t// used as a \"main\" theme for series, sThemes augment it\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// line\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\n\t\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\n\t\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill, if appropriate\n\t\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// if there's a label\n\t\t\tfontColor: \"#000\",\t\t\t\t\t\t\t// color of labels\n\t\t\tlabelWiring: {width: 1, color: \"#ccc\"}\t\t// connect marker and target data item(slice, column, bar...)\n\t\t},\n\t\tmarker: {\t// any markers on a series\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// stroke\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\n\t\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\n\t\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill if needed\n\t\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// label\n\t\t\tfontColor: \"#000\"\n\t\t},\n\t\tindicator: {\n\t\t\tlineStroke:  {width: 1.5, color: \"#333\"},\t\t\n\t\t\tlineOutline: {width: 0.1, color: \"#ccc\"},\t\t\n\t\t\tlineShadow: null,\n\t\t\tlineFill: null,\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t\n\t\t\tfill : \"#ccc\",\n\t\t\tradius: 3,\n\t\t\tfont:    \"normal normal normal 10pt Tahoma\",\t\n\t\t\tfontColor: \"#000\",\t\t\t\t\t\t\t\n\t\t\tmarkerFill:    \"#ccc\",\t\t\t\t\t\t\t\n\t\t\tmarkerSymbol:  \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\t\t\t\n\t\t\tmarkerStroke:  {width: 1.5, color: \"#333\"},\t\t\n\t\t\tmarkerOutline: {width: 0.1, color: \"#ccc\"},\t\t\n\t\t\tmarkerShadow: null\t\t\t\t\t\t\t\t\n\t\t}\n\t}\n});\n\nreturn SimpleTheme;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 263:\n/*!*********************************!*\\\n  !*** ../dojox/gfx/gradutils.js ***!\n  \\*********************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Various generic utilities to deal with a linear gradient\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base */ 236), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! ./matrix */ 239), __webpack_require__(/*! dojo/_base/Color */ 78)], __WEBPACK_AMD_DEFINE_RESULT__ = function(g, lang, m, Color){\n  \n\tvar gradutils = g.gradutils = {};\n\n\tfunction findColor(o, c){\n\t\tif(o <= 0){\n\t\t\treturn c[0].color;\n\t\t}\n\t\tvar len = c.length;\n\t\tif(o >= 1){\n\t\t\treturn c[len - 1].color;\n\t\t}\n\t\t//TODO: use binary search\n\t\tfor(var i = 0; i < len; ++i){\n\t\t\tvar stop = c[i];\n\t\t\tif(stop.offset >= o){\n\t\t\t\tif(i){\n\t\t\t\t\tvar prev = c[i - 1];\n\t\t\t\t\treturn Color.blendColors(new Color(prev.color), new Color(stop.color),\n\t\t\t\t\t\t(o - prev.offset) / (stop.offset - prev.offset));\n\t\t\t\t}\n\t\t\t\treturn stop.color;\n\t\t\t}\n\t\t}\n\t\treturn c[len - 1].color;\n\t}\n\n\tgradutils.getColor = function(fill, pt){\n\t\t// summary:\n\t\t//\t\tsample a color from a gradient using a point\n\t\t// fill: Object\n\t\t//\t\tfill object\n\t\t// pt: dojox/gfx.Point\n\t\t//\t\tpoint where to sample a color\n\t\tvar o;\n\t\tif(fill){\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\t\tvar angle = Math.atan2(fill.y2 - fill.y1, fill.x2 - fill.x1),\n\t\t\t\t\t\trotation = m.rotate(-angle),\n\t\t\t\t\t\tprojection = m.project(fill.x2 - fill.x1, fill.y2 - fill.y1),\n\t\t\t\t\t\tp = m.multiplyPoint(projection, pt),\n\t\t\t\t\t\tpf1 = m.multiplyPoint(projection, fill.x1, fill.y1),\n\t\t\t\t\t\tpf2 = m.multiplyPoint(projection, fill.x2, fill.y2),\n\t\t\t\t\t\tscale = m.multiplyPoint(rotation, pf2.x - pf1.x, pf2.y - pf1.y).x;\n\t\t\t\t\to = m.multiplyPoint(rotation, p.x - pf1.x, p.y - pf1.y).x / scale;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"radial\":\n\t\t\t\t\tvar dx = pt.x - fill.cx, dy = pt.y - fill.cy;\n\t\t\t\t\to = Math.sqrt(dx * dx + dy * dy) / fill.r;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn findColor(o, fill.colors);\t// dojo/_base/Color\n\t\t}\n\t\t// simple color\n\t\treturn new Color(fill || [0, 0, 0, 0]);\t// dojo/_base/Color\n\t};\n\n\tgradutils.reverse = function(fill){\n\t\t// summary:\n\t\t//\t\treverses a gradient\n\t\t// fill: Object\n\t\t//\t\tfill object\n\t\tif(fill){\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\tcase \"radial\":\n\t\t\t\t\tfill = lang.delegate(fill);\n\t\t\t\t\tif(fill.colors){\n\t\t\t\t\t\tvar c = fill.colors, l = c.length, i = 0, stop,\n\t\t\t\t\t\t\tn = fill.colors = new Array(c.length);\n\t\t\t\t\t\tfor(; i < l; ++i){\n\t\t\t\t\t\t\tstop = c[i];\n\t\t\t\t\t\t\tn[i] = {\n\t\t\t\t\t\t\t\toffset: 1 - stop.offset,\n\t\t\t\t\t\t\t\tcolor:  stop.color\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn.sort(function(a, b){ return a.offset - b.offset; });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn fill;\t// Object\n\t};\n\n\treturn gradutils;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 264:\n/*!*****************************!*\\\n  !*** ../dojo/_base/html.js ***!\n  \\*****************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./kernel */ 1), __webpack_require__(/*! ../dom */ 6), __webpack_require__(/*! ../dom-style */ 10), __webpack_require__(/*! ../dom-attr */ 14), __webpack_require__(/*! ../dom-prop */ 83), __webpack_require__(/*! ../dom-class */ 11), __webpack_require__(/*! ../dom-construct */ 16), __webpack_require__(/*! ../dom-geometry */ 17)], __WEBPACK_AMD_DEFINE_RESULT__ = function(dojo, dom, style, attr, prop, cls, ctr, geom){\r\n\t// module:\r\n\t//\t\tdojo/dom\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tThis module is a stub for the core dojo DOM API.\r\n\t};\r\n\t=====*/\r\n\r\n\t// mix-in dom\r\n\tdojo.byId = dom.byId;\r\n\tdojo.isDescendant = dom.isDescendant;\r\n\tdojo.setSelectable = dom.setSelectable;\r\n\r\n\t// mix-in dom-attr\r\n\tdojo.getAttr = attr.get;\r\n\tdojo.setAttr = attr.set;\r\n\tdojo.hasAttr = attr.has;\r\n\tdojo.removeAttr = attr.remove;\r\n\tdojo.getNodeProp = attr.getNodeProp;\r\n\r\n\tdojo.attr = function(node, name, value){\r\n\t\t// summary:\r\n\t\t//\t\tGets or sets an attribute on an HTML element.\r\n\t\t// description:\r\n\t\t//\t\tHandles normalized getting and setting of attributes on DOM\r\n\t\t//\t\tNodes. If 2 arguments are passed, and a the second argument is a\r\n\t\t//\t\tstring, acts as a getter.\r\n\t\t//\r\n\t\t//\t\tIf a third argument is passed, or if the second argument is a\r\n\t\t//\t\tmap of attributes, acts as a setter.\r\n\t\t//\r\n\t\t//\t\tWhen passing functions as values, note that they will not be\r\n\t\t//\t\tdirectly assigned to slots on the node, but rather the default\r\n\t\t//\t\tbehavior will be removed and the new behavior will be added\r\n\t\t//\t\tusing `dojo.connect()`, meaning that event handler properties\r\n\t\t//\t\twill be normalized and that some caveats with regards to\r\n\t\t//\t\tnon-standard behaviors for onsubmit apply. Namely that you\r\n\t\t//\t\tshould cancel form submission using `dojo.stopEvent()` on the\r\n\t\t//\t\tpassed event object instead of returning a boolean value from\r\n\t\t//\t\tthe handler itself.\r\n\t\t// node: DOMNode|String\r\n\t\t//\t\tid or reference to the element to get or set the attribute on\r\n\t\t// name: String|Object\r\n\t\t//\t\tthe name of the attribute to get or set.\r\n\t\t// value: String?\r\n\t\t//\t\tThe value to set for the attribute\r\n\t\t// returns:\r\n\t\t//\t\twhen used as a getter, the value of the requested attribute\r\n\t\t//\t\tor null if that attribute does not have a specified or\r\n\t\t//\t\tdefault value;\r\n\t\t//\r\n\t\t//\t\twhen used as a setter, the DOM node\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t// get the current value of the \"foo\" attribute on a node\r\n\t\t//\t|\tdojo.attr(dojo.byId(\"nodeId\"), \"foo\");\r\n\t\t//\t|\t// or we can just pass the id:\r\n\t\t//\t|\tdojo.attr(\"nodeId\", \"foo\");\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t// use attr() to set the tab index\r\n\t\t//\t|\tdojo.attr(\"nodeId\", \"tabIndex\", 3);\r\n\t\t//\t|\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tSet multiple values at once, including event handlers:\r\n\t\t//\t|\tdojo.attr(\"formId\", {\r\n\t\t//\t|\t\t\"foo\": \"bar\",\r\n\t\t//\t|\t\t\"tabIndex\": -1,\r\n\t\t//\t|\t\t\"method\": \"POST\",\r\n\t\t//\t|\t\t\"onsubmit\": function(e){\r\n\t\t//\t|\t\t\t// stop submitting the form. Note that the IE behavior\r\n\t\t//\t|\t\t\t// of returning true or false will have no effect here\r\n\t\t//\t|\t\t\t// since our handler is connect()ed to the built-in\r\n\t\t//\t|\t\t\t// onsubmit behavior and so we need to use\r\n\t\t//\t|\t\t\t// dojo.stopEvent() to ensure that the submission\r\n\t\t//\t|\t\t\t// doesn't proceed.\r\n\t\t//\t|\t\t\tdojo.stopEvent(e);\r\n\t\t//\t|\r\n\t\t//\t|\t\t\t// submit the form with Ajax\r\n\t\t//\t|\t\t\tdojo.xhrPost({ form: \"formId\" });\r\n\t\t//\t|\t\t}\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tStyle is s special case: Only set with an object hash of styles\r\n\t\t//\t|\tdojo.attr(\"someNode\",{\r\n\t\t//\t|\t\tid:\"bar\",\r\n\t\t//\t|\t\tstyle:{\r\n\t\t//\t|\t\t\twidth:\"200px\", height:\"100px\", color:\"#000\"\r\n\t\t//\t|\t\t}\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tAgain, only set style as an object hash of styles:\r\n\t\t//\t|\tvar obj = { color:\"#fff\", backgroundColor:\"#000\" };\r\n\t\t//\t|\tdojo.attr(\"someNode\", \"style\", obj);\r\n\t\t//\t|\r\n\t\t//\t|\t// though shorter to use `dojo.style()` in this case:\r\n\t\t//\t|\tdojo.style(\"someNode\", obj);\r\n\r\n\t\tif(arguments.length == 2){\r\n\t\t\treturn attr[typeof name == \"string\" ? \"get\" : \"set\"](node, name);\r\n\t\t}\r\n\t\treturn attr.set(node, name, value);\r\n\t};\r\n\r\n\t// mix-in dom-class\r\n\tdojo.hasClass = cls.contains;\r\n\tdojo.addClass = cls.add;\r\n\tdojo.removeClass = cls.remove;\r\n\tdojo.toggleClass = cls.toggle;\r\n\tdojo.replaceClass = cls.replace;\r\n\r\n\t// mix-in dom-construct\r\n\tdojo._toDom = dojo.toDom = ctr.toDom;\r\n\tdojo.place = ctr.place;\r\n\tdojo.create = ctr.create;\r\n\tdojo.empty = function(node){ ctr.empty(node); };\r\n\tdojo._destroyElement = dojo.destroy = function(node){ ctr.destroy(node); };\r\n\r\n\t// mix-in dom-geometry\r\n\tdojo._getPadExtents = dojo.getPadExtents = geom.getPadExtents;\r\n\tdojo._getBorderExtents = dojo.getBorderExtents = geom.getBorderExtents;\r\n\tdojo._getPadBorderExtents = dojo.getPadBorderExtents = geom.getPadBorderExtents;\r\n\tdojo._getMarginExtents = dojo.getMarginExtents = geom.getMarginExtents;\r\n\tdojo._getMarginSize = dojo.getMarginSize = geom.getMarginSize;\r\n\tdojo._getMarginBox = dojo.getMarginBox = geom.getMarginBox;\r\n\tdojo.setMarginBox = geom.setMarginBox;\r\n\tdojo._getContentBox = dojo.getContentBox = geom.getContentBox;\r\n\tdojo.setContentSize = geom.setContentSize;\r\n\tdojo._isBodyLtr = dojo.isBodyLtr = geom.isBodyLtr;\r\n\tdojo._docScroll = dojo.docScroll = geom.docScroll;\r\n\tdojo._getIeDocumentElementOffset = dojo.getIeDocumentElementOffset = geom.getIeDocumentElementOffset;\r\n\tdojo._fixIeBiDiScrollLeft = dojo.fixIeBiDiScrollLeft = geom.fixIeBiDiScrollLeft;\r\n\tdojo.position = geom.position;\r\n\r\n\tdojo.marginBox = function marginBox(/*DomNode|String*/node, /*Object?*/box){\r\n\t\t// summary:\r\n\t\t//\t\tGetter/setter for the margin-box of node.\r\n\t\t// description:\r\n\t\t//\t\tGetter/setter for the margin-box of node.\r\n\t\t//\t\tReturns an object in the expected format of box (regardless\r\n\t\t//\t\tif box is passed). The object might look like:\r\n\t\t//\t\t`{ l: 50, t: 200, w: 300: h: 150 }`\r\n\t\t//\t\tfor a node offset from its parent 50px to the left, 200px from\r\n\t\t//\t\tthe top with a margin width of 300px and a margin-height of\r\n\t\t//\t\t150px.\r\n\t\t// node:\r\n\t\t//\t\tid or reference to DOM Node to get/set box for\r\n\t\t// box:\r\n\t\t//\t\tIf passed, denotes that dojo.marginBox() should\r\n\t\t//\t\tupdate/set the margin box for node. Box is an object in the\r\n\t\t//\t\tabove format. All properties are optional if passed.\r\n\t\t// example:\r\n\t\t//\t\tRetrieve the margin box of a passed node\r\n\t\t//\t|\tvar box = dojo.marginBox(\"someNodeId\");\r\n\t\t//\t|\tconsole.dir(box);\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tSet a node's margin box to the size of another node\r\n\t\t//\t|\tvar box = dojo.marginBox(\"someNodeId\");\r\n\t\t//\t|\tdojo.marginBox(\"someOtherNode\", box);\r\n\t\treturn box ? geom.setMarginBox(node, box) : geom.getMarginBox(node); // Object\r\n\t};\r\n\r\n\tdojo.contentBox = function contentBox(/*DomNode|String*/node, /*Object?*/box){\r\n\t\t// summary:\r\n\t\t//\t\tGetter/setter for the content-box of node.\r\n\t\t// description:\r\n\t\t//\t\tReturns an object in the expected format of box (regardless if box is passed).\r\n\t\t//\t\tThe object might look like:\r\n\t\t//\t\t`{ l: 50, t: 200, w: 300: h: 150 }`\r\n\t\t//\t\tfor a node offset from its parent 50px to the left, 200px from\r\n\t\t//\t\tthe top with a content width of 300px and a content-height of\r\n\t\t//\t\t150px. Note that the content box may have a much larger border\r\n\t\t//\t\tor margin box, depending on the box model currently in use and\r\n\t\t//\t\tCSS values set/inherited for node.\r\n\t\t//\t\tWhile the getter will return top and left values, the\r\n\t\t//\t\tsetter only accepts setting the width and height.\r\n\t\t// node:\r\n\t\t//\t\tid or reference to DOM Node to get/set box for\r\n\t\t// box:\r\n\t\t//\t\tIf passed, denotes that dojo.contentBox() should\r\n\t\t//\t\tupdate/set the content box for node. Box is an object in the\r\n\t\t//\t\tabove format, but only w (width) and h (height) are supported.\r\n\t\t//\t\tAll properties are optional if passed.\r\n\t\treturn box ? geom.setContentSize(node, box) : geom.getContentBox(node); // Object\r\n\t};\r\n\r\n\tdojo.coords = function(/*DomNode|String*/node, /*Boolean?*/includeScroll){\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated: Use position() for border-box x/y/w/h\r\n\t\t//\t\tor marginBox() for margin-box w/h/l/t.\r\n\t\t//\r\n\t\t//\t\tReturns an object that measures margin-box (w)idth/(h)eight\r\n\t\t//\t\tand absolute position x/y of the border-box. Also returned\r\n\t\t//\t\tis computed (l)eft and (t)op values in pixels from the\r\n\t\t//\t\tnode's offsetParent as returned from marginBox().\r\n\t\t//\t\tReturn value will be in the form:\r\n\t\t//|\t\t\t{ l: 50, t: 200, w: 300: h: 150, x: 100, y: 300 }\r\n\t\t//\t\tDoes not act as a setter. If includeScroll is passed, the x and\r\n\t\t//\t\ty params are affected as one would expect in dojo.position().\r\n\t\tdojo.deprecated(\"dojo.coords()\", \"Use dojo.position() or dojo.marginBox().\");\r\n\t\tnode = dom.byId(node);\r\n\t\tvar s = style.getComputedStyle(node), mb = geom.getMarginBox(node, s);\r\n\t\tvar abs = geom.position(node, includeScroll);\r\n\t\tmb.x = abs.x;\r\n\t\tmb.y = abs.y;\r\n\t\treturn mb;\t// Object\r\n\t};\r\n\r\n\t// mix-in dom-prop\r\n\tdojo.getProp = prop.get;\r\n\tdojo.setProp = prop.set;\r\n\r\n\tdojo.prop = function(/*DomNode|String*/node, /*String|Object*/name, /*String?*/value){\r\n\t\t// summary:\r\n\t\t//\t\tGets or sets a property on an HTML element.\r\n\t\t// description:\r\n\t\t//\t\tHandles normalized getting and setting of properties on DOM\r\n\t\t//\t\tNodes. If 2 arguments are passed, and a the second argument is a\r\n\t\t//\t\tstring, acts as a getter.\r\n\t\t//\r\n\t\t//\t\tIf a third argument is passed, or if the second argument is a\r\n\t\t//\t\tmap of attributes, acts as a setter.\r\n\t\t//\r\n\t\t//\t\tWhen passing functions as values, note that they will not be\r\n\t\t//\t\tdirectly assigned to slots on the node, but rather the default\r\n\t\t//\t\tbehavior will be removed and the new behavior will be added\r\n\t\t//\t\tusing `dojo.connect()`, meaning that event handler properties\r\n\t\t//\t\twill be normalized and that some caveats with regards to\r\n\t\t//\t\tnon-standard behaviors for onsubmit apply. Namely that you\r\n\t\t//\t\tshould cancel form submission using `dojo.stopEvent()` on the\r\n\t\t//\t\tpassed event object instead of returning a boolean value from\r\n\t\t//\t\tthe handler itself.\r\n\t\t// node:\r\n\t\t//\t\tid or reference to the element to get or set the property on\r\n\t\t// name:\r\n\t\t//\t\tthe name of the property to get or set.\r\n\t\t// value:\r\n\t\t//\t\tThe value to set for the property\r\n\t\t// returns:\r\n\t\t//\t\twhen used as a getter, the value of the requested property\r\n\t\t//\t\tor null if that attribute does not have a specified or\r\n\t\t//\t\tdefault value;\r\n\t\t//\r\n\t\t//\t\twhen used as a setter, the DOM node\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t// get the current value of the \"foo\" property on a node\r\n\t\t//\t|\tdojo.prop(dojo.byId(\"nodeId\"), \"foo\");\r\n\t\t//\t|\t// or we can just pass the id:\r\n\t\t//\t|\tdojo.prop(\"nodeId\", \"foo\");\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t// use prop() to set the tab index\r\n\t\t//\t|\tdojo.prop(\"nodeId\", \"tabIndex\", 3);\r\n\t\t//\t|\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tSet multiple values at once, including event handlers:\r\n\t\t//\t|\tdojo.prop(\"formId\", {\r\n\t\t//\t|\t\t\"foo\": \"bar\",\r\n\t\t//\t|\t\t\"tabIndex\": -1,\r\n\t\t//\t|\t\t\"method\": \"POST\",\r\n\t\t//\t|\t\t\"onsubmit\": function(e){\r\n\t\t//\t|\t\t\t// stop submitting the form. Note that the IE behavior\r\n\t\t//\t|\t\t\t// of returning true or false will have no effect here\r\n\t\t//\t|\t\t\t// since our handler is connect()ed to the built-in\r\n\t\t//\t|\t\t\t// onsubmit behavior and so we need to use\r\n\t\t//\t|\t\t\t// dojo.stopEvent() to ensure that the submission\r\n\t\t//\t|\t\t\t// doesn't proceed.\r\n\t\t//\t|\t\t\tdojo.stopEvent(e);\r\n\t\t//\t|\r\n\t\t//\t|\t\t\t// submit the form with Ajax\r\n\t\t//\t|\t\t\tdojo.xhrPost({ form: \"formId\" });\r\n\t\t//\t|\t\t}\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tStyle is s special case: Only set with an object hash of styles\r\n\t\t//\t|\tdojo.prop(\"someNode\",{\r\n\t\t//\t|\t\tid:\"bar\",\r\n\t\t//\t|\t\tstyle:{\r\n\t\t//\t|\t\t\twidth:\"200px\", height:\"100px\", color:\"#000\"\r\n\t\t//\t|\t\t}\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tAgain, only set style as an object hash of styles:\r\n\t\t//\t|\tvar obj = { color:\"#fff\", backgroundColor:\"#000\" };\r\n\t\t//\t|\tdojo.prop(\"someNode\", \"style\", obj);\r\n\t\t//\t|\r\n\t\t//\t|\t// though shorter to use `dojo.style()` in this case:\r\n\t\t//\t|\tdojo.style(\"someNode\", obj);\r\n\r\n\t\tif(arguments.length == 2){\r\n\t\t\treturn prop[typeof name == \"string\" ? \"get\" : \"set\"](node, name);\r\n\t\t}\r\n\t\t// setter\r\n\t\treturn prop.set(node, name, value);\r\n\t};\r\n\r\n\t// mix-in dom-style\r\n\tdojo.getStyle = style.get;\r\n\tdojo.setStyle = style.set;\r\n\tdojo.getComputedStyle = style.getComputedStyle;\r\n\tdojo.__toPixelValue = dojo.toPixelValue = style.toPixelValue;\r\n\r\n\tdojo.style = function(node, name, value){\r\n\t\t// summary:\r\n\t\t//\t\tAccesses styles on a node. If 2 arguments are\r\n\t\t//\t\tpassed, acts as a getter. If 3 arguments are passed, acts\r\n\t\t//\t\tas a setter.\r\n\t\t// description:\r\n\t\t//\t\tGetting the style value uses the computed style for the node, so the value\r\n\t\t//\t\twill be a calculated value, not just the immediate node.style value.\r\n\t\t//\t\tAlso when getting values, use specific style names,\r\n\t\t//\t\tlike \"borderBottomWidth\" instead of \"border\" since compound values like\r\n\t\t//\t\t\"border\" are not necessarily reflected as expected.\r\n\t\t//\t\tIf you want to get node dimensions, use `dojo.marginBox()`,\r\n\t\t//\t\t`dojo.contentBox()` or `dojo.position()`.\r\n\t\t// node: DOMNode|String\r\n\t\t//\t\tid or reference to node to get/set style for\r\n\t\t// name: String|Object?\r\n\t\t//\t\tthe style property to set in DOM-accessor format\r\n\t\t//\t\t(\"borderWidth\", not \"border-width\") or an object with key/value\r\n\t\t//\t\tpairs suitable for setting each property.\r\n\t\t// value: String?\r\n\t\t//\t\tIf passed, sets value on the node for style, handling\r\n\t\t//\t\tcross-browser concerns.  When setting a pixel value,\r\n\t\t//\t\tbe sure to include \"px\" in the value. For instance, top: \"200px\".\r\n\t\t//\t\tOtherwise, in some cases, some browsers will not apply the style.\r\n\t\t// returns:\r\n\t\t//\t\twhen used as a getter, return the computed style of the node if passing in an ID or node,\r\n\t\t//\t\tor return the normalized, computed value for the property when passing in a node and a style property\r\n\t\t// example:\r\n\t\t//\t\tPassing only an ID or node returns the computed style object of\r\n\t\t//\t\tthe node:\r\n\t\t//\t|\tdojo.style(\"thinger\");\r\n\t\t// example:\r\n\t\t//\t\tPassing a node and a style property returns the current\r\n\t\t//\t\tnormalized, computed value for that property:\r\n\t\t//\t|\tdojo.style(\"thinger\", \"opacity\"); // 1 by default\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tPassing a node, a style property, and a value changes the\r\n\t\t//\t\tcurrent display of the node and returns the new computed value\r\n\t\t//\t|\tdojo.style(\"thinger\", \"opacity\", 0.5); // == 0.5\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tPassing a node, an object-style style property sets each of the values in turn and returns the computed style object of the node:\r\n\t\t//\t|\tdojo.style(\"thinger\", {\r\n\t\t//\t|\t\t\"opacity\": 0.5,\r\n\t\t//\t|\t\t\"border\": \"3px solid black\",\r\n\t\t//\t|\t\t\"height\": \"300px\"\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tWhen the CSS style property is hyphenated, the JavaScript property is camelCased.\r\n\t\t//\t\tfont-size becomes fontSize, and so on.\r\n\t\t//\t|\tdojo.style(\"thinger\",{\r\n\t\t//\t|\t\tfontSize:\"14pt\",\r\n\t\t//\t|\t\tletterSpacing:\"1.2em\"\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tdojo/NodeList implements .style() using the same syntax, omitting the \"node\" parameter, calling\r\n\t\t//\t\tdojo.style() on every element of the list. See: `dojo/query` and `dojo/NodeList`\r\n\t\t//\t|\tdojo.query(\".someClassName\").style(\"visibility\",\"hidden\");\r\n\t\t//\t|\t// or\r\n\t\t//\t|\tdojo.query(\"#baz > div\").style({\r\n\t\t//\t|\t\topacity:0.75,\r\n\t\t//\t|\t\tfontSize:\"13pt\"\r\n\t\t//\t|\t});\r\n\r\n\t\tswitch(arguments.length){\r\n\t\t\tcase 1:\r\n\t\t\t\treturn style.get(node);\r\n\t\t\tcase 2:\r\n\t\t\t\treturn style[typeof name == \"string\" ? \"get\" : \"set\"](node, name);\r\n\t\t}\r\n\t\t// setter\r\n\t\treturn style.set(node, name, value);\r\n\t};\r\n\r\n\treturn dojo;\r\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n\n/***/ 265:\n/*!*************************************!*\\\n  !*** ../dojox/string/BidiEngine.js ***!\n  \\*************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/Stateful */ 61)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang,declare,Stateful) {\n\tlang.getObject(\"string\", true, dojox);\n\n\tvar BidiEngine = declare(\"dojox.string.BidiEngine\", Stateful, {\n\t\t// summary:\n\t\t//\t\tThis class provides a bidi transformation engine, i.e.\n\t\t//\t\tfunctions for reordering and shaping bidi text.\n\t\t// description:\n\t\t//\t\tBidi stands for support for languages with a bidirectional script. \n\t\t//\n\t\t//\t\tUsually Unicode Bidi Algorithm used by OS platform (and web browsers) is capable of properly \n\t\t//\t\ttransforming Bidi text and as a result it is adequately displayed on the screen. \n\t\t//\t\tHowever, in some situations, Unicode Bidi Algorithm is not invoked or is not properly applied.  \n\t\t//\t\tThis may occur in situation in which software responsible for rendering the text is not leveraging \n\t\t//\t\tUnicode Bidi Algorithm implemented by OS (e.g. GFX renderers).\n\t\t//\n\t\t//\t\tBidi engine provided in this class implements Unicode Bidi Algorithm as specified at\n\t\t//\t\thttp://www.unicode.org/reports/tr9/.\n\t\t//\n\t\t//\t\tFor more information on basic Bidi concepts please read\n\t\t//\t\t\"Bidirectional script support - A primer\" available from\n\t\t//\t\thttp://www.ibm.com/developerworks/websphere/library/techarticles/bidi/bidigen.html.\n\t\t//\n\t\t//\t\tAs of February 2011, Bidi engine has following limitations:\n\t\t//\n\t\t//\t\t1. No support for following numeric shaping options:\n\t\t//\t\t\t- H - Hindi,\n\t\t//\t\t\t- C - Contextual, \n\t\t//\t\t\t- N - Nominal.\n\t\t//\t\t2. No support for following shaping options:\n\t\t//\t\t\t- I - Initial shaping,\n\t\t//\t\t\t- M - Middle shaping,\n\t\t//\t\t\t- F - Final shaping,\n\t\t//\t\t\t- B - Isolated shaping.\n\t\t//\t\t3. No support for LRE/RLE/LRO/RLO/PDF (they are handled like neutrals).\n\t\t//\t\t4. No support for Windows compatibility.\n\t\t//\t\t5. No support for  insert/remove marks.\n\t\t//\t\t6. No support for code pages. \n\t\t//\t\t\t\n\t\t\n\t\t// Input Bidi layout in which inputText is passed to the function.\n\t\tinputFormat: \"ILYNN\",\n\t\t\n\t\t// Output Bidi layout to which inputText should be transformed.\n\t\toutputFormat: \"VLNNN\",\n\n\t\t// Array, containing positions of each character from the source text in the resulting text. \n\t\tsourceToTarget: [],\n\t\t\n\t\t// Array, containing positions of each character from the resulting text in the source text. \n\t\ttargetToSource: [],\n\t\t\n\t\t// Array, containing bidi level of each character from the source text\n\t\tlevels: [],\n\n\t\tbidiTransform: function (/*String*/text, /*String*/formatIn, /*String*/formatOut) {\n\t\t\t// summary:\n\t\t\t//\t\tCentral public API for Bidi engine. Transforms the text according to formatIn, formatOut \n\t\t\t//\t\tparameters. If formatIn or formatOut parametrs are not valid throws an exception.\n\t\t\t// inputText:\n\t\t\t//\t\tInput text subject to application of Bidi transformation.\n\t\t\t// formatIn:\n\t\t\t//\t\tInput Bidi layout in which inputText is passed to the function.\n\t\t\t// formatOut:\n\t\t\t//\t\tOutput Bidi layout to which inputText should be transformed.\n\t\t\t// description:\n\t\t\t//\t\tBoth formatIn and formatOut parameters are 5 letters long strings. \n\t\t\t//\t\tFor example - \"ILYNN\". Each letter is associated with specific attribute of Bidi layout. \n\t\t\t//\t\tPossible and default values for each one of the letters are provided below:\n\t\t\t//\n\t\t\t//\t\tFirst letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t1\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tOrdering Schema.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- I - Implicit (Logical).\n\t\t\t//\t\t\t- V - Visual.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tI\n\t\t\t//\n\t\t\t//\t\tSecond letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t2\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tOrientation.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- L - Left To Right.\n\t\t\t//\t\t\t- R - Right To Left.\n\t\t\t//\t\t\t- C - Contextual Left to Right.\n\t\t\t//\t\t\t- D - Contextual Right to Left.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tL\t\t\n\t\t\t//\n\t\t\t//\t\tThird letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t3\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tSymmetric Swapping.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- Y - Symmetric swapping is on.\n\t\t\t//\t\t\t- N - Symmetric swapping is off.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tY\t\t\n\t\t\t//\n\t\t\t//\t\tFourth letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t4\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tShaping.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- S - Text is shaped.\n\t\t\t//\t\t\t- N - Text is not shaped.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tN\t\t\t\t\n\t\t\t//\n\t\t\t//\t\tFifth letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t5\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tNumeric Shaping.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- N - Nominal.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tN\t\t\t\t\n\t\t\t//\n\t\t\t//\t\tThe output of this function is original text (passed via first argument) transformed from \n\t\t\t//\t\tinput Bidi layout (second argument) to output Bidi layout (last argument). \n\t\t\t//\n\t\t\t//\t\tSample call:\n\t\t\t//\t|\tmytext = bidiTransform(\"HELLO WORLD\", \"ILYNN\", \"VLYNN\");\n\t\t\t//\t\tIn this case, \"HELLO WORLD\" text is transformed from Logical - LTR to Visual - LTR Bidi layout \n\t\t\t//\t\twith default values for symmetric swapping (Yes), shaping (Not shaped) and numeric shaping \n\t\t\t//\t\t(Nominal).\n\t\t\t// returns: String\n\t\t\t//\t\tOriginal text transformed from input Bidi layout (second argument)\n\t\t\t//\t\tto output Bidi layout (last argument).\n\t\t\t//\t\tThrows an exception if the bidi layout strings are not valid.\n\t\t\t// tags:\n\t\t\t//\t\tpublic\n\n\t\t\tthis.sourceToTarget = [];\n\t\t\tthis.targetToSource = [];\n\t\t\tif (!text) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tinitMaps(this.sourceToTarget, this.targetToSource, text.length);\n\t\t\tif (!this.checkParameters(formatIn, formatOut)) {\n\t\t\t\treturn text;\n\t\t\t}\n\t\t\t\n\t\t\tformatIn = this.inputFormat;\n\t\t\tformatOut = this.outputFormat;\n\t\t\tvar result = text;\n\t\t\tvar bdx = BDX;\n\t\t\tvar orientIn = getOrientation(formatIn.charAt(1)),\n\t\t\t\torientOut = getOrientation(formatOut.charAt(1)),\n\t\t\t\tosIn = (formatIn.charAt(0) === \"I\") ? \"L\" : formatIn.charAt(0),\n\t\t\t\tosOut = (formatOut.charAt(0) === \"I\") ? \"L\" : formatOut.charAt(0),\n\t\t\t\tinFormat = osIn + orientIn,\n\t\t\t\toutFormat = osOut + orientOut,\n\t\t\t\tswap = formatIn.charAt(2) + formatOut.charAt(2);\n\t\n\t\t\tbdx.defInFormat = inFormat;\n\t\t\tbdx.defOutFormat = outFormat;\n\t\t\tbdx.defSwap = swap;\n\n\t\t\tvar stage1Text = doBidiReorder(text, inFormat, outFormat, swap, bdx),\n\t\t\t\tisRtl = false;\n\n\t\t\tif (formatOut.charAt(1) === \"R\") {\n\t\t\t\tisRtl = true;\n\t\t\t} else if (formatOut.charAt(1) === \"C\" || formatOut.charAt(1) === \"D\") {\n\t\t\t\tisRtl = this.checkContextual(stage1Text);\n\t\t\t}\n\t\t\t\n\t\t\tthis.sourceToTarget = stMap;\n\t\t\tthis.targetToSource = reverseMap(this.sourceToTarget);\n\t\t\ttsMap = this.targetToSource;\n\t\t\t\n\t\t\tif (formatIn.charAt(3) === formatOut.charAt(3)) {\n\t\t\t\tresult = stage1Text;\n\t\t\t} else if (formatOut.charAt(3) === \"S\") {\n\t\t\t\tresult = shape(isRtl, stage1Text, true);\n\t\t\t} else {  //formatOut.charAt(3) === \"N\"\n\t\t\t\tresult = deshape(stage1Text, isRtl, true);\n\t\t\t}\n\t\t\tthis.sourceToTarget = stMap;\n\t\t\tthis.targetToSource = tsMap;\n\t\t\tthis.levels = lvMap;\n\t\t\treturn result;\n\t\t},\n\n\t\t_inputFormatSetter: function (format) {\n\t\t\tif (!validFormat.test(format)) {\n\t\t\t\tthrow new Error(\"dojox/string/BidiEngine: the bidi layout string is wrong!\");\n\t\t\t}\n\t\t\tthis.inputFormat = format;\n\t\t},\n\n\t\t_outputFormatSetter: function (format) {\n\t\t\tif (!validFormat.test(format)) {\n\t\t\t\tthrow new Error(\"dojox/string/BidiEngine: the bidi layout string is wrong!\");\n\t\t\t}\n\t\t\tthis.outputFormat = format;\n\t\t},\n\n\t\tcheckParameters: function (/*String*/formatIn, /*String*/formatOut) {\n\t\t\t// summary:\n\t\t\t//\t\tChecks layout parameters.\n\t\t\t// formatIn:\n\t\t\t//\t\tInput Bidi layout in which inputText is passed to the function.\n\t\t\t// formatOut:\n\t\t\t//\t\tOutput Bidi layout to which inputText should be transformed.\t\t\t\n\t\t\t// description:\n\t\t\t//\t\tChecks, that layout parameters are different and contain allowed values.\n\t\t\t//\t\tAllowed values for format string are:\n\t\t\t//\t\t\t- 1st letter: I, V\n\t\t\t//\t\t\t- 2nd letter: L, R, C, D\n\t\t\t//\t\t\t- 3rd letter: Y, N\n\t\t\t//\t\t\t- 4th letter: S, N\n\t\t\t//\t\t\t- 5th letter: N\n\t\t\t// returns: /*Boolean*/\n\t\t\t//\t\ttrue - if layout parameters are valid.\n\t\t\t//\t\tfalse - otherwise. \n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\t\n\t\t\tif (!formatIn) {\n\t\t\t\tformatIn = this.inputFormat;\n\t\t\t} else {\n\t\t\t\tthis.set(\"inputFormat\", formatIn);\n\t\t\t}\n\t\t\tif (!formatOut) {\n\t\t\t\tformatOut = this.outputFormat;\n\t\t\t} else {\n\t\t\t\tthis.set(\"outputFormat\", formatOut);\n\t\t\t}\n\t\t\tif (formatIn === formatOut) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\tcheckContextual: function (/*String*/text) {\n\t\t\t// summary:\n\t\t\t//\t\tDetermine the base direction of a bidi text according\n\t\t\t//\t\tto its first strong directional character.\n\t\t\t// text: \n\t\t\t//\t\tThe text to check.\n\t\t\t// returns: /*String*/\n\t\t\t//\t\t\"ltr\" or \"rtl\" according to the first strong character.\n\t\t\t//\t\tIf there is no strong character, returns the value of the\n\t\t\t//\t\tdocument dir property.\n\t\t\t// tags:\n\t\t\t//\t\tpublic\t\t\n\t\t\tvar dir = firstStrongDir(text);\n\t\t\tif (dir !== \"ltr\" && dir !== \"rtl\") {\n\t\t\t\ttry {\n\t\t\t\t\tdir = document.dir.toLowerCase();\n\t\t\t\t} catch (e) {\n\t\t\t\t}\n\t\t\t\tif (dir !== \"ltr\" && dir !== \"rtl\") {\n\t\t\t\t\tdir = \"ltr\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dir;\n\t\t},\n\n\t\thasBidiChar: function (/*String*/text) {\n\t\t\t// summary:\n\t\t\t//\t\tReturn true if text contains RTL directed character.\n\t\t\t// text:\n\t\t\t//\t\tThe source string.\n\t\t\t// description:\n\t\t\t//\t\tSearches for RTL directed character. \n\t\t\t//\t\tReturns true if found, else returns false.\n\t\t\t// returns: /*Boolean*/\n\t\t\t//\t\ttrue - if text has a RTL directed character.\n\t\t\t//\t\tfalse - otherwise. \n\t\t\t// tags:\n\t\t\t//\t\tpublic\n\t\n\t\t    return bidiChars.test(text);\n\t\t}\n\t});\n\n\tfunction doBidiReorder(/*String*/text, /*String*/inFormat,\n\t\t\t\t/*String*/outFormat, /*String*/swap, /*Object*/bdx) {\n\t\t// summary:\n\t\t//\t\tReorder the source text according to the bidi attributes\n\t\t//\t\tof source and result.\n\t\t// text:\n\t\t//\t\tThe text to reorder.\n\t\t// inFormat:\n\t\t//\t\tOrdering scheme and base direction of the source text.\n\t\t//\t\tCan be \"LLTR\", \"LRTL\", \"LCLR\", \"LCRL\", \"VLTR\", \"VRTL\",\n\t\t//\t\t\"VCLR\", \"VCRL\".\n\t\t//\t\tThe first letter is \"L\" for logical ordering scheme,\n\t\t//\t\t\"V\" for visual ordering scheme.\n\t\t//\t\tThe other letters specify the base direction.\n\t\t//\t\t\"CLR\" means contextual direction defaulting to LTR if\n\t\t//\t\tthere is no strong letter.\n\t\t//\t\t\"CRL\" means contextual direction defaulting to RTL if\n\t\t//\t\tthere is no strong letter.\n\t\t//\t\tThe initial value is \"LLTR\", if none, the initial value is used.\n\t\t// outFormat:\n\t\t//\t\tRequired ordering scheme and base direction of the\n\t\t//\t\tresult. Has the same format as inFormat.\n\t\t//\t\tIf none, the initial value \"VLTR\" is used.\n\t\t// swap:\n\t\t//\t\tSymmetric swapping attributes of source and result.\n\t\t//\t\tThe allowed values can be \"YN\", \"NY\", \"YY\" and \"NN\".\n\t\t//\t\tThe first letter reflects the symmetric swapping attribute\n\t\t//\t\tof the source, the second letter that of the result.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\n\t\t// returns:\n\t\t//\t\tText reordered according to source and result attributes.\n\t\t\n\t\tvar params = prepareReorderingParameters(text, {inFormat: inFormat, outFormat: outFormat, swap: swap}, bdx);\n\t\tif (params.inFormat === params.outFormat) {\n\t\t\treturn text;\n\t\t}\n\t\tinFormat = params.inFormat;\n\t\toutFormat = params.outFormat;\n\t\tswap = params.swap;\n\t\tvar inOrdering = inFormat.substring(0, 1),\n\t\tinOrientation = inFormat.substring(1, 4),\n\t\toutOrdering = outFormat.substring(0, 1),\n\t\toutOrientation = outFormat.substring(1, 4);\n\t\tbdx.inFormat = inFormat;\n\t\tbdx.outFormat = outFormat;\n\t\tbdx.swap = swap;\n\t\tif ((inOrdering === \"L\") && (outFormat === \"VLTR\")) { //core cases\n\t\t\t//cases: LLTR->VLTR, LRTL->VLTR\n\t\t\tif (inOrientation === \"LTR\") {\n\t\t\t\tbdx.dir = LTR;\n\t\t\t\treturn doReorder(text, bdx);\n\t\t\t}\n\t\t\tif (inOrientation === \"RTL\") {\n\t\t\t\tbdx.dir = RTL;\n\t\t\t\treturn doReorder(text, bdx);\n\t\t\t}\n\t\t}\n\t\tif ((inOrdering === \"V\") && (outOrdering === \"V\")) {\n\t\t\t//inOrientation != outOrientation\n\t\t\t//cases: VRTL->VLTR, VLTR->VRTL\n\t\t\tbdx.dir = inOrientation === \"RTL\"? RTL : LTR;\n\t\t\treturn invertStr(text, bdx);\n\t\t}\n\t\tif ((inOrdering === \"L\") && (outFormat === \"VRTL\")) {\n\t\t\t//cases: LLTR->VRTL, LRTL->VRTL\n\t\t\tif (inOrientation === \"LTR\") {\n\t\t\t\tbdx.dir = LTR;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t} else {\n\t\t\t\t//inOrientation == RTL\n\t\t\t\tbdx.dir = RTL;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t}\n\t\t\treturn invertStr(text);\n\t\t}\n\t\tif ((inFormat === \"VLTR\") && (outFormat === \"LLTR\")) {\n\t\t\t//case: VLTR->LLTR\n\t\t\tbdx.dir = LTR;\n\t\t\treturn doReorder(text, bdx);\n\t\t}\n\t\tif ((inOrdering === \"V\") && (outOrdering === \"L\") && (inOrientation !== outOrientation)) {\n\t\t\t//cases: VLTR->LRTL, VRTL->LLTR\n\t\t\ttext = invertStr(text);\n\t\t\treturn (inOrientation === \"RTL\") ? doBidiReorder(text, \"LLTR\", \"VLTR\", swap, bdx) :\n\t\t\t\t\t\t\t\t\t\t\t\tdoBidiReorder(text, \"LRTL\", \"VRTL\", swap, bdx);\n\t\t}\n\t\tif ((inFormat === \"VRTL\") && (outFormat === \"LRTL\")) {\n\t\t\t//case VRTL->LRTL\n\t\t\treturn doBidiReorder(text, \"LRTL\", \"VRTL\", swap, bdx);\n\t\t}\n\t\tif ((inOrdering === \"L\") && (outOrdering === \"L\")) {\n\t\t\t//inOrientation != outOrientation\n\t\t\t//cases: LRTL->LLTR, LLTR->LRTL\n\t\t\tvar saveSwap = bdx.swap;\n\t\t\tbdx.swap = saveSwap.substr(0, 1) + \"N\";\n\t\t\tif (inOrientation === \"RTL\") {\n\t\t\t\t//LRTL->LLTR\n\t\t\t\tbdx.dir = RTL;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t\tbdx.swap = \"N\" + saveSwap.substr(1, 2);\n\t\t\t\tbdx.dir = LTR;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t} else { //LLTR->LRTL\n\t\t\t\tbdx.dir = LTR;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t\tbdx.swap = \"N\" + saveSwap.substr(1, 2);\n\t\t\t\ttext = doBidiReorder(text, \"VLTR\", \"LRTL\", bdx.swap, bdx);\n\t\t\t}\n\t\t\treturn text;\n\t\t}\n\t}\n\t\n\tfunction prepareReorderingParameters(/*String*/text, /*Object*/params, /*Object*/bdx) {\n\t\t// summary:\n\t\t//\t\tPrepare reordering parameters\n\t\t// text:\n\t\t//\t\tThe text to reorder.\n\t\t// params:\n\t\t//      Object, containing reordering parameters: \n\t\t//         - inFormat: Ordering scheme and base direction of the source text.\n\t\t//         - outFormat: Required ordering scheme and base direction of the result.\n\t\t//         - swap: Symmetric swapping attributes of source and result.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\t\t\n\t\t// tags:\n\t\t//\t\tprivate\n\t\t\n\t\tif (params.inFormat === undefined) {\n\t\t\tparams.inFormat = bdx.defInFormat;\n\t\t}\n\t\tif (params.outFormat === undefined) {\n\t\t\tparams.outFormat = bdx.defOutFormat;\n\t\t}\n\t\tif (params.swap === undefined) {\n\t\t\tparams.swap = bdx.defSwap;\n\t\t}\n\t\tif (params.inFormat === params.outFormat) {\n\t\t\treturn params;\n\t\t}\n\t\tvar dir, inOrdering = params.inFormat.substring(0, 1),\n\t\tinOrientation = params.inFormat.substring(1, 4),\n\t\toutOrdering = params.outFormat.substring(0, 1),\n\t\toutOrientation = params.outFormat.substring(1, 4);\n\t\tif (inOrientation.charAt(0) === \"C\") {\n\t\t\tdir = firstStrongDir(text);\n\t\t\tif (dir === \"ltr\" || dir === \"rtl\") {\n\t\t\t\tinOrientation = dir.toUpperCase();\n\t\t\t} else {\n\t\t\t\tinOrientation = params.inFormat.charAt(2) === \"L\" ? \"LTR\" : \"RTL\";\n\t\t\t}\n\t\t\tparams.inFormat = inOrdering + inOrientation;\n\t\t}\n\t\tif (outOrientation.charAt(0) === \"C\") {\n\t\t\tdir = firstStrongDir(text);\n\t\t\tif (dir === \"rtl\") {\n\t\t\t\toutOrientation = \"RTL\";\n\t\t\t} else if (dir === \"ltr\") {\n\t\t\t\tdir = lastStrongDir(text);\n\t\t\t\toutOrientation = dir.toUpperCase();\n\t\t\t} else {\n\t\t\t\toutOrientation = params.outFormat.charAt(2) === \"L\" ? \"LTR\" : \"RTL\";\n\t\t\t}\n\t\t\tparams.outFormat = outOrdering + outOrientation;\n\t\t}\n\t\treturn params;\n\t}\n\n\tfunction shape(/*boolean*/rtl, /*String*/text, /*boolean*/compress) {\n\t\t// summary:\n\t\t//\t\tShape the source text.\n\t\t// rtl:\n\t\t//\t\tFlag indicating if the text is in RTL direction (logical\n\t\t//\t\tdirection for Arabic words).\n\t\t// text:\n\t\t//\t\tThe text to shape.\n\t\t// compress:\n\t\t//\t\tA flag indicates to insert extra space after the lam alef compression\n\t\t//\t\tto preserve the buffer size or not insert an extra space which will lead\n\t\t//\t\tto decrease the buffer size. This option can be:\n\t\t//\n\t\t//\t\t- true (default) to not insert extra space after compressing Lam+Alef into one character Lamalef\n\t\t//\t\t- false to insert an extra space after compressed Lamalef to preserve the buffer size\n\t\t// returns:\n\t\t//\t\ttext shaped.\n\t\t// tags:\n\t\t//\t\tprivate.\n\t\t\n\t\tif (text.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (rtl === undefined) {\n\t\t\trtl = true;\n\t\t}\n\t\tif (compress === undefined) {\n\t\t\tcompress = true;\n\t\t}\n\t\ttext = String(text);\n\t\t\n\t\tvar str06 = text.split(\"\"),\n\t\t\tIx = 0,\n\t\t\tstep = +1,\n\t\t\tnIEnd = str06.length;\n\t\tif (!rtl) {\n\t\t\tIx = str06.length - 1;\n\t\t\tstep = -1;\n\t\t\tnIEnd = 1;\n\t\t}\n\t\tvar compressArray = doShape(str06, Ix, step, nIEnd, compress);\n\t\tvar outBuf = \"\";\n\t\tfor (var idx = 0; idx < str06.length; idx++) {\n\t\t\tif (!(compress && indexOf(compressArray, compressArray.length, idx) > -1)) {\n\t\t\t\toutBuf += str06[idx];\n\t\t\t} else {\n\t\t\t\tupdateMap(tsMap, idx, !rtl, -1);\n\t\t\t\tstMap.splice(idx, 1);\n\t\t\t}\n\t\t}\n\t\treturn outBuf;\n\t}\n\t\n\tfunction doShape(str06, Ix, step, nIEnd, compress) {\n\t\t// summary:\n\t\t//\t\tShape the source text.\n\t\t// str06:\n\t\t//\t\tArray containing source text\n\t\t// Ix:\n\t\t//\t\tIndex of the first handled element\n\t\t// step:\n\t\t//\t\tdirection of the process\n\t\t// nIEnd:\n\t\t//\t\tIndex of the last handled element\n\t\t// compress:\n\t\t//\t\tA flag indicates to insert extra space after the lam alef compression\n\t\t//\t\tto preserve the buffer size or not insert an extra space which will lead\n\t\t//\t\tto decrease the buffer size.\t\t\n\t\t// returns:\n\t\t//\t\tArray, contained shaped text.\n\t\t// tags:\n\t\t//\t\tprivate.\n\t\t\n\t\tvar previousCursive = 0, compressArray = [], compressArrayIndx = 0;\n\t\tfor (var index = Ix; index * step < nIEnd; index = index + step) {\n\t\t\tif (isArabicAlefbet(str06[index]) || isArabicDiacritics(str06[index])) {\n\t\t\t\t// Arabic letter Lam\n\t\t\t\tif (str06[index] === \"\\u0644\" && isNextAlef(str06, (index + step), step, nIEnd)) {\n\t\t\t\t\tstr06[index] = (previousCursive === 0) ?\n\t\t\t\t\t\t\tgetLamAlefFE(str06[index + step], LamAlefInialTableFE) :\n\t\t\t\t\t\t\tgetLamAlefFE(str06[index + step], LamAlefMedialTableFE);\n\t\t\t\t\tindex += step;\n\t\t\t\t\tsetAlefToSpace(str06, index, step, nIEnd);\n\t\t\t\t\tif (compress) {\n\t\t\t\t\t\tcompressArray[compressArrayIndx] = index;\n\t\t\t\t\t\tcompressArrayIndx++;\n\t\t\t\t\t}\n\t\t\t\t\tpreviousCursive = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar currentChr = str06[index];\n\t\t\t\tif (previousCursive === 1) {\n\t\t\t\t\t// if next is Arabic\n\t\t\t\t\t// Character is in medial form\n\t\t\t\t\t// else character is in final form\n\t\t\t\t\tstr06[index] = (isNextArabic(str06, (index + step), step, nIEnd)) ?\n\t\t\t\t\t\tgetMedialFormCharacterFE(str06[index]) : getFormCharacterFE(str06[index], FinalForm);\n\t\t\t\t} else {\n\t\t\t\t\tif (isNextArabic(str06, (index + step), step, nIEnd) === true) {\n\t\t\t\t\t\t//character is in Initial form\n\t\t\t\t\t\tstr06[index] = getFormCharacterFE(str06[index], InitialForm);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr06[index] = getFormCharacterFE(str06[index], IsolatedForm);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//exam if the current character is cursive\n\t\t\t\tif (!isArabicDiacritics(currentChr)) {\n\t\t\t\t\tpreviousCursive = 1;\n\t\t\t\t}\n\t\t\t\tif (isStandAlonCharacter(currentChr) === true) {\n\t\t\t\t\tpreviousCursive = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpreviousCursive = 0;\n\t\t\t}\n\t\t}\n\t\treturn compressArray;\n\t}\n\t\n\tfunction firstStrongDir(/*String*/text) {\n\t\t// summary:\n\t\t//\t\tReturn the first strong character direction\n\t\t// text:\n\t\t//\t\tThe source string.\n\t\t// description:\n\t\t//\t\tSearches for first \"strong\" character. \n\t\t//\t\tReturns if strong character was found with the direction defined by this \n\t\t//\t\tcharacter, if no strong character was found returns an empty string.\n\t\t// returns: String\n\t\t//\t\t\"ltr\" - if the first strong character is Latin.\n\t\t//\t\t\"rtl\" - if the first strong character is RTL directed character.\n\t\t//\t\t\"\" - if the strong character wasn't found.\n\t\t// tags:\n\t\t//\t\tprivate\n\t\n\t\tvar fdc = /[A-Za-z\\u05d0-\\u065f\\u066a-\\u06ef\\u06fa-\\u07ff\\ufb1d-\\ufdff\\ufe70-\\ufefc]/.exec(text);\n\t\t// if found return the direction that defined by the character\n\t\treturn fdc ? (fdc[0] <= \"z\" ? \"ltr\" : \"rtl\") : \"\";\n\t}\n\t\n\tfunction lastStrongDir(text) {\n\t\t// summary:\n\t\t//\t\tReturn the last strong character direction\n\t\t// text:\n\t\t//\t\tThe source string.\n\t\t// description:\n\t\t//\t\tSearches for first (from the end) \"strong\" character. \n\t\t//\t\tReturns if strong character was found with the direction defined by this \n\t\t//\t\tcharacter, if no strong character was found returns an empty string.\n\t\t// tags:\n\t\t//\t\tprivate\t\t\n\t\tvar chars = text.split(\"\");\n\t\tchars.reverse();\n\t\treturn firstStrongDir(chars.join(\"\"));\n\t}\n\t\n\tfunction deshape(/*String*/text, /*boolean*/rtl, /*boolean*/consumeNextSpace) {\n\t\t// summary:\n\t\t//\t\tdeshape the source text.\n\t\t// text:\n\t\t//\t\tthe text to be deshape.\n\t\t// rtl:\n\t\t//\t\tflag indicating if the text is in RTL direction (logical\n\t\t//\t\tdirection for Arabic words).\n\t\t// consumeNextSpace:\n\t\t//\t\tflag indicating whether to consume the space next to the \n\t\t//\t\tthe lam alef if there is a space followed the Lamalef character to preserve the buffer size. \n\t\t//\t\tIn case there is no space next to the lam alef the buffer size will be increased due to the\n\t\t//\t\texpansion of the lam alef one character into lam+alef two characters\n\t\t// returns:\n\t\t//\t\ttext deshaped.\n\t\tif (text.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (consumeNextSpace === undefined) {\n\t\t\tconsumeNextSpace = true;\n\t\t}\n\t\tif (rtl === undefined) {\n\t\t\trtl = true;\n\t\t}\n\t\ttext = String(text);\n\t\n\t\tvar outBuf = \"\", strFE = [];\n\t\tstrFE = text.split(\"\");\n\t\tfor (var i = 0; i < text.length; i++) {\n\t\t\tvar increase = false;\n\t\t\tif (strFE[i] >= \"\\uFE70\" && strFE[i] < \"\\uFEFF\") {\n\t\t\t\tvar chNum = text.charCodeAt(i);\n\t\t\t\tif (strFE[i] >= \"\\uFEF5\" && strFE[i] <= \"\\uFEFC\") {\n\t\t\t\t\t//expand the LamAlef\n\t\t\t\t\tif (rtl) {\n\t\t\t\t\t\t//Lam + Alef\n\t\t\t\t\t\tif (i > 0 && consumeNextSpace && strFE[i - 1] === \" \") {\n\t\t\t\t\t\t\toutBuf = outBuf.substring(0, outBuf.length - 1) + \"\\u0644\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toutBuf += \"\\u0644\";\n\t\t\t\t\t\t\tincrease = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toutBuf += AlefTable[(chNum - 65269) / 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutBuf += AlefTable[(chNum - 65269) / 2];\n\t\t\t\t\t\toutBuf += \"\\u0644\";\n\t\t\t\t\t\tif (i + 1 < text.length && consumeNextSpace && strFE[i + 1] === \" \") {\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tincrease = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (increase) {\n\t\t\t\t\t\tupdateMap(tsMap, i, true, 1);\n\t\t\t\t\t\tstMap.splice(i, 0, stMap[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutBuf += FETo06Table[chNum - 65136];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutBuf += strFE[i];\n\t\t\t}\n\t\t}\n\t\treturn outBuf;\n\t}\n\t\n\tfunction doReorder(str, bdx) {\n\t\t// summary:\n\t\t//\t\tHelper to the doBidiReorder. Manages the UBA.\n\t\t// str:\n\t\t//\t\tthe string to reorder.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\t\t\n\t\t// returns:\n\t\t//\t\ttext reordered according to source and result attributes.\n\t\t// tags: \n\t\t//\t\tprivate\t\n\t\tvar chars = str.split(\"\"), levels = [];\n\t\n\t\tcomputeLevels(chars, levels, bdx);\n\t\tswapChars(chars, levels, bdx);\n\t\tinvertLevel(2, chars, levels, bdx);\n\t\tinvertLevel(1, chars, levels, bdx);\n\t\tlvMap = levels;\n\t\treturn chars.join(\"\");\n\t}\n\n\tfunction computeLevels(chars, levels, bdx) {\n\t\tvar len = chars.length,\n\t\t\timpTab = bdx.dir ? impTabRtl : impTabLtr,\n\t\t\tprevState = null, newClass = null, newLevel = null, newState = 0,\n\t\t\taction = null, cond = null, condPos = -1, i = null, ix = null,\n\t\t\ttypes = [],\n\t\t\tclasses = [];\n\t\tbdx.hiLevel = bdx.dir;\n\t\tbdx.lastArabic = false;\n\t\tbdx.hasUbatAl = false;\n\t\tbdx.hasUbatB = false;\n\t\tbdx.hasUbatS = false;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\ttypes[i] = getCharacterType(chars[i]);\n\t\t}\n\t\tfor (ix = 0; ix < len; ix++) {\n\t\t\tprevState = newState;\n\t\t\tclasses[ix] = newClass = getCharClass(chars, types, classes, ix, bdx);\n\t\t\tnewState = impTab[prevState][newClass];\n\t\t\taction = newState & 0xF0;\n\t\t\tnewState &= 0x0F;\n\t\t\tlevels[ix] = newLevel = impTab[newState][ITIL];\n\t\t\tif (action > 0) {\n\t\t\t\tif (action === 0x10) {\t// set conditional run to level 1\n\t\t\t\t\tfor (i = condPos; i < ix; i++) {\n\t\t\t\t\t\tlevels[i] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tcondPos = -1;\n\t\t\t\t} else {\t// 0x20 confirm the conditional run\n\t\t\t\t\tcondPos = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcond = impTab[newState][ITCOND];\n\t\t\tif (cond) {\n\t\t\t\tif (condPos === -1) {\n\t\t\t\t\tcondPos = ix;\n\t\t\t\t}\n\t\t\t} else {\t// unconditional level\n\t\t\t\tif (condPos > -1) {\n\t\t\t\t\tfor (i = condPos; i < ix; i++) {\n\t\t\t\t\t\tlevels[i] = newLevel;\n\t\t\t\t\t}\n\t\t\t\t\tcondPos = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (types[ix] === UBAT_B) {\n\t\t\t\tlevels[ix] = 0;\n\t\t\t}\n\t\t\tbdx.hiLevel |= newLevel;\n\t\t}\n\t\tif (bdx.hasUbatS) {\n\t\t\thandleUbatS(types, levels, len, bdx);\n\t\t}\n\t}\n\t\n\tfunction handleUbatS(types, levels, len, bdx) {\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tif (types[i] === UBAT_S) {\n\t\t\t\tlevels[i] = bdx.dir;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (types[j] === UBAT_WS) {\n\t\t\t\t\t\tlevels[j] = bdx.dir;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction swapChars(chars, levels, bdx) {\n\t\t// summary:\n\t\t//\t\tSwap characters with symmetrical mirroring as all kinds of parenthesis.\n\t\t//\t\t(When needed).\n\t\t// chars:\n\t\t//\t\tThe source string as Array of characters.\n\t\t// levels:\n\t\t//\t\tAn array (like hash) of flags for each character in the source string,\n\t\t//\t\tthat defines if swapping should be applied on the following character.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\n\t\t// tags:\n\t\t//\t\tprivate\t\n\t\n\t\tif (bdx.hiLevel === 0 || bdx.swap.substr(0, 1) === bdx.swap.substr(1, 2)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (var i = 0; i < chars.length; i++) {\n\t\t\tif (levels[i] === 1) {\n\t\t\t\tchars[i] = getMirror(chars[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getCharacterType(ch) {\n\t\t// summary:\n\t\t//\t\tReturn the type of the character.\n\t\t// ch:\n\t\t//\t\tThe character to be checked.\n\t\n\t\t// description:\n\t\t//\t\tCheck the type of the character according to MasterTable,\n\t\t//\t\ttype = LTR, RTL, neutral,Arabic-Indic digit etc.\n\t\t// tags:\n\t\t//\t\tprivate\t\t\t\n\t\tvar uc = ch.charCodeAt(0),\n\t\t\thi = MasterTable[uc >> 8];\n\t\treturn (hi < TBBASE) ? hi : UnicodeTable[hi - TBBASE][uc & 0xFF];\n\t}\n\t\n\tfunction invertStr(str, bdx) {\n\t\t// summary:\n\t\t//\t\tReturn the reversed string.\n\t\t// str:\n\t\t//\t\tThe string to be reversed.\n\t\t// description:\n\t\t//\t\tReverse the string str.\n\t\t// tags:\n\t\t//\t\tprivate\t\t\t\t\t\n\t\tvar chars = str.split(\"\");\n\t\tif (bdx) {\n\t\t\tvar levels = [];\n\t\t\tcomputeLevels(chars, levels, bdx);\n\t\t\tlvMap = levels;\n\t\t}\n\t\tchars.reverse();\n\t\tstMap.reverse();\n\t\treturn chars.join(\"\");\n\t}\n\t\n\tfunction indexOf(cArray, cLength, idx) {\n\t\tfor (var i = 0; i < cLength; i++) {\n\t\t\tif (cArray[i] === idx) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t\n\tfunction isArabicAlefbet(c) {\n\t\tfor (var i = 0; i < ArabicAlefBetIntervalsBegine.length; i++) {\n\t\t\tif (c >= ArabicAlefBetIntervalsBegine[i] && c <= ArabicAlefBetIntervalsEnd[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction isNextArabic(str06, index, step, nIEnd) {\n\t\twhile (((index) * step) < nIEnd && isArabicDiacritics(str06[index])) {\n\t\t\tindex += step;\n\t\t}\n\t\tif (((index) * step) < nIEnd && isArabicAlefbet(str06[index])) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction isNextAlef(str06, index, step, nIEnd) {\n\t\twhile (((index) * step) < nIEnd && isArabicDiacritics(str06[index])) {\n\t\t\tindex += step;\n\t\t}\n\t\tvar c = \" \";\n\t\tif (((index) * step) < nIEnd) {\n\t\t\tc = str06[index];\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < AlefTable.length; i++) {\n\t\t\tif (AlefTable[i] === c) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction invertLevel(lev, chars, levels, bdx) {\n\t\tif (bdx.hiLevel < lev) {\n\t\t\treturn;\n\t\t}\n\t\tif (lev === 1 && bdx.dir === RTL && !bdx.hasUbatB) {\n\t\t\tchars.reverse();\n\t\t\tstMap.reverse();\n\t\t\treturn;\n\t\t}\n\t\tvar len = chars.length, start = 0, end, lo, hi, tmp;\n\t\twhile (start < len) {\n\t\t\tif (levels[start] >= lev) {\n\t\t\t\tend = start + 1;\n\t\t\t\twhile (end < len && levels[end] >= lev) {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t\tfor (lo = start, hi = end - 1 ; lo < hi; lo++, hi--) {\n\t\t\t\t\ttmp = chars[lo];\n\t\t\t\t\tchars[lo] = chars[hi];\n\t\t\t\t\tchars[hi] = tmp;\n\t\t\t\t\ttmp = stMap[lo];\n\t\t\t\t\tstMap[lo] = stMap[hi];\n\t\t\t\t\tstMap[hi] = tmp;\n\t\t\t\t}\n\t\t\t\tstart = end;\n\t\t\t}\n\t\t\tstart++;\n\t\t}\n\t}\n\t\n\tfunction getCharClass(chars, types, classes, ix, bdx) {\n\t\t// summary:\n\t\t//\t\tReturn the class if ix character in chars.\n\t\t// chars:\n\t\t//\t\tThe source string as Array of characters.\n\t\t// types:\n\t\t//\t\tArray of types, for each character in chars.\n\t\t// classes:\n\t\t//\t\tArray of classes that already been solved. \n\t\t// ix:\n\t\t//\t\tthe index of checked character.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\t\t\n\t\t// tags:\n\t\t//\t\tprivate\t\t\t\t\n\t\tvar cType = types[ix],\n\t\t\tresults = {\n\t\t\t\tUBAT_L : function () { bdx.lastArabic = false; return UBAT_L; },\n\t\t\t\tUBAT_R : function () { bdx.lastArabic = false; return UBAT_R; },\n\t\t\t\tUBAT_ON : function () { return UBAT_ON; },\n\t\t\t\tUBAT_AN : function () { return UBAT_AN; },\n\t\t\t\tUBAT_EN : function () { return bdx.lastArabic ? UBAT_AN : UBAT_EN; },\n\t\t\t\tUBAT_AL : function () { bdx.lastArabic = true; bdx.hasUbatAl = true; return UBAT_R; },\n\t\t\t\tUBAT_WS : function () { return UBAT_ON; },\n\t\t\t\tUBAT_CS : function () {\n\t\t\t\t\t\t\t\t\t\tvar wType, nType;\n\t\t\t\t\t\t\t\t\t\tif (ix < 1 || (ix + 1) >= types.length ||\n\t\t\t\t\t\t\t\t\t\t\t((wType = classes[ix - 1]) !== UBAT_EN && wType !== UBAT_AN) ||\n\t\t\t\t\t\t\t\t\t\t\t((nType = types[ix + 1]) !== UBAT_EN && nType !== UBAT_AN)) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (bdx.lastArabic) {\n\t\t\t\t\t\t\t\t\t\t\tnType = UBAT_AN;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn nType === wType ? nType : UBAT_ON;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\tUBAT_ES : function () {\n\t\t\t\t\t\t\t\t\t\tvar wType = ix > 0 ? classes[ix - 1] : UBAT_B;\n\t\t\t\t\t\t\t\t\t\tif (wType === UBAT_EN && (ix + 1) < types.length && types[ix + 1] === UBAT_EN) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_EN;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\tUBAT_ET : function () {\n\t\t\t\t\t\t\t\t\t\tif (ix > 0 && classes[ix - 1] === UBAT_EN) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_EN;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (bdx.lastArabic) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvar i = ix + 1,\n\t\t\t\t\t\t\t\t\t\t\tlen = types.length;\n\t\t\t\t\t\t\t\t\t\twhile (i < len && types[i] === UBAT_ET) {\n\t\t\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (i < len && types[i] === UBAT_EN) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_EN;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\tUBAT_NSM : function () {\n\t\t\t\t\t\t\t\t\t\tif (bdx.inFormat === \"VLTR\") {\t// visual to implicit transformation\n\t\t\t\t\t\t\t\t\t\t\tvar len = types.length,\n\t\t\t\t\t\t\t\t\t\t\t\ti = ix + 1;\n\t\t\t\t\t\t\t\t\t\t\twhile (i < len && types[i] === UBAT_NSM) {\n\t\t\t\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (i < len) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar c = chars[ix],\n\t\t\t\t\t\t\t\t\t\t\t\t\trtlCandidate = (c >= 0x0591 && c <= 0x08FF) || c === 0xFB1E,\n\t\t\t\t\t\t\t\t\t\t\t\t\twType = types[i];\n\t\t\t\t\t\t\t\t\t\t\t\tif (rtlCandidate && (wType === UBAT_R || wType === UBAT_AL)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn UBAT_R;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (ix < 1 || types[ix - 1] === UBAT_B) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn classes[ix - 1];\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\tUBAT_B : function () { bdx.lastArabic = true; bdx.hasUbatB = true; return bdx.dir; },\n\t\t\t\tUBAT_S : function () { bdx.hasUbatS = true; return UBAT_ON; },\n\t\t\t\tUBAT_LRE : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_RLE : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_LRO : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_RLO : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_PDF : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_BN : function () { return UBAT_ON; }\n\t\t\t};\n\t\treturn results[TYPES_NAMES[cType]]();\n\t}\n\n\tfunction getMirror(c) {\n\t\t// summary:\n\t\t//\t\tCalculates the mirrored character of c\n\t\t// c:\n\t\t//\t\tThe character to be mirrored.\n\t\t// tags:\n\t\t//\t\tprivate\t\t\t\t\t\n\t\tvar mid, low = 0, high = SwapTable.length - 1;\n\t\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor((low + high) / 2);\n\t\t\tif (c < SwapTable[mid][0]) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (c > SwapTable[mid][0]) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\treturn SwapTable[mid][1];\n\t\t\t}\n\t\t}\n\t\treturn c;\n\t}\n\t\n\tfunction isStandAlonCharacter(c) {\n\t\tfor (var i = 0; i < StandAlonForm.length; i++) {\n\t\t\tif (StandAlonForm[i] === c) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction getMedialFormCharacterFE(c) {\n\t\tfor (var i = 0; i < BaseForm.length; i++) {\n\t\t\tif (c === BaseForm[i]) {\n\t\t\t\treturn MedialForm[i];\n\t\t\t}\n\t\t}\n\t\treturn c;\n\t}\n\t\n\tfunction getFormCharacterFE(/*char*/ c, /*char[]*/formArr) {\n\t\tfor (var i = 0; i < BaseForm.length; i++) {\n\t\t\tif (c === BaseForm[i]) {\n\t\t\t\treturn formArr[i];\n\t\t\t}\n\t\t}\n\t\treturn c;\n\t}\n\t\n\tfunction isArabicDiacritics(c) {\n\t\treturn\t(c >= \"\\u064b\" && c <= \"\\u0655\") ? true : false;\n\t}\n\t\n\tfunction getOrientation(/*Char*/ oc) {\n\t\tif (oc === \"L\") {\n\t\t\treturn \"LTR\";\n\t\t}\n\t\tif (oc === \"R\") {\n\t\t\treturn \"RTL\";\n\t\t}\n\t\tif (oc === \"C\") {\n\t\t\treturn \"CLR\";\n\t\t}\n\t\tif (oc === \"D\") {\n\t\t\treturn \"CRL\";\n\t\t}\n\t}\n\t\n\tfunction setAlefToSpace(str06, index, step, nIEnd) {\n\t\twhile (((index) * step) < nIEnd && isArabicDiacritics(str06[index])) {\n\t\t\tindex += step;\n\t\t}\n\t\tif (((index) * step) < nIEnd) {\n\t\t\tstr06[index] = \" \";\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction getLamAlefFE(alef06, LamAlefForm) {\n\t\tfor (var i = 0; i < AlefTable.length; i++) {\n\t\t\tif (alef06 === AlefTable[i]) {\n\t\t\t\treturn LamAlefForm[i];\n\t\t\t}\n\t\t}\n\t\treturn alef06;\n\t}\n\n\tfunction initMaps(map1, map2, length) {\n\t\tstMap = [];\n\t\tlvMap = [];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tmap1[i] = i;\n\t\t\tmap2[i] = i;\n\t\t\tstMap[i] = i;\n\t\t}\n\t}\n\n\tfunction reverseMap(sourceMap) {\n\t\tvar map = new Array(sourceMap.length);\n\t\tfor (var i = 0; i < sourceMap.length; i++) {\n\t\t\tmap[sourceMap[i]] = i;\n\t\t}\n\t\treturn map;\n\t}\n\n\tfunction updateMap(map, value, isGreater, update) {\n\t\tfor (var i = 0; i < map.length; i++) {\n\t\t\tif (map[i] > value || (!isGreater && map[i] === value)) {\n\t\t\t\tmap[i] += update;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar stMap = [];\n\tvar tsMap = [];\n\tvar lvMap = [];\n\t\t\n\tvar\tBDX = {\n\t\t\tdir: 0,\n\t\t\tdefInFormat: \"LLTR\",\n\t\t\tdefoutFormat: \"VLTR\",\n\t\t\tdefSwap: \"YN\",\n\t\t\tinFormat: \"LLTR\",\n\t\t\toutFormat: \"VLTR\",\n\t\t\tswap: \"YN\",\n\t\t\thiLevel: 0,\n\t\t\tlastArabic: false,\n\t\t\thasUbatAl: false,\n\t\t\thasBlockSep: false,\n\t\t\thasSegSep: false\n\t\t};\n\t\n\tvar ITIL = 5;\n\t\n\tvar ITCOND = 6;\n\t\n\tvar LTR = 0;\n\t\n\tvar RTL = 1;\n\n\tvar validFormat = /^[(I|V)][(L|R|C|D)][(Y|N)][(S|N)][N]$/;\n\n\tvar bidiChars = /[\\u0591-\\u06ff\\ufb1d-\\ufefc]/;\n\n\t/****************************************************************************/\n\t/* Array in which directional characters are replaced by their symmetric.\t*/\n\t/****************************************************************************/\n\tvar SwapTable = [\n\t\t[ \"\\u0028\", \"\\u0029\" ],\t/* Round brackets\t\t\t\t\t*/\n\t\t[ \"\\u0029\", \"\\u0028\" ],\n\t\t[ \"\\u003C\", \"\\u003E\" ],\t/* Less than/greater than\t\t\t*/\n\t\t[ \"\\u003E\", \"\\u003C\" ],\n\t\t[ \"\\u005B\", \"\\u005D\" ],\t/* Square brackets\t\t\t\t\t*/\n\t\t[ \"\\u005D\", \"\\u005B\" ],\n\t\t[ \"\\u007B\", \"\\u007D\" ],\t/* Curly brackets\t\t\t\t\t*/\n\t\t[ \"\\u007D\", \"\\u007B\" ],\n\t\t[ \"\\u00AB\", \"\\u00BB\" ],\t/* Double angle quotation marks\t\t*/\n\t\t[ \"\\u00BB\", \"\\u00AB\" ],\n\t\t[ \"\\u2039\", \"\\u203A\" ],\t/* single angle quotation mark\t\t*/\n\t\t[ \"\\u203A\", \"\\u2039\" ],\n\t\t[ \"\\u207D\", \"\\u207E\" ],\t/* Superscript parentheses\t\t\t*/\n\t\t[ \"\\u207E\", \"\\u207D\" ],\n\t\t[ \"\\u208D\", \"\\u208E\" ],\t/* Subscript parentheses\t\t\t*/\n\t\t[ \"\\u208E\", \"\\u208D\" ],\n\t\t[ \"\\u2264\", \"\\u2265\" ],\t/* Less/greater than or equal\t\t*/\n\t\t[ \"\\u2265\", \"\\u2264\" ],\n\t\t[ \"\\u2329\", \"\\u232A\" ],\t/* Angle brackets\t\t\t\t\t*/\n\t\t[ \"\\u232A\", \"\\u2329\" ],\n\t\t[ \"\\uFE59\", \"\\uFE5A\" ],\t/* Small round brackets\t\t\t\t*/\n\t\t[ \"\\uFE5A\", \"\\uFE59\" ],\n\t\t[ \"\\uFE5B\", \"\\uFE5C\" ],\t/* Small curly brackets\t\t\t\t*/\n\t\t[ \"\\uFE5C\", \"\\uFE5B\" ],\n\t\t[ \"\\uFE5D\", \"\\uFE5E\" ],\t/* Small tortoise shell brackets\t*/\n\t\t[ \"\\uFE5E\", \"\\uFE5D\" ],\n\t\t[ \"\\uFE64\", \"\\uFE65\" ],\t/* Small less than/greater than\t\t*/\n\t\t[ \"\\uFE65\", \"\\uFE64\" ]\n\t];\n\tvar AlefTable = [\"\\u0622\", \"\\u0623\", \"\\u0625\", \"\\u0627\"];\n\t\n\tvar LamAlefInialTableFE = [\"\\ufef5\", \"\\ufef7\", \"\\ufef9\", \"\\ufefb\"];\n\t\n\tvar LamAlefMedialTableFE = [\"\\ufef6\", \"\\ufef8\", \"\\ufefa\", \"\\ufefc\"];\n\t/**\n\t * Arabic Characters in the base form\n\t */\n\tvar BaseForm = [\"\\u0627\", \"\\u0628\", \"\\u062A\", \"\\u062B\", \"\\u062C\", \"\\u062D\", \"\\u062E\", \"\\u062F\", \"\\u0630\", \"\\u0631\",\n                    \"\\u0632\", \"\\u0633\", \"\\u0634\", \"\\u0635\", \"\\u0636\", \"\\u0637\", \"\\u0638\", \"\\u0639\", \"\\u063A\", \"\\u0641\",\n                    \"\\u0642\", \"\\u0643\", \"\\u0644\", \"\\u0645\", \"\\u0646\", \"\\u0647\", \"\\u0648\", \"\\u064A\", \"\\u0625\", \"\\u0623\",\n                    \"\\u0622\", \"\\u0629\", \"\\u0649\", \"\\u0644\", \"\\u0645\", \"\\u0646\", \"\\u0647\", \"\\u0648\", \"\\u064A\", \"\\u0625\",\n                    \"\\u0623\", \"\\u0622\", \"\\u0629\", \"\\u0649\", \"\\u06CC\", \"\\u0626\", \"\\u0624\", \"\\u064B\", \"\\u064C\", \"\\u064D\",\n                    \"\\u064E\", \"\\u064F\", \"\\u0650\", \"\\u0651\", \"\\u0652\", \"\\u0621\"];\n\t\n\t/**\n\t * Arabic shaped characters in Isolated form\n\t */\n\tvar IsolatedForm = [\"\\uFE8D\", \"\\uFE8F\", \"\\uFE95\", \"\\uFE99\", \"\\uFE9D\", \"\\uFEA1\", \"\\uFEA5\", \"\\uFEA9\", \"\\uFEAB\",\n                        \"\\uFEAD\", \"\\uFEAF\", \"\\uFEB1\", \"\\uFEB5\", \"\\uFEB9\", \"\\uFEBD\", \"\\uFEC1\", \"\\uFEC5\", \"\\uFEC9\",\n                        \"\\uFECD\", \"\\uFED1\", \"\\uFED5\", \"\\uFED9\", \"\\uFEDD\", \"\\uFEE1\", \"\\uFEE5\", \"\\uFEE9\", \"\\uFEED\",\n                        \"\\uFEF1\", \"\\uFE87\", \"\\uFE83\", \"\\uFE81\", \"\\uFE93\", \"\\uFEEF\", \"\\uFBFC\", \"\\uFE89\", \"\\uFE85\",\n                        \"\\uFE70\", \"\\uFE72\", \"\\uFE74\", \"\\uFE76\", \"\\uFE78\", \"\\uFE7A\", \"\\uFE7C\", \"\\uFE7E\", \"\\uFE80\"];\n\t\n\t/**\n\t * Arabic shaped characters in Final form\n\t */\n\tvar FinalForm = [\"\\uFE8E\", \"\\uFE90\", \"\\uFE96\", \"\\uFE9A\", \"\\uFE9E\", \"\\uFEA2\", \"\\uFEA6\", \"\\uFEAA\", \"\\uFEAC\", \"\\uFEAE\",\n                     \"\\uFEB0\", \"\\uFEB2\", \"\\uFEB6\", \"\\uFEBA\", \"\\uFEBE\", \"\\uFEC2\", \"\\uFEC6\", \"\\uFECA\", \"\\uFECE\", \"\\uFED2\",\n                     \"\\uFED6\", \"\\uFEDA\", \"\\uFEDE\", \"\\uFEE2\", \"\\uFEE6\", \"\\uFEEA\", \"\\uFEEE\", \"\\uFEF2\", \"\\uFE88\", \"\\uFE84\",\n                     \"\\uFE82\", \"\\uFE94\", \"\\uFEF0\", \"\\uFBFD\", \"\\uFE8A\", \"\\uFE86\", \"\\uFE70\", \"\\uFE72\", \"\\uFE74\", \"\\uFE76\",\n                     \"\\uFE78\", \"\\uFE7A\", \"\\uFE7C\", \"\\uFE7E\", \"\\uFE80\"];\n\t\n\t/**\n\t * Arabic shaped characters in Media form\n\t */\n\tvar MedialForm = [\"\\uFE8E\", \"\\uFE92\", \"\\uFE98\", \"\\uFE9C\", \"\\uFEA0\", \"\\uFEA4\", \"\\uFEA8\", \"\\uFEAA\", \"\\uFEAC\",\n                      \"\\uFEAE\", \"\\uFEB0\", \"\\uFEB4\", \"\\uFEB8\", \"\\uFEBC\", \"\\uFEC0\", \"\\uFEC4\", \"\\uFEC8\", \"\\uFECC\",\n                      \"\\uFED0\", \"\\uFED4\", \"\\uFED8\", \"\\uFEDC\", \"\\uFEE0\", \"\\uFEE4\", \"\\uFEE8\", \"\\uFEEC\", \"\\uFEEE\",\n                      \"\\uFEF4\", \"\\uFE88\", \"\\uFE84\", \"\\uFE82\", \"\\uFE94\", \"\\uFEF0\", \"\\uFBFF\", \"\\uFE8C\", \"\\uFE86\",\n                      \"\\uFE71\", \"\\uFE72\", \"\\uFE74\", \"\\uFE77\", \"\\uFE79\", \"\\uFE7B\", \"\\uFE7D\", \"\\uFE7F\", \"\\uFE80\"];\n\t\n\t/**\n\t * Arabic shaped characters in Initial form\n\t */\n\tvar InitialForm = [\"\\uFE8D\", \"\\uFE91\", \"\\uFE97\", \"\\uFE9B\", \"\\uFE9F\", \"\\uFEA3\", \"\\uFEA7\", \"\\uFEA9\", \"\\uFEAB\",\n                       \"\\uFEAD\", \"\\uFEAF\", \"\\uFEB3\", \"\\uFEB7\", \"\\uFEBB\", \"\\uFEBF\", \"\\uFEC3\", \"\\uFEC7\", \"\\uFECB\",\n                       \"\\uFECF\", \"\\uFED3\", \"\\uFED7\", \"\\uFEDB\", \"\\uFEDF\", \"\\uFEE3\", \"\\uFEE7\", \"\\uFEEB\", \"\\uFEED\",\n                       \"\\uFEF3\", \"\\uFE87\", \"\\uFE83\", \"\\uFE81\", \"\\uFE93\", \"\\uFEEF\", \"\\uFBFE\", \"\\uFE8B\", \"\\uFE85\",\n                       \"\\uFE70\", \"\\uFE72\", \"\\uFE74\", \"\\uFE76\", \"\\uFE78\", \"\\uFE7A\", \"\\uFE7C\", \"\\uFE7E\", \"\\uFE80\"];\n\t\n\t/**\n\t * Arabic characters that couldn't join to the next character\n\t */\n\tvar StandAlonForm = [\"\\u0621\", \"\\u0627\", \"\\u062F\", \"\\u0630\", \"\\u0631\", \"\\u0632\", \"\\u0648\", \"\\u0622\", \"\\u0629\",\n                         \"\\u0626\", \"\\u0624\", \"\\u0625\", \"\\u0675\", \"\\u0623\"];\n\t\n\tvar FETo06Table = [\"\\u064B\", \"\\u064B\", \"\\u064C\", \"\\u061F\", \"\\u064D\", \"\\u061F\", \"\\u064E\", \"\\u064E\", \"\\u064F\",\n                       \"\\u064F\", \"\\u0650\", \"\\u0650\", \"\\u0651\", \"\\u0651\", \"\\u0652\", \"\\u0652\", \"\\u0621\", \"\\u0622\",\n                       \"\\u0622\", \"\\u0623\", \"\\u0623\", \"\\u0624\", \"\\u0624\", \"\\u0625\", \"\\u0625\", \"\\u0626\", \"\\u0626\",\n                       \"\\u0626\", \"\\u0626\", \"\\u0627\", \"\\u0627\", \"\\u0628\", \"\\u0628\", \"\\u0628\", \"\\u0628\", \"\\u0629\",\n                       \"\\u0629\", \"\\u062A\", \"\\u062A\", \"\\u062A\", \"\\u062A\", \"\\u062B\", \"\\u062B\", \"\\u062B\", \"\\u062B\",\n                       \"\\u062C\", \"\\u062C\", \"\\u062C\", \"\\u062c\", \"\\u062D\", \"\\u062D\", \"\\u062D\", \"\\u062D\", \"\\u062E\",\n                       \"\\u062E\", \"\\u062E\", \"\\u062E\", \"\\u062F\", \"\\u062F\", \"\\u0630\", \"\\u0630\", \"\\u0631\", \"\\u0631\",\n                       \"\\u0632\", \"\\u0632\", \"\\u0633\", \"\\u0633\", \"\\u0633\", \"\\u0633\", \"\\u0634\", \"\\u0634\", \"\\u0634\",\n                       \"\\u0634\", \"\\u0635\", \"\\u0635\", \"\\u0635\", \"\\u0635\", \"\\u0636\", \"\\u0636\", \"\\u0636\", \"\\u0636\",\n                       \"\\u0637\", \"\\u0637\", \"\\u0637\", \"\\u0637\", \"\\u0638\", \"\\u0638\", \"\\u0638\", \"\\u0638\", \"\\u0639\",\n                       \"\\u0639\", \"\\u0639\", \"\\u0639\", \"\\u063A\", \"\\u063A\", \"\\u063A\", \"\\u063A\", \"\\u0641\", \"\\u0641\",\n                       \"\\u0641\", \"\\u0641\", \"\\u0642\", \"\\u0642\", \"\\u0642\", \"\\u0642\", \"\\u0643\", \"\\u0643\", \"\\u0643\",\n                       \"\\u0643\", \"\\u0644\", \"\\u0644\", \"\\u0644\", \"\\u0644\", \"\\u0645\", \"\\u0645\", \"\\u0645\", \"\\u0645\",\n                       \"\\u0646\", \"\\u0646\", \"\\u0646\", \"\\u0646\", \"\\u0647\", \"\\u0647\", \"\\u0647\", \"\\u0647\", \"\\u0648\",\n                       \"\\u0648\", \"\\u0649\", \"\\u0649\", \"\\u064A\", \"\\u064A\", \"\\u064A\", \"\\u064A\", \"\\uFEF5\", \"\\uFEF6\",\n                       \"\\uFEF7\", \"\\uFEF8\", \"\\uFEF9\", \"\\uFEFA\", \"\\uFEFB\", \"\\uFEFC\", \"\\u061F\", \"\\u061F\", \"\\u061F\"];\n\n\tvar ArabicAlefBetIntervalsBegine = [\"\\u0621\", \"\\u0641\"];\n\t\n\tvar ArabicAlefBetIntervalsEnd = [\"\\u063A\", \"\\u064a\"];\n\t\n\tvar\timpTabLtr = [\n\t/*\t\tL,\t\tR,\t\tEN,\t\tAN,\t\tN,\t\tIL,\t\tCond */\n\t\t[\t0,\t\t3,\t\t0,\t\t1,\t\t0,\t\t0,\t\t0\t], /* 0 LTR text\t*/\n\t\t[\t0,\t\t3,\t\t0,\t\t1,\t\t2,\t\t2,\t\t0\t], /* 1 LTR+AN\t\t*/\n\t\t[\t0,\t\t3,\t\t0,\t\t0x11,\t2,\t\t0,\t\t1\t], /* 2 LTR+AN+N\t*/\n\t\t[\t0,\t\t3,\t\t5,\t\t5,\t\t4,\t\t1,\t\t0\t], /* 3 RTL text\t*/\n\t\t[\t0,\t\t3,\t\t0x15,\t0x15,\t4,\t\t0,\t\t1\t], /* 4 RTL cont\t*/\n\t\t[\t0,\t\t3,\t\t5,\t\t5,\t\t4,\t\t2,\t\t0\t]  /* 5 RTL+EN/AN\t*/\n\t];\n\tvar impTabRtl = [\n\t/*\t\tL,\t\tR,\t\tEN,\t\tAN,\t\tN,\t\tIL,\t\tCond */\n\t\t[\t2,\t\t0,\t\t1,\t\t1,\t\t0,\t\t1,\t\t0\t], /* 0 RTL text\t*/\n\t\t[\t2,\t\t0,\t\t1,\t\t1,\t\t0,\t\t2,\t\t0\t], /* 1 RTL+EN/AN\t*/\n\t\t[\t2,\t\t0,\t\t2,\t\t1,\t\t3,\t\t2,\t\t0\t], /* 2 LTR text\t*/\n\t\t[\t2,\t\t0,\t\t2,\t\t0x21,\t3,\t\t1,\t\t1\t]  /* 3 LTR+cont\t*/\n\t];\n\t\n\tvar UBAT_L\t= 0; /* left to right\t\t\t\t*/\n\tvar UBAT_R\t= 1; /* right to left\t\t\t\t*/\n\tvar UBAT_EN = 2; /* European digit\t\t\t\t*/\n\tvar UBAT_AN = 3; /* Arabic-Indic digit\t\t\t*/\n\tvar UBAT_ON = 4; /* neutral\t\t\t\t\t\t*/\n\tvar UBAT_B\t= 5; /* block separator\t\t\t\t*/\n\tvar UBAT_S\t= 6; /* segment separator\t\t\t*/\n\tvar UBAT_AL = 7; /* Arabic Letter\t\t\t\t*/\n\tvar UBAT_WS = 8; /* white space\t\t\t\t\t*/\n\tvar UBAT_CS = 9; /* common digit separator\t\t*/\n\tvar UBAT_ES = 10; /* European digit separator\t*/\n\tvar UBAT_ET = 11; /* European digit terminator\t*/\n\tvar UBAT_NSM = 12; /* Non Spacing Mark\t\t\t*/\n\tvar UBAT_LRE = 13; /* LRE\t\t\t\t\t\t*/\n\tvar UBAT_RLE = 14; /* RLE\t\t\t\t\t\t*/\n\tvar UBAT_PDF = 15; /* PDF\t\t\t\t\t\t*/\n\tvar UBAT_LRO = 16; /* LRO\t\t\t\t\t\t*/\n\tvar UBAT_RLO = 17; /* RLO\t\t\t\t\t\t*/\n\tvar UBAT_BN\t= 18; /* Boundary Neutral\t\t\t*/\n\n\tvar TYPES_NAMES = [ \"UBAT_L\", \"UBAT_R\", \"UBAT_EN\", \"UBAT_AN\", \"UBAT_ON\", \"UBAT_B\", \"UBAT_S\", \"UBAT_AL\", \"UBAT_WS\",\n\t\t\t\t\t\t\"UBAT_CS\", \"UBAT_ES\", \"UBAT_ET\", \"UBAT_NSM\", \"UBAT_LRE\", \"UBAT_RLE\", \"UBAT_PDF\", \"UBAT_LRO\",\n\t\t\t\t\t\t\"UBAT_RLO\", \"UBAT_BN\" ];\n\tvar TBBASE = 100;\n\t\n\tvar TB00 = TBBASE + 0;\n\tvar TB05 = TBBASE + 1;\n\tvar TB06 = TBBASE + 2;\n\tvar TB07 = TBBASE + 3;\n\tvar TB20 = TBBASE + 4;\n\tvar TBFB = TBBASE + 5;\n\tvar TBFE = TBBASE + 6;\n\tvar TBFF = TBBASE + 7;\n\t\n\tvar L\t= UBAT_L;\n\tvar R\t= UBAT_R;\n\tvar EN\t= UBAT_EN;\n\tvar AN\t= UBAT_AN;\n\tvar ON\t= UBAT_ON;\n\tvar B\t= UBAT_B;\n\tvar S\t= UBAT_S;\n\tvar AL\t= UBAT_AL;\n\tvar WS\t= UBAT_WS;\n\tvar CS\t= UBAT_CS;\n\tvar ES\t= UBAT_ES;\n\tvar ET\t= UBAT_ET;\n\tvar NSM\t= UBAT_NSM;\n\tvar LRE\t= UBAT_LRE;\n\tvar RLE\t= UBAT_RLE;\n\tvar PDF\t= UBAT_PDF;\n\tvar LRO\t= UBAT_LRO;\n\tvar RLO\t= UBAT_RLO;\n\tvar BN\t= UBAT_BN;\n\t\n\tvar MasterTable = [\n /*******************************************************************************************************/\n /*     0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F     */\n /*******************************************************************************************************/\n /*0-*/ TB00, L,    L,    L,    L,    TB05, TB06, TB07, R,    L,    L,    L,    L,    L,    L,    L,\n /*1-*/ L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,\n /*2-*/ TB20, ON,   ON,   ON,   L,    ON,   L,    ON,   L,    ON,   ON,   ON,   L,    L,    ON,   ON,\n /*3-*/ L,    L,    L,    L,    L,    ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*4-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,    L,    ON,\n /*5-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*6-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*7-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*8-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*9-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,\n /*A-*/ L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    ON,   ON,   ON,\n /*B-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*C-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*D-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,    L,    ON,   ON,   L,    L,    ON,   ON,   L,\n /*E-*/ L,    ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*F-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,    L,    L,    TBFB, AL,   AL,   TBFE, TBFF\n\t];\n\n\tvar UnicodeTable = [\n        [ /*\tTable 00: Unicode 00xx */\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  S,   B,   S,   WS,  B,   BN,  BN,\n    /*1-*/  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  B,   B,   B,   S,\n    /*2-*/  WS,  ON,  ON,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ES,  CS,  ES,  CS,  CS,\n    /*3-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  CS,  ON,  ON,  ON,  ON,  ON,\n    /*4-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*5-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,\n    /*6-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*7-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  BN,\n    /*8-*/  BN,  BN,  BN,  BN,  BN,  B,   BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,\n    /*9-*/  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,\n    /*A-*/  CS,  ON,  ET,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  L,   ON,  ON,  BN,  ON,  ON,\n    /*B-*/  ET,  ET,  EN,  EN,  ON,  L,   ON,  ON,  ON,  EN,  L,   ON,  ON,  ON,  ON,  ON,\n    /*C-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*D-*/  L,   L,   L,   L,   L,   L,   L,   ON,  L,   L,   L,   L,   L,   L,   L,   L,\n    /*E-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*F-*/  L,   L,   L,   L,   L,   L,   L,   ON,  L,   L,   L,   L,   L,   L,   L,   L\n\t\t],\n\t\t[ /*\tTable 01: Unicode 05xx */\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*1-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*2-*/  L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*3-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*4-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*5-*/  L,   L,   L,   L,   L,   L,   L,   ON,  ON,  L,   L,   L,   L,   L,   L,   L,\n    /*6-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*7-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*8-*/  L,   L,   L,   L,   L,   L,   L,   L,   ON,  L,   ON,  ON,  ON,  ON,  ON,  ON,\n    /*9-*/  ON,  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*A-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*B-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, R,   NSM,\n    /*C-*/  R,   NSM, NSM, R,   NSM, NSM, R,   NSM, ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*D-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\n    /*E-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   ON,  ON,  ON,  ON,  ON,\n    /*F-*/  R,   R,   R,   R,   R,   ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON\n\t\t],\n\t\t[ /*\tTable 02: Unicode 06xx */\n    /****************************************************************************************/\n\t/*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n\t/****************************************************************************************/\n    /*0-*/  AN,  AN,  AN,  AN,  ON,  ON,  ON,  ON,  AL,  ET,  ET,  AL,  CS,  AL,  ON,  ON,\n    /*1-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, AL,  ON,  ON,  AL,  AL,\n    /*2-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*3-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*4-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  NSM, NSM, NSM, NSM, NSM,\n    /*5-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*6-*/  AN,  AN,  AN,  AN,  AN,  AN,  AN,  AN,  AN,  AN,  ET,  AN,  AN,  AL,  AL,  AL,\n    /*7-*/  NSM, AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*B-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*C-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*D-*/  AL,  AL,  AL,  AL,  AL,  AL,  NSM, NSM, NSM, NSM, NSM, NSM, NSM, AN,  ON,  NSM,\n    /*E-*/  NSM, NSM, NSM, NSM, NSM, AL,  AL,  NSM, NSM, ON,  NSM, NSM, NSM, NSM, AL,  AL,\n    /*F-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  AL,  AL,  AL,  AL,  AL,  AL\n\t\t],\n\t\t[\t/*\tTable\t03:\tUnicode\t07xx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  ON,  AL,\n    /*1-*/  AL,  NSM, AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*2-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*3-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*4-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, ON,  ON,  AL,  AL,  AL,\n    /*5-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*6-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*7-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*B-*/  NSM, AL,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*C-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\n    /*D-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\n    /*E-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   NSM, NSM, NSM, NSM, NSM,\n    /*F-*/  NSM, NSM, NSM, NSM, R,   R,   ON,  ON,  ON,  ON,  R,   ON,  ON,  ON,  ON,  ON\n\t\t],\n\t\t[\t/*\tTable\t04:\tUnicode\t20xx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  BN,  BN,  BN,  L,   R,\n    /*1-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*2-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  WS,  B,   LRE, RLE, PDF, LRO, RLO, CS,\n    /*3-*/  ET,  ET,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*4-*/  ON,  ON,  ON,  ON,  CS,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*5-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  WS,\n    /*6-*/  BN,  BN,  BN,  BN,  BN,  ON,  ON,  ON,  ON,  ON,  BN,  BN,  BN,  BN,  BN,  BN,\n    /*7-*/  EN,  L,   ON,  ON,  EN,  EN,  EN,  EN,  EN,  EN,  ES,  ES,  ON,  ON,  ON,  L,\n    /*8-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  ES,  ES,  ON,  ON,  ON,  ON,\n    /*9-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,\n    /*A-*/  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,\n    /*B-*/  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*C-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*D-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*E-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*F-*/  NSM, ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON\n\t\t],\n\t\t[\t/*\tTable\t05:\tUnicode\tFBxx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*1-*/  ON,  ON,  ON,  L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,  R,   NSM, R,\n    /*2-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   ES,  R,   R,   R,   R,   R,   R,\n    /*3-*/  R,   R,   R,   R,   R,   R,   R,   ON,  R,   R,   R,   R,   R,   ON,  R,   ON,\n    /*4-*/  R,   R,   ON,  R,   R,   ON,  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\n    /*5-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*6-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*7-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*B-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*C-*/  AL,  AL,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*D-*/  ON,  ON,  ON,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*E-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*F-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL\n\t\t],\n\t\t[\t/*\tTable\t06:\tUnicode\tFExx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*1-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*2-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*3-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*4-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*5-*/  CS,  ON,  CS,  ON,  ON,  CS,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ET,\n    /*6-*/  ON,  ON,  ES,  ES,  ON,  ON,  ON,  ON,  ON,  ET,  ET,  ON,  ON,  ON,  ON,  ON,\n    /*7-*/  AL,  AL,  AL,  AL,  AL,  ON,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*B-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*C-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*D-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*E-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*F-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  ON,  ON,  BN\n\t\t],\n\t\t[\t/*\tTable\t07:\tUnicode\tFFxx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  ON,  ON,  ON,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ES,  CS,  ES,  CS,  CS,\n    /*1-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  CS,  ON,  ON,  ON,  ON,  ON,\n    /*2-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*3-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,\n    /*4-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*5-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,\n    /*6-*/  ON,  ON,  ON,  ON,  ON,  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*7-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*8-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*9-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*A-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*B-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,\n    /*C-*/  ON,  ON,  L,   L,   L,   L,   L,   L,   ON,  ON,  L,   L,   L,   L,   L,   L,\n    /*D-*/  ON,  ON,  L,   L,   L,   L,   L,   L,   ON,  ON,  L,   L,   L,   ON,  ON,  ON,\n    /*E-*/  ET,  ET,  ON,  ON,  ON,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*F-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON\n\t\t]\n\t];\n\n\treturn BidiEngine;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 266:\n/*!*********************************************!*\\\n  !*** ../dojox/charting/axis2d/Invisible.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! ./Base */ 303), __webpack_require__(/*! ../scaler/linear */ 267),\n\t__webpack_require__(/*! dojox/lang/utils */ 235)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, declare, Base, lin, du){\n\n/*=====\n\tvar __InvisibleAxisCtorArgs = {\n\t\t// summary:\n\t\t//\t\tOptional arguments used in the definition of an invisible axis.\n\t\t// vertical: Boolean?\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\n\t\t// fixUpper: String?\n\t\t//\t\tAlign the greatest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\n\t\t// fixLower: String?\n\t\t//\t\tAlign the smallest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\n\t\t// natural: Boolean?\n\t\t//\t\tEnsure tick marks are made on \"natural\" numbers. Defaults to false.\n\t\t// leftBottom: Boolean?\n\t\t//\t\tThe position of a vertical axis; if true, will be placed against the left-bottom corner of the chart.  Defaults to true.\n\t\t// includeZero: Boolean?\n\t\t//\t\tInclude 0 on the axis rendering.  Default is false.\n\t\t// fixed: Boolean?\n\t\t//\t\tForce all axis labels to be fixed numbers.  Default is true.\n\t\t// min: Number?\n\t\t//\t\tThe smallest value on an axis. Default is 0.\n\t\t// max: Number?\n\t\t//\t\tThe largest value on an axis. Default is 1.\n\t\t// from: Number?\n\t\t//\t\tForce the chart to render data visible from this value. Default is 0.\n\t\t// to: Number?\n\t\t//\t\tForce the chart to render data visible to this value. Default is 1.\n\t\t// majorTickStep: Number?\n\t\t//\t\tThe amount to skip before a major tick is drawn. When not set the major ticks step is computed from\n\t\t//\t\tthe data range.\n\t\t// minorTickStep: Number?\n\t\t//\t\tThe amount to skip before a minor tick is drawn. When not set the minor ticks step is computed from\n\t\t//\t\tthe data range.\n\t\t// microTickStep: Number?\n\t\t//\t\tThe amount to skip before a micro tick is drawn. When not set the micro ticks step is computed from\n\t};\n=====*/\n\n\treturn declare(\"dojox.charting.axis2d.Invisible\", Base, {\n\t\t// summary:\n\t\t//\t\tA axis object used in dojox.charting.  You can use that axis if you want the axis to be invisible.\n\t\t//\t\tSee dojox.charting.Chart.addAxis for details.\n\t\t//\n\t\t// defaultParams: Object\n\t\t//\t\tThe default parameters used to define any axis.\n\t\t// optionalParams: Object\n\t\t//\t\tAny optional parameters needed to define an axis.\n\n\t\t/*\n\t\t// TODO: the documentation tools need these to be pre-defined in order to pick them up\n\t\t//\tcorrectly, but the code here is partially predicated on whether or not the properties\n\t\t//\tactually exist.  For now, we will leave these undocumented but in the code for later. -- TRT\n\n\t\t// opt: Object\n\t\t//\t\tThe actual options used to define this axis, created at initialization.\n\t\t// scaler: Object\n\t\t//\t\tThe calculated helper object to tell charts how to draw an axis and any data.\n\t\t// ticks: Object\n\t\t//\t\tThe calculated tick object that helps a chart draw the scaling on an axis.\n\t\t// dirty: Boolean\n\t\t//\t\tThe state of the axis (whether it needs to be redrawn or not)\n\t\t// scale: Number\n\t\t//\t\tThe current scale of the axis.\n\t\t// offset: Number\n\t\t//\t\tThe current offset of the axis.\n\n\t\topt: null,\n\t\tscaler: null,\n\t\tticks: null,\n\t\tdirty: true,\n\t\tscale: 1,\n\t\toffset: 0,\n\t\t*/\n\t\tdefaultParams: {\n\t\t\tvertical:    false,\t\t// true for vertical axis\n\t\t\tfixUpper:    \"none\",\t// align the upper on ticks: \"major\", \"minor\", \"micro\", \"none\"\n\t\t\tfixLower:    \"none\",\t// align the lower on ticks: \"major\", \"minor\", \"micro\", \"none\"\n\t\t\tnatural:     false,\t\t// all tick marks should be made on natural numbers\n\t\t\tleftBottom:  true,\t\t// position of the axis, used with \"vertical\"\n\t\t\tincludeZero: false,\t\t// 0 should be included\n\t\t\tfixed:       true\t\t// all labels are fixed numbers\n\t\t},\n\t\toptionalParams: {\n\t\t\tmin:\t\t\t0,\t// minimal value on this axis\n\t\t\tmax:\t\t\t1,\t// maximal value on this axis\n\t\t\tfrom:\t\t\t0,\t// visible from this value\n\t\t\tto:\t\t\t\t1,\t// visible to this value\n\t\t\tmajorTickStep:\t4,\t// major tick step\n\t\t\tminorTickStep:\t2,\t// minor tick step\n\t\t\tmicroTickStep:\t1\t// micro tick step\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for an invisible axis.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart the axis belongs to.\n\t\t\t// kwArgs: __InvisibleAxisCtorArgs?\n\t\t\t//\t\tAny optional keyword arguments to be used to define this axis.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n            du.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t},\n\t\tdependOnData: function(){\n\t\t\t// summary:\n\t\t\t//\t\tFind out whether or not the axis options depend on the data in the axis.\n\t\t\treturn !(\"min\" in this.opt) || !(\"max\" in this.opt);\t//\tBoolean\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all calculated properties on this axis;\n\t\t\t// returns: dojox/charting/axis2d/Invisible\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\tdelete this.scaler;\n\t\t\tdelete this.ticks;\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Invisible\n\t\t},\n\t\tinitialized: function(){\n\t\t\t// summary:\n\t\t\t//\t\tFinds out if this axis has been initialized or not.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tWhether a scaler has been calculated and if the axis is not dirty.\n\t\t\treturn \"scaler\" in this && !(this.dirty && this.dependOnData());\n\t\t},\n\t\tsetWindow: function(scale, offset){\n\t\t\t// summary:\n\t\t\t//\t\tSet the drawing \"window\" for the axis.\n\t\t\t// scale: Number\n\t\t\t//\t\tThe new scale for the axis.\n\t\t\t// offset: Number\n\t\t\t//\t\tThe new offset for the axis.\n\t\t\t// returns: dojox/charting/axis2d/Invisible\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\tthis.scale  = scale;\n\t\t\tthis.offset = offset;\n\t\t\treturn this.clear();\t//\tdojox/charting/axis2d/Invisible\n\t\t},\n\t\tgetWindowScale: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the current windowing scale of the axis.\n\t\t\treturn \"scale\" in this ? this.scale : 1;\t//\tNumber\n\t\t},\n\t\tgetWindowOffset: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the current windowing offset for the axis.\n\t\t\treturn \"offset\" in this ? this.offset : 0;\t//\tNumber\n\t\t},\n\t\tcalculate: function(min, max, span, scalerType){\n\t\t\t// summary:\n\t\t\t//\t\tPerform all calculations needed to render this axis.\n\t\t\t// min: Number\n\t\t\t//\t\tThe smallest value represented on this axis.\n\t\t\t// max: Number\n\t\t\t//\t\tThe largest value represented on this axis.\n\t\t\t// span: Number\n\t\t\t//\t\tThe span in pixels over which axis calculations are made.\n\t\t\t// scalerType: Object\n\t\t\t//\t\tAn optional scaler type object.\n\t\t\t// returns: dojox/charting/axis2d/Invisible\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\tif(this.initialized()){\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tvar o = this.opt;\n\t\t\t// we used to have a 4th function parameter to reach labels but\n\t\t\t// nobody was calling it with 4 parameters.\n\t\t\tthis.labels = o.labels;\n\t\t\tthis.scaler = (scalerType || lin).buildScaler(min, max, span, o);\n\t\t\t// store the absolute major tick start, this will be useful when dropping a label every n labels\n\t\t\t// TODO: if o.lower then it does not work\n\t\t\tvar tsb = this.scaler.bounds;\n\t\t\tif(\"scale\" in this){\n\t\t\t\t// calculate new range\n\t\t\t\to.from = tsb.lower + this.offset;\n\t\t\t\to.to   = (tsb.upper - tsb.lower) / this.scale + o.from;\n\t\t\t\t// make sure that bounds are correct\n\t\t\t\tif( !isFinite(o.from) ||\n\t\t\t\t\tisNaN(o.from) ||\n\t\t\t\t\t!isFinite(o.to) ||\n\t\t\t\t\tisNaN(o.to) ||\n\t\t\t\t\to.to - o.from >= tsb.upper - tsb.lower\n\t\t\t\t){\n\t\t\t\t\t// any error --- remove from/to bounds\n\t\t\t\t\tdelete o.from;\n\t\t\t\t\tdelete o.to;\n\t\t\t\t\tdelete this.scale;\n\t\t\t\t\tdelete this.offset;\n\t\t\t\t}else{\n\t\t\t\t\t// shift the window, if we are out of bounds\n\t\t\t\t\tif(o.from < tsb.lower){\n\t\t\t\t\t\to.to += tsb.lower - o.from;\n\t\t\t\t\t\to.from = tsb.lower;\n\t\t\t\t\t}else if(o.to > tsb.upper){\n\t\t\t\t\t\to.from += tsb.upper - o.to;\n\t\t\t\t\t\to.to = tsb.upper;\n\t\t\t\t\t}\n\t\t\t\t\t// update the offset\n\t\t\t\t\tthis.offset = o.from - tsb.lower;\n\t\t\t\t}\n\t\t\t\t// re-calculate the scaler\n\t\t\t\tthis.scaler = (scalerType || lin).buildScaler(min, max, span, o);\n\t\t\t\ttsb = this.scaler.bounds;\n\t\t\t\t// cleanup\n\t\t\t\tif(this.scale == 1 && this.offset == 0){\n\t\t\t\t\tdelete this.scale;\n\t\t\t\t\tdelete this.offset;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Invisible\n\t\t},\n\t\tgetScaler: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the pre-calculated scaler object.\n\t\t\treturn this.scaler;\t//\tObject\n\t\t},\n\t\tgetTicks: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the pre-calculated ticks object.\n\t\t\treturn this.ticks;\t//\tObject\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 267:\n/*!******************************************!*\\\n  !*** ../dojox/charting/scaler/linear.js ***!\n  \\******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! ./common */ 261)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, common){\n\tvar linear = lang.getObject(\"dojox.charting.scaler.linear\", true);\n\t\n\tvar deltaLimit = 3,\t// pixels\n\t\tgetLabel = common.getNumericLabel;\n\n\t\tfunction findString(/*String*/ val, /*Array*/ text){\n\t\t\tval = val.toLowerCase();\n\t\t\tfor(var i = text.length - 1; i >= 0; --i){\n\t\t\t\tif(val === text[i]){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\n\tvar calcTicks = function(min, max, kwArgs, majorTick, minorTick, microTick, span){\n\t\tkwArgs = lang.delegate(kwArgs);\n\t\tif(!majorTick){\n\t\t\tif(kwArgs.fixUpper == \"major\"){ kwArgs.fixUpper = \"minor\"; }\n\t\t\tif(kwArgs.fixLower == \"major\"){ kwArgs.fixLower = \"minor\"; }\n\t\t}\n\t\tif(!minorTick){\n\t\t\tif(kwArgs.fixUpper == \"minor\"){ kwArgs.fixUpper = \"micro\"; }\n\t\t\tif(kwArgs.fixLower == \"minor\"){ kwArgs.fixLower = \"micro\"; }\n\t\t}\n\t\tif(!microTick){\n\t\t\tif(kwArgs.fixUpper == \"micro\"){ kwArgs.fixUpper = \"none\"; }\n\t\t\tif(kwArgs.fixLower == \"micro\"){ kwArgs.fixLower = \"none\"; }\n\t\t}\n\t\tvar lowerBound = findString(kwArgs.fixLower, [\"major\"]) ?\n\t\t\t\tMath.floor(kwArgs.min / majorTick) * majorTick :\n\t\t\t\t\tfindString(kwArgs.fixLower, [\"minor\"]) ?\n\t\t\t\t\t\tMath.floor(kwArgs.min / minorTick) * minorTick :\n\t\t\t\t\t\t\tfindString(kwArgs.fixLower, [\"micro\"]) ?\n\t\t\t\t\t\t\t\tMath.floor(kwArgs.min / microTick) * microTick : kwArgs.min,\n\t\t\tupperBound = findString(kwArgs.fixUpper, [\"major\"]) ?\n\t\t\t\tMath.ceil(kwArgs.max / majorTick) * majorTick :\n\t\t\t\t\tfindString(kwArgs.fixUpper, [\"minor\"]) ?\n\t\t\t\t\t\tMath.ceil(kwArgs.max / minorTick) * minorTick :\n\t\t\t\t\t\t\tfindString(kwArgs.fixUpper, [\"micro\"]) ?\n\t\t\t\t\t\t\t\tMath.ceil(kwArgs.max / microTick) * microTick : kwArgs.max;\n\t\t\t\t\t\t\t\t\n\t\tif(kwArgs.useMin){ min = lowerBound; }\n\t\tif(kwArgs.useMax){ max = upperBound; }\n\t\t\n\t\tvar majorStart = (!majorTick || kwArgs.useMin && findString(kwArgs.fixLower, [\"major\"])) ?\n\t\t\t\tmin : Math.ceil(min / majorTick) * majorTick,\n\t\t\tminorStart = (!minorTick || kwArgs.useMin && findString(kwArgs.fixLower, [\"major\", \"minor\"])) ?\n\t\t\t\tmin : Math.ceil(min / minorTick) * minorTick,\n\t\t\tmicroStart = (! microTick || kwArgs.useMin && findString(kwArgs.fixLower, [\"major\", \"minor\", \"micro\"])) ?\n\t\t\t\tmin : Math.ceil(min / microTick) * microTick,\n\t\t\tmajorCount = !majorTick ? 0 : (kwArgs.useMax && findString(kwArgs.fixUpper, [\"major\"]) ?\n\t\t\t\tMath.round((max - majorStart) / majorTick) :\n\t\t\t\tMath.floor((max - majorStart) / majorTick)) + 1,\n\t\t\tminorCount = !minorTick ? 0 : (kwArgs.useMax && findString(kwArgs.fixUpper, [\"major\", \"minor\"]) ?\n\t\t\t\tMath.round((max - minorStart) / minorTick) :\n\t\t\t\tMath.floor((max - minorStart) / minorTick)) + 1,\n\t\t\tmicroCount = !microTick ? 0 : (kwArgs.useMax && findString(kwArgs.fixUpper, [\"major\", \"minor\", \"micro\"]) ?\n\t\t\t\tMath.round((max - microStart) / microTick) :\n\t\t\t\tMath.floor((max - microStart) / microTick)) + 1,\n\t\t\tminorPerMajor  = minorTick ? Math.round(majorTick / minorTick) : 0,\n\t\t\tmicroPerMinor  = microTick ? Math.round(minorTick / microTick) : 0,\n\t\t\tmajorPrecision = majorTick ? Math.floor(Math.log(majorTick) / Math.LN10) : 0,\n\t\t\tminorPrecision = minorTick ? Math.floor(Math.log(minorTick) / Math.LN10) : 0,\n\t\t\tscale = span / (max - min);\n\t\tif(!isFinite(scale)){ scale = 1; }\n\t\t\n\t\treturn {\n\t\t\tbounds: {\n\t\t\t\tlower:\tlowerBound,\n\t\t\t\tupper:\tupperBound,\n\t\t\t\tfrom:\tmin,\n\t\t\t\tto:\t\tmax,\n\t\t\t\tscale:\tscale,\n\t\t\t\tspan:\tspan\n\t\t\t},\n\t\t\tmajor: {\n\t\t\t\ttick:\tmajorTick,\n\t\t\t\tstart:\tmajorStart,\n\t\t\t\tcount:\tmajorCount,\n\t\t\t\tprec:\tmajorPrecision\n\t\t\t},\n\t\t\tminor: {\n\t\t\t\ttick:\tminorTick,\n\t\t\t\tstart:\tminorStart,\n\t\t\t\tcount:\tminorCount,\n\t\t\t\tprec:\tminorPrecision\n\t\t\t},\n\t\t\tmicro: {\n\t\t\t\ttick:\tmicroTick,\n\t\t\t\tstart:\tmicroStart,\n\t\t\t\tcount:\tmicroCount,\n\t\t\t\tprec:\t0\n\t\t\t},\n\t\t\tminorPerMajor:\tminorPerMajor,\n\t\t\tmicroPerMinor:\tmicroPerMinor,\n\t\t\tscaler:\t\t\tlinear\n\t\t};\n\t};\n\t\n\treturn lang.mixin(linear, {\n\t\tbuildScaler: function(/*Number*/ min, /*Number*/ max, /*Number*/ span, /*Object*/ kwArgs, /*Number?*/ delta, /*Number?*/ minorDelta){\n\t\t\tvar h = {fixUpper: \"none\", fixLower: \"none\", natural: false};\n\t\t\tif(kwArgs){\n\t\t\t\tif(\"fixUpper\" in kwArgs){ h.fixUpper = String(kwArgs.fixUpper); }\n\t\t\t\tif(\"fixLower\" in kwArgs){ h.fixLower = String(kwArgs.fixLower); }\n\t\t\t\tif(\"natural\"  in kwArgs){ h.natural  = Boolean(kwArgs.natural); }\n\t\t\t}\n\t\t\tminorDelta = !minorDelta || minorDelta < deltaLimit ? deltaLimit : minorDelta;\n\t\t\t\n\t\t\t// update bounds\n\t\t\tif(\"min\" in kwArgs){ min = kwArgs.min; }\n\t\t\tif(\"max\" in kwArgs){ max = kwArgs.max; }\n\t\t\tif(kwArgs.includeZero){\n\t\t\t\tif(min > 0){ min = 0; }\n\t\t\t\tif(max < 0){ max = 0; }\n\t\t\t}\n\t\t\th.min = min;\n\t\t\th.useMin = true;\n\t\t\th.max = max;\n\t\t\th.useMax = true;\n\t\t\t\n\t\t\tif(\"from\" in kwArgs){\n\t\t\t\tmin = kwArgs.from;\n\t\t\t\th.useMin = false;\n\t\t\t}\n\t\t\tif(\"to\" in kwArgs){\n\t\t\t\tmax = kwArgs.to;\n\t\t\t\th.useMax = false;\n\t\t\t}\n\t\t\t\n\t\t\t// check for erroneous condition\n\t\t\tif(max <= min){\n\t\t\t\treturn calcTicks(min, max, h, 0, 0, 0, span);\t// Object\n\t\t\t}\n\t\t\tif(!delta){\n\t\t\t\tdelta = max - min;\n\t\t\t}\n\t\t\tvar mag = Math.floor(Math.log(delta) / Math.LN10),\n\t\t\t\tmajor = kwArgs && (\"majorTickStep\" in kwArgs) ? kwArgs.majorTickStep : Math.pow(10, mag),\n\t\t\t\tminor = 0, micro = 0, ticks;\n\t\t\t\t\n\t\t\t// calculate minor ticks\n\t\t\tif(kwArgs && (\"minorTickStep\" in kwArgs)){\n\t\t\t\tminor = kwArgs.minorTickStep;\n\t\t\t}else{\n\t\t\t\tdo{\n\t\t\t\t\tminor = major / 10;\n\t\t\t\t\tif(!h.natural || minor > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, 0, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.minor.tick > minorDelta){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tminor = major / 5;\n\t\t\t\t\tif(!h.natural || minor > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, 0, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.minor.tick > minorDelta){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tminor = major / 2;\n\t\t\t\t\tif(!h.natural || minor > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, 0, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.minor.tick > minorDelta){ break; }\n\t\t\t\t\t}\n\t\t\t\t\treturn calcTicks(min, max, h, major, 0, 0, span);\t// Object\n\t\t\t\t}while(false);\n\t\t\t}\n\t\n\t\t\t// calculate micro ticks\n\t\t\tif(kwArgs && (\"microTickStep\" in kwArgs)){\n\t\t\t\tmicro = kwArgs.microTickStep;\n\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\n\t\t\t}else{\n\t\t\t\tdo{\n\t\t\t\t\tmicro = minor / 10;\n\t\t\t\t\tif(!h.natural || micro > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.micro.tick > deltaLimit){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tmicro = minor / 5;\n\t\t\t\t\tif(!h.natural || micro > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.micro.tick > deltaLimit){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tmicro = minor / 2;\n\t\t\t\t\tif(!h.natural || micro > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.micro.tick > deltaLimit){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tmicro = 0;\n\t\t\t\t}while(false);\n\t\t\t}\n\t\n\t\t\treturn micro ? ticks : calcTicks(min, max, h, major, minor, 0, span);\t// Object\n\t\t},\n\t\tbuildTicks: function(/*Object*/ scaler, /*Object*/ kwArgs){\n\t\t\tvar step, next, tick,\n\t\t\t\tnextMajor = scaler.major.start,\n\t\t\t\tnextMinor = scaler.minor.start,\n\t\t\t\tnextMicro = scaler.micro.start;\n\t\t\tif(kwArgs.microTicks && scaler.micro.tick){\n\t\t\t\tstep = scaler.micro.tick, next = nextMicro;\n\t\t\t}else if(kwArgs.minorTicks && scaler.minor.tick){\n\t\t\t\tstep = scaler.minor.tick, next = nextMinor;\n\t\t\t}else if(scaler.major.tick){\n\t\t\t\tstep = scaler.major.tick, next = nextMajor;\n\t\t\t}else{\n\t\t\t\t// no ticks\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// make sure that we have finite bounds\n\t\t\tvar revScale = 1 / scaler.bounds.scale;\n\t\t\tif(scaler.bounds.to <= scaler.bounds.from || isNaN(revScale) || !isFinite(revScale) ||\n\t\t\t\t\tstep <= 0 || isNaN(step) || !isFinite(step)){\n\t\t\t\t// no ticks\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// loop over all ticks\n\t\t\tvar majorTicks = [], minorTicks = [], microTicks = [];\n\t\t\twhile(next <= scaler.bounds.to + revScale){\n\t\t\t\tif(Math.abs(nextMajor - next) < step / 2){\n\t\t\t\t\t// major tick\n\t\t\t\t\ttick = {value: nextMajor};\n\t\t\t\t\tif(kwArgs.majorLabels){\n\t\t\t\t\t\ttick.label = getLabel(nextMajor, scaler.major.prec, kwArgs);\n\t\t\t\t\t}\n\t\t\t\t\tmajorTicks.push(tick);\n\t\t\t\t\tnextMajor += scaler.major.tick;\n\t\t\t\t\tnextMinor += scaler.minor.tick;\n\t\t\t\t\tnextMicro += scaler.micro.tick;\n\t\t\t\t}else if(Math.abs(nextMinor - next) < step / 2){\n\t\t\t\t\t// minor tick\n\t\t\t\t\tif(kwArgs.minorTicks){\n\t\t\t\t\t\ttick = {value: nextMinor};\n\t\t\t\t\t\tif(kwArgs.minorLabels && (scaler.minMinorStep <= scaler.minor.tick * scaler.bounds.scale)){\n\t\t\t\t\t\t\ttick.label = getLabel(nextMinor, scaler.minor.prec, kwArgs);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminorTicks.push(tick);\n\t\t\t\t\t}\n\t\t\t\t\tnextMinor += scaler.minor.tick;\n\t\t\t\t\tnextMicro += scaler.micro.tick;\n\t\t\t\t}else{\n\t\t\t\t\t// micro tick\n\t\t\t\t\tif(kwArgs.microTicks){\n\t\t\t\t\t\tmicroTicks.push({value: nextMicro});\n\t\t\t\t\t}\n\t\t\t\t\tnextMicro += scaler.micro.tick;\n\t\t\t\t}\n\t\t\t\tnext += step;\n\t\t\t}\n\t\t\treturn {major: majorTicks, minor: minorTicks, micro: microTicks};\t// Object\n\t\t},\n\t\tgetTransformerFromModel: function(/*Object*/ scaler){\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\n\t\t\treturn function(x){ return (x - offset) * scale; };\t// Function\n\t\t},\n\t\tgetTransformerFromPlot: function(/*Object*/ scaler){\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\n\t\t\treturn function(x){ return x / scale + offset; };\t// Function\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 288:\n/*!************************************************!*\\\n  !*** ../dojox/charting/plot2d/StackedAreas.js ***!\n  \\************************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! ./Stacked */ 250)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, Stacked){\n\n\treturn declare(\"dojox.charting.plot2d.StackedAreas\", Stacked, {\n\t\t// summary:\n\t\t//\t\tA convenience object to set up a stacked area plot.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tForce our Stacked plotter to include both lines and areas.\n\t\t\tthis.opt.lines = true;\n\t\t\tthis.opt.areas = true;\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n\n/***/ }),\n\n/***/ 289:\n/*!******************************!*\\\n  !*** ../dojox/gfx/canvas.js ***!\n  \\******************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base */ 236), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/window */ 12), __webpack_require__(/*! dojo/dom-geometry */ 17),\n\t\t__webpack_require__(/*! dojo/dom */ 6), __webpack_require__(/*! ./shape */ 243), __webpack_require__(/*! ./path */ 260), __webpack_require__(/*! ./arc */ 290), __webpack_require__(/*! ./matrix */ 239), __webpack_require__(/*! ./decompose */ 291), __webpack_require__(/*! ./bezierutils */ 292)], __WEBPACK_AMD_DEFINE_RESULT__ = function(g, lang, arr, declare, win, domGeom, dom, gs, pathLib, ga, m, decompose, bezierUtils ){\n\tvar canvas = g.canvas = {\n\t\t// summary:\n\t\t//\t\tThis the graphics rendering bridge for W3C Canvas compliant browsers.\n\t\t//\t\tSince Canvas is an immediate mode graphics api, with no object graph or\n\t\t//\t\teventing capabilities, use of this module alone will only add in drawing support.\n\t\t//\t\tThe additional module, canvasWithEvents extends this module with additional support\n\t\t//\t\tfor handling events on Canvas.  By default, the support for events is now included\n\t\t//\t\thowever, if only drawing capabilities are needed, canvas event module can be disabled\n\t\t//\t\tusing the dojoConfig option, canvasEvents:true|false.\n\t\t//\t\tThe id of the Canvas renderer is 'canvas'.  This id can be used when switch Dojo's\n\t\t//\t\tgraphics context between renderer implementations.  See dojox/gfx/_base.switchRenderer\n\t\t//\t\tAPI.\n\t};\n\tvar pattrnbuffer = null,\n\t\tmp = m.multiplyPoint,\n\t\tpi = Math.PI,\n\t\ttwoPI = 2 * pi,\n\t\thalfPI = pi /2,\n\t\textend = lang.extend;\n\n\tif(win.global.CanvasRenderingContext2D){\n\t\tvar ctx2d = win.doc.createElement(\"canvas\").getContext(\"2d\");\n\t\tvar hasNativeDash = typeof ctx2d.setLineDash == \"function\";\n\t\tvar hasFillText = typeof ctx2d.fillText == \"function\";\n\t}\n\n\tvar dasharray = {\n\t\tsolid:\t\t\t\t\"none\",\n\t\tshortdash:\t\t\t[4, 1],\n\t\tshortdot:\t\t\t[1, 1],\n\t\tshortdashdot:\t\t[4, 1, 1, 1],\n\t\tshortdashdotdot:\t[4, 1, 1, 1, 1, 1],\n\t\tdot:\t\t\t\t[1, 3],\n\t\tdash:\t\t\t\t[4, 3],\n\t\tlongdash:\t\t\t[8, 3],\n\t\tdashdot:\t\t\t[4, 3, 1, 3],\n\t\tlongdashdot:\t\t[8, 3, 1, 3],\n\t\tlongdashdotdot:\t\t[8, 3, 1, 3, 1, 3]\n\t};\n\n\tfunction drawDashedArc(/*CanvasRenderingContext2D*/ctx, /*Number[]*/dash,  /*int*/cx,  /*int*/cy,  /*int*/r, /*Number*/sa, /*Number*/ea, /*Boolean*/ccw, /*Boolean?*/apply, prevResidue){\n\t\tvar residue, angle, l = dash.length, i= 0;\n\t\t// if there's a previous dash residue from the previous arc, start with it.\n\t\tif(prevResidue){\n\t\t\tangle = prevResidue.l/r;\n\t\t\ti = prevResidue.i;\n\t\t}else{\n\t\t\tangle = dash[0]/r;\n\t\t}\n\t\twhile(sa < ea){\n\t\t\t// if the dash segment length is longer than what remains to stroke, keep it for next arc. (aka residue)\n\t\t\tif(sa+angle > ea){\n\t\t\t\tresidue = {l: (sa+angle-ea)*r, i: i};\n\t\t\t\tangle = ea-sa;\n\t\t\t}\n\t\t\tif(!(i%2)){\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(cx, cy, r, sa, sa+angle, ccw);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t}\n\t\t\tsa += angle;\n\t\t\t++i;\n\t\t\tangle = dash[i%l]/r;\n\t\t}\n\t\treturn residue;\n\t}\n\n\tfunction splitToDashedBezier(/*Number[]*/points, /*Number[]*/dashArray, /*Number[]*/newPoints, /*Object*/prevResidue){\n\t\tvar residue = 0, t = 0, dash, i = 0;\n\t\tif(prevResidue){\n\t\t\tdash = prevResidue.l;\n\t\t\ti = prevResidue.i;\n\t\t}else{\n\t\t\tdash = dashArray[0];\n\t\t}\n\t\twhile(t<1){\n\t\t\t// get the 't' corresponding to the given dash value.\n\t\t\tt = bezierUtils.tAtLength(points, dash);\n\t\t\tif(t==1){\n\t\t\t\tvar rl = bezierUtils.computeLength(points);\n\t\t\t\tresidue = {l: dash-rl, i: i};\n\t\t\t}\n\t\t\t// split bezier at t: left part is the \"dash\" curve, right part is the remaining bezier points\n\t\t\tvar curves = bezierUtils.splitBezierAtT(points, t);\n\t\t\tif(!(i%2)){\n\t\t\t\t// only keep the \"dash\" curve\n\t\t\t\tnewPoints.push(curves[0]);\n\t\t\t}\n\t\t\tpoints = curves[1];\n\t\t\t++i;\n\t\t\tdash = dashArray[i%dashArray.length];\n\t\t}\n\t\treturn residue;\n\t}\n\n\tfunction toDashedCurveTo(/*Array||CanvasRenderingContext2D*/ctx, /*shape.Path*/shape, /*Number[]*/points, /*Object*/prevResidue){\n\t\t// summary:\n\t\t//\t\tBuilds a set of bezier (cubic || quadratic)curveTo' canvas instructions that represents a dashed stroke of the specified bezier geometry.\n\n\t\tvar pts = [shape.last.x, shape.last.y].concat(points),\n\t\t\tquadratic = points.length === 4, ctx2d = !(ctx instanceof Array),\n\t\t\tapi = quadratic ? \"quadraticCurveTo\" : \"bezierCurveTo\",\n\t\t\tcurves = [];\n\t\tvar residue = splitToDashedBezier(pts, shape.canvasDash, curves, prevResidue);\n\t\tfor(var c=0; c<curves.length;++c){\n\t\t\tvar curve = curves[c];\n\t\t\tif(ctx2d){\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\t\tctx[api].apply(ctx, curve.slice(2));\n\t\t\t}else{\n\t\t\t\tctx.push(\"moveTo\", [curve[0], curve[1]]);\n\t\t\t\tctx.push(api, curve.slice(2));\n\t\t\t}\n\t\t}\n\t\treturn residue;\n\t}\n\n\tfunction toDashedLineTo(/*Array||CanvasRenderingContext2D*/ctx, /*shape.Shape*/shape, /*int*/x1, /*int*/y1, /*int*/x2, /*int*/y2, /*Object*/prevResidue){\n\t\t// summary:\n\t\t//\t\tBuilds a set of moveTo/lineTo' canvas instructions that represents a dashed stroke of the specified line geometry.\n\n\t\tvar residue = 0, r = 0, dal = 0, tlength = bezierUtils.distance(x1, y1, x2, y2), i = 0, dash = shape.canvasDash,\n\t\t\tprevx = x1, prevy = y1, x, y, ctx2d = !(ctx instanceof Array);\n\t\tif(prevResidue){\n\t\t\tdal=prevResidue.l;\n\t\t\ti = prevResidue.i;\n\t\t}else{\n\t\t\tdal += dash[0];\n\t\t}\n\t\twhile(Math.abs(1-r)>0.01){\n\t\t\tif(dal>tlength){\n\t\t\t\tresidue = {l:dal-tlength,i:i};\n\t\t\t\tdal=tlength;\n\t\t\t}\n\t\t\tr = dal/tlength;\n\t\t\tx = x1 + (x2-x1)*r;\n\t\t\ty = y1 + (y2-y1)*r;\n\t\t\tif(!(i++%2)){\n\t\t\t\tif(ctx2d){\n\t\t\t\t\tctx.moveTo(prevx, prevy);\n\t\t\t\t\tctx.lineTo(x, y);\n\t\t\t\t}else{\n\t\t\t\t\tctx.push(\"moveTo\", [prevx, prevy]);\n\t\t\t\t\tctx.push(\"lineTo\", [x, y]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevx = x;\n\t\t\tprevy = y;\n\t\t\tdal += dash[i%dash.length];\n\t\t}\n\t\treturn residue;\n\t}\n\n\tcanvas.Shape = declare(\"dojox.gfx.canvas.Shape\", gs.Shape, {\n\t\t_render: function(/* Object */ ctx){\n\t\t\t// summary:\n\t\t\t//\t\trender the shape\n\t\t\tctx.save();\n\t\t\tthis._renderTransform(ctx);\n\t\t\tthis._renderClip(ctx);\n\t\t\tthis._renderShape(ctx);\n\t\t\tthis._renderFill(ctx, true);\n\t\t\tthis._renderStroke(ctx, true);\n\t\t\tctx.restore();\n\t\t},\n\t\t_renderClip: function(ctx){\n\t\t\tif (this.canvasClip){\n\t\t\t\tthis.canvasClip.render(ctx);\n\t\t\t\tctx.clip();\n\t\t\t}\n\t\t},\n\t\t_renderTransform: function(/* Object */ ctx){\n\t\t\tif(\"canvasTransform\" in this){\n\t\t\t\tvar t = this.canvasTransform;\n\t\t\t\tctx.translate(t.dx, t.dy);\n\t\t\t\tctx.rotate(t.angle2);\n\t\t\t\tctx.scale(t.sx, t.sy);\n\t\t\t\tctx.rotate(t.angle1);\n\t\t\t\t// The future implementation when vendors catch up with the spec:\n\t\t\t\t// var t = this.matrix;\n\t\t\t\t// ctx.transform(t.xx, t.yx, t.xy, t.yy, t.dx, t.dy);\n\t\t\t}\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\t// nothing\n\t\t},\n\t\t_renderFill: function(/* Object */ ctx, /* Boolean */ apply){\n\t\t\tif(\"canvasFill\" in this){\n\t\t\t\tvar fs = this.fillStyle;\n\t\t\t\tif(\"canvasFillImage\" in this){\n\t\t\t\t\tvar w = fs.width, h = fs.height,\n\t\t\t\t\t\tiw = this.canvasFillImage.width, ih = this.canvasFillImage.height,\n\t\t\t\t\t\t// let's match the svg default behavior wrt. aspect ratio: xMidYMid meet\n\t\t\t\t\t\tsx = w == iw ? 1 : w / iw,\n\t\t\t\t\t\tsy = h == ih ? 1 : h / ih,\n\t\t\t\t\t\ts = Math.min(sx,sy), //meet->math.min , slice->math.max\n\t\t\t\t\t\tdx = (w - s * iw)/2,\n\t\t\t\t\t\tdy = (h - s * ih)/2;\n\t\t\t\t\t// the buffer used to scaled the image\n\t\t\t\t\tpattrnbuffer.width = w; pattrnbuffer.height = h;\n\t\t\t\t\tvar copyctx = pattrnbuffer.getContext(\"2d\");\n\t\t\t\t\tcopyctx.clearRect(0, 0, w, h);\n\t\t\t\t\tcopyctx.drawImage(this.canvasFillImage, 0, 0, iw, ih, dx, dy, s*iw, s*ih);\n\t\t\t\t\tthis.canvasFill = ctx.createPattern(pattrnbuffer, \"repeat\");\n\t\t\t\t\tdelete this.canvasFillImage;\n\t\t\t\t}\n\t\t\t\tctx.fillStyle = this.canvasFill;\n\t\t\t\tif(apply){\n\t\t\t\t\t// offset the pattern\n\t\t\t\t\tif (fs.type===\"pattern\" && (fs.x !== 0 || fs.y !== 0)) {\n\t\t\t\t\t\tctx.translate(fs.x,fs.y);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tctx.fillStyle = \"rgba(0,0,0,0.0)\";\n\t\t\t}\n\t\t},\n\t\t_renderStroke: function(/* Object */ ctx, /* Boolean */ apply){\n\t\t\tvar s = this.strokeStyle;\n\t\t\tif(s){\n\t\t\t\tctx.strokeStyle = s.color.toString();\n\t\t\t\tctx.lineWidth = s.width;\n\t\t\t\tctx.lineCap = s.cap;\n\t\t\t\tif(typeof s.join == \"number\"){\n\t\t\t\t\tctx.lineJoin = \"miter\";\n\t\t\t\t\tctx.miterLimit = s.join;\n\t\t\t\t}else{\n\t\t\t\t\tctx.lineJoin = s.join;\n\t\t\t\t}\n\t\t\t\tif(this.canvasDash){\n\t\t\t\t\tif(hasNativeDash){\n\t\t\t\t\t\tctx.setLineDash(this.canvasDash);\n\t\t\t\t\t\tif(apply){ ctx.stroke(); }\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis._renderDashedStroke(ctx, apply);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tif(apply){ ctx.stroke(); }\n\t\t\t\t}\n\t\t\t}else if(!apply){\n\t\t\t\tctx.strokeStyle = \"rgba(0,0,0,0.0)\";\n\t\t\t}\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){},\n\n\t\t// events are not implemented\n\t\tgetEventSource: function(){ return null; },\n\t\ton:\t\t\t\tfunction(){},\n\t\tconnect:\t\tfunction(){},\n\t\tdisconnect:\t\tfunction(){},\n\n\t\tcanvasClip:null,\n\t\tsetClip: function(/*Object*/clip){\n\t\t\tthis.inherited(arguments);\n\t\t\tvar clipType = clip ? \"width\" in clip ? \"rect\" :\n\t\t\t\t\t\t\t\"cx\" in clip ? \"ellipse\" :\n\t\t\t\t\t\t\t\"points\" in clip ? \"polyline\" : \"d\" in clip ? \"path\" : null : null;\n\t\t\tif(clip && !clipType){\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis.canvasClip = clip ? makeClip(clipType, clip) : null;\n\t\t\tif(this.parent){this.parent._makeDirty();}\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tvar makeClip = function(clipType, geometry){\n\t\tswitch(clipType){\n\t\t\tcase \"ellipse\":\n\t\t\t\treturn {\n\t\t\t\t\tcanvasEllipse: makeEllipse({shape:geometry}),\n\t\t\t\t\trender: function(ctx){return canvas.Ellipse.prototype._renderShape.call(this, ctx);}\n\t\t\t\t};\n\t\t\tcase \"rect\":\n\t\t\t\treturn {\n\t\t\t\t\tshape: lang.delegate(geometry,{r:0}),\n\t\t\t\t\trender: function(ctx){return canvas.Rect.prototype._renderShape.call(this, ctx);}\n\t\t\t\t};\n\t\t\tcase \"path\":\n\t\t\t\treturn {\n\t\t\t\t\tcanvasPath: makeClipPath(geometry),\n\t\t\t\t\trender: function(ctx){this.canvasPath._renderShape(ctx);}\n\t\t\t\t};\n\t\t\tcase \"polyline\":\n\t\t\t\treturn {\n\t\t\t\t\tcanvasPolyline: geometry.points,\n\t\t\t\t\trender: function(ctx){return canvas.Polyline.prototype._renderShape.call(this, ctx);}\n\t\t\t\t};\n\t\t}\n\t\treturn null;\n\t};\n\n\tvar makeClipPath = function(geo){\n\t\tvar p = new dojox.gfx.canvas.Path();\n\t\tp.canvasPath = [];\n\t\tp._setPath(geo.d);\n\t\treturn p;\n\t};\n\n\tvar modifyMethod = function(shape, method, extra){\n\t\tvar old = shape.prototype[method];\n\t\tshape.prototype[method] = extra ?\n\t\t\tfunction(){\n\t\t\t\tif(this.parent){this.parent._makeDirty();}\n\t\t\t\told.apply(this, arguments);\n\t\t\t\textra.call(this);\n\t\t\t\treturn this;\n\t\t\t} :\n\t\t\tfunction(){\n\t\t\t\tif(this.parent){this.parent._makeDirty();}\n\t\t\t\treturn old.apply(this, arguments);\n\t\t\t};\n\t};\n\n\tmodifyMethod(canvas.Shape, \"setTransform\",\n\t\tfunction(){\n\t\t\t// prepare Canvas-specific structures\n\t\t\tif(this.matrix){\n\t\t\t\tthis.canvasTransform = g.decompose(this.matrix);\n\t\t\t}else{\n\t\t\t\tdelete this.canvasTransform;\n\t\t\t}\n\t\t});\n\n\tmodifyMethod(canvas.Shape, \"setFill\",\n\t\tfunction(){\n\t\t\t// prepare Canvas-specific structures\n\t\t\tvar fs = this.fillStyle, f;\n\t\t\tif(fs){\n\t\t\t\tif(typeof(fs) == \"object\" && \"type\" in fs){\n\t\t\t\t\tvar ctx = this.surface.rawNode.getContext(\"2d\");\n\t\t\t\t\tswitch(fs.type){\n\t\t\t\t\t\tcase \"linear\":\n\t\t\t\t\t\tcase \"radial\":\n\t\t\t\t\t\t\tf = fs.type == \"linear\" ?\n\t\t\t\t\t\t\t\tctx.createLinearGradient(fs.x1, fs.y1, fs.x2, fs.y2) :\n\t\t\t\t\t\t\t\tctx.createRadialGradient(fs.cx, fs.cy, 0, fs.cx, fs.cy, fs.r);\n\t\t\t\t\t\t\tarr.forEach(fs.colors, function(step){\n\t\t\t\t\t\t\t\tf.addColorStop(step.offset, g.normalizeColor(step.color).toString());\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"pattern\":\n\t\t\t\t\t\t\tif (!pattrnbuffer) {\n\t\t\t\t\t\t\t\tpattrnbuffer = document.createElement(\"canvas\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// no need to scale the image since the canvas.createPattern uses\n\t\t\t\t\t\t\t// the original image data and not the scaled ones (see spec.)\n\t\t\t\t\t\t\t// the scaling needs to be done at rendering time in a context buffer\n\t\t\t\t\t\t\tvar img =new Image();\n\t\t\t\t\t\t\tthis.surface.downloadImage(img, fs.src);\n\t\t\t\t\t\t\tthis.canvasFillImage = img;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t// Set fill color using CSS RGBA func style\n\t\t\t\t\tf = fs.toString();\n\t\t\t\t}\n\t\t\t\tthis.canvasFill = f;\n\t\t\t}else{\n\t\t\t\tdelete this.canvasFill;\n\t\t\t}\n\t\t});\n\n\tmodifyMethod(canvas.Shape, \"setStroke\",\n\t\tfunction(){\n\t\t\tvar st = this.strokeStyle;\n\t\t\tif(st){\n\t\t\t\tvar da = this.strokeStyle.style.toLowerCase();\n\t\t\t\tif(da in dasharray){\n\t\t\t\t\tda = dasharray[da];\n\t\t\t\t}\n\t\t\t\tif(da instanceof Array){\n\t\t\t\t\tda = da.slice();\n\t\t\t\t\tthis.canvasDash = da;\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor(i = 0; i < da.length; ++i){\n\t\t\t\t\t\tda[i] *= st.width;\n\t\t\t\t\t}\n\t\t\t\t\tif(st.cap != \"butt\"){\n\t\t\t\t\t\tfor(i = 0; i < da.length; i += 2){\n\t\t\t\t\t\t\tda[i] -= st.width;\n\t\t\t\t\t\t\tif(da[i] < 1){ da[i] = 1; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(i = 1; i < da.length; i += 2){\n\t\t\t\t\t\t\tda[i] += st.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tdelete this.canvasDash;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tdelete this.canvasDash;\n\t\t\t}\n\t\t\tthis._needsDash = !hasNativeDash && !!this.canvasDash;\n\t\t});\n\n\tmodifyMethod(canvas.Shape, \"setShape\");\n\n\tcanvas.Group = declare(\"dojox.gfx.canvas.Group\", canvas.Shape, {\n\t\t// summary:\n\t\t//\t\ta group shape (Canvas), which can be used\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\n\t\tconstructor: function(){\n\t\t\tgs.Container._init.call(this);\n\t\t},\n\t\t_render: function(/* Object */ ctx){\n\t\t\t// summary:\n\t\t\t//\t\trender the group\n\t\t\tctx.save();\n\t\t\tthis._renderTransform(ctx);\n\t\t\tthis._renderClip(ctx);\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tthis.children[i]._render(ctx);\n\t\t\t}\n\t\t\tctx.restore();\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReleases all internal resources owned by this shape. Once this method has been called,\n\t\t\t//\t\tthe instance is considered disposed and should not be used anymore.\n\n\t\t\t// don't call canvas impl to avoid makeDirty'\n\t\t\tgs.Container.clear.call(this, true);\n\t\t\t// avoid this.inherited\n\t\t\tcanvas.Shape.prototype.destroy.apply(this, arguments);\n\t\t}\n\t});\n\n\n\n\tcanvas.Rect = declare(\"dojox.gfx.canvas.Rect\", [canvas.Shape, gs.Rect], {\n\t\t// summary:\n\t\t//\t\ta rectangle shape (Canvas)\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape, r = Math.min(s.r, s.height / 2, s.width / 2),\n\t\t\t\txl = s.x, xr = xl + s.width, yt = s.y, yb = yt + s.height,\n\t\t\t\txl2 = xl + r, xr2 = xr - r, yt2 = yt + r, yb2 = yb - r;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(xl2, yt);\n\t\t\tif(r){\n\t\t\t\tctx.arc(xr2, yt2, r, -halfPI, 0, false);\n\t\t\t\tctx.arc(xr2, yb2, r, 0, halfPI, false);\n\t\t\t\tctx.arc(xl2, yb2, r, halfPI, pi, false);\n\t\t\t\tctx.arc(xl2, yt2, r, pi, pi + halfPI, false);\n\t\t\t}else{\n\t\t\t\tctx.lineTo(xr2, yt);\n\t\t\t\tctx.lineTo(xr, yb2);\n\t\t\t\tctx.lineTo(xl2, yb);\n\t\t\t\tctx.lineTo(xl, yt2);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar s = this.shape, residue, r = Math.min(s.r, s.height / 2, s.width / 2),\n\t\t\t\txl = s.x, xr = xl + s.width, yt = s.y, yb = yt + s.height,\n\t\t\t\txl2 = xl + r, xr2 = xr - r, yt2 = yt + r, yb2 = yb - r;\n\t\t\tif(r){\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xl2, yt, xr2, yt);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\tresidue = drawDashedArc(ctx, this.canvasDash, xr2, yt2, r, -halfPI, 0, false, apply, residue);\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xr, yt2, xr, yb2, residue);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\tresidue = drawDashedArc(ctx, this.canvasDash, xr2, yb2, r, 0, halfPI, false, apply, residue);\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xr2, yb, xl2, yb, residue);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\tresidue = drawDashedArc(ctx, this.canvasDash, xl2, yb2, r, halfPI, pi, false, apply, residue);\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xl, yb2, xl, yt2,residue);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\tdrawDashedArc(ctx, this.canvasDash, xl2, yt2, r, pi, pi + halfPI, false, apply, residue);\n\t\t\t}else{\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xl2, yt, xr2, yt);\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xr2, yt, xr, yb2, residue);\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xr, yb2, xl2, yb, residue);\n\t\t\t\ttoDashedLineTo(ctx, this, xl2, yb, xl, yt2, residue);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n\n\tvar bezierCircle = [];\n\t(function(){\n\t\tvar u = ga.curvePI4;\n\t\tbezierCircle.push(u.s, u.c1, u.c2, u.e);\n\t\tfor(var a = 45; a < 360; a += 45){\n\t\t\tvar r = m.rotateg(a);\n\t\t\tbezierCircle.push(mp(r, u.c1), mp(r, u.c2), mp(r, u.e));\n\t\t}\n\t})();\n\n\tvar makeEllipse = function(shape){\n\t\t// prepare Canvas-specific structures\n\t\tvar t, c1, c2, r = [], s = shape.shape,\n\t\t\tM = m.normalize([m.translate(s.cx, s.cy), m.scale(s.rx, s.ry)]);\n\t\tt = mp(M, bezierCircle[0]);\n\t\tr.push([t.x, t.y]);\n\t\tfor(var i = 1; i < bezierCircle.length; i += 3){\n\t\t\tc1 = mp(M, bezierCircle[i]);\n\t\t\tc2 = mp(M, bezierCircle[i + 1]);\n\t\t\tt  = mp(M, bezierCircle[i + 2]);\n\t\t\tr.push([c1.x, c1.y, c2.x, c2.y, t.x, t.y]);\n\t\t}\n\t\tif(shape._needsDash){\n\t\t\tvar points = [], p1 = r[0];\n\t\t\tfor(i = 1; i < r.length; ++i){\n\t\t\t\tvar curves = [];\n\t\t\t\tsplitToDashedBezier(p1.concat(r[i]), shape.canvasDash, curves);\n\t\t\t\tp1 = [r[i][4],r[i][5]];\n\t\t\t\tpoints.push(curves);\n\t\t\t}\n\t\t\tshape._dashedPoints = points;\n\t\t}\n\t\treturn r;\n\t};\n\n\tcanvas.Ellipse = declare(\"dojox.gfx.canvas.Ellipse\", [canvas.Shape, gs.Ellipse], {\n\t\t// summary:\n\t\t//\t\tan ellipse shape (Canvas)\n\t\tsetShape: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tthis.canvasEllipse = makeEllipse(this);\n\t\t\treturn this;\n\t\t},\n\t\tsetStroke: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tif(!hasNativeDash){\n\t\t\t\tthis.canvasEllipse = makeEllipse(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar r = this.canvasEllipse, i;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo.apply(ctx, r[0]);\n\t\t\tfor(i = 1; i < r.length; ++i){\n\t\t\t\tctx.bezierCurveTo.apply(ctx, r[i]);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar r = this._dashedPoints;\n\t\t\tctx.beginPath();\n\t\t\tfor(var i = 0; i < r.length; ++i){\n\t\t\t\tvar curves = r[i];\n\t\t\t\tfor(var j=0;j<curves.length;++j){\n\t\t\t\t\tvar curve = curves[j];\n\t\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\t\t\tctx.bezierCurveTo(curve[2],curve[3],curve[4],curve[5],curve[6],curve[7]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(apply) ctx.stroke();\n\t\t}\n\t});\n\n\tcanvas.Circle = declare(\"dojox.gfx.canvas.Circle\", [canvas.Shape, gs.Circle], {\n\t\t// summary:\n\t\t//\t\ta circle shape (Canvas)\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape;\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(s.cx, s.cy, s.r, 0, twoPI, 1);\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar s = this.shape;\n\t\t\tvar startAngle = 0, angle, l = this.canvasDash.length; i=0;\n\t\t\twhile(startAngle < twoPI){\n\t\t\t\tangle = this.canvasDash[i%l]/s.r;\n\t\t\t\tif(!(i%2)){\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(s.cx, s.cy, s.r, startAngle, startAngle+angle, 0);\n\t\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\t}\n\t\t\t\tstartAngle+=angle;\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t});\n\n\tcanvas.Line = declare(\"dojox.gfx.canvas.Line\", [canvas.Shape, gs.Line], {\n\t\t// summary:\n\t\t//\t\ta line shape (Canvas)\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(s.x1, s.y1);\n\t\t\tctx.lineTo(s.x2, s.y2);\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar s = this.shape;\n\t\t\tctx.beginPath();\n\t\t\ttoDashedLineTo(ctx, this, s.x1, s.y1, s.x2, s.y2);\n\t\t\tif(apply) ctx.stroke();\n\t\t}\n\t});\n\n\tcanvas.Polyline = declare(\"dojox.gfx.canvas.Polyline\", [canvas.Shape, gs.Polyline], {\n\t\t// summary:\n\t\t//\t\ta polyline/polygon shape (Canvas)\n\t\tsetShape: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tvar p = this.shape.points, f = p[0], r, c, i;\n\t\t\tthis.bbox = null;\n\t\t\t// normalize this.shape.points as array of points: [{x,y}, {x,y}, ...]\n\t\t\tthis._normalizePoints();\n\t\t\t// after _normalizePoints, if shape.points was [x1,y1,x2,y2,..], shape.points references a new array\n\t\t\t// and p references the original points array\n\t\t\t// prepare Canvas-specific structures, if needed\n\t\t\tif(p.length){\n\t\t\t\tif(typeof f == \"number\"){ // already in the canvas format [x1,y1,x2,y2,...]\n\t\t\t\t\tr = p;\n\t\t\t\t}else{ // convert into canvas-specific format\n\t\t\t\t\tr = [];\n\t\t\t\t\tfor(i=0; i < p.length; ++i){\n\t\t\t\t\t\tc = p[i];\n\t\t\t\t\t\tr.push(c.x, c.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tr = [];\n\t\t\t}\n\t\t\tthis.canvasPolyline = r;\n\t\t\treturn this;\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar p = this.canvasPolyline;\n\t\t\tif(p.length){\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(p[0], p[1]);\n\t\t\t\tfor(var i = 2; i < p.length; i += 2){\n\t\t\t\t\tctx.lineTo(p[i], p[i + 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar p = this.canvasPolyline, residue = 0;\n\t\t\tctx.beginPath();\n\t\t\tfor(var i = 0; i < p.length; i += 2){\n\t\t\t\tresidue = toDashedLineTo(ctx, this, p[i], p[i + 1], p[i + 2], p[i + 3], residue);\n\t\t\t}\n\t\t\tif(apply) ctx.stroke();\n\t\t}\n\t});\n\n\tcanvas.Image = declare(\"dojox.gfx.canvas.Image\", [canvas.Shape, gs.Image], {\n\t\t// summary:\n\t\t//\t\tan image shape (Canvas)\n\t\tsetShape: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\t// prepare Canvas-specific structures\n\t\t\tvar img = new Image();\n\t\t\tthis.surface.downloadImage(img, this.shape.src);\n\t\t\tthis.canvasImage = img;\n\t\t\treturn this;\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape;\n\t\t\tctx.drawImage(this.canvasImage, s.x, s.y, s.width, s.height);\n\t\t}\n\t});\n\n\tcanvas.Text = declare(\"dojox.gfx.canvas.Text\", [canvas.Shape, gs.Text], {\n\t\t_setFont:function(){\n\t\t\tif(this.fontStyle){\n\t\t\t\tthis.canvasFont = g.makeFontString(this.fontStyle);\n\t\t\t}else{\n\t\t\t\tdelete this.canvasFont;\n\t\t\t}\n\t\t},\n\n\t\tgetTextWidth: function(){\n\t\t\t// summary:\n\t\t\t//\t\tget the text width in pixels\n\t\t\tvar s = this.shape, w = 0, ctx;\n\t\t\tif(s.text){\n\t\t\t\tctx = this.surface.rawNode.getContext(\"2d\");\n\t\t\t\tctx.save();\n\t\t\t\tthis._renderTransform(ctx);\n\t\t\t\tthis._renderFill(ctx, false);\n\t\t\t\tthis._renderStroke(ctx, false);\n\t\t\t\tif (this.canvasFont)\n\t\t\t\t\tctx.font = this.canvasFont;\n\t\t\t\tw = ctx.measureText(s.text).width;\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t\treturn w;\n\t\t},\n\n\t\t// override to apply first fill and stroke (\n\t\t// the base implementation is for path-based shape that needs to first define the path then to fill/stroke it.\n\t\t// Here, we need the fillstyle or strokestyle to be set before calling fillText/strokeText.\n\t\t_render: function(/* Object */ctx){\n\t\t\t// summary:\n\t\t\t//\t\trender the shape\n\t\t\t// ctx: Object\n\t\t\t//\t\tthe drawing context.\n\t\t\tctx.save();\n\t\t\tthis._renderTransform(ctx);\n\t\t\tthis._renderFill(ctx, false);\n\t\t\tthis._renderStroke(ctx, false);\n\t\t\tthis._renderShape(ctx);\n\t\t\tctx.restore();\n\t\t},\n\n\t\t_renderShape: function(ctx){\n\t\t\t// summary:\n\t\t\t//\t\ta text shape (Canvas)\n\t\t\t// ctx: Object\n\t\t\t//\t\tthe drawing context.\n\t\t\tvar ta, s = this.shape;\n\t\t\tif(!s.text){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// text align\n\t\t\tta = s.align === 'middle' ? 'center' : s.align;\n\t\t\tctx.textAlign = ta;\n\t\t\tif(this.canvasFont){\n\t\t\t\tctx.font = this.canvasFont;\n\t\t\t}\n\t\t\tif(this.canvasFill){\n\t\t\t\tctx.fillText(s.text, s.x, s.y);\n\t\t\t}\n\t\t\tif(this.strokeStyle){\n\t\t\t\tctx.beginPath(); // fix bug in FF3.6. Fixed in FF4b8\n\t\t\t\tctx.strokeText(s.text, s.x, s.y);\n\t\t\t\tctx.closePath();\n\t\t\t}\n\t\t}\n\t});\n\tmodifyMethod(canvas.Text, \"setFont\");\n\n\tif(!hasFillText){\n\t\tcanvas.Text.extend({\n\t\t\tgetTextWidth: function(){\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\tgetBoundingBox: function(){\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t_renderShape: function(){\n\t\t\t}\n\t\t});\n\t}\n\n\tvar pathRenderers = {\n\t\t\tM: \"_moveToA\", m: \"_moveToR\",\n\t\t\tL: \"_lineToA\", l: \"_lineToR\",\n\t\t\tH: \"_hLineToA\", h: \"_hLineToR\",\n\t\t\tV: \"_vLineToA\", v: \"_vLineToR\",\n\t\t\tC: \"_curveToA\", c: \"_curveToR\",\n\t\t\tS: \"_smoothCurveToA\", s: \"_smoothCurveToR\",\n\t\t\tQ: \"_qCurveToA\", q: \"_qCurveToR\",\n\t\t\tT: \"_qSmoothCurveToA\", t: \"_qSmoothCurveToR\",\n\t\t\tA: \"_arcTo\", a: \"_arcTo\",\n\t\t\tZ: \"_closePath\", z: \"_closePath\"\n\t\t};\n\n\n\tcanvas.Path = declare(\"dojox.gfx.canvas.Path\", [canvas.Shape, pathLib.Path], {\n\t\t// summary:\n\t\t//\t\ta path shape (Canvas)\n\t\tconstructor: function(){\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\tsetShape: function(){\n\t\t\tthis.canvasPath = [];\n\t\t\tthis._dashedPath= [];\n\t\t\treturn this.inherited(arguments);\n\t\t},\n\t\tsetStroke:function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tif(!hasNativeDash){\n\t\t\t\tthis.segmented = false;\n\t\t\t\tthis._confirmSegmented();\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t_setPath: function(){\n\t\t\tthis._dashResidue = null;\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\t_updateWithSegment: function(segment){\n\t\t\tvar last = lang.clone(this.last);\n\t\t\tthis[pathRenderers[segment.action]](this.canvasPath, segment.action, segment.args, this._needsDash ? this._dashedPath : null);\n\t\t\tthis.last = last;\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar r = this.canvasPath;\n\t\t\tctx.beginPath();\n\t\t\tfor(var i = 0; i < r.length; i += 2){\n\t\t\t\tctx[r[i]].apply(ctx, r[i + 1]);\n\t\t\t}\n\t\t},\n\t\t_renderDashedStroke: hasNativeDash ? function(){} : function(ctx, apply){\n\t\t\tvar r = this._dashedPath;\n\t\t\tctx.beginPath();\n\t\t\tfor(var i = 0; i < r.length; i += 2){\n\t\t\t\tctx[r[i]].apply(ctx, r[i + 1]);\n\t\t\t}\n\t\t\tif(apply) ctx.stroke();\n\t\t},\n\t\t_moveToA: function(result, action, args, doDash){\n\t\t\tresult.push(\"moveTo\", [args[0], args[1]]);\n\t\t\tif(doDash) doDash.push(\"moveTo\", [args[0], args[1]]);\n\t\t\tfor(var i = 2; i < args.length; i += 2){\n\t\t\t\tresult.push(\"lineTo\", [args[i], args[i + 1]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, args[i - 2], args[i - 1], args[i], args[i + 1], this._dashResidue);\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_moveToR: function(result, action, args, doDash){\n\t\t\tvar pts;\n\t\t\tif(\"x\" in this.last){\n\t\t\t\tpts = [this.last.x += args[0], this.last.y += args[1]];\n\t\t\t\tresult.push(\"moveTo\", pts);\n\t\t\t\tif(doDash) doDash.push(\"moveTo\", pts);\n\t\t\t}else{\n\t\t\t\tpts = [this.last.x = args[0], this.last.y = args[1]];\n\t\t\t\tresult.push(\"moveTo\", pts);\n\t\t\t\tif(doDash) doDash.push(\"moveTo\", pts);\n\t\t\t}\n\t\t\tfor(var i = 2; i < args.length; i += 2){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x += args[i], this.last.y += args[i + 1]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_lineToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 2){\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, this.last.x, this.last.y, args[i], args[i + 1], this._dashResidue);\n\t\t\t\tresult.push(\"lineTo\", [args[i], args[i + 1]]);\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_lineToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 2){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x += args[i], this.last.y += args[i + 1]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_hLineToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tresult.push(\"lineTo\", [args[i], this.last.y]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], args[i], this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 1];\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_hLineToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x += args[i], this.last.y]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_vLineToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x, args[i]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, args[i], this._dashResidue);\n\t\t\t}\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_vLineToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x, this.last.y += args[i]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_curveToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 6){\n\t\t\t\tresult.push(\"bezierCurveTo\", args.slice(i, i + 6));\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length-1], this._dashResidue);\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl.x = args[args.length - 4];\n\t\t\tthis.lastControl.y = args[args.length - 3];\n\t\t\tthis.lastControl.type = \"C\";\n\t\t},\n\t\t_curveToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 6){\n\t\t\t\tresult.push(\"bezierCurveTo\", [\n\t\t\t\t\tthis.last.x + args[i],\n\t\t\t\t\tthis.last.y + args[i + 1],\n\t\t\t\t\tthis.lastControl.x = this.last.x + args[i + 2],\n\t\t\t\t\tthis.lastControl.y = this.last.y + args[i + 3],\n\t\t\t\t\tthis.last.x + args[i + 4],\n\t\t\t\t\tthis.last.y + args[i + 5]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length-1], this._dashResidue);\n\t\t\t\tthis.last.x += args[i + 4];\n\t\t\t\tthis.last.y += args[i + 5];\n\t\t\t}\n\t\t\tthis.lastControl.type = \"C\";\n\t\t},\n\t\t_smoothCurveToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 4){\n\t\t\t\tvar valid = this.lastControl.type == \"C\";\n\t\t\t\tresult.push(\"bezierCurveTo\", [\n\t\t\t\t\tvalid ? 2 * this.last.x - this.lastControl.x : this.last.x,\n\t\t\t\t\tvalid ? 2 * this.last.y - this.lastControl.y : this.last.y,\n\t\t\t\t\targs[i],\n\t\t\t\t\targs[i + 1],\n\t\t\t\t\targs[i + 2],\n\t\t\t\t\targs[i + 3]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length-1], this._dashResidue);\n\t\t\t\tthis.lastControl.x = args[i];\n\t\t\t\tthis.lastControl.y = args[i + 1];\n\t\t\t\tthis.lastControl.type = \"C\";\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t},\n\t\t_smoothCurveToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 4){\n\t\t\t\tvar valid = this.lastControl.type == \"C\";\n\t\t\t\tresult.push(\"bezierCurveTo\", [\n\t\t\t\t\tvalid ? 2 * this.last.x - this.lastControl.x : this.last.x,\n\t\t\t\t\tvalid ? 2 * this.last.y - this.lastControl.y : this.last.y,\n\t\t\t\t\tthis.last.x + args[i],\n\t\t\t\t\tthis.last.y + args[i + 1],\n\t\t\t\t\tthis.last.x + args[i + 2],\n\t\t\t\t\tthis.last.y + args[i + 3]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length-1], this._dashResidue);\n\t\t\t\tthis.lastControl.x = this.last.x + args[i];\n\t\t\t\tthis.lastControl.y = this.last.y + args[i + 1];\n\t\t\t\tthis.lastControl.type = \"C\";\n\t\t\t\tthis.last.x += args[i + 2];\n\t\t\t\tthis.last.y += args[i + 3];\n\t\t\t}\n\t\t},\n\t\t_qCurveToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 4){\n\t\t\t\tresult.push(\"quadraticCurveTo\", args.slice(i, i + 4));\n\t\t\t}\n\t\t\tif(doDash)\n\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length - 1], this._dashResidue);\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl.x = args[args.length - 4];\n\t\t\tthis.lastControl.y = args[args.length - 3];\n\t\t\tthis.lastControl.type = \"Q\";\n\t\t},\n\t\t_qCurveToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 4){\n\t\t\t\tresult.push(\"quadraticCurveTo\", [\n\t\t\t\t\tthis.lastControl.x = this.last.x + args[i],\n\t\t\t\t\tthis.lastControl.y = this.last.y + args[i + 1],\n\t\t\t\t\tthis.last.x + args[i + 2],\n\t\t\t\t\tthis.last.y + args[i + 3]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length - 1], this._dashResidue);\n\t\t\t\tthis.last.x += args[i + 2];\n\t\t\t\tthis.last.y += args[i + 3];\n\t\t\t}\n\t\t\tthis.lastControl.type = \"Q\";\n\t\t},\n\t\t_qSmoothCurveToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 2){\n\t\t\t\tvar valid = this.lastControl.type == \"Q\";\n\t\t\t\tresult.push(\"quadraticCurveTo\", [\n\t\t\t\t\tthis.lastControl.x = valid ? 2 * this.last.x - this.lastControl.x : this.last.x,\n\t\t\t\t\tthis.lastControl.y = valid ? 2 * this.last.y - this.lastControl.y : this.last.y,\n\t\t\t\t\targs[i],\n\t\t\t\t\targs[i + 1]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length - 1], this._dashResidue);\n\t\t\t\tthis.lastControl.type = \"Q\";\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t},\n\t\t_qSmoothCurveToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 2){\n\t\t\t\tvar valid = this.lastControl.type == \"Q\";\n\t\t\t\tresult.push(\"quadraticCurveTo\", [\n\t\t\t\t\tthis.lastControl.x = valid ? 2 * this.last.x - this.lastControl.x : this.last.x,\n\t\t\t\t\tthis.lastControl.y = valid ? 2 * this.last.y - this.lastControl.y : this.last.y,\n\t\t\t\t\tthis.last.x + args[i],\n\t\t\t\t\tthis.last.y + args[i + 1]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length - 1], this._dashResidue);\n\t\t\t\tthis.lastControl.type = \"Q\";\n\t\t\t\tthis.last.x += args[i];\n\t\t\t\tthis.last.y += args[i + 1];\n\t\t\t}\n\t\t},\n\t\t_arcTo: function(result, action, args, doDash){\n\t\t\tvar relative = action == \"a\";\n\t\t\tfor(var i = 0; i < args.length; i += 7){\n\t\t\t\tvar x1 = args[i + 5], y1 = args[i + 6];\n\t\t\t\tif(relative){\n\t\t\t\t\tx1 += this.last.x;\n\t\t\t\t\ty1 += this.last.y;\n\t\t\t\t}\n\t\t\t\tvar arcs = ga.arcAsBezier(\n\t\t\t\t\tthis.last, args[i], args[i + 1], args[i + 2],\n\t\t\t\t\targs[i + 3] ? 1 : 0, args[i + 4] ? 1 : 0,\n\t\t\t\t\tx1, y1\n\t\t\t\t);\n\t\t\t\tarr.forEach(arcs, function(p){\n\t\t\t\t\tresult.push(\"bezierCurveTo\", p);\n\t\t\t\t});\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, p, this._dashResidue);\n\t\t\t\tthis.last.x = x1;\n\t\t\t\tthis.last.y = y1;\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_closePath: function(result, action, args, doDash){\n\t\t\tresult.push(\"closePath\", []);\n\t\t\tif(doDash)\n\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, this.last.x, this.last.y, doDash[1][0], doDash[1][1], this._dashResidue);\n\t\t\tthis.lastControl = {};\n\t\t}\n\t});\n\tarr.forEach([\"moveTo\", \"lineTo\", \"hLineTo\", \"vLineTo\", \"curveTo\",\n\t\t\"smoothCurveTo\", \"qCurveTo\", \"qSmoothCurveTo\", \"arcTo\", \"closePath\"],\n\t\tfunction(method){ modifyMethod(canvas.Path, method); }\n\t);\n\n\tcanvas.TextPath = declare(\"dojox.gfx.canvas.TextPath\", [canvas.Shape, pathLib.TextPath], {\n\t\t// summary:\n\t\t//\t\ta text shape (Canvas)\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape;\n\t\t\t// nothing for the moment\n\t\t},\n\t\t_setText: function(){\n\t\t\t// not implemented\n\t\t},\n\t\t_setFont: function(){\n\t\t\t// not implemented\n\t\t}\n\t});\n\n\tcanvas.Surface = declare(\"dojox.gfx.canvas.Surface\", gs.Surface, {\n\t\t// summary:\n\t\t//\t\ta surface object to be used for drawings (Canvas)\n\t\tconstructor: function(){\n\t\t\tgs.Container._init.call(this);\n\t\t\tthis.pendingImageCount = 0;\n\t\t\tthis.makeDirty();\n\t\t},\n\t\tdestroy: function(){\n\t\t\tgs.Container.clear.call(this, true); // avoid makeDirty() from canvas.Container.clear impl.\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\tsetDimensions: function(width, height){\n\t\t\t// summary:\n\t\t\t//\t\tsets the width and height of the rawNode\n\t\t\t// width: String\n\t\t\t//\t\twidth of surface, e.g., \"100px\"\n\t\t\t// height: String\n\t\t\t//\t\theight of surface, e.g., \"100px\"\n\t\t\tthis.width  = g.normalizedLength(width);\t// in pixels\n\t\t\tthis.height = g.normalizedLength(height);\t// in pixels\n\t\t\tif(!this.rawNode) return this;\n\t\t\tvar dirty = false;\n\t\t\tif (this.rawNode.width != this.width){\n\t\t\t\tthis.rawNode.width = this.width;\n\t\t\t\tdirty = true;\n\t\t\t}\n\t\t\tif (this.rawNode.height != this.height){\n\t\t\t\tthis.rawNode.height = this.height;\n\t\t\t\tdirty = true;\n\t\t\t}\n\t\t\tif (dirty)\n\t\t\t\tthis.makeDirty();\n\t\t\treturn this;\t// self\n\t\t},\n\t\tgetDimensions: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns an object with properties \"width\" and \"height\"\n\t\t\treturn this.rawNode ? {width:  this.rawNode.width, height: this.rawNode.height} : null;\t// Object\n\t\t},\n\t\t_render: function(force){\n\t\t\t// summary:\n\t\t\t//\t\trender the all shapes\n\t\t\tif(!this.rawNode || (!force && this.pendingImageCount)){ return; }\n\t\t\tvar ctx = this.rawNode.getContext(\"2d\");\n\t\t\tctx.clearRect(0, 0, this.rawNode.width, this.rawNode.height);\n\t\t\tthis.render(ctx);\n\t\t\tif(\"pendingRender\" in this){\n\t\t\t\tclearTimeout(this.pendingRender);\n\t\t\t\tdelete this.pendingRender;\n\t\t\t}\n\t\t},\n\t\trender: function(ctx){\n\t\t\t// summary:\n\t\t\t//\t\tRenders the gfx scene.\n\t\t\t// description:\n\t\t\t//\t\tthis method is called to render the gfx scene to the specified context.\n\t\t\t//\t\tThis method should not be invoked directly but should be used instead\n\t\t\t//\t\tas an extension point on which user can connect to with aspect.before/aspect.after\n\t\t\t//\t\tto implement pre- or post- image processing jobs on the drawing surface.\n\t\t\t// ctx: CanvasRenderingContext2D\n\t\t\t//\t\tThe surface Canvas rendering context.\n\t\t\tctx.save();\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tthis.children[i]._render(ctx);\n\t\t\t}\n\t\t\tctx.restore();\n\t\t},\n\t\tmakeDirty: function(){\n\t\t\t// summary:\n\t\t\t//\t\tinternal method, which is called when we may need to redraw\n\t\t\tif(!this.pendingImagesCount && !(\"pendingRender\" in this) && !this._batch){\n\t\t\t\tthis.pendingRender = setTimeout(lang.hitch(this, this._render), 0);\n\t\t\t}\n\t\t},\n\t\tdownloadImage: function(img, url){\n\t\t\t// summary:\n\t\t\t//\t\tinternal method, which starts an image download and renders, when it is ready\n\t\t\t// img: Image\n\t\t\t//\t\tthe image object\n\t\t\t// url: String\n\t\t\t//\t\tthe url of the image\n\t\t\tvar handler = lang.hitch(this, this.onImageLoad);\n\t\t\tif(!this.pendingImageCount++ && \"pendingRender\" in this){\n\t\t\t\tclearTimeout(this.pendingRender);\n\t\t\t\tdelete this.pendingRender;\n\t\t\t}\n\t\t\timg.onload  = handler;\n\t\t\timg.onerror = handler;\n\t\t\timg.onabort = handler;\n\t\t\timg.src = url;\n\t\t},\n\t\tonImageLoad: function(){\n\t\t\tif(!--this.pendingImageCount){\n\t\t\t\tthis.onImagesLoaded();\n\t\t\t\tthis._render();\n\t\t\t}\n\t\t},\n\t\tonImagesLoaded: function(){\n\t\t\t// summary:\n\t\t\t//\t\tAn extension point called when all pending images downloads have been completed.\n\t\t\t// description:\n\t\t\t//\t\tThis method is invoked when all pending images downloads have been completed, just before\n\t\t\t//\t\tthe gfx scene is redrawn. User can connect to this method to get notified when a\n\t\t\t//\t\tgfx scene containing images is fully resolved.\n\t\t},\n\n\t\t// events are not implemented\n\t\tgetEventSource: function(){ return null; },\n\t\tconnect:\t\tfunction(){},\n\t\tdisconnect:\t\tfunction(){},\n\t\ton:\t\t\t\tfunction(){}\n\t});\n\n\tcanvas.createSurface = function(parentNode, width, height){\n\t\t// summary:\n\t\t//\t\tcreates a surface (Canvas)\n\t\t// parentNode: Node\n\t\t//\t\ta parent node\n\t\t// width: String\n\t\t//\t\twidth of surface, e.g., \"100px\"\n\t\t// height: String\n\t\t//\t\theight of surface, e.g., \"100px\"\n\n\t\tif(!width && !height){\n\t\t\tvar pos = domGeom.position(parentNode);\n\t\t\twidth  = width  || pos.w;\n\t\t\theight = height || pos.h;\n\t\t}\n\t\tif(typeof width == \"number\"){\n\t\t\twidth = width + \"px\";\n\t\t}\n\t\tif(typeof height == \"number\"){\n\t\t\theight = height + \"px\";\n\t\t}\n\n\t\tvar s = new canvas.Surface(),\n\t\t\tp = dom.byId(parentNode),\n\t\t\tc = p.ownerDocument.createElement(\"canvas\");\n\n\t\tc.width  = g.normalizedLength(width);\t// in pixels\n\t\tc.height = g.normalizedLength(height);\t// in pixels\n\n\t\tp.appendChild(c);\n\t\ts.rawNode = c;\n\t\ts._parent = p;\n\t\ts.surface = s;\n\t\treturn s;\t// dojox/gfx.Surface\n\t};\n\n\t// Extenders\n\n\tvar C = gs.Container, Container = {\n\t\topenBatch: function() {\n\t\t\t// summary:\n\t\t\t//\t\tstarts a new batch, subsequent new child shapes will be held in\n\t\t\t//\t\tthe batch instead of appending to the container directly.\n\t\t\t// description:\n\t\t\t//\t\tBecause the canvas renderer has no DOM hierarchy, the canvas implementation differs\n\t\t\t//\t\tsuch that it suspends the repaint requests for this container until the current batch is closed by a call to closeBatch().\n\t\t\t++this._batch;\n\t\t\treturn this;\n\t\t},\n\t\tcloseBatch: function() {\n\t\t\t// summary:\n\t\t\t//\t\tsubmits the current batch.\n\t\t\t// description:\n\t\t\t//\t\tOn canvas, this method flushes the pending redraws queue.\n\t\t\tthis._batch = this._batch > 0 ? --this._batch : 0;\n\t\t\tthis._makeDirty();\n\t\t\treturn this;\n\t\t},\n\t\t_makeDirty: function(){\n\t\t\tif(!this._batch){\n\t\t\t\tthis.surface.makeDirty();\n\t\t\t}\n\t\t},\n\t\tadd: function(shape){\n\t\t\tthis._makeDirty();\n\t\t\treturn C.add.apply(this, arguments);\n\t\t},\n\t\tremove: function(shape, silently){\n\t\t\tthis._makeDirty();\n\t\t\treturn C.remove.apply(this, arguments);\n\t\t},\n\t\tclear: function(){\n\t\t\tthis._makeDirty();\n\t\t\treturn C.clear.apply(this, arguments);\n\t\t},\n\t\tgetBoundingBox: C.getBoundingBox,\n\t\t_moveChildToFront: function(shape){\n\t\t\tthis._makeDirty();\n\t\t\treturn C._moveChildToFront.apply(this, arguments);\n\t\t},\n\t\t_moveChildToBack: function(shape){\n\t\t\tthis._makeDirty();\n\t\t\treturn C._moveChildToBack.apply(this, arguments);\n\t\t}\n\t};\n\n\tvar Creator = {\n\t\t// summary:\n\t\t//\t\tCanvas shape creators\n\t\tcreateObject: function(shapeType, rawShape) {\n\t\t\t// summary:\n\t\t\t//\t\tcreates an instance of the passed shapeType class\n\t\t\t// shapeType: Function\n\t\t\t//\t\ta class constructor to create an instance of\n\t\t\t// rawShape: Object\n\t\t\t//\t\tproperties to be passed in to the classes \"setShape\" method\n\t\t\t// overrideSize: Boolean\n\t\t\t//\t\tset the size explicitly, if true\n\t\t\tvar shape = new shapeType();\n\t\t\tshape.surface = this.surface;\n\t\t\tshape.setShape(rawShape);\n\t\t\tthis.add(shape);\n\t\t\treturn shape;\t// dojox/gfx/shape.Shape\n\t\t}\n\t};\n\n\textend(canvas.Group, Container);\n\textend(canvas.Group, gs.Creator);\n\textend(canvas.Group, Creator);\n\n\textend(canvas.Surface, Container);\n\textend(canvas.Surface, gs.Creator);\n\textend(canvas.Surface, Creator);\n\n\t// no event support -> nothing to fix.\n\tcanvas.fixTarget = function(event, gfxElement){\n\t\t// tags:\n\t\t//\t\tprivate\n\t\treturn true;\n\t};\n\n\treturn canvas;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 290:\n/*!***************************!*\\\n  !*** ../dojox/gfx/arc.js ***!\n  \\***************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base */ 236), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! ./matrix */ 239)], __WEBPACK_AMD_DEFINE_RESULT__ = function(g, lang, m){\n\tvar twoPI = 2 * Math.PI, pi4 = Math.PI / 4, pi8 = Math.PI / 8,\n\t\tpi48 = pi4 + pi8, curvePI4 = unitArcAsBezier(pi8);\n\n\tfunction unitArcAsBezier(alpha){\n\t\t// summary:\n\t\t//\t\treturn a start point, 1st and 2nd control points, and an end point of\n\t\t//\t\ta an arc, which is reflected on the x axis\n\t\t// alpha: Number\n\t\t//\t\tangle in radians, the arc will be 2 * angle size\n\t\tvar cosa  = Math.cos(alpha), sina  = Math.sin(alpha),\n\t\t\tp2 = {x: cosa + (4 / 3) * (1 - cosa), y: sina - (4 / 3) * cosa * (1 - cosa) / sina};\n\t\treturn {\t// Object\n\t\t\ts:  {x: cosa, y: -sina},\n\t\t\tc1: {x: p2.x, y: -p2.y},\n\t\t\tc2: p2,\n\t\t\te:  {x: cosa, y: sina}\n\t\t};\n\t}\n\n\tvar arc = g.arc = {\n\t\t// summary:\n\t\t//\t\tThis module contains the core graphics Arc functions.\n\t\t\n\t\tunitArcAsBezier: unitArcAsBezier,\n\t\t/*===== \n\t\tunitArcAsBezier: function(alpha) {\n\t\t\t// summary:\n\t\t\t//\t\treturn a start point, 1st and 2nd control points, and an end point of\n\t\t\t//\t\ta an arc, which is reflected on the x axis\n\t\t\t// alpha: Number\n\t\t\t//\t\tangle in radians, the arc will be 2 * angle size\n\t\t},\n\t\t=====*/\n\n\t\t// curvePI4: Object\n\t\t//\t\tan object with properties of an arc around a unit circle from 0 to pi/4\n\t\tcurvePI4: curvePI4,\n\n\t\tarcAsBezier: function(last, rx, ry, xRotg, large, sweep, x, y){\n\t\t\t// summary:\n\t\t\t//\t\tcalculates an arc as a series of Bezier curves\n\t\t\t//\t\tgiven the last point and a standard set of SVG arc parameters,\n\t\t\t//\t\tit returns an array of arrays of parameters to form a series of\n\t\t\t//\t\tabsolute Bezier curves.\n\t\t\t// last: Object\n\t\t\t//\t\ta point-like object as a start of the arc\n\t\t\t// rx: Number\n\t\t\t//\t\ta horizontal radius for the virtual ellipse\n\t\t\t// ry: Number\n\t\t\t//\t\ta vertical radius for the virtual ellipse\n\t\t\t// xRotg: Number\n\t\t\t//\t\ta rotation of an x axis of the virtual ellipse in degrees\n\t\t\t// large: Boolean\n\t\t\t//\t\twhich part of the ellipse will be used (the larger arc if true)\n\t\t\t// sweep: Boolean\n\t\t\t//\t\tdirection of the arc (CW if true)\n\t\t\t// x: Number\n\t\t\t//\t\tthe x coordinate of the end point of the arc\n\t\t\t// y: Number\n\t\t\t//\t\tthe y coordinate of the end point of the arc\n\n\t\t\t// calculate parameters\n\t\t\tlarge = Boolean(large);\n\t\t\tsweep = Boolean(sweep);\n\t\t\tvar xRot = m._degToRad(xRotg),\n\t\t\t\trx2 = rx * rx, ry2 = ry * ry,\n\t\t\t\tpa = m.multiplyPoint(\n\t\t\t\t\tm.rotate(-xRot),\n\t\t\t\t\t{x: (last.x - x) / 2, y: (last.y - y) / 2}\n\t\t\t\t),\n\t\t\t\tpax2 = pa.x * pa.x, pay2 = pa.y * pa.y,\n\t\t\t\tc1 = Math.sqrt((rx2 * ry2 - rx2 * pay2 - ry2 * pax2) / (rx2 * pay2 + ry2 * pax2));\n\t\t\tif(isNaN(c1)){ c1 = 0; }\n\t\t\tvar\tca = {\n\t\t\t\t\tx:  c1 * rx * pa.y / ry,\n\t\t\t\t\ty: -c1 * ry * pa.x / rx\n\t\t\t\t};\n\t\t\tif(large == sweep){\n\t\t\t\tca = {x: -ca.x, y: -ca.y};\n\t\t\t}\n\t\t\t// the center\n\t\t\tvar c = m.multiplyPoint(\n\t\t\t\t[\n\t\t\t\t\tm.translate(\n\t\t\t\t\t\t(last.x + x) / 2,\n\t\t\t\t\t\t(last.y + y) / 2\n\t\t\t\t\t),\n\t\t\t\t\tm.rotate(xRot)\n\t\t\t\t],\n\t\t\t\tca\n\t\t\t);\n\t\t\t// calculate the elliptic transformation\n\t\t\tvar elliptic_transform = m.normalize([\n\t\t\t\tm.translate(c.x, c.y),\n\t\t\t\tm.rotate(xRot),\n\t\t\t\tm.scale(rx, ry)\n\t\t\t]);\n\t\t\t// start, end, and size of our arc\n\t\t\tvar inversed = m.invert(elliptic_transform),\n\t\t\t\tsp = m.multiplyPoint(inversed, last),\n\t\t\t\tep = m.multiplyPoint(inversed, x, y),\n\t\t\t\tstartAngle = Math.atan2(sp.y, sp.x),\n\t\t\t\tendAngle   = Math.atan2(ep.y, ep.x),\n\t\t\t\ttheta = startAngle - endAngle;\t// size of our arc in radians\n\t\t\tif(sweep){ theta = -theta; }\n\t\t\tif(theta < 0){\n\t\t\t\ttheta += twoPI;\n\t\t\t}else if(theta > twoPI){\n\t\t\t\ttheta -= twoPI;\n\t\t\t}\n\n\t\t\t// draw curve chunks\n\t\t\tvar alpha = pi8, curve = curvePI4, step  = sweep ? alpha : -alpha,\n\t\t\t\tresult = [];\n\t\t\tfor(var angle = theta; angle > 0; angle -= pi4){\n\t\t\t\tif(angle < pi48){\n\t\t\t\t\talpha = angle / 2;\n\t\t\t\t\tcurve = unitArcAsBezier(alpha);\n\t\t\t\t\tstep  = sweep ? alpha : -alpha;\n\t\t\t\t\tangle = 0;\t// stop the loop\n\t\t\t\t}\n\t\t\t\tvar c2, e, M = m.normalize([elliptic_transform, m.rotate(startAngle + step)]);\n\t\t\t\tif(sweep){\n\t\t\t\t\tc1 = m.multiplyPoint(M, curve.c1);\n\t\t\t\t\tc2 = m.multiplyPoint(M, curve.c2);\n\t\t\t\t\te  = m.multiplyPoint(M, curve.e );\n\t\t\t\t}else{\n\t\t\t\t\tc1 = m.multiplyPoint(M, curve.c2);\n\t\t\t\t\tc2 = m.multiplyPoint(M, curve.c1);\n\t\t\t\t\te  = m.multiplyPoint(M, curve.s );\n\t\t\t\t}\n\t\t\t\t// draw the curve\n\t\t\t\tresult.push([c1.x, c1.y, c2.x, c2.y, e.x, e.y]);\n\t\t\t\tstartAngle += 2 * step;\n\t\t\t}\n\t\t\treturn result;\t// Array\n\t\t}\n\t};\n\t\n\treturn arc;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 291:\n/*!*********************************!*\\\n  !*** ../dojox/gfx/decompose.js ***!\n  \\*********************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base */ 236), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! ./matrix */ 239)], __WEBPACK_AMD_DEFINE_RESULT__ = function (g, lang, m){\n\tfunction eq(/* Number */ a, /* Number */ b){\n\t\t// summary:\n\t\t//\t\tcompare two FP numbers for equality\n\t\treturn Math.abs(a - b) <= 1e-6 * (Math.abs(a) + Math.abs(b));\t// Boolean\n\t}\n\n\tfunction calcFromValues(/* Number */ r1, /* Number */ m1, /* Number */ r2, /* Number */ m2){\n\t\t// summary:\n\t\t//\t\tuses two close FP ration and their original magnitudes to approximate the result\n\t\tif(!isFinite(r1)){\n\t\t\treturn r2;\t// Number\n\t\t}else if(!isFinite(r2)){\n\t\t\treturn r1;\t// Number\n\t\t}\n\t\tm1 = Math.abs(m1); m2 = Math.abs(m2);\n\t\treturn (m1 * r1 + m2 * r2) / (m1 + m2);\t// Number\n\t}\n\n\tfunction transpose(matrix){\n\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta 2D matrix-like object\n\t\tvar M = new m.Matrix2D(matrix);\n\t\treturn lang.mixin(M, {dx: 0, dy: 0, xy: M.yx, yx: M.xy});\t// dojox/gfx/matrix.Matrix2D\n\t}\n\n\tfunction scaleSign(/* dojox/gfx/matrix.Matrix2D */ matrix){\n\t\treturn (matrix.xx * matrix.yy < 0 || matrix.xy * matrix.yx > 0) ? -1 : 1;\t// Number\n\t}\n\n\tfunction eigenvalueDecomposition(matrix){\n\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta 2D matrix-like object\n\t\tvar M = m.normalize(matrix),\n\t\t\tb = -M.xx - M.yy,\n\t\t\tc = M.xx * M.yy - M.xy * M.yx,\n\t\t\td = Math.sqrt(b * b - 4 * c),\n\t\t\tl1 = -(b + (b < 0 ? -d : d)) / 2,\n\t\t\tl2 = c / l1,\n\t\t\tvx1 = M.xy / (l1 - M.xx), vy1 = 1,\n\t\t\tvx2 = M.xy / (l2 - M.xx), vy2 = 1;\n\t\tif(eq(l1, l2)){\n\t\t\tvx1 = 1, vy1 = 0, vx2 = 0, vy2 = 1;\n\t\t}\n\t\tif(!isFinite(vx1)){\n\t\t\tvx1 = 1, vy1 = (l1 - M.xx) / M.xy;\n\t\t\tif(!isFinite(vy1)){\n\t\t\t\tvx1 = (l1 - M.yy) / M.yx, vy1 = 1;\n\t\t\t\tif(!isFinite(vx1)){\n\t\t\t\t\tvx1 = 1, vy1 = M.yx / (l1 - M.yy);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!isFinite(vx2)){\n\t\t\tvx2 = 1, vy2 = (l2 - M.xx) / M.xy;\n\t\t\tif(!isFinite(vy2)){\n\t\t\t\tvx2 = (l2 - M.yy) / M.yx, vy2 = 1;\n\t\t\t\tif(!isFinite(vx2)){\n\t\t\t\t\tvx2 = 1, vy2 = M.yx / (l2 - M.yy);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar d1 = Math.sqrt(vx1 * vx1 + vy1 * vy1),\n\t\t\td2 = Math.sqrt(vx2 * vx2 + vy2 * vy2);\n\t\tif(!isFinite(vx1 /= d1)){ vx1 = 0; }\n\t\tif(!isFinite(vy1 /= d1)){ vy1 = 0; }\n\t\tif(!isFinite(vx2 /= d2)){ vx2 = 0; }\n\t\tif(!isFinite(vy2 /= d2)){ vy2 = 0; }\n\t\treturn {\t// Object\n\t\t\tvalue1: l1,\n\t\t\tvalue2: l2,\n\t\t\tvector1: {x: vx1, y: vy1},\n\t\t\tvector2: {x: vx2, y: vy2}\n\t\t};\n\t}\n\n\tfunction decomposeSR(/* dojox/gfx/matrix.Matrix2D */ M, /* Object */ result){\n\t\t// summary:\n\t\t//\t\tdecomposes a matrix into [scale, rotate]; no checks are done.\n\t\tvar sign = scaleSign(M),\n\t\t\ta = result.angle1 = (Math.atan2(M.yx, M.yy) + Math.atan2(-sign * M.xy, sign * M.xx)) / 2,\n\t\t\tcos = Math.cos(a), sin = Math.sin(a);\n\t\tresult.sx = calcFromValues(M.xx / cos, cos, -M.xy / sin, sin);\n\t\tresult.sy = calcFromValues(M.yy / cos, cos,  M.yx / sin, sin);\n\t\treturn result;\t// Object\n\t}\n\n\tfunction decomposeRS(/* dojox/gfx/matrix.Matrix2D */ M, /* Object */ result){\n\t\t// summary:\n\t\t//\t\tdecomposes a matrix into [rotate, scale]; no checks are done\n\t\tvar sign = scaleSign(M),\n\t\t\ta = result.angle2 = (Math.atan2(sign * M.yx, sign * M.xx) + Math.atan2(-M.xy, M.yy)) / 2,\n\t\t\tcos = Math.cos(a), sin = Math.sin(a);\n\t\tresult.sx = calcFromValues(M.xx / cos, cos,  M.yx / sin, sin);\n\t\tresult.sy = calcFromValues(M.yy / cos, cos, -M.xy / sin, sin);\n\t\treturn result;\t// Object\n\t}\n\n\treturn g.decompose = function(matrix){\n\t\t// summary:\n\t\t//\t\tDecompose a 2D matrix into translation, scaling, and rotation components.\n\t\t// description:\n\t\t//\t\tThis function decompose a matrix into four logical components:\n\t\t//\t\ttranslation, rotation, scaling, and one more rotation using SVD.\n\t\t//\t\tThe components should be applied in following order:\n\t\t//\t| [translate, rotate(angle2), scale, rotate(angle1)]\n\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta 2D matrix-like object\n\t\tvar M = m.normalize(matrix),\n\t\t\tresult = {dx: M.dx, dy: M.dy, sx: 1, sy: 1, angle1: 0, angle2: 0};\n\t\t// detect case: [scale]\n\t\tif(eq(M.xy, 0) && eq(M.yx, 0)){\n\t\t\treturn lang.mixin(result, {sx: M.xx, sy: M.yy});\t// Object\n\t\t}\n\t\t// detect case: [scale, rotate]\n\t\tif(eq(M.xx * M.yx, -M.xy * M.yy)){\n\t\t\treturn decomposeSR(M, result);\t// Object\n\t\t}\n\t\t// detect case: [rotate, scale]\n\t\tif(eq(M.xx * M.xy, -M.yx * M.yy)){\n\t\t\treturn decomposeRS(M, result);\t// Object\n\t\t}\n\t\t// do SVD\n\t\tvar\tMT = transpose(M),\n\t\t\tu  = eigenvalueDecomposition([M, MT]),\n\t\t\tv  = eigenvalueDecomposition([MT, M]),\n\t\t\tU  = new m.Matrix2D({xx: u.vector1.x, xy: u.vector2.x, yx: u.vector1.y, yy: u.vector2.y}),\n\t\t\tVT = new m.Matrix2D({xx: v.vector1.x, xy: v.vector1.y, yx: v.vector2.x, yy: v.vector2.y}),\n\t\t\tS = new m.Matrix2D([m.invert(U), M, m.invert(VT)]);\n\t\tdecomposeSR(VT, result);\n\t\tS.xx *= result.sx;\n\t\tS.yy *= result.sy;\n\t\tdecomposeRS(U, result);\n\t\tS.xx *= result.sx;\n\t\tS.yy *= result.sy;\n\t\treturn lang.mixin(result, {sx: S.xx, sy: S.yy});\t// Object\n\t};\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 292:\n/*!***********************************!*\\\n  !*** ../dojox/gfx/bezierutils.js ***!\n  \\***********************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t__webpack_require__(/*! ./_base */ 236)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(gfx){\n\n\tvar bu = gfx.bezierutils = {},\n\t\terror = 0.1;\n\n\tvar tAtLength = bu.tAtLength = function(points, length){\n\t\t// summary:\n\t\t//\t\tReturns the t corresponding to the given length for the specified bezier curve.\n\t\t// points: Number[]\n\t\t//\t\tThe bezier points. Should be [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y] for a cubic\n\t\t//\t\tbezier curve or [p1x, p1y, cx, cy, p2x, p2y] for a quadratic bezier curve.\n\t\t// length: Number\n\t\t//\t\tThe length.\n\t\tvar t = 0,\n\t\t\tquadratic = points.length == 6,\n\t\t\tcurrentLen = 0,\n\t\t\tsplitCount = 0,\n\t\t\tsplitFunc = quadratic ? splitQBezierAtT : splitBezierAtT;\n\t\tvar _compute = function(p, error){\n\t\t\t// control points polygon length\n\t\t\tvar pLen = 0;\n\t\t\tfor(var i = 0; i < p.length-2; i+=2)\n\t\t\t\tpLen += distance(p[i],p[i+1],p[i+2],p[i+3]);\n\t\t\t// chord length\n\t\t\tvar chord = quadratic ?\n\t\t\t\tdistance(points[0],points[1],points[4],points[5]) :\n\t\t\t\tdistance(points[0],points[1],points[6],points[7]);\n\t\t\t// if needs more approx. or if currentLen is greater than the target length,\n\t\t\t// split the curve one more time\n\t\t\tif(pLen - chord > error || currentLen + pLen > length + error){\n\t\t\t\t++splitCount;\n\t\t\t\tvar newbezier = splitFunc(p, .5);\n\t\t\t\t// check 1st subpath\n\t\t\t\t_compute(newbezier[0], error);\n\t\t\t\t// the 1st subcurve was the good one, we stop\n\t\t\t\tif(Math.abs(currentLen - length) <= error){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// need to continue with the 2nde subcurve\n\t\t\t\t_compute(newbezier[1], error);\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tcurrentLen += pLen;\n\t\t\tt += 1.0 / (1 << splitCount);\n\t\t};\n\t\tif(length)\n\t\t\t_compute(points, 0.5);\n\t\treturn t;\n\t};\n\n\tvar computeLength = bu.computeLength = function(/*Array*/points){\n\t\t// summary:\n\t\t//\t\tReturns the length of the given bezier curve.\n\t\t// points: Number[]\n\t\t//\t\tThe bezier points. Should be [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y] for a cubic\n\t\t//\t\tbezier curve or [p1x, p1y, cx, cy, p2x, p2y] for a quadratic bezier curve.\n\n\t\tvar quadratic = points.length == 6, pLen=0;\n\t\t// control points polygon length\n\t\tfor(var i = 0; i < points.length-2; i+=2)\n\t\t\tpLen += distance(points[i],points[i+1],points[i+2],points[i+3]);\n\t\t// chord length\n\t\tvar chord = quadratic ?\n\t\t\tdistance(points[0],points[1],points[4],points[5]) :\n\t\t\tdistance(points[0],points[1],points[6],points[7]);\n\t\t// split polygons until the polygon and the chord are \"the same\"\n\t\tif(pLen-chord>error){\n\t\t\tvar newBeziers = quadratic ? splitQBezierAtT(points,.5) : splitCBezierAtT(points,.5);\n\t\t\tvar length = computeLength(newBeziers[0], quadratic);\n\t\t\tlength += computeLength(newBeziers[1], quadratic);\n\t\t\treturn length;\n\t\t}\n\t\t// pLen is close enough, done.\n\t\treturn pLen;\n\t};\n\n\tvar distance = bu.distance = function(x1, y1, x2, y2){\n\t\t// summary:\n\t\t//\t\tReturns the distance between the specified points.\n\t\treturn Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n\t};\n\n\tvar splitQBezierAtT = function(points, t){\n\t\t// summary:\n\t\t//\t\tSplit a quadratic bezier curve into 2 sub-quadratic beziers at the specified t.\n\n\t\t// de Casteljau\n\t\tvar r = 1-t,\n\t\t\tr2 = r*r,\n\t\t\tt2 = t*t,\n\t\t\tp1x = points[0],\n\t\t\tp1y = points[1],\n\t\t\tcx = points[2],\n\t\t\tcy = points[3],\n\t\t\tp2x = points[4],\n\t\t\tp2y = points[5],\n\n\t\t\tax = r*p1x + t*cx,\n\t\t\tay = r*p1y + t*cy,\n\t\t\tbx = r*cx + t*p2x,\n\t\t\tby = r*cy + t*p2y,\n\t\t\tpx = r2*p1x + 2*r*t*cx + t2*p2x,\n\t\t\tpy = r2*p1y + 2*r*t*cy + t2*p2y;\n\n\t\treturn [\n\t\t\t[\n\t\t\t\tp1x, p1y,\n\t\t\t\tax, ay,\n\t\t\t\tpx, py\n\t\t\t],\n\t\t\t[\n\t\t\t\tpx, py,\n\t\t\t\tbx, by,\n\t\t\t\tp2x, p2y\n\t\t\t]\n\t\t];\n\t};\n\n\tvar splitCBezierAtT = function(points, t){\n\t\t// summary:\n\t\t//\t\tSplit a cubic bezier curve into 2 sub-cubic beziers at the specified t.\n\n\t\t// de Casteljau\n\t\tvar r = 1-t,\n\t\t\tr2 = r*r,\n\t\t\tr3 = r2*r,\n\t\t\tt2 = t*t,\n\t\t\tt3 = t2*t,\n\t\t\tp1x = points[0],\n\t\t\tp1y = points[1],\n\t\t\tc1x = points[2],\n\t\t\tc1y = points[3],\n\t\t\tc2x = points[4],\n\t\t\tc2y = points[5],\n\t\t\tp2x = points[6],\n\t\t\tp2y = points[7],\n\n\t\t\tax = r*p1x + t*c1x,\n\t\t\tay = r*p1y + t*c1y,\n\t\t\tcx = r*c2x + t*p2x,\n\t\t\tcy = r*c2y + t*p2y,\n\t\t\tmx = r2*p1x + 2*r*t*c1x + t2*c2x,\n\t\t\tmy = r2*p1y + 2*r*t*c1y + t2*c2y,\n\t\t\tnx = r2*c1x + 2*r*t*c2x + t2*p2x,\n\t\t\tny = r2*c1y + 2*r*t*c2y + t2*p2y,\n\t\t\tpx = r3*p1x + 3*r2*t*c1x + 3*r*t2*c2x+t3*p2x,\n\t\t\tpy = r3*p1y + 3*r2*t*c1y + 3*r*t2*c2y+t3*p2y;\n\n\t\treturn [\n\t\t\t[\n\t\t\t\tp1x, p1y,\n\t\t\t\tax, ay,\n\t\t\t\tmx, my,\n\t\t\t\tpx, py\n\t\t\t],\n\t\t\t[\n\t\t\t\tpx, py,\n\t\t\t\tnx, ny,\n\t\t\t\tcx, cy,\n\t\t\t\tp2x, p2y\n\t\t\t]\n\t\t];\n\t};\n\n\tvar splitBezierAtT = bu.splitBezierAtT = function(points, t){\n\t\treturn points.length == 6 ? splitQBezierAtT(points, t) : splitCBezierAtT(points, t);\n\t};\n\treturn bu;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ 293:\n/*!*****************************************!*\\\n  !*** ../dojox/lang/functional/array.js ***!\n  \\*****************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/kernel */ 1), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! ./lambda */ 244)], __WEBPACK_AMD_DEFINE_RESULT__ = function(kernel, lang, arr, df){\n\n// This module adds high-level functions and related constructs:\n//\t- array-processing functions similar to standard JS functions\n\n// Notes:\n//\t- this module provides JS standard methods similar to high-level functions in dojo/_base/array.js:\n//\t\tforEach, map, filter, every, some\n\n// Defined methods:\n//\t- take any valid lambda argument as the functional argument\n//\t- operate on dense arrays\n//\t- take a string as the array argument\n//\t- take an iterator objects as the array argument\n\n\tvar empty = {};\n\n\tlang.mixin(df, {\n\t\t// JS 1.6 standard array functions, which can take a lambda as a parameter.\n\t\t// Consider using dojo._base.array functions, if you don't need the lambda support.\n\t\tfilter: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a new array with all elements that pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t = [], v, i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\n\t\t\t\t\tv = a[i];\n\t\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\n\t\t\t\t}\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext();){\n\t\t\t\t\tv = a.next();\n\t\t\t\t\tif(f.call(o, v, i++, a)){ t.push(v); }\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tv = a[i];\n\t\t\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\t// Array\n\t\t},\n\t\tforEach: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\texecutes a provided function once per array element.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; f.call(o, a[i], i, a), ++i);\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext(); f.call(o, a.next(), i++, a));\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tf.call(o, a[i], i, a);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn o;\t// Object\n\t\t},\n\t\tmap: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a new array with the results of calling\n\t\t\t//\t\ta provided function on every element in this array.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t, n, i;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tt = new Array(n = a.length);\n\t\t\t\tfor(i = 0; i < n; t[i] = f.call(o, a[i], i, a), ++i);\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tt = [];\n\t\t\t\tfor(i = 0; a.hasNext(); t.push(f.call(o, a.next(), i++, a)));\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tt = [];\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tt.push(f.call(o, a[i], i, a));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\t// Array\n\t\t},\n\t\tevery: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\ttests whether all elements in the array pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\n\t\t\t\t\tif(!f.call(o, a[i], i, a)){\n\t\t\t\t\t\treturn false;\t// Boolean\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext();){\n\t\t\t\t\tif(!f.call(o, a.next(), i++, a)){\n\t\t\t\t\t\treturn false;\t// Boolean\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tif(!f.call(o, a[i], i, a)){\n\t\t\t\t\t\t\treturn false;\t// Boolean\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\t// Boolean\n\t\t},\n\t\tsome: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\ttests whether some element in the array passes the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\n\t\t\t\t\tif(f.call(o, a[i], i, a)){\n\t\t\t\t\t\treturn true;\t// Boolean\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext();){\n\t\t\t\t\tif(f.call(o, a.next(), i++, a)){\n\t\t\t\t\t\treturn true;\t// Boolean\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tif(f.call(o, a[i], i, a)){\n\t\t\t\t\t\t\treturn true;\t// Boolean\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\t// Boolean\n\t\t}\n\t});\n\t\n\treturn df;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 294:\n/*!******************************************!*\\\n  !*** ../dojox/lang/functional/object.js ***!\n  \\******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/kernel */ 1), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! ./lambda */ 244)], __WEBPACK_AMD_DEFINE_RESULT__ = function(kernel, lang, df){\n\n// This module adds high-level functions and related constructs:\n//\t- object/dictionary helpers\n\n// Defined methods:\n//\t- take any valid lambda argument as the functional argument\n//\t- skip all attributes that are present in the empty object\n//\t\t(IE and/or 3rd-party libraries).\n\n\tvar empty = {};\n\n\tlang.mixin(df, {\n\t\t// object helpers\n\t\tkeys: function(/*Object*/ obj){\n\t\t\t// summary:\n\t\t\t//\t\treturns an array of all keys in the object\n\t\t\tvar t = [];\n\t\t\tfor(var i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tt.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\tt; // Array\n\t\t},\n\t\tvalues: function(/*Object*/ obj){\n\t\t\t// summary:\n\t\t\t//\t\treturns an array of all values in the object\n\t\t\tvar t = [];\n\t\t\tfor(var i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tt.push(obj[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\tt; // Array\n\t\t},\n\t\tfilterIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates new object with all attributes that pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t = {}, v, i;\n\t\t\tfor(i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tv = obj[i];\n\t\t\t\t\tif(f.call(o, v, i, obj)){ t[i] = v; }\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\t// Object\n\t\t},\n\t\tforIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\titerates over all object attributes.\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tf.call(o, obj[i], i, obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn o;\t// Object\n\t\t},\n\t\tmapIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates new object with the results of calling\n\t\t\t//\t\ta provided function on every attribute in this object.\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t = {}, i;\n\t\t\tfor(i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tt[i] = f.call(o, obj[i], i, obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\t// Object\n\t\t}\n\t});\n\t\n\treturn df;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 295:\n/*!*********************************************!*\\\n  !*** ../dojox/charting/scaler/primitive.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang){\n\tvar primitive = lang.getObject(\"dojox.charting.scaler.primitive\", true);\n\treturn lang.mixin(primitive, {\n\t\tbuildScaler: function(/*Number*/ min, /*Number*/ max, /*Number*/ span, /*Object*/ kwArgs){\n\t\t\tif(min == max){\n\t\t\t\t// artificially extend bounds\n\t\t\t\tmin -= 0.5;\n\t\t\t\tmax += 0.5;\n\t\t\t\t// now the line will be centered\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tbounds: {\n\t\t\t\t\tlower: min,\n\t\t\t\t\tupper: max,\n\t\t\t\t\tfrom:  min,\n\t\t\t\t\tto:    max,\n\t\t\t\t\tscale: span / (max - min),\n\t\t\t\t\tspan:  span\n\t\t\t\t},\n\t\t\t\tscaler: primitive\n\t\t\t};\n\t\t},\n\t\tbuildTicks: function(/*Object*/ scaler, /*Object*/ kwArgs){\n\t\t\treturn {major: [], minor: [], micro: []};\t// Object\n\t\t},\n\t\tgetTransformerFromModel: function(/*Object*/ scaler){\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\n\t\t\treturn function(x){ return (x - offset) * scale; };\t// Function\n\t\t},\n\t\tgetTransformerFromPlot: function(/*Object*/ scaler){\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\n\t\t\treturn function(x){ return x / scale + offset; };\t// Function\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 296:\n/*!**********************************!*\\\n  !*** ../dojox/charting/Chart.js ***!\n  \\**********************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../main */ 245), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5),__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/dom-style */ 10),\n\t__webpack_require__(/*! dojo/dom */ 6), __webpack_require__(/*! dojo/dom-geometry */ 17), __webpack_require__(/*! dojo/dom-construct */ 16),__webpack_require__(/*! dojo/_base/Color */ 78), __webpack_require__(/*! dojo/sniff */ 8),\n\t__webpack_require__(/*! ./Element */ 247), __webpack_require__(/*! ./SimpleTheme */ 262), __webpack_require__(/*! ./Series */ 297), __webpack_require__(/*! ./axis2d/common */ 246), __webpack_require__(/*! dojox/gfx/shape */ 243),\n\t__webpack_require__(/*! dojox/gfx */ 237), __webpack_require__.dj.h(/*! dojo/has!dojo-bidi?./bidi/Chart */ \"dojo-bidi?298\"), __webpack_require__(/*! dojox/lang/functional */ 234), __webpack_require__(/*! dojox/lang/functional/fold */ 302), __webpack_require__(/*! dojox/lang/functional/reversed */ 242)], __WEBPACK_AMD_DEFINE_RESULT__ = function(dojox, lang, arr, declare, domStyle,\n\t \t\t dom, domGeom, domConstruct, Color, has,\n\t \t\t Element, SimpleTheme, Series, common, shape,\n\t \t\t g, BidiChart, func){\n\t/*=====\n\tvar __ChartCtorArgs = {\n\t\t// summary:\n\t\t//\t\tThe keyword arguments that can be passed in a Chart constructor.\n\t\t// margins: Object?\n\t\t//\t\tOptional margins for the chart, in the form of { l, t, r, b}.\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tAn optional outline/stroke for the chart.\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tAn optional fill for the chart.\n\t\t// delayInMs: Number\n\t\t//\t\tDelay in ms for delayedRender(). Default: 200.\n\t};\n\t=====*/\n\n\t/*=====\n\tvar __SeriesCtorArgs = {\n\t\t// summary:\n\t\t//\t\tAn optional arguments object that can be used in the Series constructor.\n\t\t// plot: String?\n\t\t//\t\tThe plot (by name) that this series belongs to.\n\t};\n\t=====*/\n\n\t/*=====\n\tvar __BaseAxisCtorArgs = {\n\t\t// summary:\n\t\t//\t\tOptional arguments used in the definition of an invisible axis.\n\t\t// vertical: Boolean?\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\n\t\t// min: Number?\n\t\t//\t\tThe smallest value on an axis. Default is 0.\n\t\t// max: Number?\n\t\t//\t\tThe largest value on an axis. Default is 1.\n\t};\n\t=====*/\n\n\tvar dc = lang.getObject(\"charting\", true, dojox),\n\t\tclear = func.lambda(\"item.clear()\"),\n\t\tpurge = func.lambda(\"item.purgeGroup()\"),\n\t\tdestroy = func.lambda(\"item.destroy()\"),\n\t\tmakeClean = func.lambda(\"item.dirty = false\"),\n\t\tmakeDirty = func.lambda(\"item.dirty = true\"),\n\t\tgetName = func.lambda(\"item.name\"),\n\t\tdefaultMargins = {l: 10, t: 10, r: 10, b: 10};\n\n\tvar Chart = declare(has(\"dojo-bidi\")? \"dojox.charting.NonBidiChart\" : \"dojox.charting.Chart\", null, {\n\t\t// summary:\n\t\t//\t\tThe main chart object in dojox.charting.  This will create a two dimensional\n\t\t//\t\tchart based on dojox.gfx.\n\t\t//\n\t\t// description:\n\t\t//\t\tdojox.charting.Chart is the primary object used for any kind of charts.  It\n\t\t//\t\tis simple to create--just pass it a node reference, which is used as the\n\t\t//\t\tcontainer for the chart--and a set of optional keyword arguments and go.\n\t\t//\n\t\t//\t\tNote that like most of dojox.gfx, most of dojox.charting.Chart's methods are\n\t\t//\t\tdesigned to return a reference to the chart itself, to allow for functional\n\t\t//\t\tchaining.  This makes defining everything on a Chart very easy to do.\n\t\t//\n\t\t// example:\n\t\t//\t\tCreate an area chart, with smoothing.\n\t\t//\t|\trequire([\"dojox/charting/Chart\", \"dojox/charting/themes/Shrooms\", \"dojox/charting/plot2d/Areas\", ...],\n\t\t// \t|\t\tfunction(Chart, Shrooms, Areas, ...){\n\t\t//\t|\t\tnew Chart(node)\n\t\t//\t|\t\t\t.addPlot(\"default\", { type: Areas, tension: \"X\" })\n\t\t//\t|\t\t\t.setTheme(Shrooms)\n\t\t//\t|\t\t\t.addSeries(\"Series A\", [1, 2, 0.5, 1.5, 1, 2.8, 0.4])\n\t\t//\t|\t\t\t.addSeries(\"Series B\", [2.6, 1.8, 2, 1, 1.4, 0.7, 2])\n\t\t//\t|\t\t\t.addSeries(\"Series C\", [6.3, 1.8, 3, 0.5, 4.4, 2.7, 2])\n\t\t//\t|\t\t\t.render();\n\t\t//\t|\t});\n\t\t//\n\t\t// example:\n\t\t//\t\tThe form of data in a data series can take a number of forms: a simple array,\n\t\t//\t\tan array of objects {x,y}, or something custom (as determined by the plot).\n\t\t//\t\tHere's an example of a Candlestick chart, which expects an object of\n\t\t//\t\t{ open, high, low, close }.\n\t\t//\t|\trequire([\"dojox/charting/Chart\", \"dojox/charting/plot2d/Candlesticks\", ...],\n\t\t// \t|\t\tfunction(Chart, Candlesticks, ...){\n\t\t//\t|\t\tnew Chart(node)\n\t\t//\t|\t\t\t.addPlot(\"default\", {type: Candlesticks, gap: 1})\n\t\t//\t|\t\t\t.addAxis(\"x\", {fixLower: \"major\", fixUpper: \"major\", includeZero: true})\n\t\t//\t|\t\t\t.addAxis(\"y\", {vertical: true, fixLower: \"major\", fixUpper: \"major\", natural: true})\n\t\t//\t|\t\t\t.addSeries(\"Series A\", [\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 22, high: 26, low: 6, mid: 18 },\n\t\t//\t|\t\t\t\t\t{ open: 22, close: 18, high: 22, low: 11, mid: 21 },\n\t\t//\t|\t\t\t\t\t{ open: 18, close: 29, high: 32, low: 14, mid: 27 },\n\t\t//\t|\t\t\t\t\t{ open: 29, close: 24, high: 29, low: 13, mid: 27 },\n\t\t//\t|\t\t\t\t\t{ open: 24, close: 8, high: 24, low: 5 },\n\t\t//\t|\t\t\t\t\t{ open: 8, close: 16, high: 22, low: 2 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 12, high: 19, low: 7 },\n\t\t//\t|\t\t\t\t\t{ open: 12, close: 20, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 22, high: 26, low: 6, mid: 18 },\n\t\t//\t|\t\t\t\t\t{ open: 22, close: 18, high: 22, low: 11, mid: 21 },\n\t\t//\t|\t\t\t\t\t{ open: 18, close: 29, high: 32, low: 14, mid: 27 },\n\t\t//\t|\t\t\t\t\t{ open: 29, close: 24, high: 29, low: 13, mid: 27 },\n\t\t//\t|\t\t\t\t\t{ open: 24, close: 8, high: 24, low: 5 },\n\t\t//\t|\t\t\t\t\t{ open: 8, close: 16, high: 22, low: 2 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 12, high: 19, low: 7 },\n\t\t//\t|\t\t\t\t\t{ open: 12, close: 20, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 22, high: 26, low: 6 },\n\t\t//\t|\t\t\t\t\t{ open: 22, close: 18, high: 22, low: 11 },\n\t\t//\t|\t\t\t\t\t{ open: 18, close: 29, high: 32, low: 14 },\n\t\t//\t|\t\t\t\t\t{ open: 29, close: 24, high: 29, low: 13 },\n\t\t//\t|\t\t\t\t\t{ open: 24, close: 8, high: 24, low: 5 },\n\t\t//\t|\t\t\t\t\t{ open: 8, close: 16, high: 22, low: 2 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 12, high: 19, low: 7 },\n\t\t//\t|\t\t\t\t\t{ open: 12, close: 20, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 }\n\t\t//\t|\t\t\t\t],\n\t\t//\t|\t\t\t\t{ stroke: { color: \"green\" }, fill: \"lightgreen\" }\n\t\t//\t|\t\t\t)\n\t\t//\t|\t\t\t.render();\n\t\t//\t|\t});\n\t\t\n\t\t// theme: dojox/charting/SimpleTheme?\n\t\t//\t\tAn optional theme to use for styling the chart.\n\t\t// axes: dojox/charting/axis2d/Base{}?\n\t\t//\t\tA map of axes for use in plotting a chart.\n\t\t// stack: dojox/charting/plot2d/Base[]\n\t\t//\t\tA stack of plotters.\n\t\t// plots: dojox/charting/plot2d/Base{}\n\t\t//\t\tA map of plotter indices\n\t\t// series: dojox/charting/Series[]\n\t\t//\t\tThe stack of data runs used to create plots.\n\t\t// runs: dojox/charting/Series{}\n\t\t//\t\tA map of series indices\n\t\t// margins: Object?\n\t\t//\t\tThe margins around the chart. Default is { l:10, t:10, r:10, b:10 }.\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tThe outline of the chart (stroke in vector graphics terms).\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tThe color for the chart.\n\t\t// node: DOMNode\n\t\t//\t\tThe container node passed to the constructor.\n\t\t// surface: dojox/gfx/shape.Surface\n\t\t//\t\tThe main graphics surface upon which a chart is drawn.\n\t\t// dirty: Boolean\n\t\t//\t\tA boolean flag indicating whether or not the chart needs to be updated/re-rendered.\n\t\t// htmlLabels: Boolean\n\t\t//\t\tA boolean flag indicating whether or not it should try to use HTML-based labels for the title or not.\n\t\t//\t\tThe default is true.  The only caveat is IE and Opera browsers will always use GFX-based labels.\n\n\t\tconstructor: function(/* DOMNode */node, /* __ChartCtorArgs? */kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a new Chart.  Initializes all parameters used for a chart.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tThe newly created chart.\n\n\t\t\t// initialize parameters\n\t\t\tif(!kwArgs){ kwArgs = {}; }\n\t\t\tthis.margins = kwArgs.margins || defaultMargins;\n\t\t\tthis._customMargins = !!kwArgs.margins;\n\t\t\tthis.stroke    = kwArgs.stroke;\n\t\t\tthis.fill      = kwArgs.fill;\n\t\t\tthis.delayInMs = kwArgs.delayInMs || 200;\n\t\t\tthis.title     = kwArgs.title;\n\t\t\tthis.titleGap  = kwArgs.titleGap;\n\t\t\tthis.titlePos  = kwArgs.titlePos;\n\t\t\tthis.titleFont = kwArgs.titleFont;\n\t\t\tthis.titleFontColor = kwArgs.titleFontColor;\n\t\t\tthis.titleAlign = kwArgs.titleAlign; // This can be middle, left, right, or edge \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t // edge is left or right aligned with chart plot edge depending on bidi.\n\t\t\tthis.chartTitle = null;\n\t\t\tthis.htmlLabels = true;\n\t\t\tif(\"htmlLabels\" in kwArgs){\n\t\t\t\tthis.htmlLabels = kwArgs.htmlLabels;\n\t\t\t}\n\n\t\t\t// default initialization\n\t\t\tthis.theme = null;\n\t\t\tthis.axes = {};\t\t// map of axes\n\t\t\tthis.stack = [];\t// stack of plotters\n\t\t\tthis.plots = {};\t// map of plotter indices\n\t\t\tthis.series = [];\t// stack of data runs\n\t\t\tthis.runs = {};\t\t// map of data run indices\n\t\t\tthis.dirty = true;\n\n\t\t\t// create a surface\n\t\t\tthis.node = dom.byId(node);\n\t\t\tvar box = domGeom.getMarginBox(node);\n\t\t\tthis.surface = g.createSurface(this.node, box.w || 400, box.h || 300);\n\t\t\tif(this.surface.declaredClass.indexOf(\"vml\") == -1){\n\t\t\t\t// except if vml use native clipping\n\t\t\t\tthis._nativeClip = true;\n\t\t\t}\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCleanup when a chart is to be destroyed.\n\t\t\t// returns: void\n\t\t\tarr.forEach(this.series, destroy);\n\t\t\tarr.forEach(this.stack,  destroy);\n\t\t\tfunc.forIn(this.axes, destroy);\n\t\t\tthis.surface.destroy();\n\t\t\tif(this.chartTitle && this.chartTitle.tagName){\n\t\t\t\t// destroy title if it is a DOM node\n\t\t\t\tdomConstruct.destroy(this.chartTitle);\n\t\t\t}\n\t\t},\n\t\tgetCoords: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the coordinates and dimensions of the containing DOMNode, as\n\t\t\t//\t\treturned by dojo.coords.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe resulting coordinates of the chart.  See dojo.coords for details.\n\t\t\tvar node = this.node;\n\t\t\tvar s = domStyle.getComputedStyle(node), coords = domGeom.getMarginBox(node, s);\n\t\t\tvar abs = domGeom.position(node, true);\n\t\t\tcoords.x = abs.x;\n\t\t\tcoords.y = abs.y;\n\t\t\treturn coords;\t//\tObject\n\t\t},\n\t\tsetTheme: function(theme){\n\t\t\t// summary:\n\t\t\t//\t\tSet a theme of the chart.\n\t\t\t// theme: dojox/charting/SimpleTheme\n\t\t\t//\t\tThe theme to be used for visual rendering.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tthis.theme = theme.clone();\n\t\t\tif(!this._customMargins){\n\t\t\t\tthis.margins = this.theme.chart.margins || defaultMargins;\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\taddAxis: function(name, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tAdd an axis to the chart, for rendering.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the axis.\n\t\t\t// kwArgs: __BaseAxisCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object for use in defining details of an axis.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar axis, axisType = kwArgs && kwArgs.type || \"Default\";\n\t\t\tif(typeof axisType == \"string\"){\n\t\t\t\tif(!dc.axis2d || !dc.axis2d[axisType]){\n\t\t\t\t\tthrow Error(\"Can't find axis: \" + axisType + \" - Check \" + \"require() dependencies.\");\n\t\t\t\t}\n\t\t\t\taxis = new dc.axis2d[axisType](this, kwArgs);\n\t\t\t}else{\n\t\t\t\taxis = new axisType(this, kwArgs);\n\t\t\t}\n\t\t\taxis.name = name;\n\t\t\taxis.dirty = true;\n\t\t\tif(name in this.axes){\n\t\t\t\tthis.axes[name].destroy();\n\t\t\t}\n\t\t\tthis.axes[name] = axis;\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetAxis: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tGet the given axis, by name.\n\t\t\t// name: String\n\t\t\t//\t\tThe name the axis was defined by.\n\t\t\t// returns: dojox/charting/axis2d/Default\n\t\t\t//\t\tThe axis as stored in the chart's axis map.\n\t\t\treturn this.axes[name];\t//\tdojox/charting/axis2d/Default\n\t\t},\n\t\tremoveAxis: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tRemove the axis that was defined using name.\n\t\t\t// name: String\n\t\t\t//\t\tThe axis name, as defined in addAxis.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.axes){\n\t\t\t\t// destroy the axis\n\t\t\t\tthis.axes[name].destroy();\n\t\t\t\tdelete this.axes[name];\n\t\t\t\t// mark the chart as dirty\n\t\t\t\tthis.dirty = true;\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\taddPlot: function(name, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a new plot to the chart, defined by name and using the optional keyword arguments object.\n\t\t\t//\t\tNote that dojox.charting assumes the main plot to be called \"default\"; if you do not have\n\t\t\t//\t\ta plot called \"default\" and attempt to add data series to the chart without specifying the\n\t\t\t//\t\tplot to be rendered on, you WILL get errors.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the plot to be added to the chart.  If you only plan on using one plot, call it \"default\".\n\t\t\t// kwArgs: dojox.charting.plot2d.__PlotCtorArgs\n\t\t\t//\t\tAn object with optional parameters for the plot in question.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar plot, plotType = kwArgs && kwArgs.type || \"Default\";\n\t\t\tif(typeof plotType == \"string\"){\n\t\t\t\tif(!dc.plot2d || !dc.plot2d[plotType]){\n\t\t\t\t\tthrow Error(\"Can't find plot: \" + plotType + \" - didn't you forget to dojo\" + \".require() it?\");\n\t\t\t\t}\n\t\t\t\tplot = new dc.plot2d[plotType](this, kwArgs);\n\t\t\t}else{\n\t\t\t\tplot = new plotType(this, kwArgs);\n\t\t\t}\n\t\t\tplot.name = name;\n\t\t\tplot.dirty = true;\n\t\t\tif(name in this.plots){\n\t\t\t\tthis.stack[this.plots[name]].destroy();\n\t\t\t\tthis.stack[this.plots[name]] = plot;\n\t\t\t}else{\n\t\t\t\tthis.plots[name] = this.stack.length;\n\t\t\t\tthis.stack.push(plot);\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetPlot: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tGet the given plot, by name.\n\t\t\t// name: String\n\t\t\t//\t\tThe name the plot was defined by.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tThe plot.\n\t\t\treturn this.stack[this.plots[name]];\n\t\t},\n\t\tremovePlot: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tRemove the plot defined using name from the chart's plot stack.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the plot as defined using addPlot.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.plots){\n\t\t\t\t// get the index and remove the name\n\t\t\t\tvar index = this.plots[name];\n\t\t\t\tdelete this.plots[name];\n\t\t\t\t// destroy the plot\n\t\t\t\tthis.stack[index].destroy();\n\t\t\t\t// remove the plot from the stack\n\t\t\t\tthis.stack.splice(index, 1);\n\t\t\t\t// update indices to reflect the shift\n\t\t\t\tfunc.forIn(this.plots, function(idx, name, plots){\n\t\t\t\t\tif(idx > index){\n\t\t\t\t\t\tplots[name] = idx - 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// remove all related series\n\t\t\t\tvar ns = arr.filter(this.series, function(run){ return run.plot != name; });\n\t\t\t\tif(ns.length < this.series.length){\n\t\t\t\t\t// kill all removed series\n\t\t\t\t\tarr.forEach(this.series, function(run){\n\t\t\t\t\t\tif(run.plot == name){\n\t\t\t\t\t\t\trun.destroy();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t// rebuild all necessary data structures\n\t\t\t\t\tthis.runs = {};\n\t\t\t\t\tarr.forEach(ns, function(run, index){\n\t\t\t\t\t\tthis.runs[run.plot] = index;\n\t\t\t\t\t}, this);\n\t\t\t\t\tthis.series = ns;\n\t\t\t\t}\n\t\t\t\t// mark the chart as dirty\n\t\t\t\tthis.dirty = true;\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetPlotOrder: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns an array of plot names in the current order\n\t\t\t//\t\t(the top-most plot is the first).\n\t\t\t// returns: Array\n\t\t\treturn func.map(this.stack, getName); // Array\n\t\t},\n\t\tsetPlotOrder: function(newOrder){\n\t\t\t// summary:\n\t\t\t//\t\tSets new order of plots. newOrder cannot add or remove\n\t\t\t//\t\tplots. Wrong names, or dups are ignored.\n\t\t\t// newOrder: Array\n\t\t\t//\t\tArray of plot names compatible with getPlotOrder().\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar names = {},\n\t\t\t\torder = func.filter(newOrder, function(name){\n\t\t\t\t\tif(!(name in this.plots) || (name in names)){\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tnames[name] = 1;\n\t\t\t\t\treturn true;\n\t\t\t\t}, this);\n\t\t\tif(order.length < this.stack.length){\n\t\t\t\tfunc.forEach(this.stack, function(plot){\n\t\t\t\t\tvar name = plot.name;\n\t\t\t\t\tif(!(name in names)){\n\t\t\t\t\t\torder.push(name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar newStack = func.map(order, function(name){\n\t\t\t\t\treturn this.stack[this.plots[name]];\n\t\t\t\t}, this);\n\t\t\tfunc.forEach(newStack, function(plot, i){\n\t\t\t\tthis.plots[plot.name] = i;\n\t\t\t}, this);\n\t\t\tthis.stack = newStack;\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tmovePlotToFront: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tMoves a given plot to front.\n\t\t\t// name: String\n\t\t\t//\t\tPlot's name to move.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.plots){\n\t\t\t\tvar index = this.plots[name];\n\t\t\t\tif(index){\n\t\t\t\t\tvar newOrder = this.getPlotOrder();\n\t\t\t\t\tnewOrder.splice(index, 1);\n\t\t\t\t\tnewOrder.unshift(name);\n\t\t\t\t\treturn this.setPlotOrder(newOrder);\t//\tdojox/charting/Chart\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tmovePlotToBack: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tMoves a given plot to back.\n\t\t\t// name: String\n\t\t\t//\t\tPlot's name to move.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.plots){\n\t\t\t\tvar index = this.plots[name];\n\t\t\t\tif(index < this.stack.length - 1){\n\t\t\t\t\tvar newOrder = this.getPlotOrder();\n\t\t\t\t\tnewOrder.splice(index, 1);\n\t\t\t\t\tnewOrder.push(name);\n\t\t\t\t\treturn this.setPlotOrder(newOrder);\t//\tdojox/charting/Chart\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\taddSeries: function(name, data, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a data series to the chart for rendering.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the data series to be plotted.\n\t\t\t// data: Array|Object\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\n\t\t\t//\t\tdestroy(), and setSeriesObject().\n\t\t\t// kwArgs: __SeriesCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object that will be mixed into\n\t\t\t//\t\tthe resultant series object.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar run = new Series(this, data, kwArgs);\n\t\t\trun.name = name;\n\t\t\tif(name in this.runs){\n\t\t\t\tthis.series[this.runs[name]].destroy();\n\t\t\t\tthis.series[this.runs[name]] = run;\n\t\t\t}else{\n\t\t\t\tthis.runs[name] = this.series.length;\n\t\t\t\tthis.series.push(run);\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\t// fix min/max\n\t\t\tif(!(\"ymin\" in run) && \"min\" in run){ run.ymin = run.min; }\n\t\t\tif(!(\"ymax\" in run) && \"max\" in run){ run.ymax = run.max; }\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetSeries: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tGet the given series, by name.\n\t\t\t// name: String\n\t\t\t//\t\tThe name the series was defined by.\n\t\t\t// returns: dojox/charting/Series\n\t\t\t//\t\tThe series.\n\t\t\treturn this.series[this.runs[name]];\n\t\t},\n\t\tremoveSeries: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tRemove the series defined by name from the chart.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the series as defined by addSeries.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.runs){\n\t\t\t\t// get the index and remove the name\n\t\t\t\tvar index = this.runs[name];\n\t\t\t\tdelete this.runs[name];\n\t\t\t\t// destroy the run\n\t\t\t\tthis.series[index].destroy();\n\t\t\t\t// remove the run from the stack of series\n\t\t\t\tthis.series.splice(index, 1);\n\t\t\t\t// update indices to reflect the shift\n\t\t\t\tfunc.forIn(this.runs, function(idx, name, runs){\n\t\t\t\t\tif(idx > index){\n\t\t\t\t\t\truns[name] = idx - 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.dirty = true;\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tupdateSeries: function(name, data, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tUpdate the given series with a new set of data points.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the series as defined in addSeries.\n\t\t\t// data: Array|Object\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\n\t\t\t//\t\tdestroy(), and setSeriesObject().\n\t\t\t// offsets: Boolean?\n\t\t\t//\t\tIf true recomputes the offsets of the chart based on the new\n\t\t\t//\t\tdata. This is useful if the range of data is drastically changing\n\t\t\t//\t\tand offsets need to be recomputed.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.runs){\n\t\t\t\tvar run = this.series[this.runs[name]];\n\t\t\t\trun.update(data);\n\t\t\t\tif(offsets){\n\t\t\t\t\tthis.dirty = true;\n\t\t\t\t}else{\n\t\t\t\t\tthis._invalidateDependentPlots(run.plot, false);\n\t\t\t\t\tthis._invalidateDependentPlots(run.plot, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetSeriesOrder: function(plotName){\n\t\t\t// summary:\n\t\t\t//\t\tReturns an array of series names in the current order\n\t\t\t//\t\t(the top-most series is the first) within a plot.\n\t\t\t// plotName: String\n\t\t\t//\t\tPlot's name.\n\t\t\t// returns: Array\n\t\t\treturn func.map(func.filter(this.series, function(run){\n\t\t\t\t\treturn run.plot == plotName;\n\t\t\t\t}), getName);\n\t\t},\n\t\tsetSeriesOrder: function(newOrder){\n\t\t\t// summary:\n\t\t\t//\t\tSets new order of series within a plot. newOrder cannot add\n\t\t\t//\t\tor remove series. Wrong names, or dups are ignored.\n\t\t\t// newOrder: Array\n\t\t\t//\t\tArray of series names compatible with getPlotOrder(). All\n\t\t\t//\t\tseries should belong to the same plot.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar plotName, names = {},\n\t\t\t\torder = func.filter(newOrder, function(name){\n\t\t\t\t\tif(!(name in this.runs) || (name in names)){\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tvar run = this.series[this.runs[name]];\n\t\t\t\t\tif(plotName){\n\t\t\t\t\t\tif(run.plot != plotName){\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tplotName = run.plot;\n\t\t\t\t\t}\n\t\t\t\t\tnames[name] = 1;\n\t\t\t\t\treturn true;\n\t\t\t\t}, this);\n\t\t\tfunc.forEach(this.series, function(run){\n\t\t\t\tvar name = run.name;\n\t\t\t\tif(!(name in names) && run.plot == plotName){\n\t\t\t\t\torder.push(name);\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar newSeries = func.map(order, function(name){\n\t\t\t\t\treturn this.series[this.runs[name]];\n\t\t\t\t}, this);\n\t\t\tthis.series = newSeries.concat(func.filter(this.series, function(run){\n\t\t\t\treturn run.plot != plotName;\n\t\t\t}));\n\t\t\tfunc.forEach(this.series, function(run, i){\n\t\t\t\tthis.runs[run.name] = i;\n\t\t\t}, this);\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tmoveSeriesToFront: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tMoves a given series to front of a plot.\n\t\t\t// name: String\n\t\t\t//\t\tSeries' name to move.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.runs){\n\t\t\t\tvar index = this.runs[name],\n\t\t\t\t\tnewOrder = this.getSeriesOrder(this.series[index].plot);\n\t\t\t\tif(name != newOrder[0]){\n\t\t\t\t\tnewOrder.splice(index, 1);\n\t\t\t\t\tnewOrder.unshift(name);\n\t\t\t\t\treturn this.setSeriesOrder(newOrder);\t//\tdojox/charting/Chart\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tmoveSeriesToBack: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tMoves a given series to back of a plot.\n\t\t\t// name: String\n\t\t\t//\t\tSeries' name to move.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.runs){\n\t\t\t\tvar index = this.runs[name],\n\t\t\t\t\tnewOrder = this.getSeriesOrder(this.series[index].plot);\n\t\t\t\tif(name != newOrder[newOrder.length - 1]){\n\t\t\t\t\tnewOrder.splice(index, 1);\n\t\t\t\t\tnewOrder.push(name);\n\t\t\t\t\treturn this.setSeriesOrder(newOrder);\t//\tdojox/charting/Chart\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tresize: function(width, height){\n\t\t\t// summary:\n\t\t\t//\t\tResize the chart to the dimensions of width and height.\n\t\t\t// description:\n\t\t\t//\t\tResize the chart and its surface to the width and height dimensions.\n\t\t\t//\t\tIf a single argument of the form {w: value1, h: value2} is provided take that argument as the dimensions to use.\n\t\t\t//\t\tFinally if no argument is provided, resize the surface to the marginBox of the chart.\n\t\t\t// width: Number|Object?\n\t\t\t//\t\tThe new width of the chart or the box definition.\n\t\t\t// height: Number?\n\t\t\t//\t\tThe new height of the chart.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tswitch(arguments.length){\n\t\t\t\t// case 0, do not resize the div, just the surface\n\t\t\t\tcase 1:\n\t\t\t\t\t// argument, override node box\n\t\t\t\t\tdomGeom.setMarginBox(this.node, width);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\t// argument, override node box\n\t\t\t\t\tdomGeom.setMarginBox(this.node, {w: width, h: height});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// in all cases take back the computed box\n\t\t\tvar box = domGeom.getMarginBox(this.node);\n\t\t\tvar d = this.surface.getDimensions();\n\t\t\tif(d.width != box.w || d.height != box.h){\n\t\t\t\t// and set it on the surface\n\t\t\t\tthis.surface.setDimensions(box.w, box.h);\n\t\t\t\tthis.dirty = true;\n\t\t\t\treturn this.render();\t//\tdojox/charting/Chart\n\t\t\t}else{\n\t\t\t\treturn this;\n\t\t\t}\n\t\t},\n\t\tgetGeometry: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a map of information about all axes in a chart and what they represent\n\t\t\t//\t\tin terms of scaling (see dojox.charting.axis2d.Default.getScaler).\n\t\t\t// returns: Object\n\t\t\t//\t\tAn map of geometry objects, a one-to-one mapping of axes.\n\t\t\tvar ret = {};\n\t\t\tfunc.forIn(this.axes, function(axis){\n\t\t\t\tif(axis.initialized()){\n\t\t\t\t\tret[axis.name] = {\n\t\t\t\t\t\tname:\t\taxis.name,\n\t\t\t\t\t\tvertical:\taxis.vertical,\n\t\t\t\t\t\tscaler:\t\taxis.scaler,\n\t\t\t\t\t\tticks:\t\taxis.ticks\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\t//\tObject\n\t\t},\n\t\tsetAxisWindow: function(name, scale, offset, zoom){\n\t\t\t// summary:\n\t\t\t//\t\tZooms an axis and all dependent plots. Can be used to zoom in 1D.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the axis as defined by addAxis.\n\t\t\t// scale: Number\n\t\t\t//\t\tThe scale on the target axis.\n\t\t\t// offset: Number\n\t\t\t//\t\tAny offest, as measured by axis tick\n\t\t\t// zoom: Boolean|Object?\n\t\t\t//\t\tThe chart zooming animation trigger.  This is null by default,\n\t\t\t//\t\te.g. {duration: 1200}, or just set true.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar axis = this.axes[name];\n\t\t\tif(axis){\n\t\t\t\taxis.setWindow(scale, offset);\n\t\t\t\tarr.forEach(this.stack,function(plot){\n\t\t\t\t\tif(plot.hAxis == name || plot.vAxis == name){\n\t\t\t\t\t\tplot.zoom = zoom;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tsetWindow: function(sx, sy, dx, dy, zoom){\n\t\t\t// summary:\n\t\t\t//\t\tZooms in or out any plots in two dimensions.\n\t\t\t// sx: Number\n\t\t\t//\t\tThe scale for the x axis.\n\t\t\t// sy: Number\n\t\t\t//\t\tThe scale for the y axis.\n\t\t\t// dx: Number\n\t\t\t//\t\tThe pixel offset on the x axis.\n\t\t\t// dy: Number\n\t\t\t//\t\tThe pixel offset on the y axis.\n\t\t\t// zoom: Boolean|Object?\n\t\t\t//\t\tThe chart zooming animation trigger.  This is null by default,\n\t\t\t//\t\te.g. {duration: 1200}, or just set true.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(!(\"plotArea\" in this)){\n\t\t\t\tthis.calculateGeometry();\n\t\t\t}\n\t\t\tfunc.forIn(this.axes, function(axis){\n\t\t\t\tvar scale, offset, bounds = axis.getScaler().bounds,\n\t\t\t\t\ts = bounds.span / (bounds.upper - bounds.lower);\n\t\t\t\tif(axis.vertical){\n\t\t\t\t\tscale  = sy;\n\t\t\t\t\toffset = dy / s / scale;\n\t\t\t\t}else{\n\t\t\t\t\tscale  = sx;\n\t\t\t\t\toffset = dx / s / scale;\n\t\t\t\t}\n\t\t\t\taxis.setWindow(scale, offset);\n\t\t\t});\n\t\t\tarr.forEach(this.stack, function(plot){ plot.zoom = zoom; });\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tzoomIn:\tfunction(name, range, delayed){\n\t\t\t// summary:\n\t\t\t//\t\tZoom the chart to a specific range on one axis.  This calls render()\n\t\t\t//\t\tdirectly as a convenience method.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the axis as defined by addAxis.\n\t\t\t// range: Array\n\t\t\t//\t\tThe end points of the zoom range, measured in axis ticks.\n\t\t\tvar axis = this.axes[name];\n\t\t\tif(axis){\n\t\t\t\tvar scale, offset, bounds = axis.getScaler().bounds;\n\t\t\t\tvar lower = Math.min(range[0],range[1]);\n\t\t\t\tvar upper = Math.max(range[0],range[1]);\n\t\t\t\tlower = range[0] < bounds.lower ? bounds.lower : lower;\n\t\t\t\tupper = range[1] > bounds.upper ? bounds.upper : upper;\n\t\t\t\tscale = (bounds.upper - bounds.lower) / (upper - lower);\n\t\t\t\toffset = lower - bounds.lower;\n\t\t\t\tthis.setAxisWindow(name, scale, offset);\n\t\t\t\tif(delayed){\n\t\t\t\t\tthis.delayedRender();\n\t\t\t\t}else{\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcalculateGeometry: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the geometry of the chart based on the defined axes of\n\t\t\t//\t\ta chart.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(this.dirty){\n\t\t\t\treturn this.fullGeometry();\n\t\t\t}\n\n\t\t\t// calculate geometry\n\t\t\tvar dirty = arr.filter(this.stack, function(plot){\n\t\t\t\t\treturn plot.dirty ||\n\t\t\t\t\t\t(plot.hAxis && this.axes[plot.hAxis].dirty) ||\n\t\t\t\t\t\t(plot.vAxis && this.axes[plot.vAxis].dirty);\n\t\t\t\t}, this);\n\t\t\tcalculateAxes(dirty, this.plotArea);\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tfullGeometry: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the full geometry of the chart.  This includes passing\n\t\t\t//\t\tover all major elements of a chart (plots, axes, series, container)\n\t\t\t//\t\tin order to ensure proper rendering.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tthis._makeDirty();\n\n\t\t\t// clear old values\n\t\t\tarr.forEach(this.stack, clear);\n\n\t\t\t// rebuild new connections, and add defaults\n\n\t\t\t// set up a theme\n\t\t\tif(!this.theme){\n\t\t\t\tthis.setTheme(new SimpleTheme());\n\t\t\t}\n\n\t\t\t// assign series\n\t\t\tarr.forEach(this.series, function(run){\n\t\t\t\tif(!(run.plot in this.plots)){\n\t\t\t\t\t// TODO remove auto-assignment\n\t\t\t\t\tif(!dc.plot2d || !dc.plot2d.Default){\n\t\t\t\t\t\tthrow Error(\"Can't find plot: Default - didn't you forget to dojo\" + \".require() it?\");\n\t\t\t\t\t}\n\t\t\t\t\tvar plot = new dc.plot2d.Default(this, {});\n\t\t\t\t\tplot.name = run.plot;\n\t\t\t\t\tthis.plots[run.plot] = this.stack.length;\n\t\t\t\t\tthis.stack.push(plot);\n\t\t\t\t}\n\t\t\t\tthis.stack[this.plots[run.plot]].addSeries(run);\n\t\t\t}, this);\n\t\t\t// assign axes\n\t\t\tarr.forEach(this.stack, function(plot){\n\t\t\t\tif(plot.assignAxes){\n\t\t\t\t\tplot.assignAxes(this.axes);\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\t// calculate geometry\n\n\t\t\t// 1st pass\n\t\t\tvar dim = this.dim = this.surface.getDimensions();\n\t\t\tdim.width  = g.normalizedLength(dim.width);\n\t\t\tdim.height = g.normalizedLength(dim.height);\n\t\t\tfunc.forIn(this.axes, clear);\n\t\t\tcalculateAxes(this.stack, dim);\n\n\t\t\t// assumption: we don't have stacked axes yet\n\t\t\tvar offsets = this.offsets = {l: 0, r: 0, t: 0, b: 0};\n\t\t\t// chart mirroring starts\n\t\t\tvar self = this;\n\t\t\tfunc.forIn(this.axes, function(axis){\n\t\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\t\tself._resetLeftBottom(axis);\n\t\t\t\t}\n\t\t\t\tfunc.forIn(axis.getOffsets(), function(o, i){ offsets[i] = Math.max(o, offsets[i]); });\n\t\t\t});\n\t\t\t// chart mirroring ends\n\t\t\t// add title area\n\t\t\tif(this.title){\n\t\t\t\tthis.titleGap = (this.titleGap==0) ? 0 : this.titleGap || this.theme.chart.titleGap || 20;\n\t\t\t\tthis.titlePos = this.titlePos || this.theme.chart.titlePos || \"top\";\n\t\t\t\tthis.titleFont = this.titleFont || this.theme.chart.titleFont;\n\t\t\t\tthis.titleFontColor = this.titleFontColor || this.theme.chart.titleFontColor || \"black\";\n\t\t\t\tthis.titleAlign = this.titleAlign || this.theme && this.theme.chart && this.theme.chart.titleAlign || \"middle\";\n\t\t\t\tvar tsize = g.normalizedLength(g.splitFontString(this.titleFont).size);\n\t\t\t\toffsets[this.titlePos == \"top\" ? \"t\" : \"b\"] += (tsize + this.titleGap);\n\t\t\t}\n\t\t\t// add margins\n\t\t\tfunc.forIn(this.margins, function(o, i){ offsets[i] += o; });\n\n\t\t\t// 2nd pass with realistic dimensions\n\t\t\tthis.plotArea = {\n\t\t\t\twidth: dim.width - offsets.l - offsets.r,\n\t\t\t\theight: dim.height - offsets.t - offsets.b\n\t\t\t};\n\t\t\tfunc.forIn(this.axes, clear);\n\t\t\tcalculateAxes(this.stack, this.plotArea);\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\trender: function(){\n\t\t\t// summary:\n\t\t\t//\t\tRender the chart according to the current information defined.  This should\n\t\t\t//\t\tbe the last call made when defining/creating a chart, or if data within the\n\t\t\t//\t\tchart has been changed.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\n\t\t\t// do we have a delayed renderer pending? If yes we need to clear it\n\t\t\tif(this._delayedRenderHandle){\n\t\t\t\tclearTimeout(this._delayedRenderHandle);\n\t\t\t\tthis._delayedRenderHandle = null;\n\t\t\t}\n\t\t\t\n\t\t\tif(this.theme){\n\t\t\t\tthis.theme.clear();\n\t\t\t}\n\n\t\t\tif(this.dirty){\n\t\t\t\treturn this.fullRender();\n\t\t\t}\n\n\t\t\tthis.calculateGeometry();\n\n\t\t\t// go over the stack backwards\n\t\t\tfunc.forEachRev(this.stack, function(plot){ plot.render(this.dim, this.offsets); }, this);\n\n\t\t\t// go over axes\n\t\t\tfunc.forIn(this.axes, function(axis){ axis.render(this.dim, this.offsets); }, this);\n\n\t\t\tthis._makeClean();\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tfullRender: function(){\n\t\t\t// summary:\n\t\t\t//\t\tForce a full rendering of the chart, including full resets on the chart itself.\n\t\t\t//\t\tYou should not call this method directly unless absolutely necessary.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\n\t\t\t// calculate geometry\n\t\t\tthis.fullGeometry();\n\t\t\tvar offsets = this.offsets, dim = this.dim;\n\t\t\tvar w = Math.max(0, dim.width  - offsets.l - offsets.r),\n\t\t\t\th = Math.max(0, dim.height - offsets.t - offsets.b);\n\n\t\t\t// get required colors\n\t\t\t//var requiredColors = func.foldl(this.stack, \"z + plot.getRequiredColors()\", 0);\n\t\t\t//this.theme.defineColors({num: requiredColors, cache: false});\n\n\t\t\t// clear old shapes\n\t\t\tarr.forEach(this.series, purge);\n\t\t\tfunc.forIn(this.axes, purge);\n\t\t\tarr.forEach(this.stack,  purge);\n\t\t\tvar children = this.surface.children;\n\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\tif(shape.dispose){\n\t\t\t\tfor(var i = 0; i < children.length;++i){\n\t\t\t\t\tshape.dispose(children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.chartTitle && this.chartTitle.tagName){\n\t\t\t\t// destroy title if it is a DOM node\n\t\t\t    domConstruct.destroy(this.chartTitle);\n\t\t\t}\n\t\t\tthis.surface.clear();\n\t\t\tthis.chartTitle = null;\n\n\t\t\tthis._renderChartBackground(dim, offsets);\n\t\t\tif(this._nativeClip){\n\t\t\t\tthis._renderPlotBackground(dim, offsets, w, h);\n\t\t\t}else{\n\t\t\t\t// VML\n\t\t\t\tthis._renderPlotBackground(dim, offsets, w, h);\n\t\t\t}\n\n\t\t\t// go over the stack backwards\n\t\t\tfunc.foldr(this.stack, function(z, plot){ return plot.render(dim, offsets), 0; }, 0);\n\n\t\t\tif(!this._nativeClip){\n\t\t\t\t// VML, matting-clipping\n\t\t\t\tthis._renderChartBackground(dim, offsets);\n\t\t\t}\n\n\t\t\t//create title: Whether to make chart title as a widget which extends dojox.charting.Element?\n\t\t\tif(this.title){\n\t\t\t\tthis._renderTitle(dim, offsets);\n\t\t\t}\n\n\t\t\t// go over axes\n\t\t\tfunc.forIn(this.axes, function(axis){ axis.render(dim, offsets); });\n\n\t\t\tthis._makeClean();\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\t_renderTitle: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tInternal function to render the chart title.\n\t\t\t// dim:\n\t\t\t//\t\tThe dimension object of the chart\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tvar forceHtmlLabels = (g.renderer == \"canvas\") && this.htmlLabels,\n\t\t\t\tlabelType = forceHtmlLabels || !has(\"ie\") && !has(\"opera\") && this.htmlLabels ? \"html\" : \"gfx\",\n\t\t\t\ttsize = g.normalizedLength(g.splitFontString(this.titleFont).size),\n\t\t\t\ttBox = g._base._getTextBox(this.title,{ font: this.titleFont });\n\t\t\t\t\n\t\t\tvar titleAlign = this.titleAlign;\n\t\t\tvar isRtl = has(\"dojo-bidi\") && this.isRightToLeft();\n\t\t\tvar posX = dim.width/2; // Default is middle.\n\t\t\tif(titleAlign === \"edge\"){\n\t\t\t\ttitleAlign = \"left\";\n\t\t\t\tif(isRtl){\n\t\t\t\t\tposX = dim.width - (offsets.r + tBox.w);\n\t\t\t\t}else {\n\t\t\t\t\tposX = offsets.l;\n\t\t\t\t}\n\t\t\t}else if(titleAlign != \"middle\"){\n\t\t\t\tif(isRtl){\n\t\t\t\t\t// We're in BIDI mode, reverse the alignment.\n\t\t\t\t\ttitleAlign = titleAlign === \"left\" ? \"right\" : \"left\";\n\t\t\t\t}\n\t\t\t\tif(titleAlign === \"left\"){\n\t\t\t\t\tposX = this.margins.l;\n\t\t\t\t}else if(titleAlign === \"right\"){\n\t\t\t\t\ttitleAlign = \"left\";\n\t\t\t\t\tposX = dim.width - (this.margins.l + tBox.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.chartTitle = common.createText[labelType](\n\t\t\t\tthis,\n\t\t\t\tthis.surface,\n\t\t\t\tposX,\n\t\t\t\tthis.titlePos==\"top\" ? tsize + this.margins.t : dim.height - this.margins.b,\n\t\t\t\ttitleAlign,\n\t\t\t\tthis.title,\n\t\t\t\tthis.titleFont,\n\t\t\t\tthis.titleFontColor\n\t\t\t);\n\t\t},\n\t\t_renderChartBackground: function(dim, offsets){\n\t\t\tvar t = this.theme, rect;\n\t\t\t// chart background\n\t\t\tvar fill   = this.fill   !== undefined ? this.fill   : (t.chart && t.chart.fill);\n\t\t\tvar stroke = this.stroke !== undefined ? this.stroke : (t.chart && t.chart.stroke);\n\n\t\t\t// TRT: support for \"inherit\" as a named value in a theme.\n\t\t\tif(fill == \"inherit\"){\n\t\t\t\t//\tfind the background color of the nearest ancestor node, and use that explicitly.\n\t\t\t\tvar node = this.node;\n\t\t\t\tfill = new Color(domStyle.get(node, \"backgroundColor\"));\n\t\t\t\twhile(fill.a==0 && node!=document.documentElement){\n\t\t\t\t\tfill = new Color(domStyle.get(node, \"backgroundColor\"));\n\t\t\t\t\tnode = node.parentNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(fill){\n\t\t\t\tif(this._nativeClip){\n\t\t\t\t\tfill = Element.prototype._shapeFill(Element.prototype._plotFill(fill, dim),\n\t\t\t\t\t\t{ x:0, y: 0, width: dim.width + 1, height: dim.height + 1 });\n\t\t\t\t\tthis.surface.createRect({ width: dim.width + 1, height: dim.height + 1 }).setFill(fill);\n\t\t\t\t}else{\n\t\t\t\t\t// VML\n\t\t\t\t\tfill = Element.prototype._plotFill(fill, dim, offsets);\n\t\t\t\t\tif(offsets.l){\t// left\n\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\t\twidth:  offsets.l,\n\t\t\t\t\t\t\theight: dim.height + 1\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\n\t\t\t\t\t}\n\t\t\t\t\tif(offsets.r){\t// right\n\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\tx: dim.width - offsets.r,\n\t\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\t\twidth:  offsets.r + 1,\n\t\t\t\t\t\t\theight: dim.height + 2\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\n\t\t\t\t\t}\n\t\t\t\t\tif(offsets.t){\t// top\n\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\t\twidth:  dim.width + 1,\n\t\t\t\t\t\t\theight: offsets.t\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\n\t\t\t\t\t}\n\t\t\t\t\tif(offsets.b){\t// bottom\n\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: dim.height - offsets.b,\n\t\t\t\t\t\t\twidth:  dim.width + 1,\n\t\t\t\t\t\t\theight: offsets.b + 2\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(stroke){\n\t\t\t\tthis.surface.createRect({\n\t\t\t\t\twidth:  dim.width - 1,\n\t\t\t\t\theight: dim.height - 1\n\t\t\t\t}).setStroke(stroke);\n\t\t\t}\n\t\t},\n\t\t_renderPlotBackground: function(dim, offsets, w, h){\n\t\t\tvar t = this.theme;\n\n\t\t\t// draw a plot background\n\t\t\tvar fill   = t.plotarea && t.plotarea.fill;\n\t\t\tvar stroke = t.plotarea && t.plotarea.stroke;\n\t\t\t// size might be neg if offsets are bigger that chart size this happens quite often at\n\t\t\t// initialization time if the chart widget is used in a BorderContainer\n\t\t\t// this will fail on IE/VML\n\t\t\tvar rect = {\n\t\t\t\tx: offsets.l - 1, y: offsets.t - 1,\n\t\t\t\twidth:  w + 2,\n\t\t\t\theight: h + 2\n\t\t\t};\n\t\t\tif(fill){\n\t\t\t\tfill = Element.prototype._shapeFill(Element.prototype._plotFill(fill, dim, offsets), rect);\n\t\t\t\tthis.surface.createRect(rect).setFill(fill);\n\t\t\t}\n\t\t\tif(stroke){\n\t\t\t\tthis.surface.createRect({\n\t\t\t\t\tx: offsets.l, y: offsets.t,\n\t\t\t\t\twidth:  w + 1,\n\t\t\t\t\theight: h + 1\n\t\t\t\t}).setStroke(stroke);\n\t\t\t}\n\t\t},\n\t\tdelayedRender: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDelayed render, which is used to collect multiple updates\n\t\t\t//\t\twithin a delayInMs time window.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\n\t\t\tif(!this._delayedRenderHandle){\n\t\t\t\tthis._delayedRenderHandle = setTimeout(\n\t\t\t\t\tlang.hitch(this, function(){\n\t\t\t\t\t\tthis.render();\n\t\t\t\t\t}),\n\t\t\t\t\tthis.delayInMs\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tconnectToPlot: function(name, object, method){\n\t\t\t// summary:\n\t\t\t//\t\tA convenience method to connect a function to a plot.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the plot as defined by addPlot.\n\t\t\t// object: Object\n\t\t\t//\t\tThe object to be connected.\n\t\t\t// method: Function\n\t\t\t//\t\tThe function to be executed.\n\t\t\t// returns: Array\n\t\t\t//\t\tA handle to the connection, as defined by dojo.connect (see dojo.connect).\n\t\t\treturn name in this.plots ? this.stack[this.plots[name]].connect(object, method) : null;\t//\tArray\n\t\t},\n\t\tfireEvent: function(seriesName, eventName, index){\n\t\t\t// summary:\n\t\t\t//\t\tFires a synthetic event for a series item.\n\t\t\t// seriesName: String\n\t\t\t//\t\tSeries name.\n\t\t\t// eventName: String\n\t\t\t//\t\tEvent name to simulate: onmouseover, onmouseout, onclick.\n\t\t\t// index: Number\n\t\t\t//\t\tValid data value index for the event.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(seriesName in this.runs){\n\t\t\t\tvar plotName = this.series[this.runs[seriesName]].plot;\n\t\t\t\tif(plotName in this.plots){\n\t\t\t\t\tvar plot = this.stack[this.plots[plotName]];\n\t\t\t\t\tif(plot){\n\t\t\t\t\t\tplot.fireEvent(seriesName, eventName, index);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\t_makeClean: function(){\n\t\t\t// reset dirty flags\n\t\t\tarr.forEach(this.axes,   makeClean);\n\t\t\tarr.forEach(this.stack,  makeClean);\n\t\t\tarr.forEach(this.series, makeClean);\n\t\t\tthis.dirty = false;\n\t\t},\n\t\t_makeDirty: function(){\n\t\t\t// reset dirty flags\n\t\t\tarr.forEach(this.axes,   makeDirty);\n\t\t\tarr.forEach(this.stack,  makeDirty);\n\t\t\tarr.forEach(this.series, makeDirty);\n\t\t\tthis.dirty = true;\n\t\t},\n\t\t_invalidateDependentPlots: function(plotName, /* Boolean */ verticalAxis){\n\t\t\tif(plotName in this.plots){\n\t\t\t\tvar plot = this.stack[this.plots[plotName]], axis,\n\t\t\t\t\taxisName = verticalAxis ? \"vAxis\" : \"hAxis\";\n\t\t\t\tif(plot[axisName]){\n\t\t\t\t\taxis = this.axes[plot[axisName]];\n\t\t\t\t\tif(axis && axis.dependOnData()){\n\t\t\t\t\t\taxis.dirty = true;\n\t\t\t\t\t\t// find all plots and mark them dirty\n\t\t\t\t\t\tarr.forEach(this.stack, function(p){\n\t\t\t\t\t\t\tif(p[axisName] && p[axisName] == plot[axisName]){\n\t\t\t\t\t\t\t\tp.dirty = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tplot.dirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetDir : function(dir){\n\t\t\treturn this; \n\t\t},\n\t\t_resetLeftBottom: function(axis){\n\t\t},\n\t\tformatTruncatedLabel: function(element, label, labelType){\t\t\t\n\t\t}\n\t});\n\n\tfunction hSection(stats){\n\t\treturn {min: stats.hmin, max: stats.hmax};\n\t}\n\n\tfunction vSection(stats){\n\t\treturn {min: stats.vmin, max: stats.vmax};\n\t}\n\n\tfunction hReplace(stats, h){\n\t\tstats.hmin = h.min;\n\t\tstats.hmax = h.max;\n\t}\n\n\tfunction vReplace(stats, v){\n\t\tstats.vmin = v.min;\n\t\tstats.vmax = v.max;\n\t}\n\n\tfunction combineStats(target, source){\n\t\tif(target && source){\n\t\t\ttarget.min = Math.min(target.min, source.min);\n\t\t\ttarget.max = Math.max(target.max, source.max);\n\t\t}\n\t\treturn target || source;\n\t}\n\n\tfunction calculateAxes(stack, plotArea){\n\t\tvar plots = {}, axes = {};\n\t\tarr.forEach(stack, function(plot){\n\t\t\tvar stats = plots[plot.name] = plot.getSeriesStats();\n\t\t\tif(plot.hAxis){\n\t\t\t\taxes[plot.hAxis] = combineStats(axes[plot.hAxis], hSection(stats));\n\t\t\t}\n\t\t\tif(plot.vAxis){\n\t\t\t\taxes[plot.vAxis] = combineStats(axes[plot.vAxis], vSection(stats));\n\t\t\t}\n\t\t});\n\t\tarr.forEach(stack, function(plot){\n\t\t\tvar stats = plots[plot.name];\n\t\t\tif(plot.hAxis){\n\t\t\t\thReplace(stats, axes[plot.hAxis]);\n\t\t\t}\n\t\t\tif(plot.vAxis){\n\t\t\t\tvReplace(stats, axes[plot.vAxis]);\n\t\t\t}\n\t\t\tplot.initializeScalers(plotArea, stats);\n\t\t});\n\t}\n\t\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.Chart\", [Chart, BidiChart]) : Chart;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 297:\n/*!***********************************!*\\\n  !*** ../dojox/charting/Series.js ***!\n  \\***********************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! ./Element */ 247)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, declare, Element){ \n\t/*=====\n\tvar __SeriesCtorArgs = {\n\t\t// summary:\n\t\t//\t\tAn optional arguments object that can be used in the Series constructor.\n\t\t// plot: String?\n\t\t//\t\tThe plot (by name) that this series belongs to.\n\t};\n\t=====*/\n\treturn declare(\"dojox.charting.Series\", Element, {\n\t\t// summary:\n\t\t//\t\tAn object representing a series of data for plotting on a chart.\n\t\tconstructor: function(chart, data, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a new data series object for use within charting.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart that this series belongs to.\n\t\t\t// data: Array|Object\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\n\t\t\t//\t\tdestroy(), and setSeriesObject().\n\t\t\t// kwArgs: __SeriesCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to set details for this series.\n\t\t\tlang.mixin(this, kwArgs);\n\t\t\tif(typeof this.plot != \"string\"){ this.plot = \"default\"; }\n\t\t\tthis.update(data);\n\t\t},\n\t\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear the calculated additional parameters set on this series.\n\t\t\tthis.dyn = {};\n\t\t},\n\t\t\n\t\tupdate: function(data){\n\t\t\t// summary:\n\t\t\t//\t\tSet data and make this object dirty, so it can be redrawn.\n\t\t\t// data: Array|Object\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\n\t\t\t//\t\tdestroy(), and setSeriesObject().\n\t\t\tif(lang.isArray(data)){\n\t\t\t\tthis.data = data;\n\t\t\t}else{\n\t\t\t\tthis.source = data;\n\t\t\t\tthis.data = this.source.data;\n\t\t\t\tif(this.source.setSeriesObject){\n\t\t\t\t\tthis.source.setSeriesObject(this);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\tthis.clear();\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 298:\n/*!***************************************!*\\\n  !*** ../dojox/charting/bidi/Chart.js ***!\n  \\***************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojox/main */ 245), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/dom-style */ 10), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/sniff */ 8),\n\t__webpack_require__(/*! dojo/dom */ 6),__webpack_require__(/*! dojo/dom-construct */ 16),\n\t__webpack_require__(/*! dojox/gfx */ 237), __webpack_require__(/*! dojox/gfx/_gfxBidiSupport */ 299), __webpack_require__(/*! ../axis2d/common */ 246), __webpack_require__(/*! dojox/string/BidiEngine */ 265),\n\t__webpack_require__(/*! dojox/lang/functional */ 234),__webpack_require__(/*! dojo/dom-attr */ 14),__webpack_require__(/*! ./_bidiutils */ 301)], __WEBPACK_AMD_DEFINE_RESULT__ = function(dojox, declare, lang, domStyle, arr, has, dom, domConstruct, g, gBidi, da, BidiEngine, df, domAttr,utils){\n\t// module:\n\t//\t\tdojox/charting/bidi/Chart\t\t\t\t\t\t\t\n\tvar bidiEngine = new BidiEngine();\n\tvar dc = lang.getObject(\"charting\", true, dojox);\n\tfunction validateTextDir(textDir){\n\t\treturn /^(ltr|rtl|auto)$/.test(textDir) ? textDir : null;\n\t};\n\t\n\treturn declare(null, {\n\t\t// textDir: String\n\t\t//\t\tBi-directional support,\tthe main variable which is responsible for the direction of the text.\n\t\t//\t\tThe text direction can be different than the GUI direction by using this parameter.\n\t\t//\t\tAllowed values:\n\t\t//\n\t\t//\t\t1. \"ltr\"\n\t\t//\t\t2. \"rtl\"\n\t\t//\t\t3. \"auto\" - contextual the direction of a text defined by first strong letter.\n\t\t//\n\t\t//\t\tBy default is as the page direction.\n\t\ttextDir:\"\",\n\t\t\n\t\t// dir: String\n\t\t//\t\tMirroring support,\tthe main variable which is responsible for the direction of the chart.\n\t\t//\n\t\t//\t\tAllowed values:\n\t\t//\t\t1. \"ltr\"\n\t\t//\t\t2. \"rtl\"\n\t\t//\n\t\t//\t\tBy default is ltr.\n\t\tdir: \"\",\n\t\tisMirrored: false,\n\t\t\n\t\tgetTextDir: function(text){\n\t\t\t// summary:\n\t\t\t//\t\tReturn direction of the text. \n\t\t\t// description:\n\t\t\t//\t\tIf textDir is ltr or rtl returns the value.\n\t\t\t//\t\tIf it's auto, calls to another function that responsible \n\t\t\t//\t\tfor checking the value, and defining the direction.\t\t\t\n\t\t\t// text:\n\t\t\t//\t\tUsed in case textDir is \"auto\", this case the direction is according to the first\n\t\t\t//\t\tstrong (directionally - which direction is strong defined) letter.\n\t\t\t// tags:\n\t\t\t//\t\tprotected.\n\t\t\tvar textDir = this.textDir == \"auto\" ? bidiEngine.checkContextual(text) : this.textDir;\n\t\t\t// providing default value\n\t\t\tif(!textDir){\n\t\t\t\ttextDir = domStyle.get(this.node, \"direction\");\n\t\t\t}\n\t\t\treturn textDir;\n\t\t},\n\n\t\tpostscript: function(node,args){\n\t\t\t// summary:\n\t\t\t//\t\tKicks off chart instantiation.\n\t\t\t// description:\n\t\t\t//\t\tUsed for setting the textDir of the chart. \n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\n\t\t\t// validate textDir\n\t\t\tvar textDir = args ? (args[\"textDir\"] ? validateTextDir(args[\"textDir\"]) : \"\") : \"\";\n\t\t\t// if textDir wasn't defined or was defined wrong, apply default value\n\t\t\ttextDir = textDir ? textDir : domStyle.get(this.node, \"direction\");\n\t\t\tthis.textDir = textDir;\n\n\t\t\tthis.surface.textDir = textDir;\n\t\t\t\n\t\t\t// two data structures, used for storing data for further enablement to change\n\t\t\t// textDir dynamically\n\t\t\tthis.htmlElementsRegistry = [];\n\t\t\tthis.truncatedLabelsRegistry = [];\n\t\t\t// chart mirroring starts\n\t\t\tvar chartDir = \"ltr\";\n\t\t\tif(domAttr.has(node, \"direction\")){\n\t\t\t\tchartDir = domAttr.get(node, \"direction\");\n\t\t\t}\n\t\t\tthis.setDir(args ? (args.dir ? args.dir: chartDir) : chartDir);\n\t\t\t// chart mirroring ends\n\t\t},\n\n\t\tsetTextDir: function(newTextDir, obj){\n\t\t\t// summary:\n\t\t\t//\t\tSetter for the textDir attribute.\n\t\t\t// description:\n\t\t\t//\t\tAllows dynamically set the textDir, goes over all the text-children and  \n\t\t\t//\t\tupdates their base text direction.\n\t\t\t// tags:\n\t\t\t//\t\tpublic\n\t\t\n\t\t\tif(newTextDir == this.textDir){\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif(validateTextDir(newTextDir) != null){\n\t\t\t\tthis.textDir = newTextDir;\n\t\t\t\t\n\t\t\t\t// set automatically all the gfx objects that were created by this surface\n\t\t\t\t// (groups, text objects)\n\t\t\t\tthis.surface.setTextDir(newTextDir);\n\t\t\t\n\t\t\t\t// truncated labels that were created with gfx creator need to recalculate dir\n\t\t\t\t// for case like: \"111111A\" (A stands for bidi character) and the truncation\n\t\t\t\t// is \"111...\" If the textDir is auto, the display should be: \"...111\" but in gfx\n\t\t\t\t// case we will get \"111...\". Because this.surface.setTextDir will calculate the dir of truncated\n\t\t\t\t// label, which value is \"111...\" but th real is \"111111A\".\n\t\t\t\t// each time we created a gfx truncated label we stored it in the truncatedLabelsRegistry, so update now \n\t\t\t\t// the registry.\n\t\t\t\tif(this.truncatedLabelsRegistry && newTextDir == \"auto\"){\n\t\t\t\t\tarr.forEach(this.truncatedLabelsRegistry, function(elem){\n\t\t\t\t\t\tvar tDir = this.getTextDir(elem[\"label\"]);\n\t\t\t\t\t\tif(elem[\"element\"].textDir != tDir){\n\t\t\t\t\t\t\telem[\"element\"].setShape({textDir: tDir});\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// re-render axes with html labels. for recalculation of the labels\n\t\t\t\t// positions etc.\n\t\t\t\t// create array of keys for all the axis in chart \n\t\t\t\tvar axesKeyArr = df.keys(this.axes);\n\t\t\t\tif(axesKeyArr.length > 0){\n\t\t\t\t\t// iterate over the axes, and for each that have html labels render it.\n\t\t\t\t\tarr.forEach(axesKeyArr, function(key, index, arr){\n\t\t\t\t\t\t// get the axis \n\t\t\t\t\t\tvar axis = this.axes[key];\n\t\t\t\t\t\t// if the axis has html labels \n\t\t\t\t\t\tif(axis.htmlElements[0]){\n\t\t\t\t\t\t\taxis.dirty = true;\n\t\t\t\t\t\t\taxis.render(this.dim, this.offsets);\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t\t\n\t\t\t\t\t// recreate title\n\t\t\t\t\tif(this.title){\n\t\t\t\t\t\tthis._renderTitle(this.dim, this.offsets);\n\t\t\t\t\t}\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t// case of pies, spiders etc.\n\t\t\t\t\tarr.forEach(this.htmlElementsRegistry, function(elem, index, arr){\n\t\t\t\t\t\tvar tDir = newTextDir == \"auto\" ? this.getTextDir(elem[4]) : newTextDir;\n\t\t\t\t\t\tif(elem[0].children[0] && elem[0].children[0].dir != tDir){\n\t\t\t\t\t\t\tdomConstruct.destroy(elem[0].children[0]);\n\t\t\t\t\t\t\telem[0].children[0] = da.createText[\"html\"]\n\t\t\t\t\t\t\t\t\t(this, this.surface, elem[1], elem[2], elem[3], elem[4], elem[5], elem[6]).children[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t\n\t\tsetDir : function(dir){\n\t\t\t// summary:\n\t\t\t//\t\tSetter for the dir attribute.\n\t\t\t// description:\n\t\t\t//\t\tAllows dynamically set the dri attribute, which will used to\n\t\t\t//\t\tupdates the chart rendering direction.\n\t\t\t//\tdir : the desired chart direction [rtl: for right to left ,ltr: for left to right]\n \n\t\t\tif(dir == \"rtl\" || dir == \"ltr\"){\n\t\t\t\tif(this.dir != dir){\n\t\t\t\t\tthis.isMirrored = true;\n\t\t\t\t\tthis.dirty = true;\n\t\t\t\t}\n\t\t\t\tthis.dir = dir;\n\t\t\t}\t\t\t\n\t\t\treturn this; \n\t\t},\n\t\t\n\t\tisRightToLeft: function(){\n\t\t\t// summary:\n\t\t\t//\t\tcheck the direction of the chart.\n\t\t\t// description:\n\t\t\t//\t\tcheck the dir attribute to determine the rendering direction\n\t\t\t//\t\tof the chart.\n\t\t\treturn this.dir == \"rtl\";\n        },\n        \n\t\tapplyMirroring: function(plot, dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tapply the mirroring operation to the current chart plots.\n\t\t\t//\n\t\t\tutils.reverseMatrix(plot, dim, offsets, this.dir == \"rtl\");\n\t\t\t//force the direction of the node to be ltr to properly render the axes and the plots labels.\n\t\t\tdomStyle.set(this.node, \"direction\", \"ltr\");\n\t\t\treturn this;\n\t\t},\n\n\t\tformatTruncatedLabel: function(element, label, labelType){\n\t\t\tthis.truncateBidi(element, label, labelType);\n\t\t},\n\n\t\ttruncateBidi: function(elem, label, labelType){\n\t\t\t// summary:\n\t\t\t//\t\tEnables bidi support for truncated labels.\n\t\t\t// description:\n\t\t\t//\t\tCan be two types of labels: html or gfx.\n\t\t\t//\n\t\t\t//\t\t####gfx labels:\n\t\t\t//\n\t\t\t//\t\tNeed to be stored in registry to be used when the textDir will be set dynamically.\n\t\t\t//\t\tAdditional work on truncated labels is needed for case as 111111A (A stands for \"bidi\" character rtl directioned).\n\t\t\t//\t\tlet's say in this case the truncation is \"111...\" If the textDir is auto, the display should be: \"...111\" but in gfx\n\t\t\t//\t\tcase we will get \"111...\". Because this.surface.setTextDir will calculate the dir of truncated\n\t\t\t//\t\tlabel, which value is \"111...\" but th real is \"111111A\".\n\t\t\t//\t\teach time we created a gfx truncated label we store it in the truncatedLabelsRegistry.\n\t\t\t//\n\t\t\t//\t\t####html labels:\n\t\t\t//\n\t\t\t//\t\tno need for repository (stored in another place). Here we only need to update the current dir according to textDir.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\n\t\t\tif(labelType == \"gfx\"){\n\t\t\t\t// store truncated gfx labels in the data structure.\n\t\t\t\tthis.truncatedLabelsRegistry.push({element: elem, label: label});\n\t\t\t\tif(this.textDir == \"auto\"){\n\t\t\t\t\telem.setShape({textDir: this.getTextDir(label)});\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(labelType == \"html\" && this.textDir == \"auto\"){\n\t\t\t\telem.children[0].dir = this.getTextDir(label);\n\t\t\t}\n\t\t},\n\t\t\n\t\trender: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tthis.isMirrored = false;\n\t\t\treturn this;\n\t\t},\n\t\t\n\t\t_resetLeftBottom: function(axis){\n\t\t\tif(axis.vertical && this.isMirrored){\n\t\t\t\taxis.opt.leftBottom = !axis.opt.leftBottom;\n\t\t\t}\n\t\t}\t\t\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n\n/***/ }),\n\n/***/ 299:\n/*!***************************************!*\\\n  !*** ../dojox/gfx/_gfxBidiSupport.js ***!\n  \\***************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base */ 236), __webpack_require__(/*! dojo/_base/lang */ 0),__webpack_require__(/*! dojo/_base/sniff */ 57), __webpack_require__(/*! dojo/dom */ 6), __webpack_require__(/*! dojo/_base/html */ 264), __webpack_require__(/*! dojo/_base/array */ 5),\n\t\t__webpack_require__(/*! ./utils */ 300), __webpack_require__(/*! ./shape */ 243), __webpack_require__(/*! ./path */ 260), __webpack_require__(/*! dojox/string/BidiEngine */ 265)], __WEBPACK_AMD_DEFINE_RESULT__ = function(g, lang, has, dom, html, arr, utils, shapeLib, pathLib, BidiEngine){\n\tlang.getObject(\"dojox.gfx._gfxBidiSupport\", true);\n\n\t/*=====\n\t// Prevent changes here from masking the definitions in _base.js from the doc parser\n\tvar origG = g;\n\tg = {};\n\t=====*/\n\n\tswitch (g.renderer){\n\t\tcase 'vml':\n\t\t\tg.isVml = true;\n\t\t\tbreak;\n\t\tcase 'svg':\n\t\t\tg.isSvg = true;\n\t\t\tif(g.svg.useSvgWeb){\n\t\t\t\tg.isSvgWeb = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'silverlight':\n\t\t\tg.isSilverlight = true;\n\t\t\tbreak;\n\t\tcase 'canvas':\n\t\tcase 'canvasWithEvents':\n\t\t\tg.isCanvas = true;\n\t\t\tbreak;\n\t}\n\n\tvar bidi_const = {\n\t\tLRM : '\\u200E',\n\t\tLRE : '\\u202A',\n\t\tPDF : '\\u202C',\n\t\tRLM : '\\u200f',\n\t\tRLE : '\\u202B'\n\t};\n\n\t/*===== g = origG; =====*/\n\n\t// the object that performs text transformations.\n\tvar bidiEngine = new BidiEngine();\n\n\tlang.extend(g.shape.Surface, {\n\t\t// textDir: String\n\t\t//\t\tWill be used as default for Text/TextPath/Group objects that created by this surface\n\t\t//\t\tand textDir wasn't directly specified for them, though the bidi support was loaded.\n\t\t//\t\tCan be set in two ways:\n\t\t//\n\t\t//\t\t1. When the surface is created and textDir value passed to it as fourth\n\t\t//\t\tparameter.\n\t\t//\t\t2. Using the setTextDir(String) function, when this function is used the value\n\t\t//\t\tof textDir propagates to all of it's children and the children of children (for Groups) etc.\n\t\ttextDir: \"\",\n\n\t\tsetTextDir: function(/*String*/newTextDir){\n\t\t\t// summary:\n\t\t\t//\t\tUsed for propagation and change of textDir.\n\t\t\t//\t\tnewTextDir will be forced as textDir for all of it's children (Group/Text/TextPath).\n\t\t\tsetTextDir(this, newTextDir);\n\t\t},\n\n\t\tgetTextDir: function(){\n\t\t\treturn this.textDir;\n\t\t}\n\t});\n\n\tlang.extend(g.Group, {                          \n\t\t// textDir: String\n\t\t//\t\tWill be used for inheritance, or as default for text objects\n\t\t//\t\tthat textDir wasn't directly specified for them but the bidi support was required.\n\t\ttextDir: \"\",\n\n\t\tsetTextDir: function(/*String*/newTextDir){\n\t\t\t// summary:\n\t\t\t//\t\tUsed for propagation and change of textDir.\n\t\t\t//\t\tnewTextDir will be forced as textDir for all of it's children (Group/Text/TextPath).\n\t\t\tsetTextDir(this, newTextDir);\n\t\t},\n\n\t\tgetTextDir: function(){\n\t\t\treturn this.textDir;\n\t\t}\t\n\t});\n\t\n\tlang.extend(g.Text, {  \n\t\t// summary:\n\t\t//\t\tOverrides some of dojox/gfx.Text properties, and adds some\n\t\t//\t\tfor bidi support.\n\t\t\n\t\t// textDir: String\n\t\t//\t\tUsed for displaying bidi scripts in right layout.\n\t\t//\t\tDefines the base direction of text that displayed, can have 3 values:\n\t\t//\n\t\t//\t\t1. \"ltr\" - base direction is left to right.\n\t\t//\t\t2. \"rtl\" - base direction is right to left.\n\t\t//\t\t3. \"auto\" - base direction is contextual (defined by first strong character).\n\t\ttextDir: \"\",\n\n\t\tformatText: function (/*String*/ text, /*String*/ textDir){\n\t\t\t// summary:\n\t\t\t//\t\tApplies the right transform on text, according to renderer.\n\t\t\t// text:\t\n\t\t\t//\t\tthe string for manipulation, by default return value.\n\t\t\t// textDir:\t\n\t\t\t//\t\tText direction.\n\t\t\t//\t\tCan be:\n\t\t\t//\n\t\t\t//\t\t1. \"ltr\" - for left to right layout.\n\t\t\t//\t\t2. \"rtl\" - for right to left layout\n\t\t\t//\t\t3. \"auto\" - for contextual layout: the first strong letter decides the direction.\n\t\t\t// description:\n\t\t\t//\t\tFinds the right transformation that should be applied on the text, according to renderer.\n\t\t\t//\t\tWas tested in:\n\t\t\t//\n\t\t\t//\t\tRenderers (browser for testing):\n\t\t\t//\n\t\t\t//\t\t- canvas (FF, Chrome, Safari),\n\t\t\t//\t\t- vml (IE),\n\t\t\t//\t\t- svg (FF, Chrome, Safari, Opera),\n\t\t\t//\t\t- silverlight (IE, Chrome, Safari, Opera),\n\t\t\t//\t\t- svgWeb(FF, Chrome, Safari, Opera, IE).\n\t\t\t//\n\t\t\t//\t\tBrowsers [browser version that was tested]:\n\t\t\t//\n\t\t\t//\t\t- IE [6,7,8], FF [3.6],\n\t\t\t//\t\t- Chrome (latest for March 2011),\n\t\t\t//\t\t- Safari [5.0.3],\n\t\t\t//\t\t- Opera [11.01].\n\n\t\t\tif(textDir && text && text.length > 1){\n\t\t\t\tvar sourceDir = \"ltr\", targetDir = textDir;\n\t\n\t\t\t\tif(targetDir == \"auto\"){\n\t\t\t\t\t//is auto by default\n\t\t\t\t\tif(g.isVml){\n\t\t\t\t\t\treturn text;\n\t\t\t\t\t}\n\t\t\t\t\ttargetDir = bidiEngine.checkContextual(text);\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isVml){\n\t\t\t\t\tsourceDir = bidiEngine.checkContextual(text);\n\t\t\t\t\tif(targetDir != sourceDir){\n\t\t\t\t\t\tif(targetDir == \"rtl\"){\n\t\t\t\t\t\t\treturn !bidiEngine.hasBidiChar(text) ? bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\") : bidi_const.RLM + bidi_const.RLM + text;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn bidi_const.LRM + text;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isSvgWeb){\n\t\t\t\t\tif(targetDir == \"rtl\"){\n\t\t\t\t\t\treturn bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\");\n\t\t\t\t\t}\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isSilverlight){\n\t\t\t\t\treturn (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRNNN\",\"VLYNN\") : bidiEngine.bidiTransform(text,\"ILNNN\",\"VLYNN\");\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isCanvas){\n\t\t\t\t\treturn (targetDir == \"rtl\") ? bidi_const.RLE + text + bidi_const.PDF : bidi_const.LRE + text + bidi_const.PDF;\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isSvg){\n\t\t\t\t\tif(has(\"ff\") < 4){\n\t\t\t\t\t\treturn (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRYNN\",\"VLNNN\") : bidiEngine.bidiTransform(text,\"ILYNN\",\"VLNNN\");\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn bidi_const.LRM + (targetDir == \"rtl\" ? bidi_const.RLE : bidi_const.LRE) + text + bidi_const.PDF;\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\t\n\t\t\t}\n\t\t\treturn text;\n\t\t},\t\n\n\t\tbidiPreprocess: function(newShape){     \n\t\t\treturn newShape;\n\t\t}\n\t});\n\n\tlang.extend(g.TextPath, {\n\t\t// textDir: String\n\t\t//\t\tUsed for displaying bidi scripts in right layout.\n\t\t//\t\tDefines the base direction of text that displayed, can have 3 values:\n\t\t//\n\t\t//\t\t1. \"ltr\" - base direction is left to right.\n\t\t//\t\t2. \"rtl\" - base direction is right to left.\n\t\t//\t\t3. \"auto\" - base direction is contextual (defined by first strong character).\n\t\ttextDir: \"\",\n\n\t\tformatText: function (/*String*/text, /*String*/textDir){\n\t\t\t// summary:\n\t\t\t//\t\tApplies the right transform on text, according to renderer.\n\t\t\t// text:\n\t\t\t//\t\tthe string for manipulation, by default return value.\n\t\t\t// textDir:\n\t\t\t//\t\ttext direction direction.\n\t\t\t//\t\tCan be:\n\t\t\t//\n\t\t\t//\t\t1. \"ltr\" - for left to right layout.\n\t\t\t//\t\t2. \"rtl\" - for right to left layout\n\t\t\t//\t\t3. \"auto\" - for contextual layout: the first strong letter decides the direction.\n\t\t\t// description:\n\t\t\t//\t\tFinds the right transformation that should be applied on the text, according to renderer.\n\t\t\t//\t\tWas tested in:\n\t\t\t//\n\t\t\t//\t\tRenderers:\n\t\t\t//\t\tcanvas (FF, Chrome, Safari), vml (IE), svg (FF, Chrome, Safari, Opera), silverlight (IE8), svgWeb(FF, Chrome, Safari, Opera, IE).\n\t\t\t//\n\t\t\t//\t\tBrowsers:\n\t\t\t//\t\tIE [6,7,8], FF [3.6], Chrome (latest for February 2011), Safari [5.0.3], Opera [11.01].\n\n\t\t\tif(textDir && text && text.length > 1){\n\t\t\t\tvar sourceDir = \"ltr\", targetDir = textDir;\n\n\t\t\t\tif(targetDir == \"auto\"){\n\t\t\t\t\t//is auto by default\n\t\t\t\t\tif(g.isVml){\n\t\t\t\t\t\treturn text;\n\t\t\t\t\t}\n\t\t\t\t\ttargetDir = bidiEngine.checkContextual(text);\n\t\t\t\t}\n\n\t\t\t\tif(g.isVml){\n\t\t\t\t\tsourceDir = bidiEngine.checkContextual(text);\n\t\t\t\t\tif(targetDir != sourceDir){\n\t\t\t\t\t\tif(targetDir == \"rtl\"){\n\t\t\t\t\t\t\treturn !bidiEngine.hasBidiChar(text) ? bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\") : bidi_const.RLM + bidi_const.RLM + text;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn bidi_const.LRM + text;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\t\t\tif(g.isSvgWeb){\n\t\t\t\t\tif(targetDir == \"rtl\"){\n\t\t\t\t\t\treturn bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\");\n\t\t\t\t\t}\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\t\t\t//unlike the g.Text that is rendered in logical layout for Bidi scripts.\n\t\t\t\t//for g.TextPath in svg always visual -> bidi script is unreadable (except Opera and FF start from version 4)\n\t\t\t\tif(g.isSvg){\n\t\t\t\t\tif(has(\"opera\") || has(\"ff\") >= 4){\n\t\t\t\t\t\ttext = bidi_const.LRM + (targetDir == \"rtl\"? bidi_const.RLE : bidi_const.LRE) + text + bidi_const.PDF;\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttext = (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRYNN\",\"VLNNN\") : bidiEngine.bidiTransform(text,\"ILYNN\",\"VLNNN\");\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\t\n\t\t\t}\t\n\t\t\treturn text;\n\t\t},\n\t\tbidiPreprocess: function(newText){\n\t\t\tif(newText && (typeof newText == \"string\")){\n\t\t\t\tthis.origText = newText;\n\t\t\t\tnewText = this.formatText(newText,this.textDir);\n\t\t\t}\n\t\t\treturn newText;\n\t\t}\n\t});\t\n\t\t\n\tvar extendMethod = function(shape, method, before, after){\n\t\t// summary:\n\t\t//\t\tSome helper function. Used for extending methods of shape.\n\t\t// shape: Object\n\t\t//\t\tThe shape we overriding it's method.\n\t\t// method: String\n\t\t//\t\tThe method that is extended, the original method is called before or after\n\t\t//\t\tfunctions that passed to extendMethod.\n\t\t// before: function\n\t\t//\t\tIf defined this function will be executed before the original method.\n\t\t// after: function\n\t\t//\t\tIf defined this function will be executed after the original method.\n\t\tvar old = shape.prototype[method];\n\t\tshape.prototype[method] = \n\t\t\tfunction(){\n\t\t\t\tvar rBefore;\n\t\t\t\tif (before){\n\t\t\t\t\trBefore = before.apply(this, arguments);\n\t\t\t\t}\n\t\t\t\tvar r = old.call(this, rBefore);\n\t\t\t\tif (after){\n\t\t\t\t\tr = after.call(this, r, arguments);\n\t\t\t\t}\n\t\t\t\treturn r;\n\t\t\t};\n\t};\n\n\tvar bidiPreprocess = function(newText){\n\t\tif (newText){  \n\t\t\tif (newText.textDir){\n\t\t\t\tnewText.textDir = validateTextDir(newText.textDir);\n\t\t\t}\n\t\t\tif (newText.text && (newText.text instanceof Array)){\n\t\t\t\tnewText.text = newText.text.join(\",\");\n\t\t\t}\n\t\t}\n\t\tif(newText && (newText.text != undefined || newText.textDir) && (this.textDir != newText.textDir || newText.text != this.origText)){\n\t\t\t// store the original text. \n\t\t\tthis.origText = (newText.text != undefined) ? newText.text : this.origText;\n\t\t\tif(newText.textDir){\n\t\t\t\tthis.textDir = newText.textDir;\n\t\t\t}\n\t\t\tnewText.text = this.formatText(this.origText,this.textDir);\n\t\t}\n\t\treturn this.bidiPreprocess(newText);\n\n\t};\n\n\t// Instead of adding bidiPreprocess to all renders one by one\n\t// use the extendMethod, at first there's a need for bidi transformation \n\t// on text then call to original setShape.\n\textendMethod(g.Text,\"setShape\", bidiPreprocess, null);\n\textendMethod(g.TextPath,\"setText\", bidiPreprocess, null);\n\t\n\tvar restoreText = function(origObj){\n\t\tvar obj = lang.clone(origObj);\n\t\tif (obj && this.origText){\n\t\t\tobj.text = this.origText;\n\t\t}\n\t\treturn obj;\n\t};\n\n\t// Instead of adding restoreText to all renders one by one\n\t// use the extendMethod, at first get the shape by calling the original getShape,\n\t// than resrore original text (without the text transformations).\n\textendMethod(g.Text, \"getShape\", null, restoreText);\n\textendMethod(g.TextPath, \"getText\", null, restoreText);\n\n\tvar groupTextDir = function(group, args){\n\t\tvar textDir;\n\t\tif (args && args[0]){\n\t\t\ttextDir = validateTextDir(args[0]);\n\t\t}\n\t\tgroup.setTextDir(textDir ? textDir : this.textDir);\n\t\treturn group;\t// dojox/gfx.Group\n\t};\n\n\t// In creation of Group there's a need to update it's textDir,\n\t// so instead of doing it in renders one by one (vml vs others)\n\t// use the extendMethod, at first the original createGroup is applied, the\n\t// groupTextDir which is setts Group's textDir as it's father's or if was defined\n\t// by user by this value.\n\textendMethod(g.Surface, \"createGroup\", null, groupTextDir);\n\textendMethod(g.Group, \"createGroup\", null, groupTextDir);\n\n\tvar textDirPreprocess =  function(text){\n\t\t// inherit from surface / group  if textDir is defined there\n\t\tif(text){\n\t\t\tvar textDir = text.textDir ? validateTextDir(text.textDir) : this.textDir;\n\t\t\tif(textDir){\n\t\t\t\ttext.textDir = textDir;\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t};\n\n\t// In creation there's a need to some preprocess,\n\t// so instead of doing it in renders one by one (vml vs others)\n\t// use the extendMethod, at first the textDirPreprocess function handles the input\n\t// then the original createXXXXXX is applied.\n\textendMethod(g.Surface,\"createText\", textDirPreprocess, null);\n\textendMethod(g.Surface,\"createTextPath\", textDirPreprocess, null);\n\textendMethod(g.Group,\"createText\", textDirPreprocess, null);\n\textendMethod(g.Group,\"createTextPath\", textDirPreprocess, null);\n\n\t/*=====\n\t// don't mask definition of original createSurface() function from doc parser\n\tg = {};\n\t=====*/\n\n\tg.createSurface = function(parentNode, width, height, textDir) {\n\t\tvar s = g[g.renderer].createSurface(parentNode, width, height);\n\t\tvar tDir = validateTextDir(textDir);\n\t\t\n\t\tif(g.isSvgWeb){\n\t\t\ts.textDir = tDir ? tDir : html.style(dom.byId(parentNode),\"direction\");\n\t\t\treturn s;\n\t\t}\n\t\t// if textDir was defined use it, else get default value.\n\t\t//s.textDir = tDir ? tDir : html.style(s.rawNode,\"direction\");\n\t\tif(g.isVml || g.isSvg || g.isCanvas){\n\t\t\ts.textDir = tDir ? tDir : html.style(s.rawNode,\"direction\");\n\t\t}\n\t\tif(g.isSilverlight){\n\t\t\t// allow this once rawNode will be able for the silverlight\n\t\t\t//s.textDir = tDir ? tDir : dojo.style(s.rawNode,\"direction\");\n\t\t\ts.textDir = tDir ? tDir : html.style(s._nodes[1],\"direction\");\n\t\t}\n\t\t\n\t\treturn s;\n\t};\n\t/*===== g = origG; =====*/\n\n\t// some helper functions\n\t\n\tfunction setTextDir(/*Object*/ obj, /*String*/ newTextDir){\n\t\tvar tDir = validateTextDir(newTextDir);\n\t\tif (tDir){\n\t\t\tg.utils.forEach(obj,function(e){\n\t\t\t\tif(e instanceof g.Surface || e instanceof g.Group){\n\t\t\t\t\te.textDir = tDir;\n\t\t\t\t}\t\t\n\t\t\t\tif(e instanceof g.Text){\n\t\t\t\t\te.setShape({textDir: tDir});\n\t\t\t\t}\n\t\t\t\tif(e instanceof g.TextPath){\n\t\t\t\t\te.setText({textDir: tDir})\n\t\t\t\t}\n\t\t\t}, obj);\n\t\t}\n\t\treturn obj;\n\t}\n\n\tfunction validateTextDir(textDir){\n\t\tvar validValues = [\"ltr\",\"rtl\",\"auto\"]; \n\t\tif (textDir){\n\t\t\ttextDir = textDir.toLowerCase();\n\t\t\tif (arr.indexOf(validValues, textDir) < 0){\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn textDir;\n\t}\n\n\treturn g; // return gfx api augmented with bidi support\t\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n\n/***/ }),\n\n/***/ 300:\n/*!*****************************!*\\\n  !*** ../dojox/gfx/utils.js ***!\n  \\*****************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/kernel */ 1),__webpack_require__(/*! dojo/_base/lang */ 0),__webpack_require__(/*! ./_base */ 236), __webpack_require__(/*! dojo/_base/html */ 264),__webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/_base/window */ 12), __webpack_require__(/*! dojo/_base/json */ 88), \n\t__webpack_require__(/*! dojo/_base/Deferred */ 51), __webpack_require__(/*! dojo/_base/sniff */ 57), __webpack_require__.dj.c(/*! dojox/gfx/utils */ 300),__webpack_require__(/*! dojo/_base/config */ 20)], __WEBPACK_AMD_DEFINE_RESULT__ = function(kernel, lang, g, html, arr, win, jsonLib, Deferred, has, require, config){\n\tvar gu = g.utils = {};\n\n\tlang.mixin(gu, {\n\t\tforEach: function(\n\t\t\t/*dojox/gfx/shape.Surface|dojox/gfx/shape.Shape*/ object,\n\t\t\t/*Function|String|Array*/ f, /*Object?*/ o\n\t\t){\n\t\t\t// summary:\n\t\t\t//\t\tTakes a shape or a surface and applies a function \"f\" to in the context of \"o\"\n\t\t\t//\t\t(or global, if missing). If \"shape\" was a surface or a group, it applies the same\n\t\t\t//\t\tfunction to all children recursively effectively visiting all shapes of the underlying scene graph.\n\t\t\t// object:\n\t\t\t//\t\tThe gfx container to iterate.\n\t\t\t// f:\n\t\t\t//\t\tThe function to apply.\n\t\t\t// o:\n\t\t\t//\t\tThe scope.\n\t\t\to = o || kernel.global;\n\t\t\tf.call(o, object);\n\t\t\tif(object instanceof g.Surface || object instanceof g.Group){\n\t\t\t\tarr.forEach(object.children, function(shape){\n\t\t\t\t\tgu.forEach(shape, f, o);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tserialize: function(object){\n\t\t\t// summary:\n\t\t\t//\t\tTakes a shape or a surface and returns an object, which describes underlying shapes.\n\t\t\t// object: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\n\t\t\t//\t\tThe container to serialize.\n\n\t\t\tvar t = {}, v, isSurface = object instanceof g.Surface;\n\t\t\tif(isSurface || object instanceof g.Group){\n\t\t\t\tt.children = arr.map(object.children, gu.serialize);\n\t\t\t\tif(isSurface){\n\t\t\t\t\treturn t.children;\t// Array\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tt.shape = object.getShape();\n\t\t\t}\n\t\t\tif(object.getTransform){\n\t\t\t\tv = object.getTransform();\n\t\t\t\tif(v){ t.transform = v; }\n\t\t\t}\n\t\t\tif(object.getStroke){\n\t\t\t\tv = object.getStroke();\n\t\t\t\tif(v){ t.stroke = v; }\n\t\t\t}\n\t\t\tif(object.getFill){\n\t\t\t\tv = object.getFill();\n\t\t\t\tif(v){ t.fill = v; }\n\t\t\t}\n\t\t\tif(object.getFont){\n\t\t\t\tv = object.getFont();\n\t\t\t\tif(v){ t.font = v; }\n\t\t\t}\n\t\t\treturn t;\t// Object\n\t\t},\n\n\t\ttoJson: function(object, prettyPrint){\n\t\t\t// summary:\n\t\t\t//\t\tWorks just like serialize() but returns a JSON string. If prettyPrint is true, the string is pretty-printed to make it more human-readable.\n\t\t\t// object: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\n\t\t\t//\t\tThe container to serialize.\n\t\t\t// prettyPrint: Boolean?\n\t\t\t//\t\tIndicates whether the output string should be formatted.\n\t\t\t// returns: String\n\t\t\t\n\t\t\treturn jsonLib.toJson(gu.serialize(object), prettyPrint);\t// String\n\t\t},\n\n\t\tdeserialize: function(parent, object){\n\t\t\t// summary:\n\t\t\t//\t\tTakes a surface or a shape and populates it with an object produced by serialize().\n\t\t\t// parent: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\n\t\t\t//\t\tThe destination container for the deserialized shapes.\n\t\t\t// object: dojox/gfx/shape.Shape|Array\n\t\t\t//\t\tThe shapes to deserialize.\n\n\t\t\tif(object instanceof Array){\n\t\t\t\treturn arr.map(object, lang.hitch(null, gu.deserialize, parent));\t// Array\n\t\t\t}\n\t\t\tvar shape = (\"shape\" in object) ? parent.createShape(object.shape) : parent.createGroup();\n\t\t\tif(\"transform\" in object){\n\t\t\t\tshape.setTransform(object.transform);\n\t\t\t}\n\t\t\tif(\"stroke\" in object){\n\t\t\t\tshape.setStroke(object.stroke);\n\t\t\t}\n\t\t\tif(\"fill\" in object){\n\t\t\t\tshape.setFill(object.fill);\n\t\t\t}\n\t\t\tif(\"font\" in object){\n\t\t\t\tshape.setFont(object.font);\n\t\t\t}\n\t\t\tif(\"children\" in object){\n\t\t\t\tarr.forEach(object.children, lang.hitch(null, gu.deserialize, shape));\n\t\t\t}\n\t\t\treturn shape;\t// dojox/gfx/shape.Shape\n\t\t},\n\n\t\tfromJson: function(parent, json){\n\t\t\t// summary:\n\t\t\t//\t\tWorks just like deserialize() but takes a JSON representation of the object.\n\t\t\t// parent: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\n\t\t\t//\t\tThe destination container for the deserialized shapes.\n\t\t\t// json: String\n\t\t\t//\t\tThe shapes to deserialize.\n\n\t\t\treturn gu.deserialize(parent, jsonLib.fromJson(json));\t// Array|dojox/gfx/shape.Shape\n\t\t},\n\n\t\ttoSvg: function(/*dojox/gfx/shape.Surface*/surface){\n\t\t\t// summary:\n\t\t\t//\t\tFunction to serialize a GFX surface to SVG text.\n\t\t\t// description:\n\t\t\t//\t\tFunction to serialize a GFX surface to SVG text.  The value of this output\n\t\t\t//\t\tis that there are numerous serverside parser libraries that can render\n\t\t\t//\t\tSVG into images in various formats.  This provides a way that GFX objects\n\t\t\t//\t\tcan be captured in a known format and sent serverside for serialization\n\t\t\t//\t\tinto an image.\n\t\t\t// surface:\n\t\t\t//\t\tThe GFX surface to serialize.\n\t\t\t// returns:\n\t\t\t//\t\tDeferred object that will be called when SVG serialization is complete.\n\t\t\n\t\t\t//Since the init and even surface creation can be async, we need to\n\t\t\t//return a deferred that will be called when content has serialized.\n\t\t\tvar deferred = new Deferred();\n\t\t\n\t\t\tif(g.renderer === \"svg\"){\n\t\t\t\t//If we're already in SVG mode, this is easy and quick.\n\t\t\t\ttry{\n\t\t\t\t\tvar svg = gu._cleanSvg(gu._innerXML(surface.rawNode));\n\t\t\t\t\tdeferred.callback(svg);\n\t\t\t\t}catch(e){\n\t\t\t\t\tdeferred.errback(e);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//Okay, now we have to get creative with hidden iframes and the like to\n\t\t\t\t//serialize SVG.\n\t\t\t\tif (!gu._initSvgSerializerDeferred) {\n\t\t\t\t\tgu._initSvgSerializer();\n\t\t\t\t}\n\t\t\t\tvar jsonForm = gu.toJson(surface);\n\t\t\t\tvar serializer = function(){\n\t\t\t\t\ttry{\n\t\t\t\t\t\tvar sDim = surface.getDimensions();\n\t\t\t\t\t\tvar width = sDim.width;\n\t\t\t\t\t\tvar\theight = sDim.height;\n\n\t\t\t\t\t\t//Create an attach point in the iframe for the contents.\n\t\t\t\t\t\tvar node = gu._gfxSvgProxy.document.createElement(\"div\");\n\t\t\t\t\t\tgu._gfxSvgProxy.document.body.appendChild(node);\n\t\t\t\t\t\t//Set the node scaling.\n\t\t\t\t\t\twin.withDoc(gu._gfxSvgProxy.document, function() {\n\t\t\t\t\t\t\thtml.style(node, \"width\", width);\n\t\t\t\t\t\t\thtml.style(node, \"height\", height);\n\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t//Create temp surface to render object to and render.\n\t\t\t\t\t\tvar ts = gu._gfxSvgProxy[dojox._scopeName].gfx.createSurface(node, width, height);\n\n\t\t\t\t\t\t//It's apparently possible that a suface creation is async, so we need to use\n\t\t\t\t\t\t//the whenLoaded function.  Probably not needed for SVG, but making it common\n\t\t\t\t\t\tvar draw = function(surface) {\n\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tgu._gfxSvgProxy[dojox._scopeName].gfx.utils.fromJson(surface, jsonForm);\n\n\t\t\t\t\t\t\t\t//Get contents and remove temp surface.\n\t\t\t\t\t\t\t\tvar svg = gu._cleanSvg(node.innerHTML);\n\t\t\t\t\t\t\t\tsurface.clear();\n\t\t\t\t\t\t\t\tsurface.destroy();\n\t\t\t\t\t\t\t\tgu._gfxSvgProxy.document.body.removeChild(node);\n\t\t\t\t\t\t\t\tdeferred.callback(svg);\n\t\t\t\t\t\t\t}catch(e){\n\t\t\t\t\t\t\t\tdeferred.errback(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tts.whenLoaded(null,draw);\n\t\t\t\t\t }catch (ex) {\n\t\t\t\t\t\tdeferred.errback(ex);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t//See if we can call it directly or pass it to the deferred to be\n\t\t\t\t//called on initialization.\n\t\t\t\tif(gu._initSvgSerializerDeferred.fired > 0){\n\t\t\t\t\tserializer();\n\t\t\t\t}else{\n\t\t\t\t\tgu._initSvgSerializerDeferred.addCallback(serializer);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn deferred; //dojo.Deferred that will be called when serialization finishes.\n\t\t},\n\n\t\t//iFrame document used for handling SVG serialization.\n\t\t_gfxSvgProxy: null,\n\n\t\t//Serializer loaded.\n\t\t_initSvgSerializerDeferred: null,\n\n\t\t_svgSerializerInitialized: function() {\n\t\t\t// summary:\n\t\t\t//\t\tInternal function to call when the serializer init completed.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tgu._initSvgSerializerDeferred.callback(true);\n\t\t},\n\n\t\t_initSvgSerializer: function(){\n\t\t\t// summary:\n\t\t\t//\t\tInternal function to initialize the hidden iframe where SVG rendering\n\t\t\t//\t\twill occur.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tif(!gu._initSvgSerializerDeferred){\n\t\t\t\tgu._initSvgSerializerDeferred = new Deferred();\n\t\t\t\tvar f = win.doc.createElement(\"iframe\");\n\t\t\t\thtml.style(f, {\n\t\t\t\t\tdisplay: \"none\",\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\twidth: \"1em\",\n\t\t\t\t\theight: \"1em\",\n\t\t\t\t\ttop: \"-10000px\"\n\t\t\t\t});\n\t\t\t\tvar intv;\n\t\t\t\tif(has(\"ie\")){\n\t\t\t\t\tf.onreadystatechange = function(){\n\t\t\t\t\t\tif(f.contentWindow.document.readyState == \"complete\"){\n\t\t\t\t\t\t\tf.onreadystatechange = function() {};\n\t\t\t\t\t\t\tintv = setInterval(function() {\n\t\t\t\t\t\t\t\tif(f.contentWindow[kernel.scopeMap[\"dojo\"][1]._scopeName] &&\n\t\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx &&\n\t\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils){\n\t\t\t\t\t\t\t\t\tclearInterval(intv);\n\t\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._gfxSvgProxy = f.contentWindow;\n\t\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._svgSerializerInitialized();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 50);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}else{\n\t\t\t\t\tf.onload = function(){\n\t\t\t\t\t\tf.onload = function() {};\n\t\t\t\t\t\tintv = setInterval(function() {\n\t\t\t\t\t\t\tif(f.contentWindow[kernel.scopeMap[\"dojo\"][1]._scopeName] &&\n\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx &&\n\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils){\n\t\t\t\t\t\t\t\tclearInterval(intv);\n\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._gfxSvgProxy = f.contentWindow;\n\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._svgSerializerInitialized();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 50);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t//We have to load the GFX SVG proxy frame.  Default is to use the one packaged in dojox.\n\t\t\t\tvar uri = (config[\"dojoxGfxSvgProxyFrameUrl\"]||require.toUrl(\"dojox/gfx/resources/gfxSvgProxyFrame.html\"));\n\t\t\t\tf.setAttribute(\"src\", uri.toString());\n\t\t\t\twin.body().appendChild(f);\n\t\t\t}\n\t\t},\n\n\t\t_innerXML: function(/*Node*/node){\n\t\t\t// summary:\n\t\t\t//\t\tImplementation of MS's innerXML function, borrowed from dojox.xml.parser.\n\t\t\t// node:\n\t\t\t//\t\tThe node from which to generate the XML text representation.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tif(node.innerXML){\n\t\t\t\treturn node.innerXML;\t//String\n\t\t\t}else if(node.xml){\n\t\t\t\treturn node.xml;\t\t//String\n\t\t\t}else if(typeof XMLSerializer != \"undefined\"){\n\t\t\t\treturn (new XMLSerializer()).serializeToString(node);\t//String\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\n\t\t_cleanSvg: function(svg) {\n\t\t\t// summary:\n\t\t\t//\t\tInternal function that cleans up artifacts in extracted SVG content.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tif(svg){\n\t\t\t\t//Make sure the namespace is set.\n\t\t\t\tif(svg.indexOf(\"xmlns=\\\"http://www.w3.org/2000/svg\\\"\") == -1){\n\t\t\t\t\tsvg = svg.substring(4, svg.length);\n\t\t\t\t\tsvg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\" + svg;\n\t\t\t\t}\n\t\t\t\t//Same for xmlns:xlink (missing in Chrome and Safari)\n\t\t\t\tif(svg.indexOf(\"xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\") == -1){\n\t\t\t\t\tsvg = svg.substring(4, svg.length);\n\t\t\t\t\tsvg = \"<svg xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\" + svg;\n\t\t\t\t}\n\t\t\t\t//and add namespace to href attribute if not done yet \n\t\t\t\t//(FF 5+ adds xlink:href but not the xmlns def)\n\t\t\t\tif(svg.indexOf(\"xlink:href\") === -1){\n\t\t\t\t\tsvg = svg.replace(/href\\s*=/g, \"xlink:href=\");\n\t\t\t\t}\n\t\t\t\t// in IE, <image are serialized as <img>\n\t\t\t\tsvg = svg.replace(/<img\\b([^>]*)>/gi,\"<image $1 />\");\n\t\t\t\t//Do some other cleanup, like stripping out the\n\t\t\t\t//dojoGfx attributes and quoting ids.\n\t\t\t\tsvg = svg.replace(/\\bdojoGfx\\w*\\s*=\\s*(['\"])\\w*\\1/g, \"\");\n\t\t\t\tsvg = svg.replace(/\\b__gfxObject__\\s*=\\s*(['\"])\\w*\\1/g, \"\");\n\t\t\t\tsvg = svg.replace(/[=]([^\"']+?)(\\s|>)/g,'=\"$1\"$2');\n\t\t\t\t\n\t\t\t\t// Undefined strokes (IE 8 seralization weirdness) should be removed to  \n\t\t\t\t// allow default.  'undefined' is not a valid value. \n\t\t\t\tsvg = svg.replace(/\\bstroke-opacity\\w*\\s*=\\s*(['\"])undefined\\1/g, \"\"); \t\t\t\t\n\t\t\t}\n\t\t\treturn svg;  //Cleaned SVG text.\n\t\t}\n\t});\n\n\treturn gu;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 301:\n/*!********************************************!*\\\n  !*** ../dojox/charting/bidi/_bidiutils.js ***!\n  \\********************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\n  !(module.exports = {\n\t\treverseMatrix: function(plot, dim, offsets, rtl){\n\t\t\t//summary:\n\t\t\t//\treverse the underlying matrix of the plots to perform the mirroring behavior.\n\t\t\t//plot:\n\t\t\t//  the plot which has the matrix to be reversed.\n\t\t\t//dim:\n\t\t\t//  the dimension (width,height) of the chart.\n\t\t\t//offsets:\n\t\t\t//  the offsets of the chart\n\t\t\tvar shift = offsets.l - offsets.r;\n\t\t\tvar xx = rtl? -1 : 1;\n\t\t\tvar xy = 0;\n\t\t\tvar yx = 0;\n\t\t\tvar yy = 1;\n\t\t\tvar dx = rtl? dim.width + shift : 0;\n\t\t\tvar dy = 0;\n\t\t\tif(plot.matrix){\n\t\t\t\txx = xx * Math.abs(plot.matrix.xx);\n\t\t\t\tyy = plot.matrix.yy;\n\t\t\t\txy = plot.matrix.xy;\n\t\t\t\tyx = plot.matrix.yx;\n\t\t\t\tdy = plot.matrix.xy;\n\t\t\t}\n\t\t\tplot.setTransform({xx: xx, xy: xy, yx: yx, yy: yy, dx: dx, dy: dy});\n \t}\n });\n\n\n/***/ }),\n\n/***/ 302:\n/*!****************************************!*\\\n  !*** ../dojox/lang/functional/fold.js ***!\n  \\****************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/_base/kernel */ 1), __webpack_require__(/*! ./lambda */ 244)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, arr, kernel, df){\n\n// This module adds high-level functions and related constructs:\n//\t- \"fold\" family of functions\n\n// Notes:\n//\t- missing high-level functions are provided with the compatible API:\n//\t\tfoldl, foldl1, foldr, foldr1\n//\t- missing JS standard functions are provided with the compatible API:\n//\t\treduce, reduceRight\n//\t- the fold's counterpart: unfold\n\n// Defined methods:\n//\t- take any valid lambda argument as the functional argument\n//\t- operate on dense arrays\n//\t- take a string as the array argument\n//\t- take an iterator objects as the array argument (only foldl, foldl1, and reduce)\n\n\tvar empty = {};\n\n\tlang.mixin(df, {\n\t\t// classic reduce-class functions\n\t\tfoldl: function(/*Array|String|Object*/ a, /*Function*/ f, /*Object*/ z, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\trepeatedly applies a binary function to an array from left\n\t\t\t//\t\tto right using a seed value as a starting point; returns the final\n\t\t\t//\t\tvalue.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; z = f.call(o, z, a[i], i, a), ++i);\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext(); z = f.call(o, z, a.next(), i++, a));\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tz = f.call(o, z, a[i], i, a);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn z;\t// Object\n\t\t},\n\t\tfoldl1: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\trepeatedly applies a binary function to an array from left\n\t\t\t//\t\tto right; returns the final value.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar z, i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tz = a[0];\n\t\t\t\tfor(i = 1, n = a.length; i < n; z = f.call(o, z, a[i], i, a), ++i);\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tif(a.hasNext()){\n\t\t\t\t\tz = a.next();\n\t\t\t\t\tfor(i = 1; a.hasNext(); z = f.call(o, z, a.next(), i++, a));\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tvar first = true;\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tif(first){\n\t\t\t\t\t\t\tz = a[i];\n\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tz = f.call(o, z, a[i], i, a);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn z;\t// Object\n\t\t},\n\t\tfoldr: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object*/ z, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\trepeatedly applies a binary function to an array from right\n\t\t\t//\t\tto left using a seed value as a starting point; returns the final\n\t\t\t//\t\tvalue.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i = a.length; i > 0; --i, z = f.call(o, z, a[i], i, a));\n\t\t\treturn z;\t// Object\n\t\t},\n\t\tfoldr1: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\trepeatedly applies a binary function to an array from right\n\t\t\t//\t\tto left; returns the final value.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar n = a.length, z = a[n - 1], i = n - 1;\n\t\t\tfor(; i > 0; --i, z = f.call(o, z, a[i], i, a));\n\t\t\treturn z;\t// Object\n\t\t},\n\t\t// JS 1.8 standard array functions, which can take a lambda as a parameter.\n\t\treduce: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ z){\n\t\t\t// summary:\n\t\t\t//\t\tapply a function simultaneously against two values of the array\n\t\t\t//\t\t(from left-to-right) as to reduce it to a single value.\n\t\t\treturn arguments.length < 3 ? df.foldl1(a, f) : df.foldl(a, f, z);\t// Object\n\t\t},\n\t\treduceRight: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ z){\n\t\t\t// summary:\n\t\t\t//\t\tapply a function simultaneously against two values of the array\n\t\t\t//\t\t(from right-to-left) as to reduce it to a single value.\n\t\t\treturn arguments.length < 3 ? df.foldr1(a, f) : df.foldr(a, f, z);\t// Object\n\t\t},\n\t\t// the fold's counterpart: unfold\n\t\tunfold: function(/*Function|String|Array*/ pr, /*Function|String|Array*/ f,\n\t\t\t\t\t\t/*Function|String|Array*/ g, /*Object*/ z, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tbuilds an array by unfolding a value\n\t\t\to = o || kernel.global; f = df.lambda(f); g = df.lambda(g); pr = df.lambda(pr);\n\t\t\tvar t = [];\n\t\t\tfor(; !pr.call(o, z); t.push(f.call(o, z)), z = g.call(o, z));\n\t\t\treturn t;\t// Array\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 303:\n/*!****************************************!*\\\n  !*** ../dojox/charting/axis2d/Base.js ***!\n  \\****************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! ../Element */ 247)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, Element){\n\t/*=====\n\tvar __BaseAxisCtorArgs = {\n\t\t// summary:\n\t\t//\t\tOptional arguments used in the definition of an invisible axis.\n\t\t// vertical: Boolean?\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\n\t\t// min: Number?\n\t\t//\t\tThe smallest value on an axis. Default is 0.\n\t\t// max: Number?\n\t\t//\t\tThe largest value on an axis. Default is 1.\n\t};\n\t=====*/\n\treturn declare(\"dojox.charting.axis2d.Base\", Element, {\n\t\t// summary:\n\t\t//\t\tThe base class for any axis.  This is more of an interface/API\n\t\t//\t\tdefinition than anything else; see dojox.charting.axis2d.Default\n\t\t//\t\tfor more details.\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tReturn a new base axis.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this axis belongs to.\n\t\t\t// kwArgs: __BaseAxisCtorArgs?\n\t\t\t//\t\tAn optional arguments object to define the axis parameters.\n\t\t\tthis.vertical = kwArgs && kwArgs.vertical;\n\t\t\tthis.opt = {};\n\t\t\tthis.opt.min = kwArgs && kwArgs.min;\n\t\t\tthis.opt.max = kwArgs && kwArgs.max;\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tStub function for clearing the axis.\n\t\t\t// returns: dojox/charting/axis2d/Base\n\t\t\t//\t\tA reference to the axis for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Base\n\t\t},\n\t\tinitialized: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturn a flag as to whether or not this axis has been initialized.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tIf the axis is initialized or not.\n\t\t\treturn false;\t//\tBoolean\n\t\t},\n\t\tcalculate: function(min, max, span){\n\t\t\t// summary:\n\t\t\t//\t\tStub function to run the calculations needed for drawing this axis.\n\t\t\t// returns: dojox/charting/axis2d/Base\n\t\t\t//\t\tA reference to the axis for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Base\n\t\t},\n\t\tgetScaler: function(){\n\t\t\t// summary:\n\t\t\t//\t\tA stub function to return the scaler object created during calculate.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe scaler object (see dojox.charting.scaler.linear for more information)\n\t\t\treturn null;\t//\tObject\n\t\t},\n\t\tgetTicks: function(){\n\t\t\t// summary:\n\t\t\t//\t\tA stub function to return the object that helps define how ticks are rendered.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe ticks object.\n\t\t\treturn null;\t//\tObject\n\t\t},\n\t\tgetOffsets: function(){\n\t\t\t// summary:\n\t\t\t//\t\tA stub function to return any offsets needed for axis and series rendering.\n\t\t\t// returns: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\treturn {l: 0, r: 0, t: 0, b: 0};\t//\tObject\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tStub function to render this axis.\n\t\t\t// returns: dojox/charting/axis2d/Base\n\t\t\t//\t\tA reference to the axis for functional chaining.\n\t\t\tthis.dirty = false;\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Base\n\t\t},\n\t\tisNullValue: function(value){\n\t\t\t// summary:\n\t\t\t//\t\tA stub function to determine a data value\n\t\t\t//\t\tthat should be ignored.\n\t\t\t// value: Number|Null|Object\n\t\t\t//\t\tA data value to be inspected.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tIf the value makes sense for this axis or not.\n\t\t\treturn false;\n\t\t},\n\t\tnaturalBaseline: 0\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 304:\n/*!************************************************!*\\\n  !*** ../dojox/charting/bidi/axis2d/Default.js ***!\n  \\************************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/dom-style */ 10)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, domStyle){\n\t// module:\n\t//\t\tdojox/charting/bidi/axis2d/Default\t\t\t\n\treturn declare(null, {\n\t\tlabelTooltip: function(elem, chart, label, truncatedLabel, font, elemType){\n\t\t\t// additional preprocessing of the labels, needed for rtl base text direction in LTR\n\t\t\t// GUI, or for ltr base text direction for RTL GUI.\n\n\t\t\tvar isChartDirectionRtl = (domStyle.get(chart.node,\"direction\") == \"rtl\");\n\t\t\tvar isBaseTextDirRtl = (chart.getTextDir(label) == \"rtl\");\n\n\t\t\tif(isBaseTextDirRtl && !isChartDirectionRtl){\n\t\t\t\tlabel = \"<span dir='rtl'>\" + label +\"</span>\";\n\t\t\t}\n\t\t\tif(!isBaseTextDirRtl && isChartDirectionRtl){\n\t\t\t\tlabel = \"<span dir='ltr'>\" + label +\"</span>\";\n\t\t\t}\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\t\n\t\t_isRtl: function(){\n\t\t\treturn this.chart.isRightToLeft();\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n\n/***/ }),\n\n/***/ 305:\n/*!*****************************************!*\\\n  !*** ../dojox/charting/plot2d/Lines.js ***!\n  \\*****************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! ./Default */ 225)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, Default){\n\n\treturn declare(\"dojox.charting.plot2d.Lines\", Default, {\n\t\t// summary:\n\t\t//\t\tA convenience constructor to create a typical line chart.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tPreset our default plot to be line-based.\n\t\t\tthis.opt.lines = true;\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 306:\n/*!*****************************************!*\\\n  !*** ../dojox/charting/plot2d/Areas.js ***!\n  \\*****************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! ./Default */ 225)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, Default){\n\n\treturn declare(\"dojox.charting.plot2d.Areas\", Default, {\n\t\t// summary:\n\t\t//\t\tRepresents an area chart.  See dojox/charting/plot2d/Default for details.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for an Area chart.\n\t\t\tthis.opt.lines = true;\n\t\t\tthis.opt.areas = true;\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 307:\n/*!*******************************************!*\\\n  !*** ../dojox/charting/plot2d/Markers.js ***!\n  \\*******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! ./Default */ 225)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, Default){\n\n\treturn declare(\"dojox.charting.plot2d.Markers\", Default, {\n\t\t// summary:\n\t\t//\t\tA convenience plot to draw a line chart with markers.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tSet up the plot for lines and markers.\n\t\t\tthis.opt.markers = true;\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 308:\n/*!***********************************************!*\\\n  !*** ../dojox/charting/plot2d/MarkersOnly.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! ./Default */ 225)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, Default){\n\n\treturn declare(\"dojox.charting.plot2d.MarkersOnly\", Default, {\n\t\t// summary:\n\t\t//\t\tA convenience object to draw only markers (like a scatter but not quite).\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tSet up our default plot to only have markers and no lines.\n\t\t\tthis.opt.lines   = false;\n\t\t\tthis.opt.markers = true;\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 309:\n/*!*******************************************!*\\\n  !*** ../dojox/charting/plot2d/Scatter.js ***!\n  \\*******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/has */ 3), __webpack_require__(/*! ./CartesianBase */ 241), __webpack_require__(/*! ./_PlotEvents */ 240), __webpack_require__(/*! ./common */ 233),\n\t__webpack_require__(/*! dojox/lang/functional */ 234), __webpack_require__(/*! dojox/lang/functional/reversed */ 242), __webpack_require__(/*! dojox/lang/utils */ 235), __webpack_require__(/*! dojox/gfx/fx */ 238), __webpack_require__(/*! dojox/gfx/gradutils */ 263)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx, gradutils){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\treturn declare(\"dojox.charting.plot2d.Scatter\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tA plot object representing a typical scatter chart.\n\t\tdefaultParams: {\n\t\t\tshadows: null,\t// draw shadows\n\t\t\tanimate: null\t// animate chart to place\n\t\t},\n\t\toptionalParams: {\n\t\t\t// theme component\n\t\t\tmarkerStroke:\t\t{},\n\t\t\tmarkerOutline:\t\t{},\n\t\t\tmarkerShadow:\t\t{},\n\t\t\tmarkerFill:\t\t\t{},\n\t\t\tmarkerFont:\t\t\t\"\",\n\t\t\tmarkerFontColor:\t\"\",\n\t\t\tstyleFunc:\t\t\tnull\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate the scatter plot.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define this plot's parameters.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Scatter\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme, events = this.events();\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(!run.data.length){\n\t\t\t\t\trun.dirty = false;\n\t\t\t\t\tt.skip();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar theme = t.next(\"marker\", [this.opt, run]), lpoly,\n\t\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler);\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.marker = theme.symbol;\n\t\t\t\t\trun.dyn.markerFill = theme.marker.fill;\n\t\t\t\t\trun.dyn.markerStroke = theme.marker.stroke;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ts = run.group;\n\t\t\t\tif(typeof run.data[0] == \"number\"){\n\t\t\t\t\tlpoly = arr.map(run.data, function(v, i){\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tx: ht(i + 1) + offsets.l,\n\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v)\n\t\t\t\t\t\t};\n\t\t\t\t\t}, this);\n\t\t\t\t}else{\n\t\t\t\t\tlpoly = arr.map(run.data, function(v, i){\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tx: ht(v.x) + offsets.l,\n\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v.y)\n\t\t\t\t\t\t};\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\n\t\t\t\tvar shadowMarkers  = new Array(lpoly.length),\n\t\t\t\t\tfrontMarkers   = new Array(lpoly.length),\n\t\t\t\t\toutlineMarkers = new Array(lpoly.length);\n\n\t\t\t\tarr.forEach(lpoly, function(c, i){\n\t\t\t\t\tvar value = run.data[i], finalTheme;\n\t\t\t\t\tif(this.opt.styleFunc || typeof value != \"number\"){\n\t\t\t\t\t\tvar tMixin = typeof value != \"number\" ? [value] : [];\n\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(value));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfinalTheme = t.addMixin(theme, \"marker\", tMixin, true);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfinalTheme = t.post(theme, \"marker\");\n\t\t\t\t\t}\n\t\t\t\t\tvar path = \"M\" + c.x + \" \" + c.y + \" \" + finalTheme.symbol;\n\t\t\t\t\tif(finalTheme.marker.shadow){\n\t\t\t\t\t\tshadowMarkers[i] = s.createPath(\"M\" + (c.x + finalTheme.marker.shadow.dx) + \" \" +\n\t\t\t\t\t\t\t(c.y + finalTheme.marker.shadow.dy) + \" \" + finalTheme.symbol).\n\t\t\t\t\t\t\tsetStroke(finalTheme.marker.shadow).setFill(finalTheme.marker.shadow.color);\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateScatter(shadowMarkers[i], dim.height - offsets.b);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(finalTheme.marker.outline){\n\t\t\t\t\t\tvar outline = dc.makeStroke(finalTheme.marker.outline);\n\t\t\t\t\t\toutline.width = 2 * outline.width + (finalTheme.marker.stroke && finalTheme.marker.stroke.width || 0);\n\t\t\t\t\t\toutlineMarkers[i] = s.createPath(path).setStroke(outline);\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateScatter(outlineMarkers[i], dim.height - offsets.b);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar stroke = dc.makeStroke(finalTheme.marker.stroke),\n\t\t\t\t\t\tfill = this._plotFill(finalTheme.marker.fill, dim, offsets);\n\t\t\t\t\tif(fill && (fill.type === \"linear\" || fill.type == \"radial\")){\n\t\t\t\t\t\tvar color = gradutils.getColor(fill, {x: c.x, y: c.y});\n\t\t\t\t\t\tif(stroke){\n\t\t\t\t\t\t\tstroke.color = color;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfrontMarkers[i] = s.createPath(path).setStroke(stroke).setFill(color);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfrontMarkers[i] = s.createPath(path).setStroke(stroke).setFill(fill);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.labels){\n\t\t\t\t\t\tvar markerBox = frontMarkers[i].getBoundingBox();\n\t\t\t\t\t\tthis.createLabel(s, value, markerBox, finalTheme);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\tthis._animateScatter(frontMarkers[i], dim.height - offsets.b);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t\tif(frontMarkers.length){\n\t\t\t\t\trun.dyn.marker = theme.symbol;\n\t\t\t\t\trun.dyn.markerStroke = frontMarkers[frontMarkers.length - 1].getStroke();\n\t\t\t\t\trun.dyn.markerFill   = frontMarkers[frontMarkers.length - 1].getFill();\n\t\t\t\t}\n\n\t\t\t\tif(events){\n\t\t\t\t\tvar eventSeries = new Array(frontMarkers.length);\n\t\t\t\t\tarr.forEach(frontMarkers, function(s, i){\n\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\telement: \"marker\",\n\t\t\t\t\t\t\tindex:   i,\n\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\tshape:   s,\n\t\t\t\t\t\t\toutline: outlineMarkers && outlineMarkers[i] || null,\n\t\t\t\t\t\t\tshadow:  shadowMarkers && shadowMarkers[i] || null,\n\t\t\t\t\t\t\tcx:      lpoly[i].x,\n\t\t\t\t\t\t\tcy:      lpoly[i].y\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif(typeof run.data[0] == \"number\"){\n\t\t\t\t\t\t\to.x = i + 1;\n\t\t\t\t\t\t\to.y = run.data[i];\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\to.x = run.data[i].x;\n\t\t\t\t\t\t\to.y = run.data[i].y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\teventSeries[i] = o;\n\t\t\t\t\t}, this);\n\t\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\t}else{\n\t\t\t\t\tdelete this._eventSeries[run.name];\n\t\t\t\t}\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Scatter\n\t\t},\n\t\t_animateScatter: function(shape, offset){\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, offset], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [0, 0], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 310:\n/*!************************************************!*\\\n  !*** ../dojox/charting/plot2d/StackedLines.js ***!\n  \\************************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! ./Stacked */ 250)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, Stacked){\n\n\treturn declare(\"dojox.charting.plot2d.StackedLines\", Stacked, {\n\t\t// summary:\n\t\t//\t\tA convenience object to create a stacked line chart.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tForce our Stacked base to be lines only.\n\t\t\tthis.opt.lines = true;\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 311:\n/*!**************************************************!*\\\n  !*** ../dojox/charting/plot2d/StackedColumns.js ***!\n  \\**************************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! ./Columns */ 253), __webpack_require__(/*! ./commonStacked */ 252)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, lang, Columns, commonStacked){\n\n\treturn declare(\"dojox.charting.plot2d.StackedColumns\", Columns, {\n\t\t// summary:\n\t\t//\t\tThe plot object representing a stacked column chart (vertical bars).\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = commonStacked.collectStats(this.series, lang.hitch(this, \"isNullValue\"));\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\treturn commonStacked.rearrangeValues.call(this, values, transform, baseline);\n \t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 312:\n/*!****************************************************!*\\\n  !*** ../dojox/charting/plot2d/ClusteredColumns.js ***!\n  \\****************************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! ./Columns */ 253), __webpack_require__(/*! ./common */ 233)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, array, Columns, dc){\n\n\treturn declare(\"dojox.charting.plot2d.ClusteredColumns\", Columns, {\n\t\t// summary:\n\t\t//\t\tA plot representing grouped or clustered columns (vertical bars)\n\t\tgetBarProperties: function(){\n\t\t\tvar length = this.series.length;\n\t\t\tarray.forEach(this.series, function(serie){if(serie.hidden){length--;}});\n\t\t\tvar f = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt, length);\n\t\t\treturn {gap: f.gap, width: f.size, thickness: f.size, clusterSize: length};\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 313:\n/*!***********************************************!*\\\n  !*** ../dojox/charting/plot2d/StackedBars.js ***!\n  \\***********************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! ./Bars */ 254), __webpack_require__(/*! ./commonStacked */ 252)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, lang, Bars, commonStacked){\n\n\treturn declare(\"dojox.charting.plot2d.StackedBars\", Bars, {\n\t\t// summary:\n\t\t//\t\tThe plot object representing a stacked bar chart (horizontal bars).\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = commonStacked.collectStats(this.series, lang.hitch(this, \"isNullValue\")), t;\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\tt = stats.hmin, stats.hmin = stats.vmin, stats.vmin = t;\n\t\t\tt = stats.hmax, stats.hmax = stats.vmax, stats.vmax = t;\n\t\t\treturn stats; // Object\n\t\t},\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\treturn commonStacked.rearrangeValues.call(this, values, transform, baseline);\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 314:\n/*!*************************************************!*\\\n  !*** ../dojox/charting/plot2d/ClusteredBars.js ***!\n  \\*************************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! ./Bars */ 254), __webpack_require__(/*! ./common */ 233)], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, array, Bars, dc){\n\n\treturn declare(\"dojox.charting.plot2d.ClusteredBars\", Bars, {\n\t\t// summary:\n\t\t//\t\tA plot representing grouped or clustered bars (horizontal bars)\n\t\tgetBarProperties: function(){\n\t\t\tvar length = this.series.length;\n\t\t\tarray.forEach(this.series, function(serie){if(serie.hidden){length--;}});\n\t\t\tvar f = dc.calculateBarSize(this._vScaler.bounds.scale, this.opt, length);\n\t\t\treturn {gap: f.gap, height: f.size, thickness: f.size};\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 315:\n/*!****************************************!*\\\n  !*** ../dojox/charting/plot2d/Grid.js ***!\n  \\****************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/sniff */ 8),\n\t\t__webpack_require__(/*! ./CartesianBase */ 241), __webpack_require__(/*! ./common */ 233), __webpack_require__(/*! dojox/lang/utils */ 235), __webpack_require__(/*! dojox/gfx/fx */ 238)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, declare, arr, has, CartesianBase, dc, du, fx){\n\n\tvar sortTicks = function(a,b){return a.value - b.value};\n\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__GridCtorArgs\", dojox.charting.plot2d.__CartesianCtorArgs, {\n\t\t// summary:\n\t\t//\t\tA special keyword arguments object that is specific to a grid \"plot\".\n\n\t\t// majorHLine: dojox.gfx.Stroke?\n\t\t//\t\tAn optional dojox.gfx.Stroke for a major horizontal line. By default major lines use major tick stroke.\n\t\tmajorHLine:undefined,\n\n\t\t// minorHLine: dojox.gfx.Stroke?\n\t\t//\t\tAn optional dojox.gfx.Stroke for a minor horizontal line. By default minor lines use minor tick stroke.\n\t\tminorHLine:undefined,\n\n\t\t// majorVLine: dojox.gfx.Stroke?\n\t\t//\t\tAn optional dojox.gfx.Stroke for a major vertical line. By default major lines use major tick stroke.\n\t\tmajorVLine:undefined,\n\n\t\t// minorVLine: dojox.gfx.Stroke?\n\t\t//\t\tAn optional dojox.gfx.Stroke for a minor vertical line. By default major lines use major tick stroke.\n\t\tminorVLine:undefined,\n\n\t\t// hFill: dojox.gfx.Fill?\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill every other horizontal stripe created by grid lines.\n\t\thFill: undefined,\n\n\t\t// hAlternateFill: dojox.gfx.Fill?\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill alternating horizontal stripe created by grid lines not filled by `hFill`.\n\t\thAlternateFill: undefined,\n\n\t\t// vFill: dojox.gfx.Fill?\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill every other vertical stripe created by grid lines.\n\t\tvFill: undefined,\n\n\t\t// vAlternateFill: dojox.gfx.Fill?\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill alternating vertical stripe created by grid lines not filled by `vFill`.\n\t\tvAlternateFill: undefined,\n\n\t\t// hMajorLines: Boolean?\n\t\t//\t\tWhether to show lines at the major ticks along the horizontal axis. Default is true.\n\t\thMajorLines: true,\n\n\t\t// hMinorLines: Boolean?\n\t\t//\t\tWhether to show lines at the minor ticks along the horizontal axis. Default is false.\n\t\thMinorLines: false,\n\n\t\t// vMajorLines: Boolean?\n\t\t//\t\tWhether to show lines at the major ticks along the vertical axis. Default is true.\n\t\tvMajorLines: true,\n\n\t\t// vMinorLines: Boolean?\n\t\t//\t\tWhether to show lines at the major ticks along the vertical axis. Default is false.\n\t\tvMinorLines: false,\n\n\t\t// hStripes: Boolean?\n\t\t//\t\tWhether to show horizontal stripes. Default is false.\n\t\thStripes: false,\n\n\t\t// vStripes: Boolean?\n\t\t//\t\tWhether to show vertical stripes. Default is false.\n\t\tvStripes: false,\n\n\t\t// enableCache: Boolean?\n\t\t//\t\tWhether the grid lines are cached from one rendering to another. This improves the rendering performance of\n\t\t//\t\tsuccessive rendering but penalize the first rendering.  Default false.\n\t\tenableCache: false,\n\n\t\t// renderOnAxis: Boolean?\n\t\t//\t\tWhether or not the grid is rendered when drawn at horizontal or vertical axis position. Default is true.\n\t\trenderOnAxis: true\n\t});\n\t=====*/\n\n\treturn declare(\"dojox.charting.plot2d.Grid\", CartesianBase, {\n\t\t// summary:\n\t\t//\t\tA \"faux\" plot that can be placed behind other plots to represent\n\t\t//\t\ta grid against which other plots can be easily measured.\n\t\tdefaultParams: {\n\t\t\thMajorLines: true,\t// draw horizontal major lines\n\t\t\thMinorLines: false,\t// draw horizontal minor lines\n\t\t\tvMajorLines: true,\t// draw vertical major lines\n\t\t\tvMinorLines: false,\t// draw vertical minor lines\n\t\t\thStripes: false,\t// draw vertical stripes\n\t\t\tvStripes: false,\t// draw vertical stripes\n\t\t\tanimate: null,   // animate bars into place\n\t\t\tenableCache: false,\n\t\t\trenderOnAxis: true\n\t\t},\n\n\t\toptionalParams: {\n\t\t\tmajorHLine: {},\n\t\t\tminorHLine: {},\n\t\t\tmajorVLine: {},\n\t\t\tminorVLine: {},\n\t\t\thFill: {},\n\t\t\tvFill: {},\n\t\t\thAlternateFill: {},\n\t\t\tvAlternateFill: {}\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate the faux Grid plot.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__GridCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the parameters of the underlying grid.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._lineFreePool = [];\n\t\t\t\tthis._lineUsePool = [];\n\t\t\t\tthis._rectFreePool = [];\n\t\t\t\tthis._rectUsePool = [];\n\t\t\t}\n\t\t},\n\t\taddSeries: function(run){\n\t\t\t// summary:\n\t\t\t//\t\tIgnored but included as a dummy method.\n\t\t\t// returns: dojox/charting/plot2d/Grid\n\t\t\t//\t\tThe reference to this plot for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Grid\n\t\t},\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns default stats (irrelevant for this type of plot).\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\treturn lang.delegate(dc.defaultStats); // Object\n\t\t},\n\t\tcleanGroup: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._lineFreePool = this._lineFreePool.concat(this._lineUsePool);\n\t\t\t\tthis._lineUsePool = [];\n\t\t\t\tthis._rectFreePool = this._rectFreePool.concat(this._rectUsePool);\n\t\t\t\tthis._rectUsePool = [];\n\t\t\t}\n\t\t},\n\t\tcreateLine: function(creator, params){\n\t\t\tvar line;\n\t\t\tif(this.opt.enableCache && this._lineFreePool.length > 0){\n\t\t\t\tline = this._lineFreePool.pop();\n\t\t\t\tline.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(line);\n\t\t\t}else{\n\t\t\t\tline = creator.createLine(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._lineUsePool.push(line);\n\t\t\t}\n\t\t\treturn line;\n\t\t},\n\t\tcreateRect: function(creator, params){\n\t\t\tvar rect;\n\t\t\tif(this.opt.enableCache && this._rectFreePool.length > 0){\n\t\t\t\trect = this._rectFreePool.pop();\n\t\t\t\trect.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(rect);\n\t\t\t}else{\n\t\t\t\trect = creator.createRect(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._rectUsePool.push(rect);\n\t\t\t}\n\t\t\treturn rect;\n\t\t},\n\t\t\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender the plot on the chart.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/Grid\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tif(!this.dirty){ return this; }\n\t\t\tthis.cleanGroup();\n\t\t\tvar s = this.getGroup(), ta = this.chart.theme, lineStroke, ticks;\n\t\t\tif((has(\"ios\") && has(\"ios\") < 6) || has(\"android\") || (has(\"safari\") && !has(\"ios\"))){\n\t\t\t\t// clipping seems buggy in some mobile Webkit browser and Safari desktop\n\t\t\t\t// it does not clip correctly if only lines are present => create a invisible rectangle...\n\t\t\t\tvar w = Math.max(0, dim.width  - offsets.l - offsets.r),\n\t\t\t\t\th = Math.max(0, dim.height - offsets.t - offsets.b);\n\t\t\t\ts.createRect({ x: offsets.l, y: offsets.t, width: w, height: h});\n\t\t\t}\n\t\t\tif(this._vAxis){\n\t\t\t\t// draw horizontal stripes and lines\n\t\t\t\tticks = this._vAxis.getTicks();\n\t\t\t\tvar vScaler = this._vAxis.getScaler();\n\t\t\t\tif(ticks != null && vScaler != null){\n\t\t\t\t\tvar vt = vScaler.scaler.getTransformerFromModel(vScaler);\n\t\t\t\t\tif(this.opt.hStripes){\n\t\t\t\t\t\tthis._renderHRect(ticks, ta.grid, dim, offsets, vScaler, vt);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.hMinorLines){\n\t\t\t\t\t\tlineStroke = this.opt.minorHLine || (ta.grid && ta.grid.minorLine) || ta.axis.minorTick;\n\t\t\t\t\t\tthis._renderHLines(ticks.minor, lineStroke, dim, offsets, vScaler, vt);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.hMajorLines){\n\t\t\t\t\t\tlineStroke = this.opt.majorHLine || (ta.grid && ta.grid.majorLine) || ta.axis.majorTick;\n\t\t\t\t\t\tthis._renderHLines(ticks.major, lineStroke, dim, offsets, vScaler, vt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tif(this._hAxis){\n\t\t\t\t// draw vertical stripes and lines\n\t\t\t\tticks = this._hAxis.getTicks();\n\t\t\t\tvar hScaler = this._hAxis.getScaler();\n\t\t\t\tif(ticks != null && hScaler != null){\n\t\t\t\t\tvar ht = hScaler.scaler.getTransformerFromModel(hScaler);\n\t\t\t\t\tif(this.opt.vStripes){\n\t\t\t\t\t\tthis._renderVRect(ticks, ta.grid, dim, offsets, hScaler, ht);\n\t\t\t\t\t}\n\t\t\t\t\tif(ticks && this.opt.vMinorLines){\n\t\t\t\t\t\tlineStroke = this.opt.minorVLine || (ta.grid && ta.grid.minorLine) || ta.axis.minorTick;\n\t\t\t\t\t\tthis._renderVLines(ticks.minor, lineStroke, dim, offsets, hScaler, ht);\n\t\t\t\t\t}\n\t\t\t\t\tif(ticks && this.opt.vMajorLines){\n\t\t\t\t\t\tlineStroke = this.opt.majorVLine || (ta.grid && ta.grid.majorLine) || ta.axis.majorTick;\n\t\t\t\t\t\tthis._renderVLines(ticks.major, lineStroke, dim, offsets, hScaler, ht);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Grid\n\t\t},\n\t\t_renderHLines: function(ticks, lineStroke, dim, offsets, vScaler, vt){\n\t\t\tvar s = this.getGroup();\n\t\t\tarr.forEach(ticks, function(tick){\n\t\t\t\tif(!this.opt.renderOnAxis && tick.value == (this._vAxis.opt.leftBottom?vScaler.bounds.from:vScaler.bounds.to)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar y = dim.height - offsets.b - vt(tick.value);\n\t\t\t\tvar hLine = this.createLine(s, {\n\t\t\t\t\tx1: offsets.l,\n\t\t\t\t\ty1: y,\n\t\t\t\t\tx2: dim.width - offsets.r,\n\t\t\t\t\ty2: y\n\t\t\t\t}).setStroke(lineStroke);\n\t\t\t\tif(this.animate){\n\t\t\t\t\tthis._animateGrid(hLine, \"h\", offsets.l, offsets.r + offsets.l - dim.width);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\t\t_renderVLines: function(ticks, lineStroke, dim, offsets, hScaler, ht){\n\t\t\tvar s = this.getGroup();\n\t\t\tarr.forEach(ticks, function(tick){\n\t\t\t\tif(!this.opt.renderOnAxis && tick.value == (this._hAxis.opt.leftBottom?hScaler.bounds.from:hScaler.bounds.to)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar x = offsets.l + ht(tick.value);\n\t\t\t\tvar vLine = this.createLine(s, {\n\t\t\t\t\tx1: x,\n\t\t\t\t\ty1: offsets.t,\n\t\t\t\t\tx2: x,\n\t\t\t\t\ty2: dim.height - offsets.b\n\t\t\t\t}).setStroke(lineStroke);\n\t\t\t\tif(this.animate){\n\t\t\t\t\tthis._animateGrid(vLine, \"v\", dim.height - offsets.b, dim.height - offsets.b - offsets.t);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\t\t_renderHRect: function(ticks, theme, dim, offsets, vScaler, vt){\n\t\t\tvar fill, tick, y, y2, hStripe;\n\t\t\tvar allTicks = ticks.major.concat(ticks.minor);\n\t\t\tallTicks.sort(sortTicks);\n\t\t\tif(allTicks[0].value > vScaler.bounds.from){\n\t\t\t\tallTicks.splice(0, 0, {value: vScaler.bounds.from});\n\t\t\t}\n\t\t\tif(allTicks[allTicks.length - 1].value < vScaler.bounds.to){\n\t\t\t\tallTicks.push({value: vScaler.bounds.to});\n\t\t\t}\n\t\t\tvar s = this.getGroup();\n\t\t\tfor(var j = 0; j < allTicks.length - 1; j++){\n\t\t\t\ttick = allTicks[j];\n\t\t\t\ty = dim.height - offsets.b - vt(tick.value);\n\t\t\t\ty2 = dim.height - offsets.b - vt(allTicks[j+1].value);\n\n\t\t\t\tfill = (j%2 == 0)?(this.opt.hAlternateFill ||(theme && theme.alternateFill)):\n\t\t\t\t\t(this.opt.hFill || (theme && theme.fill));\n\t\t\t\tif(fill){\n\t\t\t\t\thStripe = this.createRect(s, {\n\t\t\t\t\t\tx: offsets.l,\n\t\t\t\t\t\ty: y,\n\t\t\t\t\t\twidth: dim.width - offsets.r,\n\t\t\t\t\t\theight: y - y2\n\t\t\t\t\t}).setFill(fill);\n\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\tthis._animateGrid(hStripe, \"h\", offsets.l, offsets.r + offsets.l - dim.width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_renderVRect: function(ticks, theme, dim, offsets, hScaler, ht){\n\t\t\tvar fill, tick, x, x2, vStripe;\n\t\t\tvar allTicks = ticks.major.concat(ticks.minor);\n\t\t\tallTicks.sort(sortTicks);\n\t\t\tif(allTicks[0].value > hScaler.bounds.from){\n\t\t\t\tallTicks.splice(0, 0, {value: hScaler.bounds.from});\n\t\t\t}\n\t\t\tif(allTicks[allTicks.length - 1].value < hScaler.bounds.to){\n\t\t\t\tallTicks.push({value: hScaler.bounds.to});\n\t\t\t}\n\t\t\tvar s = this.getGroup();\n\t\t\tfor(var j = 0; j < allTicks.length - 1; j++){\n\t\t\t\ttick = allTicks[j];\n\t\t\t\tx = offsets.l + ht(tick.value);\n\t\t\t\tx2 = offsets.l + ht(allTicks[j+1].value);\n\n\t\t\t\tfill = (j%2 == 0)?(this.opt.vAlternateFill ||(theme && theme.alternateFill)):\n\t\t\t\t\t(this.opt.vFill || (theme && theme.fill));\n\t\t\t\tif(fill){\n\t\t\t\t\tvStripe = this.createRect(s, {\n\t\t\t\t\t\tx: x,\n\t\t\t\t\t\ty: offsets.t,\n\t\t\t\t\t\twidth: x2 - x,\n\t\t\t\t\t\theight: dim.width - offsets.r\n\t\t\t\t\t}).setFill(fill);\n\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\tthis._animateGrid(vStripe, \"v\", dim.height - offsets.b, dim.height - offsets.b - offsets.t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_animateGrid: function(shape, type, offset, size){\n\t\t\tvar transStart = type == \"h\" ? [offset, 0] : [0, offset];\n\t\t\tvar scaleStart = type == \"h\" ? [1/size, 1] : [1, 1/size];\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: transStart, end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: scaleStart, end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 316:\n/*!***************************************!*\\\n  !*** ../dojox/charting/plot2d/Pie.js ***!\n  \\***************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5) ,__webpack_require__(/*! dojo/_base/declare */ 4), \n\t\t__webpack_require__(/*! ./Base */ 251), __webpack_require__(/*! ./_PlotEvents */ 240), __webpack_require__(/*! ./common */ 233),\n\t\t__webpack_require__(/*! dojox/gfx */ 237), __webpack_require__(/*! dojox/gfx/matrix */ 239), __webpack_require__(/*! dojox/lang/functional */ 234), __webpack_require__(/*! dojox/lang/utils */ 235),__webpack_require__(/*! dojo/has */ 3)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, arr, declare, Base, PlotEvents, dc, g, m, df, du, has){\n\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__PieCtorArgs\", dojox.charting.plot2d.__DefaultCtorArgs, {\n\t\t// summary:\n\t\t//\t\tSpecialized keyword arguments object for use in defining parameters on a Pie chart.\n\t\n\t\t// labels: Boolean?\n\t\t//\t\tWhether or not to draw labels for each pie slice.  Default is true.\n\t\tlabels:\t\t\ttrue,\n\t\n\t\t// ticks: Boolean?\n\t\t//\t\tWhether or not to draw ticks to labels within each slice. Default is false.\n\t\tticks:\t\t\tfalse,\n\t\n\t\t// fixed: Boolean?\n\t\t//\t\tWhether a fixed precision must be applied to data values for display. Default is true.\n\t\tfixed:\t\t\ttrue,\n\t\n\t\t// precision: Number?\n\t\t//\t\tThe precision at which to round data values for display. Default is 0.\n\t\tprecision:\t\t1,\n\t\n\t\t// labelOffset: Number?\n\t\t//\t\tThe amount in pixels by which to offset labels.  Default is 20.\n\t\tlabelOffset:\t20,\n\t\n\t\t// labelStyle: String?\n\t\t//\t\tOptions as to where to draw labels.  Values include \"default\", and \"columns\".\tDefault is \"default\".\n\t\tlabelStyle:\t\t\"default\",\t// default/columns\n\t\t\n\t\t// omitLabels: Boolean?\n\t\t//\t\tWhether labels of slices small to the point of not being visible are omitted.\tDefault false.\n\t\tomitLabels: false,\n\t\t\n\t\t// htmlLabels: Boolean?\n\t\t//\t\tWhether or not to use HTML to render slice labels. Default is true.\n\t\thtmlLabels:\t\ttrue,\n\t\n\t\t// radGrad: String?\n\t\t//\t\tThe type of radial gradient to use in rendering.  Default is \"native\".\n\t\tradGrad:        \"native\",\n\t\n\t\t// fanSize: Number?\n\t\t//\t\tThe amount for a radial gradient.  Default is 5.\n\t\tfanSize:\t\t5,\n\t\n\t\t// startAngle: Number?\n\t\t//\t\tWhere to being rendering gradients in slices, in degrees.  Default is 0.\n\t\tstartAngle:     0,\n\t\n\t\t// radius: Number?\n\t\t//\t\tThe size of the radial gradient.  Default is 0.\n\t\tradius:\t\t0,\n\n\t\t// shadow: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use to draw any shadows for a series on a plot.\n\t\tshadow:\t\t{},\n\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tAny fill to be used for elements on the plot.\n\t\tfill:\t\t{},\n\n\t\t// filter: dojox.gfx.Filter?\n\t\t//\t\tAn SVG filter to be used for elements on the plot. gfx SVG renderer must be used and dojox/gfx/svgext must\n\t\t//\t\tbe required for this to work.\n\t\tfilter:\t\t{},\n\n\t\t// styleFunc: Function?\n\t\t//\t\tA function that returns a styling object for the a given data item.\n\t\tstyleFunc:\tnull\n\t});\n\t=====*/\n\n\tvar FUDGE_FACTOR = 0.2; // use to overlap fans\n\n\treturn declare(\"dojox.charting.plot2d.Pie\", [Base, PlotEvents], {\n\t\t// summary:\n\t\t//\t\tThe plot that represents a typical pie chart.\n\t\tdefaultParams: {\n\t\t\tlabels:\t\t\ttrue,\n\t\t\tticks:\t\t\tfalse,\n\t\t\tfixed:\t\t\ttrue,\n\t\t\tprecision:\t\t1,\n\t\t\tlabelOffset:\t20,\n\t\t\tlabelStyle:\t\t\"default\",\t// default/columns\n\t\t\thtmlLabels:\t\ttrue,\t\t// use HTML to draw labels\n\t\t\tradGrad:        \"native\",\t// or \"linear\", or \"fan\"\n\t\t\tfanSize:\t\t5,\t\t\t// maximum fan size in degrees\n\t\t\tstartAngle:     0\t\t\t// start angle for slices in degrees\n\t\t},\n\t\toptionalParams: {\n\t\t\tradius:\t\t0,\n\t\t\tomitLabels: false,\n\t\t\t// theme components\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:     {},\n\t\t\tstyleFunc:\tnull,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\",\n\t\t\tlabelWiring: {}\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a pie plot.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.axes = [];\n\t\t\tthis.run = null;\n\t\t\tthis.dyn = [];\n\t\t\tthis.runFilter = []; \n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all of the information tied to this plot.\n\t\t\t// returns: dojox/charting/plot2d/Pie\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.inherited(arguments);\n\t\t\tthis.dyn = [];\n\t\t\tthis.run = null;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\n\t\t},\n\t\tsetAxis: function(axis){\n\t\t\t// summary:\n\t\t\t//\t\tDummy method, since axes are irrelevant with a Pie chart.\n\t\t\t// returns: dojox/charting/plot2d/Pie\n\t\t\t//\t\tThe reference to this plot for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\n\t\t},\n\t\taddSeries: function(run){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a series of data to this plot.\n\t\t\t// returns: dojox/charting/plot2d/Pie\n\t\t\t//\t\tThe reference to this plot for functional chaining.\n\t\t\tthis.run = run;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\n\t\t},\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns default stats (irrelevant for this type of plot).\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\treturn lang.delegate(dc.defaultStats); // Object\n\t\t},\n\t\tgetRequiredColors: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturn the number of colors needed to draw this plot.\n\t\t\treturn this.run ? this.run.data.length : 0;\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender the plot on the chart.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/Pie\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(!this.dirty){ return this; }\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = false;\n\t\t\tthis._eventSeries = {};\n\t\t\tthis.cleanGroup();\n\t\t\tvar s = this.group, t = this.chart.theme;\n\n\t\t\tif(!this.run || !this.run.data.length){\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\t// calculate the geometry\n\t\t\tvar rx = (dim.width  - offsets.l - offsets.r) / 2,\n\t\t\t\try = (dim.height - offsets.t - offsets.b) / 2,\n\t\t\t\tr  = Math.min(rx, ry),\n\t\t\t\tlabelFont = \"font\" in this.opt ? this.opt.font : t.series.font,\n\t\t\t\tsize,\n\t\t\t\tstartAngle = m._degToRad(this.opt.startAngle),\n\t\t\t\tstart = startAngle, filteredRun, slices, labels, shift, labelR,\n\t\t\t\tevents = this.events();\n\n\t\t\tvar run = arr.map(this.run.data, function(item, i){\n\t\t\t\tif(typeof item != \"number\" && item.hidden){ \n\t\t\t\t\tthis.runFilter.push(i); \n\t\t\t\t\titem.hidden = false; \n\t\t\t\t} \n\t\t\t\tif(arr.some(this.runFilter, function(filter){return filter == i;})){ \n\t\t\t\t\tif(typeof item == \"number\"){ \n\t\t\t\t\t\treturn 0; \n\t\t\t\t\t}else{ \n\t\t\t\t\t\treturn {y: 0, text: item.text}; \n\t\t\t\t\t} \n\t\t\t\t}else{ \n\t\t\t\t\treturn item; \n\t\t\t\t} \n\t\t\t}, this);\n\n\t\t\tthis.dyn = [];\n\n\t\t\tif(\"radius\" in this.opt){\n\t\t\t\tr = this.opt.radius;\n\t\t\t\tlabelR = r - this.opt.labelOffset;\n\t\t\t}\n\t\t\tvar\tcircle = {\n\t\t\t\tcx: offsets.l + rx,\n\t\t\t\tcy: offsets.t + ry,\n\t\t\t\tr:  r\n\t\t\t};\n\n\t\t\t// draw shadow\n\t\t\tif(this.opt.shadow || t.shadow){\n\t\t\t\tvar shadow = this.opt.shadow || t.shadow;\n\t\t\t\tvar scircle = lang.clone(circle);\n\t\t\t\tscircle.cx += shadow.dx;\n\t\t\t\tscircle.cy += shadow.dy;\n\t\t\t\ts.createCircle(scircle).setFill(shadow.color).setStroke(shadow);\n\t\t\t}\n\t\t\tif(s.setFilter && (this.opt.filter || t.filter)){\n\t\t\t\ts.createCircle(circle).setFill(t.series.stroke).setFilter(this.opt.filter || t.filter);\n\t\t\t}\n\n\t\t\tif(typeof run[0] == \"number\"){\n\t\t\t\tfilteredRun = df.map(run, \"x ? Math.max(x, 0) : 0\");\n\t\t\t\tif(df.every(filteredRun, \"<= 0\")){\n\t\t\t\t\ts.createCircle(circle).setStroke(t.series.stroke);\n\t\t\t\t\tthis.dyn = arr.map(filteredRun, function(){\n\t\t\t\t\t\treturn {  };\n\t\t\t\t\t});\n\t\t\t\t\treturn this;\n\t\t\t\t}else{\n\t\t\t\t\tslices = df.map(filteredRun, \"/this\", df.foldl(filteredRun, \"+\", 0));\n\t\t\t\t \tif(this.opt.labels){\n\t\t\t\t \t\tlabels = arr.map(slices, function(x){\n\t\t\t\t\t\t\treturn x > 0 ? this._getLabel(x * 100) + \"%\" : \"\";\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tfilteredRun = df.map(run, \"x ? Math.max(x.y, 0) : 0\");\n\t\t\t\tif(df.every(filteredRun, \"<= 0\")){\n\t\t\t\t\ts.createCircle(circle).setStroke(t.series.stroke);\n\t\t\t\t\tthis.dyn = arr.map(filteredRun, function(){\n\t\t\t\t\t\treturn {  };\n\t\t\t\t\t});\n\t\t\t\t\treturn this;\n\t\t\t\t}else{\n\t\t\t\t\tslices = df.map(filteredRun, \"/this\", df.foldl(filteredRun, \"+\", 0));\n\t\t\t\t\tif(this.opt.labels){\n\t\t\t\t\t\tlabels = arr.map(slices, function(x, i){\n\t\t\t\t\t\t\tif(x < 0){ return \"\"; }\n\t\t\t\t\t\t\tvar v = run[i];\n\t\t\t\t\t\t\treturn \"text\" in v ? v.text : this._getLabel(x * 100) + \"%\";\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar themes = df.map(run, function(v, i){\n\t\t\t\tvar tMixin = [this.opt, this.run];\n\t\t\t\tif(v !== null && typeof v != \"number\"){\n\t\t\t\t\ttMixin.push(v);\n\t\t\t\t}\n\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\ttMixin.push(this.opt.styleFunc(v));\n\t\t\t\t}\n\t\t\t\treturn t.next(\"slice\", tMixin, true);\n\t\t\t}, this);\n\n\t\t\tif(this.opt.labels){\n\t\t\t\tsize = labelFont ? g.normalizedLength(g.splitFontString(labelFont).size) : 0;\n\t\t\t\tshift = df.foldl1(df.map(labels, function(label, i){\n\t\t\t\t\tvar font = themes[i].series.font;\n\t\t\t\t\treturn g._base._getTextBox(label, {font: font}).w;\n\t\t\t\t}, this), \"Math.max(a, b)\") / 2;\n\t\t\t\tif(this.opt.labelOffset < 0){\n\t\t\t\t\tr = Math.min(rx - 2 * shift, ry - size) + this.opt.labelOffset;\n\t\t\t\t}\n\t\t\t\tlabelR = r - this.opt.labelOffset;\n\t\t\t}\n\n\t\t\t// draw slices\n\t\t\tvar eventSeries = new Array(slices.length);\n\t\t\tarr.some(slices, function(slice, i){\n\t\t\t\tif(slice < 0){\n\t\t\t\t\t// degenerated slice\n\t\t\t\t\treturn false;\t// continue\n\t\t\t\t}\n\t\t\t\tvar v = run[i], theme = themes[i], specialFill, o;\n\t\t\t\tif(slice == 0){\n\t\t\t\t\tthis.dyn.push({fill: theme.series.fill, stroke: theme.series.stroke});\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(slice >= 1){\n\t\t\t\t\t// whole pie\n\t\t\t\t\tspecialFill = this._plotFill(theme.series.fill, dim, offsets);\n\t\t\t\t\tspecialFill = this._shapeFill(specialFill,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tx: circle.cx - circle.r, y: circle.cy - circle.r,\n\t\t\t\t\t\t\twidth: 2 * circle.r, height: 2 * circle.r\n\t\t\t\t\t\t});\n\t\t\t\t\tspecialFill = this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, circle.r);\n\t\t\t\t\tvar shape = s.createCircle(circle).setFill(specialFill).setStroke(theme.series.stroke);\n\t\t\t\t\tthis.dyn.push({fill: specialFill, stroke: theme.series.stroke});\n\n\t\t\t\t\tif(events){\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\telement: \"slice\",\n\t\t\t\t\t\t\tindex:   i,\n\t\t\t\t\t\t\trun:     this.run,\n\t\t\t\t\t\t\tshape:   shape,\n\t\t\t\t\t\t\tx:       i,\n\t\t\t\t\t\t\ty:       typeof v == \"number\" ? v : v.y,\n\t\t\t\t\t\t\tcx:      circle.cx,\n\t\t\t\t\t\t\tcy:      circle.cy,\n\t\t\t\t\t\t\tcr:      r\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\teventSeries[i] = o;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\t// we continue because we want to collect null data points for legend\n\t\t\t\t}\n\t\t\t\t// calculate the geometry of the slice\n\t\t\t\tvar end = start + slice * 2 * Math.PI;\n\t\t\t\tif(i + 1 == slices.length){\n\t\t\t\t\tend = startAngle + 2 * Math.PI;\n\t\t\t\t}\n\t\t\t\tvar\tstep = end - start,\n\t\t\t\t\tx1 = circle.cx + r * Math.cos(start),\n\t\t\t\t\ty1 = circle.cy + r * Math.sin(start),\n\t\t\t\t\tx2 = circle.cx + r * Math.cos(end),\n\t\t\t\t\ty2 = circle.cy + r * Math.sin(end);\n\t\t\t\t// draw the slice\n\t\t\t\tvar fanSize = m._degToRad(this.opt.fanSize);\n\t\t\t\tif(theme.series.fill && theme.series.fill.type === \"radial\" && this.opt.radGrad === \"fan\" && step > fanSize){\n\t\t\t\t\tvar group = s.createGroup(), nfans = Math.ceil(step / fanSize), delta = step / nfans;\n\t\t\t\t\tspecialFill = this._shapeFill(theme.series.fill,\n\t\t\t\t\t\t{x: circle.cx - circle.r, y: circle.cy - circle.r, width: 2 * circle.r, height: 2 * circle.r});\n\t\t\t\t\tfor(var j = 0; j < nfans; ++j){\n\t\t\t\t\t\tvar fansx = j == 0 ? x1 : circle.cx + r * Math.cos(start + (j - FUDGE_FACTOR) * delta),\n\t\t\t\t\t\t\tfansy = j == 0 ? y1 : circle.cy + r * Math.sin(start + (j - FUDGE_FACTOR) * delta),\n\t\t\t\t\t\t\tfanex = j == nfans - 1 ? x2 : circle.cx + r * Math.cos(start + (j + 1 + FUDGE_FACTOR) * delta),\n\t\t\t\t\t\t\tfaney = j == nfans - 1 ? y2 : circle.cy + r * Math.sin(start + (j + 1 + FUDGE_FACTOR) * delta);\n\t\t\t\t\t\tgroup.createPath().\n\t\t\t\t\t\t\t\tmoveTo(circle.cx, circle.cy).\n\t\t\t\t\t\t\t\tlineTo(fansx, fansy).\n\t\t\t\t\t\t\t\tarcTo(r, r, 0, delta > Math.PI, true, fanex, faney).\n\t\t\t\t\t\t\t\tlineTo(circle.cx, circle.cy).\n\t\t\t\t\t\t\t\tclosePath().\n\t\t\t\t\t\t\t\tsetFill(this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, r, start + (j + 0.5) * delta, start + (j + 0.5) * delta));\n\t\t\t\t\t}\n\t\t\t\t\tgroup.createPath().\n\t\t\t\t\t\tmoveTo(circle.cx, circle.cy).\n\t\t\t\t\t\tlineTo(x1, y1).\n\t\t\t\t\t\tarcTo(r, r, 0, step > Math.PI, true, x2, y2).\n\t\t\t\t\t\tlineTo(circle.cx, circle.cy).\n\t\t\t\t\t\tclosePath().\n\t\t\t\t\t\tsetStroke(theme.series.stroke);\n\t\t\t\t\tshape = group;\n\t\t\t\t}else{\n\t\t\t\t\tshape = s.createPath().\n\t\t\t\t\t\tmoveTo(circle.cx, circle.cy).\n\t\t\t\t\t\tlineTo(x1, y1).\n\t\t\t\t\t\tarcTo(r, r, 0, step > Math.PI, true, x2, y2).\n\t\t\t\t\t\tlineTo(circle.cx, circle.cy).\n\t\t\t\t\t\tclosePath().\n\t\t\t\t\t\tsetStroke(theme.series.stroke);\n\t\t\t\t\tspecialFill = theme.series.fill;\n\t\t\t\t\tif(specialFill && specialFill.type === \"radial\"){\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, {x: circle.cx - circle.r, y: circle.cy - circle.r, width: 2 * circle.r, height: 2 * circle.r});\n\t\t\t\t\t\tif(this.opt.radGrad === \"linear\"){\n\t\t\t\t\t\t\tspecialFill = this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, r, start, end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(specialFill && specialFill.type === \"linear\"){\n\t\t\t\t\t\tspecialFill = this._plotFill(specialFill, dim, offsets);\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, shape.getBoundingBox());\n\t\t\t\t\t}\n\t\t\t\t\tshape.setFill(specialFill);\n\t\t\t\t}\n\t\t\t\tthis.dyn.push({fill: specialFill, stroke: theme.series.stroke});\n\n\t\t\t\tif(events){\n\t\t\t\t\to = {\n\t\t\t\t\t\telement: \"slice\",\n\t\t\t\t\t\tindex:   i,\n\t\t\t\t\t\trun:     this.run,\n\t\t\t\t\t\tshape:   shape,\n\t\t\t\t\t\tx:       i,\n\t\t\t\t\t\ty:       typeof v == \"number\" ? v : v.y,\n\t\t\t\t\t\tcx:      circle.cx,\n\t\t\t\t\t\tcy:      circle.cy,\n\t\t\t\t\t\tcr:      r\n\t\t\t\t\t};\n\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\teventSeries[i] = o;\n\t\t\t\t}\n\n\t\t\t\tstart = end;\n\n\t\t\t\treturn false;\t// continue\n\t\t\t}, this);\n\t\t\t// draw labels\n\t\t\tif(this.opt.labels){\n\t\t\t\tvar isRtl = has(\"dojo-bidi\") && this.chart.isRightToLeft(); \n\t\t\t\tif(this.opt.labelStyle == \"default\"){ // inside or outside based on labelOffset\n\t\t\t\t\tstart = startAngle;\n\t\t\t\t\tarr.some(slices, function(slice, i){\n\t\t\t\t\t\tif(slice <= 0){\n\t\t\t\t\t\t\t// degenerated slice\n\t\t\t\t\t\t\treturn false;\t// continue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar theme = themes[i];\n\t\t\t\t\t\tif(slice >= 1){\n\t\t\t\t\t\t\t// whole pie\n\t\t\t\t\t\t\tthis.renderLabel(s, circle.cx, circle.cy + size / 2, labels[i], theme, this.opt.labelOffset > 0);\n\t\t\t\t\t\t\treturn true;\t// stop iteration\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// calculate the geometry of the slice\n\t\t\t\t\t\tvar end = start + slice * 2 * Math.PI;\n\t\t\t\t\t\tif(i + 1 == slices.length){\n\t\t\t\t\t\t\tend = startAngle + 2 * Math.PI;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.opt.omitLabels && end-start < 0.001){\n\t\t\t\t\t\t\treturn false;\t// continue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar\tlabelAngle = (start + end) / 2,\n\t\t\t\t\t\t\tx = circle.cx + labelR * Math.cos(labelAngle),\n\t\t\t\t\t\t\ty = circle.cy + labelR * Math.sin(labelAngle) + size / 2;\n\t\t\t\t\t\t// draw the label\n\t\t\t\t\t\tthis.renderLabel(s, isRtl ? dim.width - x : x, y, labels[i], theme, this.opt.labelOffset > 0);\n\t\t\t\t\t\tstart = end;\n\t\t\t\t\t\treturn false;\t// continue\n\t\t\t\t\t}, this);\n\t\t\t\t}else if(this.opt.labelStyle == \"columns\"){\n\t\t\t\t\tstart = startAngle;\n\t\t\t\t\tvar omitLabels = this.opt.omitLabels;\n\t\t\t\t\t//calculate label angles\n\t\t\t\t\tvar labeledSlices = [];\n\t\t\t\t\tarr.forEach(slices, function(slice, i){\n\t\t\t\t\t\tvar end = start + slice * 2 * Math.PI;\n\t\t\t\t\t\tif(i + 1 == slices.length){\n\t\t\t\t\t\t\tend = startAngle + 2 * Math.PI;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar labelAngle = (start + end) / 2;\n\t\t\t\t\t\tlabeledSlices.push({\n\t\t\t\t\t\t\tangle: labelAngle,\n\t\t\t\t\t\t\tleft: Math.cos(labelAngle) < 0,\n\t\t\t\t\t\t\ttheme: themes[i],\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tomit: omitLabels?end - start < 0.001:false\n\t\t\t\t\t\t});\n\t\t\t\t\t\tstart = end;\n\t\t\t\t\t});\n\t\t\t\t\t//calculate label radius to each slice\n\t\t\t\t\tvar labelHeight = g._base._getTextBox(\"a\",{ font: labelFont }).h;\n\t\t\t\t\tthis._getProperLabelRadius(labeledSlices, labelHeight, circle.r * 1.1);\n\t\t\t\t\t//draw label and wiring\n\t\t\t\t\tarr.forEach(labeledSlices, function(slice, i){\n\t\t\t\t\t\tif(!slice.omit){\n\t\t\t\t\t\t\tvar leftColumn = circle.cx - circle.r * 2,\n\t\t\t\t\t\t\t\trightColumn = circle.cx + circle.r * 2,\n\t\t\t\t\t\t\t\tlabelWidth = g._base._getTextBox(labels[i], {font: slice.theme.series.font}).w,\n\t\t\t\t\t\t\t\tx = circle.cx + slice.labelR * Math.cos(slice.angle),\n\t\t\t\t\t\t\t\ty = circle.cy + slice.labelR * Math.sin(slice.angle),\n\t\t\t\t\t\t\t\tjointX = (slice.left) ? (leftColumn + labelWidth) : (rightColumn - labelWidth),\n\t\t\t\t\t\t\t\tlabelX = (slice.left) ? leftColumn : jointX;\n\t\t\t\t\t\t\tvar wiring = s.createPath().moveTo(circle.cx + circle.r * Math.cos(slice.angle), circle.cy + circle.r * Math.sin(slice.angle));\n\t\t\t\t\t\t\tif(Math.abs(slice.labelR * Math.cos(slice.angle)) < circle.r * 2 - labelWidth){\n\t\t\t\t\t\t\t\twiring.lineTo(x, y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twiring.lineTo(jointX, y).setStroke(slice.theme.series.labelWiring);\n\t\t\t\t\t\t\tthis.renderLabel(s, isRtl ? dim.width - labelWidth - labelX : labelX, y, labels[i], slice.theme, false, \"left\");\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// post-process events to restore the original indexing\n\t\t\tvar esi = 0;\n\t\t\tthis._eventSeries[this.run.name] = df.map(run, function(v){\n\t\t\t\treturn v <= 0 ? null : eventSeries[esi++];\n\t\t\t});\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\n\t\t},\n\t\t_getProperLabelRadius: function(slices, labelHeight, minRidius){\n\t\t\tvar leftCenterSlice, rightCenterSlice,\n\t\t\t\tleftMinSIN = 1, rightMinSIN = 1;\n\t\t\tif(slices.length == 1){\n\t\t\t\tslices[0].labelR = minRidius;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor(var i = 0; i < slices.length; i++){\n\t\t\t\tvar tempSIN = Math.abs(Math.sin(slices[i].angle));\n\t\t\t\tif(slices[i].left){\n\t\t\t\t\tif(leftMinSIN >= tempSIN){\n\t\t\t\t\t\tleftMinSIN = tempSIN;\n\t\t\t\t\t\tleftCenterSlice = slices[i];\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tif(rightMinSIN >= tempSIN){\n\t\t\t\t\t\trightMinSIN = tempSIN;\n\t\t\t\t\t\trightCenterSlice = slices[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tleftCenterSlice.labelR = rightCenterSlice.labelR = minRidius;\n\t\t\tthis._calculateLabelR(leftCenterSlice, slices, labelHeight);\n\t\t\tthis._calculateLabelR(rightCenterSlice, slices, labelHeight);\n\t\t},\n\t\t_calculateLabelR: function(firstSlice, slices, labelHeight){\n\t\t\tvar i = firstSlice.index,length = slices.length,\n\t\t\t\tcurrentLabelR = firstSlice.labelR, nextLabelR;\n\t\t\twhile(!(slices[i%length].left ^ slices[(i+1)%length].left)){\n\t\t\t\tif(!slices[(i + 1) % length].omit){\n\t\t\t\t\tnextLabelR = (Math.sin(slices[i % length].angle) * currentLabelR + ((slices[i % length].left) ? (-labelHeight) : labelHeight)) /\n\t\t\t\t\tMath.sin(slices[(i + 1) % length].angle);\n\t\t\t\t\tcurrentLabelR = (nextLabelR < firstSlice.labelR) ? firstSlice.labelR : nextLabelR;\n\t\t\t\t\tslices[(i + 1) % length].labelR = currentLabelR;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ti = firstSlice.index;\n\t\t\tvar j = (i == 0)?length-1 : i - 1;\n\t\t\twhile(!(slices[i].left ^ slices[j].left)){\n\t\t\t\tif(!slices[j].omit){\n\t\t\t\t\tnextLabelR = (Math.sin(slices[i].angle) * currentLabelR + ((slices[i].left) ? labelHeight : (-labelHeight))) /\n\t\t\t\t\tMath.sin(slices[j].angle);\n\t\t\t\t\tcurrentLabelR = (nextLabelR < firstSlice.labelR) ? firstSlice.labelR : nextLabelR;\n\t\t\t\t\tslices[j].labelR = currentLabelR;\n\t\t\t\t}\n\t\t\t\ti--;j--;\n\t\t\t\ti = (i < 0)?i+slices.length:i;\n\t\t\t\tj = (j < 0)?j+slices.length:j;\n\t\t\t}\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 317:\n/*!******************************************!*\\\n  !*** ../dojox/charting/plot2d/Bubble.js ***!\n  \\******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/has */ 3), \n\t\t__webpack_require__(/*! ./CartesianBase */ 241), __webpack_require__(/*! ./_PlotEvents */ 240), __webpack_require__(/*! ./common */ 233), __webpack_require__(/*! dojox/lang/functional */ 234), __webpack_require__(/*! dojox/lang/functional/reversed */ 242),\n\t\t__webpack_require__(/*! dojox/lang/utils */ 235), __webpack_require__(/*! dojox/gfx/fx */ 238)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, declare, arr, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\treturn declare(\"dojox.charting.plot2d.Bubble\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tA plot representing bubbles.  Note that data for Bubbles requires 3 parameters,\n\t\t//\t\tin the form of:  { x, y, size }, where size determines the size of the bubble.\n\t\tdefaultParams: {\n\t\t\tanimate: null   // animate bars into place\n\t\t},\n\t\toptionalParams: {\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:     {},\n\t\t\tstyleFunc:\tnull,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\",\n\t\t\tlabelFunc: null\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a plot of bubbles.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\n\t\t\t//\t\tOptional keyword arguments object to help define plot parameters.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tif(!this.opt.labelFunc){\n\t\t\t\tthis.opt.labelFunc = function(value, fixed, precision){\n\t\t\t\t\treturn this._getLabel(value.size, fixed, precision);\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\t//\toverride the render so that we are plotting only circles.\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Bubble\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tvar s;\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\n\t\t\tvar t = this.chart.theme,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tevents = this.events();\n\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(!run.data.length){\n\t\t\t\t\trun.dirty = false;\n\t\t\t\t\tt.skip();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(typeof run.data[0] == \"number\"){\n\t\t\t\t\tconsole.warn(\"dojox.charting.plot2d.Bubble: the data in the following series cannot be rendered as a bubble chart; \", run);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar theme = t.next(\"circle\", [this.opt, run]),\n\t\t\t\t\tpoints = arr.map(run.data, function(v){\n\t\t\t\t\t\treturn v ? {\n\t\t\t\t\t\t\tx: ht(v.x) + offsets.l,\n\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v.y),\n\t\t\t\t\t\t\tradius: this._vScaler.bounds.scale * (v.size / 2)\n\t\t\t\t\t\t} : null;\n\t\t\t\t\t}, this);\n\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\trun.dyn.stroke =  theme.series.stroke;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ts = run.group;\n                \n\t\t\t\tvar frontCircles = null, outlineCircles = null, shadowCircles = null, styleFunc = this.opt.styleFunc;\n\n\t\t\t\tvar getFinalTheme = function(item){\n\t\t\t\t\tif(styleFunc){\n\t\t\t\t\t\treturn t.addMixin(theme, \"circle\", [item, styleFunc(item)], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn t.addMixin(theme, \"circle\", item, true);\n\t\t\t\t};\n\n\t\t\t\t// make shadows if needed\n\t\t\t\tif(theme.series.shadow){\n\t\t\t\t\tshadowCircles = arr.map(points, function(item, i){\n\t\t\t\t\t\tif(!this.isNullValue(item)){\n\t\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\n\t\t\t\t\t\t\t\tshadow = finalTheme.series.shadow;\n\t\t\t\t\t\t\tvar shape = s.createCircle({\n\t\t\t\t\t\t\t\tcx: item.x + shadow.dx, cy: item.y + shadow.dy, r: item.radius\n\t\t\t\t\t\t\t}).setStroke(shadow).setFill(shadow.color);\n\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn shape;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}, this);\n\t\t\t\t\tif(shadowCircles.length){\n\t\t\t\t\t\trun.dyn.shadow = shadowCircles[shadowCircles.length - 1].getStroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// make outlines if needed\n\t\t\t\tif(theme.series.outline){\n\t\t\t\t\toutlineCircles = arr.map(points, function(item, i){\n\t\t\t\t\t\tif(!this.isNullValue(item)){\n\t\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\n\t\t\t\t\t\t\t\toutline = dc.makeStroke(finalTheme.series.outline);\n\t\t\t\t\t\t\toutline.width = 2 * outline.width + (theme.series.stroke && theme.series.stroke.width || 0);\n\t\t\t\t\t\t\tvar shape = s.createCircle({\n\t\t\t\t\t\t\t\tcx: item.x, cy: item.y, r: item.radius\n\t\t\t\t\t\t\t}).setStroke(outline);\n\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn shape;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}, this);\n\t\t\t\t\tif(outlineCircles.length){\n\t\t\t\t\t\trun.dyn.outline = outlineCircles[outlineCircles.length - 1].getStroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//\trun through the data and add the circles.\n\t\t\t\tfrontCircles = arr.map(points, function(item, i){\n\t\t\t\t\tif(!this.isNullValue(item)){\n\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\n\t\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\t\tx: item.x - item.radius,\n\t\t\t\t\t\t\t\ty: item.y - item.radius,\n\t\t\t\t\t\t\t\twidth:  2 * item.radius,\n\t\t\t\t\t\t\t\theight: 2 * item.radius\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\n\t\t\t\t\t\tvar shape = s.createCircle({\n\t\t\t\t\t\t\tcx: item.x, cy: item.y, r: item.radius\n\t\t\t\t\t\t}).setFill(specialFill).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\n\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.createLabel(s, run.data[i], rect, finalTheme);\n\t\t\t\t\t\treturn shape;\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}, this);\n\t\t\t\tif(frontCircles.length){\n\t\t\t\t\trun.dyn.fill   = frontCircles[frontCircles.length - 1].getFill();\n\t\t\t\t\trun.dyn.stroke = frontCircles[frontCircles.length - 1].getStroke();\n\t\t\t\t}\n\n\t\t\t\tif(events){\n\t\t\t\t\tvar eventSeries = new Array(frontCircles.length);\n\t\t\t\t\tarr.forEach(frontCircles, function(s, i){\n\t\t\t\t\t\tif(s !== null){\n\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\telement: \"circle\",\n\t\t\t\t\t\t\t\tindex:   i,\n\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\tshape:   s,\n\t\t\t\t\t\t\t\toutline: outlineCircles && outlineCircles[i] || null,\n\t\t\t\t\t\t\t\tshadow:  shadowCircles && shadowCircles[i] || null,\n\t\t\t\t\t\t\t\tx:       run.data[i].x,\n\t\t\t\t\t\t\t\ty:       run.data[i].y,\n\t\t\t\t\t\t\t\tr:       run.data[i].size / 2,\n\t\t\t\t\t\t\t\tcx:      points[i].x,\n\t\t\t\t\t\t\t\tcy:      points[i].y,\n\t\t\t\t\t\t\t\tcr:      points[i].radius\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\teventSeries[i] = o;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\t}else{\n\t\t\t\t\tdelete this._eventSeries[run.name];\n\t\t\t\t}\n\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Bubble\n\t\t},\n\t\t_animateBubble: function(shape, offset, size){\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, offset], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [0, 1/size], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 318:\n/*!************************************************!*\\\n  !*** ../dojox/charting/plot2d/Candlesticks.js ***!\n  \\************************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/has */ 3), __webpack_require__(/*! ./CartesianBase */ 241), __webpack_require__(/*! ./_PlotEvents */ 240), __webpack_require__(/*! ./common */ 233),\n\t\t__webpack_require__(/*! dojox/lang/functional */ 234), __webpack_require__(/*! dojox/lang/functional/reversed */ 242), __webpack_require__(/*! dojox/lang/utils */ 235), __webpack_require__(/*! dojox/gfx/fx */ 238)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, declare, arr, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\t//\tCandlesticks are based on the Bars plot type; we expect the following passed\n\t//\tas values in a series:\n\t//\t{ x?, open, close, high, low, mid? }\n\t//\tif x is not provided, the array index is used.\n\t//\tfailing to provide the OHLC values will throw an error.\n\treturn declare(\"dojox.charting.plot2d.Candlesticks\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tA plot that represents typical candlesticks (financial reporting, primarily).\n\t\t//\t\tUnlike most charts, the Candlestick expects data points to be represented by\n\t\t//\t\tan object of the form { x?, open, close, high, low, mid? }, where both\n\t\t//\t\tx and mid are optional parameters.  If x is not provided, the index of the\n\t\t//\t\tdata array is used.\n\t\tdefaultParams: {\n\t\t\tgap:\t2,\t\t// gap between columns in pixels\n\t\t\tanimate: null   // animate bars into place\n\t\t},\n\t\toptionalParams: {\n\t\t\tminBarSize:\t1,\t// minimal candle width in pixels\n\t\t\tmaxBarSize:\t1,\t// maximal candle width in pixels\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a candlestick chart.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\tcollectStats: function(series){\n\t\t\t// summary:\n\t\t\t//\t\tCollect all statistics for drawing this chart.  Since the common\n\t\t\t//\t\tfunctionality only assumes x and y, Candlesticks must create it's own\n\t\t\t//\t\tstats (since data has no y value, but open/close/high/low instead).\n\t\t\t// series: dojox.charting.Series[]\n\t\t\t//\t\tThe data series array to be drawn on this plot.\n\t\t\t// returns: Object\n\t\t\t//\t\tReturns an object in the form of { hmin, hmax, vmin, vmax }.\n\n\t\t\t//\twe have to roll our own, since we need to use all four passed\n\t\t\t//\tvalues to figure out our stats, and common only assumes x and y.\n\t\t\tvar stats = lang.delegate(dc.defaultStats);\n\t\t\tfor(var i=0; i<series.length; i++){\n\t\t\t\tvar run = series[i];\n\t\t\t\tif(!run.data.length){ continue; }\n\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\n\t\t\t\tif(!(\"ymin\" in run) || !(\"ymax\" in run)){\n\t\t\t\t\tarr.forEach(run.data, function(val, idx){\n\t\t\t\t\t\tif(!this.isNullValue(val)){\n\t\t\t\t\t\t\tvar x = val.x || idx + 1;\n\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, val.open, val.close, val.high, val.low);\n\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, val.open, val.close, val.high, val.low);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\n\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\n\t\t\t}\n\t\t\treturn stats;\t//\tObject\n\t\t},\n\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = this.collectStats(this.series);\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Candlesticks\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme, f, gap, width,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tevents = this.events();\n\t\t\tf = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\n\t\t\tgap = f.gap;\n\t\t\twidth = f.size;\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tvar theme = t.next(\"candlestick\", [this.opt, run]),\n\t\t\t\t\teventSeries = new Array(run.data.length);\n\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\trun.dyn.stroke =  theme.series.stroke;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ts = run.group;\n                \n\t\t\t\tfor(var j = 0; j < run.data.length; ++j){\n\t\t\t\t\tvar v = run.data[j];\n\t\t\t\t\tif(!this.isNullValue(v)){\n\t\t\t\t\t\tvar finalTheme = t.addMixin(theme, \"candlestick\", v, true);\n\n\t\t\t\t\t\t//\tcalculate the points we need for OHLC\n\t\t\t\t\t\tvar x = ht(v.x || (j+0.5)) + offsets.l + gap,\n\t\t\t\t\t\t\ty = dim.height - offsets.b,\n\t\t\t\t\t\t\topen = vt(v.open),\n\t\t\t\t\t\t\tclose = vt(v.close),\n\t\t\t\t\t\t\thigh = vt(v.high),\n\t\t\t\t\t\t\tlow = vt(v.low);\n\t\t\t\t\t\tif(\"mid\" in v){\n\t\t\t\t\t\t\tvar mid = vt(v.mid);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(low > high){\n\t\t\t\t\t\t\tvar tmp = high;\n\t\t\t\t\t\t\thigh = low;\n\t\t\t\t\t\t\tlow = tmp;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(width >= 1){\n\t\t\t\t\t\t\t//\tdraw the line and rect, set up as a group and pass that to the events.\n\t\t\t\t\t\t\tvar doFill = open > close;\n\t\t\t\t\t\t\tvar line = { x1: width/2, x2: width/2, y1: y - high, y2: y - low },\n\t\t\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\t\t\tx: 0, y: y-Math.max(open, close),\n\t\t\t\t\t\t\t\t\twidth: width, height: Math.max(doFill ? open-close : close-open, 1)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tvar shape = s.createGroup();\n\t\t\t\t\t\t\tshape.setTransform({dx: x, dy: 0 });\n\t\t\t\t\t\t\tvar inner = shape.createGroup();\n\t\t\t\t\t\t\tinner.createLine(line).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tinner.createRect(rect).setStroke(finalTheme.series.stroke).\n\t\t\t\t\t\t\t\tsetFill(doFill ? finalTheme.series.fill : \"white\");\n\t\t\t\t\t\t\tif(\"mid\" in v){\n\t\t\t\t\t\t\t\t//\tadd the mid line.\n\t\t\t\t\t\t\t\tinner.createLine({\n\t\t\t\t\t\t\t\t\t\tx1: (finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1), x2: width - (finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1),\n\t\t\t\t\t\t\t\t\ty1: y - mid, y2: y - mid\n\t\t\t\t\t\t\t\t}).setStroke(doFill ? \"white\" : finalTheme.series.stroke);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// TODO: double check this.\n\t\t\t\t\t\t\trun.dyn.fill   = finalTheme.series.fill;\n\t\t\t\t\t\t\trun.dyn.stroke = finalTheme.series.stroke;\n\t\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"candlestick\",\n\t\t\t\t\t\t\t\t\tindex:   j,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:   inner,\n\t\t\t\t\t\t\t\t\tx:       x,\n\t\t\t\t\t\t\t\t\ty:       y-Math.max(open, close),\n\t\t\t\t\t\t\t\t\tcx:\t\t width/2,\n\t\t\t\t\t\t\t\t\tcy:\t\t (y-Math.max(open, close)) + (Math.max(doFill ? open-close : close-open, 1)/2),\n\t\t\t\t\t\t\t\t\twidth:\t width,\n\t\t\t\t\t\t\t\t\theight:  Math.max(doFill ? open-close : close-open, 1),\n\t\t\t\t\t\t\t\t\tdata:\t v\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[j] = o;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateCandlesticks(shape, y - low, high - low);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Candlesticks\n\t\t},\n\n\t\ttooltipFunc: function(o){\n\t\t\treturn '<table cellpadding=\"1\" cellspacing=\"0\" border=\"0\" style=\"font-size:0.9em;\">'\n\t\t\t\t\t\t+ '<tr><td>Open:</td><td align=\"right\"><strong>' + o.data.open + '</strong></td></tr>'\n\t\t\t\t\t\t+ '<tr><td>High:</td><td align=\"right\"><strong>' + o.data.high + '</strong></td></tr>'\n\t\t\t\t\t\t+ '<tr><td>Low:</td><td align=\"right\"><strong>' + o.data.low + '</strong></td></tr>'\n\t\t\t\t\t\t+ '<tr><td>Close:</td><td align=\"right\"><strong>' + o.data.close + '</strong></td></tr>'\n\t\t\t\t\t\t+ (o.data.mid !== undefined ? '<tr><td>Mid:</td><td align=\"right\"><strong>' + o.data.mid + '</strong></td></tr>' : '')\n\t\t\t\t\t\t+ '</table>';\n\t\t},\n\n\t\t_animateCandlesticks: function(shape, voffset, vsize){\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 319:\n/*!****************************************!*\\\n  !*** ../dojox/charting/plot2d/OHLC.js ***!\n  \\****************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/array */ 5), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/has */ 3), __webpack_require__(/*! ./CartesianBase */ 241), __webpack_require__(/*! ./_PlotEvents */ 240), __webpack_require__(/*! ./common */ 233),\n\t__webpack_require__(/*! dojox/lang/functional */ 234), __webpack_require__(/*! dojox/lang/functional/reversed */ 242), __webpack_require__(/*! dojox/lang/utils */ 235), __webpack_require__(/*! dojox/gfx/fx */ 238)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\t//\tCandlesticks are based on the Bars plot type; we expect the following passed\n\t//\tas values in a series:\n\t//\t{ x?, open, close, high, low }\n\t//\tif x is not provided, the array index is used.\n\t//\tfailing to provide the OHLC values will throw an error.\n\treturn declare(\"dojox.charting.plot2d.OHLC\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tA plot that represents typical open/high/low/close (financial reporting, primarily).\n\t\t//\t\tUnlike most charts, the Candlestick expects data points to be represented by\n\t\t//\t\tan object of the form { x?, open, close, high, low, mid? }, where both\n\t\t//\t\tx and mid are optional parameters.  If x is not provided, the index of the\n\t\t//\t\tdata array is used.\n\t\tdefaultParams: {\n\t\t\tgap:\t2,\t\t// gap between columns in pixels\n\t\t\tanimate: null\t// animate chart to place\n\t\t},\n\t\toptionalParams: {\n\t\t\tminBarSize: 1,\t// minimal bar size in pixels\n\t\t\tmaxBarSize: 1,\t// maximal bar size in pixels\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a candlestick chart.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\tcollectStats: function(series){\n\t\t\t// summary:\n\t\t\t//\t\tCollect all statistics for drawing this chart.  Since the common\n\t\t\t//\t\tfunctionality only assumes x and y, OHLC must create it's own\n\t\t\t//\t\tstats (since data has no y value, but open/close/high/low instead).\n\t\t\t// series: dojox/charting/Series[]\n\t\t\t//\t\tThe data series array to be drawn on this plot.\n\t\t\t// returns: Object\n\t\t\t//\t\tReturns an object in the form of { hmin, hmax, vmin, vmax }.\n\n\t\t\t//\twe have to roll our own, since we need to use all four passed\n\t\t\t//\tvalues to figure out our stats, and common only assumes x and y.\n\t\t\tvar stats = lang.delegate(dc.defaultStats);\n\t\t\tfor(var i=0; i<series.length; i++){\n\t\t\t\tvar run = series[i];\n\t\t\t\tif(!run.data.length){ continue; }\n\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\n\t\t\t\tif(!(\"ymin\" in run) || !(\"ymax\" in run)){\n\t\t\t\t\tarr.forEach(run.data, function(val, idx){\n\t\t\t\t\t\tif(!this.isNullValue(val)){\n\t\t\t\t\t\t\tvar x = val.x || idx + 1;\n\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, val.open, val.close, val.high, val.low);\n\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, val.open, val.close, val.high, val.low);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\n\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\n\t\t\t}\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = this.collectStats(this.series);\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/OHLC\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\tvar s = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme, f, gap, width,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tevents = this.events();\n\t\t\tf = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\n\t\t\tgap = f.gap;\n\t\t\twidth = f.size;\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tvar theme = t.next(\"candlestick\", [this.opt, run]), s = run.group,\n\t\t\t\t\teventSeries = new Array(run.data.length);\n\t\t\t\tfor(var j = 0; j < run.data.length; ++j){\n\t\t\t\t\tvar v = run.data[j];\n\t\t\t\t\tif(!this.isNullValue(v)){\n\t\t\t\t\t\tvar finalTheme = t.addMixin(theme, \"candlestick\", v, true);\n\n\t\t\t\t\t\t//\tcalculate the points we need for OHLC\n\t\t\t\t\t\tvar x = ht(v.x || (j+0.5)) + offsets.l + gap,\n\t\t\t\t\t\t\ty = dim.height - offsets.b,\n\t\t\t\t\t\t\topen = vt(v.open),\n\t\t\t\t\t\t\tclose = vt(v.close),\n\t\t\t\t\t\t\thigh = vt(v.high),\n\t\t\t\t\t\t\tlow = vt(v.low);\n\t\t\t\t\t\tif(low > high){\n\t\t\t\t\t\t\tvar tmp = high;\n\t\t\t\t\t\t\thigh = low;\n\t\t\t\t\t\t\tlow = tmp;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(width >= 1){\n\t\t\t\t\t\t\tvar hl = {x1: width/2, x2: width/2, y1: y - high, y2: y - low},\n\t\t\t\t\t\t\t\top = {x1: 0, x2: ((width/2) + ((finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1)/2)), y1: y-open, y2: y-open},\n\t\t\t\t\t\t\t\tcl = {x1: ((width/2) - ((finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1)/2)), x2: width, y1: y-close, y2: y-close};\n\t\t\t\t\t\t\tvar shape = s.createGroup();\n\t\t\t\t\t\t\tshape.setTransform({dx: x, dy: 0});\n\t\t\t\t\t\t\tvar inner = shape.createGroup();\n\t\t\t\t\t\t\tinner.createLine(hl).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tinner.createLine(op).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tinner.createLine(cl).setStroke(finalTheme.series.stroke);\n\n\t\t\t\t\t\t\t// TODO: double check this.\n\t\t\t\t\t\t\trun.dyn.stroke = finalTheme.series.stroke;\n\t\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"candlestick\",\n\t\t\t\t\t\t\t\t\tindex:   j,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:\t inner,\n\t\t\t\t\t\t\t\t\tx:       x,\n\t\t\t\t\t\t\t\t\ty:       y-Math.max(open, close),\n\t\t\t\t\t\t\t\t\tcx:\t\t width/2,\n\t\t\t\t\t\t\t\t\tcy:\t\t (y-Math.max(open, close)) + (Math.max(open > close ? open-close : close-open, 1)/2),\n\t\t\t\t\t\t\t\t\twidth:\t width,\n\t\t\t\t\t\t\t\t\theight:  Math.max(open > close ? open-close : close-open, 1),\n\t\t\t\t\t\t\t\t\tdata:\t v\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[j] = o;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateOHLC(shape, y - low, high - low);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/OHLC\n\t\t},\n\t\t_animateOHLC: function(shape, voffset, vsize){\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 320:\n/*!******************************************!*\\\n  !*** ../dojox/charting/plot2d/Spider.js ***!\n  \\******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0), __webpack_require__(/*! dojo/_base/declare */ 4), __webpack_require__(/*! dojo/_base/connect */ 36), __webpack_require__(/*! dojo/_base/array */ 5),\n\t__webpack_require__(/*! dojo/dom-geometry */ 17), __webpack_require__(/*! dojo/_base/fx */ 79), __webpack_require__(/*! dojo/fx */ 321), __webpack_require__(/*! dojo/sniff */ 8),\n\t__webpack_require__(/*! ./Base */ 251), __webpack_require__(/*! ./_PlotEvents */ 240), __webpack_require__(/*! ./common */ 233), __webpack_require__(/*! ../axis2d/common */ 246),\n\t__webpack_require__(/*! dojox/gfx */ 237), __webpack_require__(/*! dojox/gfx/matrix */ 239), __webpack_require__(/*! dojox/gfx/fx */ 238), __webpack_require__(/*! dojox/lang/functional */ 234),\n\t__webpack_require__(/*! dojox/lang/utils */ 235), __webpack_require__(/*! dojo/fx/easing */ 322)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, declare, hub, arr, domGeom, baseFx, coreFx, has,\n\t\t\tBase, PlotEvents, dc, da, g, m, gfxfx, df, du, easing){\n\n\tvar FUDGE_FACTOR = 0.2; // use to overlap fans\n\n\tvar Spider = declare(\"dojox.charting.plot2d.Spider\", [Base, PlotEvents], {\n\t\t// summary:\n\t\t//\t\tThe plot that represents a typical Spider chart.\n\t\tdefaultParams: {\n\t\t\tlabels:\t\t\ttrue,\n\t\t\tticks:\t\t\tfalse,\n\t\t\tfixed:\t\t\ttrue,\n\t\t\tprecision:\t\t1,\n\t\t\tlabelOffset:\t-10,\n\t\t\tlabelStyle:\t\t\"default\",\t// default/rows/auto\n\t\t\thtmlLabels:\t\ttrue,\t\t// use HTML to draw labels\n\t\t\tstartAngle:\t\t-90,\t\t// start angle for slices in degrees\n\t\t\tdivisions:\t\t 3,\t\t\t// radius tick count\n\t\t\taxisColor:\t\t \"\",\t\t// spider axis color\n\t\t\taxisWidth:\t\t 0,\t\t\t// spider axis stroke width\n\t\t\tspiderColor:\t \"\",\t\t// spider web color\n\t\t\tspiderWidth:\t 0,\t\t\t// spider web stroke width\n\t\t\tseriesWidth:\t 0,\t\t\t// plot border with\n\t\t\tseriesFillAlpha: 0.2,\t\t// plot fill alpha\n\t\t\tspiderOrigin:\t 0.16,\n\t\t\tmarkerSize:\t\t 3,\t\t\t// radius of plot vertex (px)\n\t\t\tspiderType:\t\t \"polygon\", //\"circle\"\n\t\t\tanimationType:\t easing.backOut,\n\t\t\tanimate: null,\n\t\t\taxisTickFont:\t\t\"\",\n\t\t\taxisTickFontColor:\t\"\",\n\t\t\taxisFont:\t\t\t\"\",\n\t\t\taxisFontColor:\t\t\"\"\n\t\t},\n\t\toptionalParams: {\n\t\t\tradius:\t\t0,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a Spider plot.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define this plot's parameters.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.dyn = [];\n\t\t\tthis.datas = {};\n\t\t\tthis.labelKey = [];\n\t\t\tthis.oldSeriePoints = {};\n\t\t\tthis.animate = this.opt.animate === null ? {} : this.opt.animate;\n\t\t\tthis.animations = {};\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all of the information tied to this plot.\n\t\t\t// returns: dojox/charting/plot2d/Spider\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.inherited(arguments);\n\t\t\tthis.dyn = [];\n\t\t\tthis.axes = [];\n\t\t\tthis.datas = {};\n\t\t\tthis.labelKey = [];\n\t\t\tthis.oldSeriePoints = {};\n\t\t\tthis.animations = {};\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Spider\n\t\t},\n\t\tsetAxis: function(axis){\n\t\t\t// summary:\n\t\t\t//\t\tOptionally set axis min and max property.\n\t\t\t// returns: dojox/charting/plot2d/Spider\n\t\t\t//\t\tThe reference to this plot for functional chaining.\n\n\t\t\t// override the computed min/max with provided values if any\n\t\t\tif(axis){\n\t\t\t\tif(axis.opt.min != undefined){\n\t\t\t\t\tthis.datas[axis.name].min = axis.opt.min;\n\t\t\t\t}\n\t\t\t\tif(axis.opt.max != undefined){\n\t\t\t\t\tthis.datas[axis.name].max = axis.opt.max;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Spider\n\t\t},\n\t\taddSeries: function(run){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a data series to this plot.\n\t\t\t// run: dojox.charting.Series\n\t\t\t//\t\tThe series to be added.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.series.push(run);\n\t\t\tvar key;\n\t\t\tfor(key in run.data){\n\t\t\t\tvar val = run.data[key],\n\t\t\t\t\tdata = this.datas[key];\n\t\t\t\tif(data){\n\t\t\t\t\tdata.vlist.push(val);\n\t\t\t\t\tdata.min = Math.min(data.min, val);\n\t\t\t\t\tdata.max = Math.max(data.max, val);\n\t\t\t\t}else{\n\t\t\t\t\tvar axisKey = \"__\"+key;\n\t\t\t\t\tthis.axes.push(axisKey);\n\t\t\t\t\tthis[axisKey] = key;\n\t\t\t\t\tthis.datas[key] = {min: val, max: val, vlist: [val]};\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.labelKey.length <= 0){\n\t\t\t\tfor(key in run.data){\n\t\t\t\t\tthis.labelKey.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox.charting.plot2d.Base\n\t\t},\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\treturn dc.collectSimpleStats(this.series, function(v){ return v === null; }); // Object\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender the plot on the chart.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/Spider\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(!this.dirty){ return this; }\n\t\t\tthis.dirty = false;\n\t\t\tthis.cleanGroup();\n\t\t\tvar s = this.group, t = this.chart.theme;\n\t\t\tthis.resetEvents();\n\n\t\t\tif(!this.series || !this.series.length){\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\t// calculate the geometry\n\t\t\tvar o = this.opt, ta = t.axis,\n\t\t\t\trx = (dim.width\t - offsets.l - offsets.r) / 2,\n\t\t\t\try = (dim.height - offsets.t - offsets.b) / 2,\n\t\t\t\tr  = Math.min(rx, ry),\n\t\t\t\taxisTickFont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font) || \"normal normal normal 7pt Tahoma\",\n\t\t\t\taxisFont = o.axisFont || (ta.tick && ta.tick.titleFont) || \"normal normal normal 11pt Tahoma\",\n\t\t\t\taxisTickFontColor = o.axisTickFontColor || (ta.majorTick && ta.majorTick.fontColor) || (ta.tick && ta.tick.fontColor) || \"silver\",\n\t\t\t\taxisFontColor = o.axisFontColor || (ta.tick && ta.tick.titleFontColor) || \"black\",\n\t\t\t\taxisColor = o.axisColor || (ta.tick && ta.tick.axisColor) || \"silver\",\n\t\t\t\tspiderColor = o.spiderColor || (ta.tick && ta.tick.spiderColor) || \"silver\",\n\t\t\t\taxisWidth = o.axisWidth || (ta.stroke && ta.stroke.width) || 2,\n\t\t\t\tspiderWidth = o.spiderWidth || (ta.stroke && ta.stroke.width) || 2,\n\t\t\t\tseriesWidth = o.seriesWidth || (ta.stroke && ta.stroke.width) || 2,\n\t\t\t\tasize = g.normalizedLength(g.splitFontString(axisFont).size),\n\t\t\t\tstartAngle = m._degToRad(o.startAngle),\n\t\t\t\tstart = startAngle, labels, shift, labelR,\n\t\t\t\touterPoints, innerPoints, divisionPoints, divisionRadius, labelPoints,\n\t\t\t\tro = o.spiderOrigin, dv = o.divisions >= 3 ? o.divisions : 3, ms = o.markerSize,\n\t\t\t\tspt = o.spiderType, at = o.animationType, lboffset = o.labelOffset < -10 ? o.labelOffset : -10,\n\t\t\t\taxisExtra = 0.2,\n\t\t\t\ti, j, point, len, fontWidth, render, serieEntry, run, data, min, max, distance;\n\t\t\t\n\t\t\tif(o.labels){\n\t\t\t\tlabels = arr.map(this.series, function(s){\n\t\t\t\t\treturn s.name;\n\t\t\t\t}, this);\n\t\t\t\tshift = df.foldl1(df.map(labels, function(label){\n\t\t\t\t\tvar font = t.series.font;\n\t\t\t\t\treturn g._base._getTextBox(label, {\n\t\t\t\t\t\tfont: font\n\t\t\t\t\t}).w;\n\t\t\t\t}, this), \"Math.max(a, b)\") / 2;\n\t\t\t\tr = Math.min(rx - 2 * shift, ry - asize) + lboffset;\n\t\t\t\tlabelR = r - lboffset;\n\t\t\t}\n\t\t\tif(\"radius\" in o){\n\t\t\t\tr = o.radius;\n\t\t\t\tlabelR = r - lboffset;\n\t\t\t}\n\t\t\tr /= (1+axisExtra);\n\t\t\tvar circle = {\n\t\t\t\tcx: offsets.l + rx,\n\t\t\t\tcy: offsets.t + ry,\n\t\t\t\tr: r\n\t\t\t};\n\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tserieEntry = this.series[i];\n\t\t\t\tif(!this.dirty && !serieEntry.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tserieEntry.cleanGroup();\n\t\t\t\trun = serieEntry.data;\n\t\t\t\tif(run !== null){\n\t\t\t\t\tlen = this._getObjectLength(run);\n\t\t\t\t\t//construct connect points\n\t\t\t\t\tif(!outerPoints || outerPoints.length <= 0){\n\t\t\t\t\t\touterPoints = [], innerPoints = [], labelPoints = [];\n\t\t\t\t\t\tthis._buildPoints(outerPoints, len, circle, r, start, true, dim);\n\t\t\t\t\t\tthis._buildPoints(innerPoints, len, circle, r*ro, start, true, dim);\n\t\t\t\t\t\tthis._buildPoints(labelPoints, len, circle, labelR, start, false, dim);\n\t\t\t\t\t\tif(dv > 2){\n\t\t\t\t\t\t\tdivisionPoints = [], divisionRadius = [];\n\t\t\t\t\t\t\tfor (j = 0; j < dv - 2; j++){\n\t\t\t\t\t\t\t\tdivisionPoints[j] = [];\n\t\t\t\t\t\t\t\tthis._buildPoints(divisionPoints[j], len, circle, r*(ro + (1-ro)*(j+1)/(dv-1)), start, true, dim);\n\t\t\t\t\t\t\t\tdivisionRadius[j] = r*(ro + (1-ro)*(j+1)/(dv-1));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//draw Spider\n\t\t\t//axis\n\t\t\tvar axisGroup = s.createGroup(), axisStroke = {color: axisColor, width: axisWidth},\n\t\t\t\tspiderStroke = {color: spiderColor, width: spiderWidth};\n\t\t\tfor (j = outerPoints.length - 1; j >= 0; --j){\n\t\t\t\tpoint = outerPoints[j];\n\t\t\t\tvar st = {\n\t\t\t\t\t\tx: point.x + (point.x - circle.cx) * axisExtra,\n\t\t\t\t\t\ty: point.y + (point.y - circle.cy) * axisExtra\n\t\t\t\t\t},\n\t\t\t\t\tnd = {\n\t\t\t\t\t\tx: point.x + (point.x - circle.cx) * axisExtra / 2,\n\t\t\t\t\t\ty: point.y + (point.y - circle.cy) * axisExtra / 2\n\t\t\t\t\t};\n\t\t\t\taxisGroup.createLine({\n\t\t\t\t\tx1: circle.cx,\n\t\t\t\t\ty1: circle.cy,\n\t\t\t\t\tx2: st.x,\n\t\t\t\t\ty2: st.y\n\t\t\t\t}).setStroke(axisStroke);\n\t\t\t\t//arrow\n\t\t\t\tthis._drawArrow(axisGroup, st, nd, axisStroke);\n\t\t\t}\n\t\t\t\n\t\t\t// draw the label\n\t\t\tvar labelGroup = s.createGroup();\n\t\t\tfor (j = labelPoints.length - 1; j >= 0; --j){\n\t\t\t\tpoint = labelPoints[j];\n\t\t\t\tfontWidth = g._base._getTextBox(this.labelKey[j], {font: axisFont}).w || 0;\n\t\t\t\trender = this.opt.htmlLabels && g.renderer != \"vml\" ? \"html\" : \"gfx\";\n\t\t\t\tvar elem = da.createText[render](this.chart, labelGroup, (!domGeom.isBodyLtr() && render == \"html\") ? (point.x + fontWidth - dim.width) : point.x, point.y,\n\t\t\t\t\t\t\t\"middle\", this.labelKey[j], axisFont, axisFontColor);\n\t\t\t\tif(this.opt.htmlLabels){\n\t\t\t\t\tthis.htmlElements.push(elem);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//spider web: polygon or circle\n\t\t\tvar spiderGroup = s.createGroup();\n\t\t\tif(spt == \"polygon\"){\n\t\t\t\tspiderGroup.createPolyline(outerPoints).setStroke(spiderStroke);\n\t\t\t\tspiderGroup.createPolyline(innerPoints).setStroke(spiderStroke);\n\t\t\t\tif(divisionPoints.length > 0){\n\t\t\t\t\tfor (j = divisionPoints.length - 1; j >= 0; --j){\n\t\t\t\t\t\tspiderGroup.createPolyline(divisionPoints[j]).setStroke(spiderStroke);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{//circle\n\t\t\t\tspiderGroup.createCircle({cx: circle.cx, cy: circle.cy, r: r}).setStroke(spiderStroke);\n\t\t\t\tspiderGroup.createCircle({cx: circle.cx, cy: circle.cy, r: r*ro}).setStroke(spiderStroke);\n\t\t\t\tif(divisionRadius.length > 0){\n\t\t\t\t\tfor (j = divisionRadius.length - 1; j >= 0; --j){\n\t\t\t\t\t\tspiderGroup.createCircle({cx: circle.cx, cy: circle.cy, r: divisionRadius[j]}).setStroke(spiderStroke);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//text\n\t\t\tlen = this._getObjectLength(this.datas);\n\t\t\tvar textGroup = s.createGroup(), k = 0;\n\t\t\tfor(var key in this.datas){\n\t\t\t\tdata = this.datas[key];\n\t\t\t\tmin = data.min;\n\t\t\t\tmax = data.max;\n\t\t\t\tdistance = max - min;\n\t\t\t\t\tend = start + 2 * Math.PI * k / len;\n\t\t\t\tfor (i = 0; i < dv; i++){\n\t\t\t\t\tvar text = min + distance*i/(dv-1);\n\t\t\t\t\tpoint = this._getCoordinate(circle, r*(ro + (1-ro)*i/(dv-1)), end, dim);\n\t\t\t\t\ttext = this._getLabel(text);\n\t\t\t\t\tfontWidth = g._base._getTextBox(text, {font: axisTickFont}).w || 0;\n\t\t\t\t\t\trender = this.opt.htmlLabels && g.renderer != \"vml\" ? \"html\" : \"gfx\";\n\t\t\t\t\tif(this.opt.htmlLabels){\n\t\t\t\t\t\tthis.htmlElements.push(da.createText[render]\n\t\t\t\t\t\t\t(this.chart, textGroup, (!domGeom.isBodyLtr() && render == \"html\") ? (point.x + fontWidth - dim.width) : point.x, point.y,\n\t\t\t\t\t\t\t\t\"start\", text, axisTickFont, axisTickFontColor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tk++;\n\t\t\t}\n\t\t\t\n\t\t\t//draw series (animation)\n\t\t\tthis.chart.seriesShapes = {};\n\t\t\tfor (i = this.series.length - 1; i >= 0; i--){\n\t\t\t\tserieEntry = this.series[i];\n\t\t\t\trun = serieEntry.data;\n\t\t\t\tif(run !== null){\n\t\t\t\t\tvar theme = t.next(\"spider\", [o, serieEntry]),\n\t\t\t\t\t\tf = g.normalizeColor(theme.series.fill), \n\t\t\t\t\t\tsk = {color: theme.series.fill, width: seriesWidth};\n\t\t\t\t\tf.a = o.seriesFillAlpha;\n\t\t\t\t\tserieEntry.dyn = {fill: f, stroke: sk};\n\t\t\t\t\tif(serieEntry.hidden){\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t//series polygon\n\t\t\t\t\tvar seriePoints = [], tipData = [];\n\t\t\t\t\tk = 0;\n\t\t\t\t\tfor(key in run){\n\t\t\t\t\t\tdata = this.datas[key];\n\t\t\t\t\t\tmin = data.min;\n\t\t\t\t\t\tmax = data.max;\n\t\t\t\t\t\tdistance = max - min;\n\t\t\t\t\t\tvar entry = run[key], end = start + 2 * Math.PI * k / len;\n\t\t\t\t\t\t\tpoint = this._getCoordinate(circle, r*(ro + (1-ro)*(entry-min)/distance), end, dim);\n\t\t\t\t\t\tseriePoints.push(point);\n\t\t\t\t\t\ttipData.push({sname: serieEntry.name, key: key, data: entry});\n\t\t\t\t\t\tk++;\n\t\t\t\t\t}\n\t\t\t\t\tseriePoints[seriePoints.length] = seriePoints[0];\n\t\t\t\t\ttipData[tipData.length] = tipData[0];\n\t\t\t\t\tvar polygonBoundRect = this._getBoundary(seriePoints),\n\t\t\t\t\t\tts = serieEntry.group;\n\t\t\t         \n\t\t\t\t\t\n\t\t\t\t\tvar osps = this.oldSeriePoints[serieEntry.name];\n\t\t\t\t\tvar cs = this._createSeriesEntry(ts, (osps || innerPoints), seriePoints, f, sk, r, ro, ms, at);\n\t\t\t\t\tthis.chart.seriesShapes[serieEntry.name] = cs;\n\t\t\t\t\tthis.oldSeriePoints[serieEntry.name] = seriePoints;\n\t\t\t\t\t\n\t\t\t\t\tvar po = {\n\t\t\t\t\t\telement: \"spider_poly\",\n\t\t\t\t\t\tindex:\t i,\n\t\t\t\t\t\tid:\t\t \"spider_poly_\"+serieEntry.name,\n\t\t\t\t\t\trun:\t serieEntry,\n\t\t\t\t\t\tplot:\t this,\n\t\t\t\t\t\tshape:\t cs.poly,\n\t\t\t\t\t\tparent:\t ts,\n\t\t\t\t\t\tbrect:\t polygonBoundRect,\n\t\t\t\t\t\tcx:\t\t circle.cx,\n\t\t\t\t\t\tcy:\t\t circle.cy,\n\t\t\t\t\t\tcr:\t\t r,\n\t\t\t\t\t\tf:\t\t f,\n\t\t\t\t\t\ts:\t\t s\n\t\t\t\t\t};\n\t\t\t\t\tthis._connectEvents(po);\n\t\t\t\t\t\n\t\t\t\t\tvar so = {\n\t\t\t\t\t\telement: \"spider_plot\",\n\t\t\t\t\t\tindex:\t i,\n\t\t\t\t\t\tid:\t\t \"spider_plot_\"+serieEntry.name,\n\t\t\t\t\t\trun:\t serieEntry,\n\t\t\t\t\t\tplot:\t this,\n\t\t\t\t\t\tshape:\t serieEntry.group\n\t\t\t\t\t};\n\t\t\t\t\tthis._connectEvents(so);\n\t\t\t\t\t\n\t\t\t\t\tarr.forEach(cs.circles, function(c, i){\n\t\t\t\t\t\tvar co = {\n\t\t\t\t\t\t\t\telement: \"spider_circle\",\n\t\t\t\t\t\t\t\tindex:\t i,\n\t\t\t\t\t\t\t\tid:\t\t \"spider_circle_\"+serieEntry.name+i,\n\t\t\t\t\t\t\t\trun:\t serieEntry,\n\t\t\t\t\t\t\t\tplot:\t this,\n\t\t\t\t\t\t\t\tshape:\t c,\n\t\t\t\t\t\t\t\tparent:\t ts,\n\t\t\t\t\t\t\t\ttdata:\t tipData[i],\n\t\t\t\t\t\t\t\tcx:\t\t seriePoints[i].x,\n\t\t\t\t\t\t\t\tcy:\t\t seriePoints[i].y,\n\t\t\t\t\t\t\t\tf:\t\t f,\n\t\t\t\t\t\t\t\ts:\t\t s\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tthis._connectEvents(co);\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Spider\n\t\t},\n\t\t_createSeriesEntry: function(ts, osps, sps, f, sk, r, ro, ms, at){\n\t\t\t//polygon\n\t\t\tvar initpoints = this.animate?osps:sps;\n\t\t\tvar spoly = ts.createPolyline(initpoints).setFill(f).setStroke(sk), scircle = [];\n\t\t\tfor (var j = 0; j < initpoints.length; j++){\n\t\t\t\tvar point = initpoints[j], cr = ms;\n\t\t\t\tvar circle = ts.createCircle({cx: point.x, cy: point.y, r: cr}).setFill(f).setStroke(sk);\n\t\t\t\tscircle.push(circle);\n\t\t\t}\n\t\t\tif(this.animate) {\n\t\t\t\tvar anims = arr.map(sps, function (np, j) {\n\t\t\t\t\t// create animation\n\t\t\t\t\tvar sp = osps[j],\n\t\t\t\t\t\tanim = new baseFx.Animation(lang.delegate({\n\t\t\t\t\t\t\tduration: 1000,\n\t\t\t\t\t\t\teasing: at,\n\t\t\t\t\t\t\tcurve: [sp.y, np.y]\n\t\t\t\t\t\t}, this.animate));\n\t\t\t\t\tvar spl = spoly, sc = scircle[j];\n\t\t\t\t\thub.connect(anim, \"onAnimate\", function (y) {\n\t\t\t\t\t\t//apply poly\n\t\t\t\t\t\tvar pshape = spl.getShape();\n\t\t\t\t\t\tpshape.points[j].y = y;\n\t\t\t\t\t\tspl.setShape(pshape);\n\t\t\t\t\t\t//apply circle\n\t\t\t\t\t\tvar cshape = sc.getShape();\n\t\t\t\t\t\tcshape.cy = y;\n\t\t\t\t\t\tsc.setShape(cshape);\n\t\t\t\t\t});\n\t\t\t\t\treturn anim;\n\t\t\t\t}, this);\n\n\t\t\t\tvar anims1 = arr.map(sps, function (np, j) {\n\t\t\t\t\t// create animation\n\t\t\t\t\tvar sp = osps[j],\n\t\t\t\t\t\tanim = new baseFx.Animation(lang.delegate({\n\t\t\t\t\t\t\tduration: 1000,\n\t\t\t\t\t\t\teasing: at,\n\t\t\t\t\t\t\tcurve: [sp.x, np.x]\n\t\t\t\t\t\t}, this.animate));\n\t\t\t\t\tvar spl = spoly, sc = scircle[j];\n\t\t\t\t\thub.connect(anim, \"onAnimate\", function (x) {\n\t\t\t\t\t\t//apply poly\n\t\t\t\t\t\tvar pshape = spl.getShape();\n\t\t\t\t\t\tpshape.points[j].x = x;\n\t\t\t\t\t\tspl.setShape(pshape);\n\t\t\t\t\t\t//apply circle\n\t\t\t\t\t\tvar cshape = sc.getShape();\n\t\t\t\t\t\tcshape.cx = x;\n\t\t\t\t\t\tsc.setShape(cshape);\n\t\t\t\t\t});\n\t\t\t\t\treturn anim;\n\t\t\t\t}, this);\n\t\t\t\tvar masterAnimation = coreFx.combine(anims.concat(anims1)); //dojo.fx.chain(anims);\n\t\t\t\tmasterAnimation.play();\n\t\t\t}\n\t\t\treturn {group :ts, poly: spoly, circles: scircle};\n\t\t},\n\t\tplotEvent: function(o){\n\t\t\t// summary:\n\t\t\t//\t\tStub function for use by specific plots.\n\t\t\t// o: Object\n\t\t\t//\t\tAn object intended to represent event parameters.\n\t\t\tif(o.element == \"spider_plot\"){\n\t\t\t\t//dojo gfx function \"moveToFront\" not work in IE\n\t\t\t\tif(o.type == \"onmouseover\" && !has(\"ie\")){\n\t\t\t\t\to.shape.moveToFront();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttooltipFunc: function(o){\n\t\t\tif(o.element == \"spider_circle\"){\n\t\t\t\treturn o.tdata.sname + \"<br/>\" + o.tdata.key + \"<br/>\" + o.tdata.data;\n\t\t\t}else{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\t_getBoundary: function(points){\n\t\t\tvar xmax = points[0].x,\n\t\t\t\txmin = points[0].x,\n\t\t\t\tymax = points[0].y,\n\t\t\t\tymin = points[0].y;\n\t\t\tfor(var i = 0; i < points.length; i++){\n\t\t\t\tvar point = points[i];\n\t\t\t\txmax = Math.max(point.x, xmax);\n\t\t\t\tymax = Math.max(point.y, ymax);\n\t\t\t\txmin = Math.min(point.x, xmin);\n\t\t\t\tymin = Math.min(point.y, ymin);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tx: xmin,\n\t\t\t\ty: ymin,\n\t\t\t\twidth: xmax - xmin,\n\t\t\t\theight: ymax - ymin\n\t\t\t};\n\t\t},\n\t\t\n\t\t_drawArrow: function(s, start, end, stroke){\n\t\t\tvar len = Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2)),\n\t\t\t\tsin = (end.y - start.y)/len, cos = (end.x - start.x)/len,\n\t\t\t\tpoint2 = {x: end.x + (len/3)*(-sin), y: end.y + (len/3)*cos},\n\t\t\t\tpoint3 = {x: end.x + (len/3)*sin, y: end.y + (len/3)*(-cos)};\n\t\t\ts.createPolyline([start, point2, point3]).setFill(stroke.color).setStroke(stroke);\n\t\t},\n\t\t\n\t\t_buildPoints: function(points, count, circle, radius, angle, recursive, dim){\n\t\t\tfor(var i = 0; i < count; i++){\n\t\t\t\tvar end = angle + 2 * Math.PI * i / count;\n\t\t\t\tpoints.push(this._getCoordinate(circle, radius, end, dim));\n\t\t\t}\n\t\t\tif(recursive){\n\t\t\t\tpoints.push(this._getCoordinate(circle, radius, angle + 2 * Math.PI, dim));\n\t\t\t}\n\t\t},\n\t\t\n\t\t_getCoordinate: function(circle, radius, angle, dim){\n\t\t\tvar x = circle.cx + radius * Math.cos(angle);\n\t\t\tif(has(\"dojo-bidi\") && this.chart.isRightToLeft() && dim){\n\t\t\t\tx = dim.width - x;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: circle.cy + radius * Math.sin(angle)\n\t\t\t}\n\t\t},\n\t\t\n\t\t_getObjectLength: function(obj){\n\t\t\tvar count = 0;\n\t\t\tif(lang.isObject(obj)){\n\t\t\t\tfor(var key in obj){\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\t// utilities\n\t\t_getLabel: function(number){\n\t\t\treturn dc.getLabel(number, this.opt.fixed, this.opt.precision);\n\t\t}\n\t});\n\n\treturn Spider; // dojox/plot2d/Spider\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 321:\n/*!*********************!*\\\n  !*** ../dojo/fx.js ***!\n  \\*********************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! ./_base/lang */ 0),\r\n\t__webpack_require__(/*! ./Evented */ 33),\r\n\t__webpack_require__(/*! ./_base/kernel */ 1),\r\n\t__webpack_require__(/*! ./_base/array */ 5),\r\n\t__webpack_require__(/*! ./aspect */ 18),\r\n\t__webpack_require__(/*! ./_base/fx */ 79),\r\n\t__webpack_require__(/*! ./dom */ 6),\r\n\t__webpack_require__(/*! ./dom-style */ 10),\r\n\t__webpack_require__(/*! ./dom-geometry */ 17),\r\n\t__webpack_require__(/*! ./ready */ 22),\r\n\t__webpack_require__.dj.c(/*! dojo/fx */ 321) // for context sensitive loading of Toggler\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang, Evented, dojo, arrayUtil, aspect, baseFx, dom, domStyle, geom, ready, require){\r\n\r\n\t// module:\r\n\t//\t\tdojo/fx\r\n\t\r\n\t// For back-compat, remove in 2.0.\r\n\tif(!dojo.isAsync){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"./fx/Toggler\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\tvar coreFx = dojo.fx = {\r\n\t\t// summary:\r\n\t\t//\t\tEffects library on top of Base animations\r\n\t};\r\n\r\n\tvar _baseObj = {\r\n\t\t\t_fire: function(evt, args){\r\n\t\t\t\tif(this[evt]){\r\n\t\t\t\t\tthis[evt].apply(this, args||[]);\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\tvar _chain = function(animations){\r\n\t\tthis._index = -1;\r\n\t\tthis._animations = animations||[];\r\n\t\tthis._current = this._onAnimateCtx = this._onEndCtx = null;\r\n\r\n\t\tthis.duration = 0;\r\n\t\tarrayUtil.forEach(this._animations, function(a){\r\n\t\t\tthis.duration += a.duration;\r\n\t\t\tif(a.delay){ this.duration += a.delay; }\r\n\t\t}, this);\r\n\t};\r\n\t_chain.prototype = new Evented();\r\n\tlang.extend(_chain, {\r\n\t\t_onAnimate: function(){\r\n\t\t\tthis._fire(\"onAnimate\", arguments);\r\n\t\t},\r\n\t\t_onEnd: function(){\r\n\t\t\tthis._onAnimateCtx.remove();\r\n\t\t\tthis._onEndCtx.remove();\r\n\t\t\tthis._onAnimateCtx = this._onEndCtx = null;\r\n\t\t\tif(this._index + 1 == this._animations.length){\r\n\t\t\t\tthis._fire(\"onEnd\");\r\n\t\t\t}else{\r\n\t\t\t\t// switch animations\r\n\t\t\t\tthis._current = this._animations[++this._index];\r\n\t\t\t\tthis._onAnimateCtx = aspect.after(this._current, \"onAnimate\", lang.hitch(this, \"_onAnimate\"), true);\r\n\t\t\t\tthis._onEndCtx = aspect.after(this._current, \"onEnd\", lang.hitch(this, \"_onEnd\"), true);\r\n\t\t\t\tthis._current.play(0, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tplay: function(/*int?*/ delay, /*Boolean?*/ gotoStart){\r\n\t\t\tif(!this._current){ this._current = this._animations[this._index = 0]; }\r\n\t\t\tif(!gotoStart && this._current.status() == \"playing\"){ return this; }\r\n\t\t\tvar beforeBegin = aspect.after(this._current, \"beforeBegin\", lang.hitch(this, function(){\r\n\t\t\t\t\tthis._fire(\"beforeBegin\");\r\n\t\t\t\t}), true),\r\n\t\t\t\tonBegin = aspect.after(this._current, \"onBegin\", lang.hitch(this, function(arg){\r\n\t\t\t\t\tthis._fire(\"onBegin\", arguments);\r\n\t\t\t\t}), true),\r\n\t\t\t\tonPlay = aspect.after(this._current, \"onPlay\", lang.hitch(this, function(arg){\r\n\t\t\t\t\tthis._fire(\"onPlay\", arguments);\r\n\t\t\t\t\tbeforeBegin.remove();\r\n\t\t\t\t\tonBegin.remove();\r\n\t\t\t\t\tonPlay.remove();\r\n\t\t\t\t}));\r\n\t\t\tif(this._onAnimateCtx){\r\n\t\t\t\tthis._onAnimateCtx.remove();\r\n\t\t\t}\r\n\t\t\tthis._onAnimateCtx = aspect.after(this._current, \"onAnimate\", lang.hitch(this, \"_onAnimate\"), true);\r\n\t\t\tif(this._onEndCtx){\r\n\t\t\t\tthis._onEndCtx.remove();\r\n\t\t\t}\r\n\t\t\tthis._onEndCtx = aspect.after(this._current, \"onEnd\", lang.hitch(this, \"_onEnd\"), true);\r\n\t\t\tthis._current.play.apply(this._current, arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tpause: function(){\r\n\t\t\tif(this._current){\r\n\t\t\t\tvar e = aspect.after(this._current, \"onPause\", lang.hitch(this, function(arg){\r\n\t\t\t\t\t\tthis._fire(\"onPause\", arguments);\r\n\t\t\t\t\t\te.remove();\r\n\t\t\t\t\t}), true);\r\n\t\t\t\tthis._current.pause();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tgotoPercent: function(/*Decimal*/percent, /*Boolean?*/ andPlay){\r\n\t\t\tthis.pause();\r\n\t\t\tvar offset = this.duration * percent;\r\n\t\t\tthis._current = null;\r\n\r\n\t\t\tarrayUtil.some(this._animations, function(a, index){\r\n\t\t\t\tif(offset <= a.duration){\r\n\t\t\t\t\tthis._current = a;\r\n\t\t\t\t\tthis._index = index;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\toffset -= a.duration;\r\n\t\t\t\treturn false;\r\n\t\t\t}, this);\r\n\t\t\tif(this._current){\r\n\t\t\t\tthis._current.gotoPercent(offset / this._current.duration);\r\n\t\t\t}\r\n\t\t\tif (andPlay) { this.play(); }\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tstop: function(/*boolean?*/ gotoEnd){\r\n\t\t\tif(this._current){\r\n\t\t\t\tif(gotoEnd){\r\n\t\t\t\t\tfor(; this._index + 1 < this._animations.length; ++this._index){\r\n\t\t\t\t\t\tthis._animations[this._index].stop(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._current = this._animations[this._index];\r\n\t\t\t\t}\r\n\t\t\t\tvar e = aspect.after(this._current, \"onStop\", lang.hitch(this, function(arg){\r\n\t\t\t\t\t\tthis._fire(\"onStop\", arguments);\r\n\t\t\t\t\t\te.remove();\r\n\t\t\t\t\t}), true);\r\n\t\t\t\tthis._current.stop();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tstatus: function(){\r\n\t\t\treturn this._current ? this._current.status() : \"stopped\";\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\tthis.stop();\r\n\t\t\tif(this._onAnimateCtx){ this._onAnimateCtx.remove(); }\r\n\t\t\tif(this._onEndCtx){ this._onEndCtx.remove(); }\r\n\t\t}\r\n\t});\r\n\tlang.extend(_chain, _baseObj);\r\n\r\n\tcoreFx.chain = function(/*dojo/_base/fx.Animation[]*/ animations){\r\n\t\t// summary:\r\n\t\t//\t\tChain a list of `dojo/_base/fx.Animation`s to run in sequence\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tReturn a `dojo/_base/fx.Animation` which will play all passed\r\n\t\t//\t\t`dojo/_base/fx.Animation` instances in sequence, firing its own\r\n\t\t//\t\tsynthesized events simulating a single animation. (eg:\r\n\t\t//\t\tonEnd of this animation means the end of the chain,\r\n\t\t//\t\tnot the individual animations within)\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tOnce `node` is faded out, fade in `otherNode`\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tfx.chain([\r\n\t\t//\t|\t\t\tfx.fadeIn({ node:node }),\r\n\t\t//\t|\t\t\tfx.fadeOut({ node:otherNode })\r\n\t\t//\t|\t\t]).play();\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\treturn new _chain(animations); // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\tvar _combine = function(animations){\r\n\t\tthis._animations = animations||[];\r\n\t\tthis._connects = [];\r\n\t\tthis._finished = 0;\r\n\r\n\t\tthis.duration = 0;\r\n\t\tarrayUtil.forEach(animations, function(a){\r\n\t\t\tvar duration = a.duration;\r\n\t\t\tif(a.delay){ duration += a.delay; }\r\n\t\t\tif(this.duration < duration){ this.duration = duration; }\r\n\t\t\tthis._connects.push(aspect.after(a, \"onEnd\", lang.hitch(this, \"_onEnd\"), true));\r\n\t\t}, this);\r\n\r\n\t\tthis._pseudoAnimation = new baseFx.Animation({curve: [0, 1], duration: this.duration});\r\n\t\tvar self = this;\r\n\t\tarrayUtil.forEach([\"beforeBegin\", \"onBegin\", \"onPlay\", \"onAnimate\", \"onPause\", \"onStop\", \"onEnd\"],\r\n\t\t\tfunction(evt){\r\n\t\t\t\tself._connects.push(aspect.after(self._pseudoAnimation, evt,\r\n\t\t\t\t\tfunction(){ self._fire(evt, arguments); },\r\n\t\t\t\ttrue));\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\tlang.extend(_combine, {\r\n\t\t_doAction: function(action, args){\r\n\t\t\tarrayUtil.forEach(this._animations, function(a){\r\n\t\t\t\ta[action].apply(a, args);\r\n\t\t\t});\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t_onEnd: function(){\r\n\t\t\tif(++this._finished > this._animations.length){\r\n\t\t\t\tthis._fire(\"onEnd\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t_call: function(action, args){\r\n\t\t\tvar t = this._pseudoAnimation;\r\n\t\t\tt[action].apply(t, args);\r\n\t\t},\r\n\t\tplay: function(/*int?*/ delay, /*Boolean?*/ gotoStart){\r\n\t\t\tthis._finished = 0;\r\n\t\t\tthis._doAction(\"play\", arguments);\r\n\t\t\tthis._call(\"play\", arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tpause: function(){\r\n\t\t\tthis._doAction(\"pause\", arguments);\r\n\t\t\tthis._call(\"pause\", arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tgotoPercent: function(/*Decimal*/percent, /*Boolean?*/ andPlay){\r\n\t\t\tvar ms = this.duration * percent;\r\n\t\t\tarrayUtil.forEach(this._animations, function(a){\r\n\t\t\t\ta.gotoPercent(a.duration < ms ? 1 : (ms / a.duration), andPlay);\r\n\t\t\t});\r\n\t\t\tthis._call(\"gotoPercent\", arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tstop: function(/*boolean?*/ gotoEnd){\r\n\t\t\tthis._doAction(\"stop\", arguments);\r\n\t\t\tthis._call(\"stop\", arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tstatus: function(){\r\n\t\t\treturn this._pseudoAnimation.status();\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\tthis.stop();\r\n\t\t\tarrayUtil.forEach(this._connects, function(handle){\r\n\t\t\t\thandle.remove();\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\tlang.extend(_combine, _baseObj);\r\n\r\n\tcoreFx.combine = function(/*dojo/_base/fx.Animation[]*/ animations){\r\n\t\t// summary:\r\n\t\t//\t\tCombine a list of `dojo/_base/fx.Animation`s to run in parallel\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tCombine an array of `dojo/_base/fx.Animation`s to run in parallel,\r\n\t\t//\t\tproviding a new `dojo/_base/fx.Animation` instance encompasing each\r\n\t\t//\t\tanimation, firing standard animation events.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tFade out `node` while fading in `otherNode` simultaneously\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tfx.combine([\r\n\t\t//\t|\t\t\tfx.fadeIn({ node:node }),\r\n\t\t//\t|\t\t\tfx.fadeOut({ node:otherNode })\r\n\t\t//\t|\t\t]).play();\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tWhen the longest animation ends, execute a function:\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tvar anim = fx.combine([\r\n\t\t//\t|\t\t\tfx.fadeIn({ node: n, duration:700 }),\r\n\t\t//\t|\t\t\tfx.fadeOut({ node: otherNode, duration: 300 })\r\n\t\t//\t|\t\t]);\r\n\t\t//\t|\t\taspect.after(anim, \"onEnd\", function(){\r\n\t\t//\t|\t\t\t// overall animation is done.\r\n\t\t//\t|\t\t}, true);\r\n\t\t//\t|\t\tanim.play(); // play the animation\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\treturn new _combine(animations); // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\tcoreFx.wipeIn = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tExpand a node to it's natural height.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tReturns an animation that will expand the\r\n\t\t//\t\tnode defined in 'args' object from it's current height to\r\n\t\t//\t\tit's natural height (with no scrollbar).\r\n\t\t//\t\tNode must have no margin/border/padding.\r\n\t\t//\r\n\t\t// args: Object\r\n\t\t//\t\tA hash-map of standard `dojo/_base/fx.Animation` constructor properties\r\n\t\t//\t\t(such as easing: node: duration: and so on)\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tfx.wipeIn({\r\n\t\t//\t|\t\t\tnode:\"someId\"\r\n\t\t//\t|\t\t}).play()\r\n\t\t//\t|\t});\r\n\r\n\t\tvar node = args.node = dom.byId(args.node), s = node.style, o;\r\n\r\n\t\tvar anim = baseFx.animateProperty(lang.mixin({\r\n\t\t\tproperties: {\r\n\t\t\t\theight: {\r\n\t\t\t\t\t// wrapped in functions so we wait till the last second to query (in case value has changed)\r\n\t\t\t\t\tstart: function(){\r\n\t\t\t\t\t\t// start at current [computed] height, but use 1px rather than 0\r\n\t\t\t\t\t\t// because 0 causes IE to display the whole panel\r\n\t\t\t\t\t\to = s.overflow;\r\n\t\t\t\t\t\ts.overflow = \"hidden\";\r\n\t\t\t\t\t\tif(s.visibility == \"hidden\" || s.display == \"none\"){\r\n\t\t\t\t\t\t\ts.height = \"1px\";\r\n\t\t\t\t\t\t\ts.display = \"\";\r\n\t\t\t\t\t\t\ts.visibility = \"\";\r\n\t\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tvar height = domStyle.get(node, \"height\");\r\n\t\t\t\t\t\t\treturn Math.max(height, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tend: function(){\r\n\t\t\t\t\t\treturn node.scrollHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, args));\r\n\r\n\t\tvar fini = function(){\r\n\t\t\ts.height = \"auto\";\r\n\t\t\ts.overflow = o;\r\n\t\t};\r\n\t\taspect.after(anim, \"onStop\", fini, true);\r\n\t\taspect.after(anim, \"onEnd\", fini, true);\r\n\r\n\t\treturn anim; // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\tcoreFx.wipeOut = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tShrink a node to nothing and hide it.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tReturns an animation that will shrink node defined in \"args\"\r\n\t\t//\t\tfrom it's current height to 1px, and then hide it.\r\n\t\t//\r\n\t\t// args: Object\r\n\t\t//\t\tA hash-map of standard `dojo/_base/fx.Animation` constructor properties\r\n\t\t//\t\t(such as easing: node: duration: and so on)\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tfx.wipeOut({ node:\"someId\" }).play()\r\n\t\t//\t|\t});\r\n\r\n\t\tvar node = args.node = dom.byId(args.node), s = node.style, o;\r\n\r\n\t\tvar anim = baseFx.animateProperty(lang.mixin({\r\n\t\t\tproperties: {\r\n\t\t\t\theight: {\r\n\t\t\t\t\tend: 1 // 0 causes IE to display the whole panel\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, args));\r\n\r\n\t\taspect.after(anim, \"beforeBegin\", function(){\r\n\t\t\to = s.overflow;\r\n\t\t\ts.overflow = \"hidden\";\r\n\t\t\ts.display = \"\";\r\n\t\t}, true);\r\n\t\tvar fini = function(){\r\n\t\t\ts.overflow = o;\r\n\t\t\ts.height = \"auto\";\r\n\t\t\ts.display = \"none\";\r\n\t\t};\r\n\t\taspect.after(anim, \"onStop\", fini, true);\r\n\t\taspect.after(anim, \"onEnd\", fini, true);\r\n\r\n\t\treturn anim; // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\tcoreFx.slideTo = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tSlide a node to a new top/left position\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tReturns an animation that will slide \"node\"\r\n\t\t//\t\tdefined in args Object from its current position to\r\n\t\t//\t\tthe position defined by (args.left, args.top).\r\n\t\t//\r\n\t\t// args: Object\r\n\t\t//\t\tA hash-map of standard `dojo/_base/fx.Animation` constructor properties\r\n\t\t//\t\t(such as easing: node: duration: and so on). Special args members\r\n\t\t//\t\tare `top` and `left`, which indicate the new position to slide to.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t.slideTo({ node: node, left:\"40\", top:\"50\", units:\"px\" }).play()\r\n\r\n\t\tvar node = args.node = dom.byId(args.node),\r\n\t\t\ttop = null, left = null;\r\n\r\n\t\tvar init = (function(n){\r\n\t\t\treturn function(){\r\n\t\t\t\tvar cs = domStyle.getComputedStyle(n);\r\n\t\t\t\tvar pos = cs.position;\r\n\t\t\t\ttop = (pos == 'absolute' ? n.offsetTop : parseInt(cs.top) || 0);\r\n\t\t\t\tleft = (pos == 'absolute' ? n.offsetLeft : parseInt(cs.left) || 0);\r\n\t\t\t\tif(pos != 'absolute' && pos != 'relative'){\r\n\t\t\t\t\tvar ret = geom.position(n, true);\r\n\t\t\t\t\ttop = ret.y;\r\n\t\t\t\t\tleft = ret.x;\r\n\t\t\t\t\tn.style.position=\"absolute\";\r\n\t\t\t\t\tn.style.top=top+\"px\";\r\n\t\t\t\t\tn.style.left=left+\"px\";\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t})(node);\r\n\t\tinit();\r\n\r\n\t\tvar anim = baseFx.animateProperty(lang.mixin({\r\n\t\t\tproperties: {\r\n\t\t\t\ttop: args.top || 0,\r\n\t\t\t\tleft: args.left || 0\r\n\t\t\t}\r\n\t\t}, args));\r\n\t\taspect.after(anim, \"beforeBegin\", init, true);\r\n\r\n\t\treturn anim; // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\treturn coreFx;\r\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n\n/***/ 322:\n/*!****************************!*\\\n  !*** ../dojo/fx/easing.js ***!\n  \\****************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../_base/lang */ 0)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang){\r\n\r\n// module:\r\n//\t\tdojo/fx/easing\r\n\r\nvar easingFuncs = {\r\n\t// summary:\r\n\t//\t\tCollection of easing functions to use beyond the default\r\n\t//\t\t`dojo._defaultEasing` function.\r\n\t// description:\r\n\t//\t\tEasing functions are used to manipulate the iteration through\r\n\t//\t\tan `dojo.Animation`s _Line. _Line being the properties of an Animation,\r\n\t//\t\tand the easing function progresses through that Line determining\r\n\t//\t\thow quickly (or slowly) it should go. Or more accurately: modify\r\n\t//\t\tthe value of the _Line based on the percentage of animation completed.\r\n\t//\r\n\t//\t\tAll functions follow a simple naming convention of \"ease type\" + \"when\".\r\n\t//\t\tIf the name of the function ends in Out, the easing described appears\r\n\t//\t\ttowards the end of the animation. \"In\" means during the beginning,\r\n\t//\t\tand InOut means both ranges of the Animation will applied, both\r\n\t//\t\tbeginning and end.\r\n\t//\r\n\t//\t\tOne does not call the easing function directly, it must be passed to\r\n\t//\t\tthe `easing` property of an animation.\r\n\t// example:\r\n\t//\t|\tdojo.require(\"dojo.fx.easing\");\r\n\t//\t|\tvar anim = dojo.fadeOut({\r\n\t//\t|\t\tnode: 'node',\r\n\t//\t|\t\tduration: 2000,\r\n\t//\t|\t\t//\tnote there is no ()\r\n\t//\t|\t\teasing: dojo.fx.easing.quadIn\r\n\t//\t|\t}).play();\r\n\t//\r\n\r\n\tlinear: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tA linear easing function\r\n\t\treturn n;\r\n\t},\r\n\r\n\tquadIn: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n, 2);\r\n\t},\r\n\r\n\tquadOut: function(/* Decimal? */n){\r\n\t\treturn n * (n - 2) * -1;\r\n\t},\r\n\r\n\tquadInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(n, 2) / 2; }\r\n\t\treturn -1 * ((--n) * (n - 2) - 1) / 2;\r\n\t},\r\n\r\n\tcubicIn: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n, 3);\r\n\t},\r\n\r\n\tcubicOut: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n - 1, 3) + 1;\r\n\t},\r\n\r\n\tcubicInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(n, 3) / 2; }\r\n\t\tn -= 2;\r\n\t\treturn (Math.pow(n, 3) + 2) / 2;\r\n\t},\r\n\r\n\tquartIn: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n, 4);\r\n\t},\r\n\r\n\tquartOut: function(/* Decimal? */n){\r\n\t\treturn -1 * (Math.pow(n - 1, 4) - 1);\r\n\t},\r\n\r\n\tquartInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(n, 4) / 2; }\r\n\t\tn -= 2;\r\n\t\treturn -1 / 2 * (Math.pow(n, 4) - 2);\r\n\t},\r\n\r\n\tquintIn: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n, 5);\r\n\t},\r\n\r\n\tquintOut: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n - 1, 5) + 1;\r\n\t},\r\n\r\n\tquintInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(n, 5) / 2; }\r\n\t\tn -= 2;\r\n\t\treturn (Math.pow(n, 5) + 2) / 2;\r\n\t},\r\n\r\n\tsineIn: function(/* Decimal? */n){\r\n\t\treturn -1 * Math.cos(n * (Math.PI / 2)) + 1;\r\n\t},\r\n\r\n\tsineOut: function(/* Decimal? */n){\r\n\t\treturn Math.sin(n * (Math.PI / 2));\r\n\t},\r\n\r\n\tsineInOut: function(/* Decimal? */n){\r\n\t\treturn -1 * (Math.cos(Math.PI * n) - 1) / 2;\r\n\t},\r\n\r\n\texpoIn: function(/* Decimal? */n){\r\n\t\treturn (n == 0) ? 0 : Math.pow(2, 10 * (n - 1));\r\n\t},\r\n\r\n\texpoOut: function(/* Decimal? */n){\r\n\t\treturn (n == 1) ? 1 : (-1 * Math.pow(2, -10 * n) + 1);\r\n\t},\r\n\r\n\texpoInOut: function(/* Decimal? */n){\r\n\t\tif(n == 0){ return 0; }\r\n\t\tif(n == 1){ return 1; }\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(2, 10 * (n - 1)) / 2; }\r\n\t\t--n;\r\n\t\treturn (-1 * Math.pow(2, -10 * n) + 2) / 2;\r\n\t},\r\n\r\n\tcircIn: function(/* Decimal? */n){\r\n\t\treturn -1 * (Math.sqrt(1 - Math.pow(n, 2)) - 1);\r\n\t},\r\n\r\n\tcircOut: function(/* Decimal? */n){\r\n\t\tn = n - 1;\r\n\t\treturn Math.sqrt(1 - Math.pow(n, 2));\r\n\t},\r\n\r\n\tcircInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return -1 / 2 * (Math.sqrt(1 - Math.pow(n, 2)) - 1); }\r\n\t\tn -= 2;\r\n\t\treturn 1 / 2 * (Math.sqrt(1 - Math.pow(n, 2)) + 1);\r\n\t},\r\n\r\n\tbackIn: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that starts away from the target,\r\n\t\t//\t\tand quickly accelerates towards the end value.\r\n\t\t//\r\n\t\t//\t\tUse caution when the easing will cause values to become\r\n\t\t//\t\tnegative as some properties cannot be set to negative values.\r\n\t\tvar s = 1.70158;\r\n\t\treturn Math.pow(n, 2) * ((s + 1) * n - s);\r\n\t},\r\n\r\n\tbackOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that pops past the range briefly, and slowly comes back.\r\n\t\t// description:\r\n\t\t//\t\tAn easing function that pops past the range briefly, and slowly comes back.\r\n\t\t//\r\n\t\t//\t\tUse caution when the easing will cause values to become negative as some\r\n\t\t//\t\tproperties cannot be set to negative values.\r\n\r\n\t\tn = n - 1;\r\n\t\tvar s = 1.70158;\r\n\t\treturn Math.pow(n, 2) * ((s + 1) * n + s) + 1;\r\n\t},\r\n\r\n\tbackInOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function combining the effects of `backIn` and `backOut`\r\n\t\t// description:\r\n\t\t//\t\tAn easing function combining the effects of `backIn` and `backOut`.\r\n\t\t//\t\tUse caution when the easing will cause values to become negative\r\n\t\t//\t\tas some properties cannot be set to negative values.\r\n\t\tvar s = 1.70158 * 1.525;\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return (Math.pow(n, 2) * ((s + 1) * n - s)) / 2; }\r\n\t\tn-=2;\r\n\t\treturn (Math.pow(n, 2) * ((s + 1) * n + s) + 2) / 2;\r\n\t},\r\n\r\n\telasticIn: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function the elastically snaps from the start value\r\n\t\t// description:\r\n\t\t//\t\tAn easing function the elastically snaps from the start value\r\n\t\t//\r\n\t\t//\t\tUse caution when the elasticity will cause values to become negative\r\n\t\t//\t\tas some properties cannot be set to negative values.\r\n\t\tif(n == 0 || n == 1){ return n; }\r\n\t\tvar p = .3;\r\n\t\tvar s = p / 4;\r\n\t\tn = n - 1;\r\n\t\treturn -1 * Math.pow(2, 10 * n) * Math.sin((n - s) * (2 * Math.PI) / p);\r\n\t},\r\n\r\n\telasticOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that elasticly snaps around the target value,\r\n\t\t//\t\tnear the end of the Animation\r\n\t\t// description:\r\n\t\t//\t\tAn easing function that elasticly snaps around the target value,\r\n\t\t//\t\tnear the end of the Animation\r\n\t\t//\r\n\t\t//\t\tUse caution when the elasticity will cause values to become\r\n\t\t//\t\tnegative as some properties cannot be set to negative values.\r\n\t\tif(n==0 || n == 1){ return n; }\r\n\t\tvar p = .3;\r\n\t\tvar s = p / 4;\r\n\t\treturn Math.pow(2, -10 * n) * Math.sin((n - s) * (2 * Math.PI) / p) + 1;\r\n\t},\r\n\r\n\telasticInOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that elasticly snaps around the value, near\r\n\t\t//\t\tthe beginning and end of the Animation.\r\n\t\t// description:\r\n\t\t//\t\tAn easing function that elasticly snaps around the value, near\r\n\t\t//\t\tthe beginning and end of the Animation.\r\n\t\t//\r\n\t\t//\t\tUse caution when the elasticity will cause values to become\r\n\t\t//\t\tnegative as some properties cannot be set to negative values.\r\n\t\tif(n == 0) return 0;\r\n\t\tn = n * 2;\r\n\t\tif(n == 2) return 1;\r\n\t\tvar p = .3 * 1.5;\r\n\t\tvar s = p / 4;\r\n\t\tif(n < 1){\r\n\t\t\tn -= 1;\r\n\t\t\treturn -.5 * (Math.pow(2, 10 * n) * Math.sin((n - s) * (2 * Math.PI) / p));\r\n\t\t}\r\n\t\tn -= 1;\r\n\t\treturn .5 * (Math.pow(2, -10 * n) * Math.sin((n - s) * (2 * Math.PI) / p)) + 1;\r\n\t},\r\n\r\n\tbounceIn: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that 'bounces' near the beginning of an Animation\r\n\t\treturn (1 - easingFuncs.bounceOut(1 - n)); // Decimal\r\n\t},\r\n\r\n\tbounceOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that 'bounces' near the end of an Animation\r\n\t\tvar s = 7.5625;\r\n\t\tvar p = 2.75;\r\n\t\tvar l;\r\n\t\tif(n < (1 / p)){\r\n\t\t\tl = s * Math.pow(n, 2);\r\n\t\t}else if(n < (2 / p)){\r\n\t\t\tn -= (1.5 / p);\r\n\t\t\tl = s * Math.pow(n, 2) + .75;\r\n\t\t}else if(n < (2.5 / p)){\r\n\t\t\tn -= (2.25 / p);\r\n\t\t\tl = s * Math.pow(n, 2) + .9375;\r\n\t\t}else{\r\n\t\t\tn -= (2.625 / p);\r\n\t\t\tl = s * Math.pow(n, 2) + .984375;\r\n\t\t}\r\n\t\treturn l;\r\n\t},\r\n\r\n\tbounceInOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that 'bounces' at the beginning and end of the Animation\r\n\t\tif(n < 0.5){ return easingFuncs.bounceIn(n * 2) / 2; }\r\n\t\treturn (easingFuncs.bounceOut(n * 2 - 1) / 2) + 0.5; // Decimal\r\n\t}\r\n};\r\n\r\nlang.setObject(\"dojo.fx.easing\", easingFuncs);\r\n\r\nreturn easingFuncs;\r\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ }),\n\n/***/ 323:\n/*!******************************************!*\\\n  !*** ../dojox/charting/themes/common.js ***!\n  \\******************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ 0)], __WEBPACK_AMD_DEFINE_RESULT__ = function(lang){\n\treturn lang.getObject(\"dojox.charting.themes\", true);\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.bundle.js","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/has\",\n\t\t\"./CartesianBase\", \"./_PlotEvents\", \"./common\", \"dojox/lang/functional\", \"dojox/lang/functional/reversed\", \"dojox/lang/utils\", \"dojox/gfx/fx\"],\n\tfunction(lang, declare, arr, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__DefaultCtorArgs\", dojox.charting.plot2d.__CartesianCtorArgs, {\n\t\t// summary:\n\t\t//\t\tThe arguments used for any/most plots.\n\n\t\t// lines: Boolean?\n\t\t//\t\tWhether or not to draw lines on this plot.  Defaults to true.\n\t\tlines:   true,\n\n\t\t// areas: Boolean?\n\t\t//\t\tWhether or not to draw areas on this plot. Defaults to false.\n\t\tareas:   false,\n\n\t\t// markers: Boolean?\n\t\t//\t\tWhether or not to draw markers at data points on this plot. Default is false.\n\t\tmarkers: false,\n\n\t\t// tension: Number|String?\n\t\t//\t\tWhether or not to apply 'tensioning' to the lines on this chart.\n\t\t//\t\tOptions include a number, \"X\", \"x\", or \"S\"; if a number is used, the\n\t\t//\t\tsimpler bezier curve calculations are used to draw the lines.  If X, x or S\n\t\t//\t\tis used, the more accurate smoothing algorithm is used.\n\t\ttension: \"\",\n\n\t\t// animate: Boolean?|Number?\n\t\t//\t\tWhether or not to animate the chart to place. When a Number it specifies the duration of the animation.\n\t\t//\t\tDefault is false.\n\t\tanimate: false,\n\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use for any series on the plot.\n\t\tstroke:\t\t{},\n\n\t\t// outline: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke used to outline any series on the plot.\n\t\toutline:\t{},\n\n\t\t// shadow: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use to draw any shadows for a series on a plot.\n\t\tshadow:\t\t{},\n\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tAny fill to be used for elements on the plot (such as areas).\n\t\tfill:\t\t{},\n\n\t\t// filter: dojox.gfx.Filter?\n\t\t//\t\tAn SVG filter to be used for elements on the plot. gfx SVG renderer must be used and dojox/gfx/svgext must\n\t\t//\t\tbe required for this to work.\n\t\tfilter:\t\t{},\n\n\t\t// styleFunc: Function?\n\t\t//\t\tA function that returns a styling object for the a given data item.\n\t\tstyleFunc:\tnull,\n\n\t\t// font: String?\n\t\t//\t\tA font definition to be used for labels and other text-based elements on the plot.\n\t\tfont:\t\t\"\",\n\n\t\t// fontColor: String|dojo.Color?\n\t\t//\t\tThe color to be used for any text-based elements on the plot.\n\t\tfontColor:\t\"\",\n\n\t\t// markerStroke: dojo.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use for any markers on the plot.\n\t\tmarkerStroke:\t\t{},\n\n\t\t// markerOutline: dojo.gfx.Stroke?\n\t\t//\t\tAn optional outline to use for any markers on the plot.\n\t\tmarkerOutline:\t\t{},\n\n\t\t// markerShadow: dojo.gfx.Stroke?\n\t\t//\t\tAn optional shadow to use for any markers on the plot.\n\t\tmarkerShadow:\t\t{},\n\n\t\t// markerFill: dojo.gfx.Fill?\n\t\t//\t\tAn optional fill to use for any markers on the plot.\n\t\tmarkerFill:\t\t\t{},\n\n\t\t// markerFont: String?\n\t\t//\t\tAn optional font definition to use for any markers on the plot.\n\t\tmarkerFont:\t\t\t\"\",\n\n\t\t// markerFontColor: String|dojo.Color?\n\t\t//\t\tAn optional color to use for any marker text on the plot.\n\t\tmarkerFontColor:\t\"\",\n\n\t\t// enableCache: Boolean?\n\t\t//\t\tWhether the markers are cached from one rendering to another. This improves the rendering performance of\n\t\t//\t\tsuccessive rendering but penalize the first rendering.  Default false.\n\t\tenableCache: false,\n\n\t\t// interpolate: Boolean?\n\t\t//\t\tWhether when there is a null data point in the data the plot interpolates it or if the lines is split at that\n\t\t//\t\tpoint.\tDefault false.\n\t\tinterpolate: false,\n\n\t\t// zeroLine: Number?\n\t\t//\t\tZero line for an area fill. Should be a numeric value in user coordinates.\n\t\t//\t\tDefault: the lowest value on a vertical axis.\n\t\tzeroLine: 0\n\t});\n=====*/\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\tvar DEFAULT_ANIMATION_LENGTH = 1200;\t// in ms\n\n\treturn declare(\"dojox.charting.plot2d.Default\", [CartesianBase, _PlotEvents], {\n\n\t\t// defaultParams:\n\t\t//\t\tThe default parameters of this plot.\n\t\tdefaultParams: {\n\t\t\tlines:   true,\t// draw lines\n\t\t\tareas:   false,\t// draw areas\n\t\t\tmarkers: false,\t// draw markers\n\t\t\ttension: \"\",\t// draw curved lines (tension is \"X\", \"x\", or \"S\")\n\t\t\tanimate: false, // animate chart to place\n\t\t\tenableCache: false,\n\t\t\tinterpolate: false\n\t\t},\n\n\t\t// optionalParams:\n\t\t//\t\tThe optional parameters of this plot.\n\t\toptionalParams: {\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:     {},\n\t\t\tstyleFunc: null,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\",\n\t\t\tmarker:             \"\",\n\t\t\tmarkerStroke:\t\t{},\n\t\t\tmarkerOutline:\t\t{},\n\t\t\tmarkerShadow:\t\t{},\n\t\t\tmarkerFill:\t\t\t{},\n\t\t\tmarkerFont:\t\t\t\"\",\n\t\t\tmarkerFontColor:\t\"\",\n\t\t\tzeroLine:           0\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tReturn a new plot.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\n\t\t\t//\t\tAn optional arguments object to help define this plot.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\t// animation properties\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\tcreatePath: function(run, creator, params){\n\t\t\tvar path;\n\t\t\tif(this.opt.enableCache && run._pathFreePool.length > 0){\n\t\t\t\tpath = run._pathFreePool.pop();\n\t\t\t\tpath.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(path);\n\t\t\t}else{\n\t\t\t\tpath = creator.createPath(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\trun._pathUsePool.push(path);\n\t\t\t}\n\t\t\treturn path;\n\t\t},\n\n\t\tbuildSegments: function(i, indexed){\n\t\t\tvar run = this.series[i],\n\t\t\t\tmin = indexed?Math.max(0, Math.floor(this._hScaler.bounds.from - 1)):0,\n\t\t\t\tmax = indexed?Math.min(run.data.length, Math.ceil(this._hScaler.bounds.to)):run.data.length,\n\t\t\t\trseg = null, segments = [];\n\n\t\t\t// split the run data into dense segments (each containing no nulls)\n\t\t\t// except if interpolates is false in which case ignore null between valid data\n\t\t\tfor(var j = min; j < max; j++){\n\t\t\t\tif(!this.isNullValue(run.data[j])){\n\t\t\t\t\tif(!rseg){\n\t\t\t\t\t\trseg = [];\n\t\t\t\t\t\tsegments.push({index: j, rseg: rseg});\n\t\t\t\t\t}\n\t\t\t\t\trseg.push((indexed && run.data[j].hasOwnProperty(\"y\"))?run.data[j].y:run.data[j]);\n\t\t\t\t}else{\n\t\t\t\t\tif(!this.opt.interpolate || indexed){\n\t\t\t\t\t\t// we break the line only if not interpolating or if we have indexed data\n\t\t\t\t\t\trseg = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn segments;\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender/draw everything on this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }\n\t\t\t// returns: dojox/charting/plot2d/Default\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\n\t\t\t// make sure all the series is not modified\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\tthis.getGroup().setTransform(null);\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme, stroke, outline, events = this.events();\n\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(this.opt.enableCache){\n\t\t\t\t\trun._pathFreePool = (run._pathFreePool?run._pathFreePool:[]).concat(run._pathUsePool?run._pathUsePool:[]);\n\t\t\t\t\trun._pathUsePool = [];\n\t\t\t\t}\n\t\t\t\tif(!run.data.length){\n\t\t\t\t\trun.dirty = false;\n\t\t\t\t\tt.skip();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar theme = t.next(this.opt.areas ? \"area\" : \"line\", [this.opt, run], true),\n\t\t\t\t\tlpoly,\n\t\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\t\teventSeries = this._eventSeries[run.name] = new Array(run.data.length);\n\n\t\t\t\ts = run.group;\n\t\t\t\tif(run.hidden){\n\t\t\t\t\tif(this.opt.lines){\n\t\t\t\t\t\trun.dyn.stroke = theme.series.stroke;\n\t\t\t\t\t}\n\t\t\t\t\tif (run.markers || (run.markers === undefined && this.opt.markers)) {\n\t\t\t\t\t\trun.dyn.markerFill = theme.marker.fill;\n\t\t\t\t\t\trun.dyn.markerStroke = theme.marker.stroke;\n\t\t\t\t\t\trun.dyn.marker = theme.symbol;\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.areas){\n\t\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// optim works only for index based case\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t});\n\n\t\t\t\tvar rsegments = this.buildSegments(i, indexed);\n\t\t\t\tfor(var seg = 0; seg < rsegments.length; seg++){\n\t\t\t\t\tvar rsegment = rsegments[seg];\n\t\t\t\t\tif(indexed){\n\t\t\t\t\t\tlpoly = arr.map(rsegment.rseg, function(v, i){\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: ht(i + rsegment.index + 1) + offsets.l,\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v),\n\t\t\t\t\t\t\t\tdata: v\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlpoly = arr.map(rsegment.rseg, function(v){\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: ht(v.x) + offsets.l,\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v.y),\n\t\t\t\t\t\t\t\tdata: v\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t}\n\n\t\t\t\t\t// if we are indexed & we interpolate we need to put all the segments as a single one now\n\t\t\t\t\tif(indexed && this.opt.interpolate){\n\t\t\t\t\t\twhile(seg < rsegments.length) {\n\t\t\t\t\t\t\tseg++;\n\t\t\t\t\t\t\trsegment = rsegments[seg];\n\t\t\t\t\t\t\tif(rsegment){\n\t\t\t\t\t\t\t\tlpoly = lpoly.concat(arr.map(rsegment.rseg, function(v, i){\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tx: ht(i + rsegment.index + 1) + offsets.l,\n\t\t\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v),\n\t\t\t\t\t\t\t\t\t\tdata: v\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}, this));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar lpath = this.opt.tension ? dc.curve(lpoly, this.opt.tension) : \"\";\n\n\t\t\t\t\tif(this.opt.areas && lpoly.length > 1){\n\t\t\t\t\t\tvar fill = this._plotFill(theme.series.fill, dim, offsets), apoly = lang.clone(lpoly),\n\t\t\t\t\t\t\tzeroLine = dim.height - offsets.b;\n\t\t\t\t\t\tif(!isNaN(this.opt.zeroLine)){\n\t\t\t\t\t\t\tzeroLine = Math.max(offsets.t, Math.min(dim.height - offsets.b - vt(this.opt.zeroLine), zeroLine));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.opt.tension){\n\t\t\t\t\t\t\tvar apath = \"L\" + apoly[apoly.length-1].x + \",\" + zeroLine +\n\t\t\t\t\t\t\t\t\" L\" + apoly[0].x + \",\" + zeroLine +\n\t\t\t\t\t\t\t\t\" L\" + apoly[0].x + \",\" + apoly[0].y;\n\t\t\t\t\t\t\trun.dyn.fill = s.createPath(lpath + \" \" + apath).setFill(fill).getFill();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapoly.push({x: lpoly[lpoly.length - 1].x, y: zeroLine});\n\t\t\t\t\t\t\tapoly.push({x: lpoly[0].x, y: zeroLine});\n\t\t\t\t\t\t\tapoly.push(lpoly[0]);\n\t\t\t\t\t\t\trun.dyn.fill = s.createPolyline(apoly).setFill(fill).getFill();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.lines || this.opt.markers){\n\t\t\t\t\t\t// need a stroke\n\t\t\t\t\t\tstroke = theme.series.stroke;\n\t\t\t\t\t\tif(theme.series.outline){\n\t\t\t\t\t\t\toutline = run.dyn.outline = dc.makeStroke(theme.series.outline);\n\t\t\t\t\t\t\toutline.width = 2 * outline.width + (stroke && stroke.width || 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.markers){\n\t\t\t\t\t\trun.dyn.marker = theme.symbol;\n\t\t\t\t\t}\n\t\t\t\t\tvar frontMarkers = null, outlineMarkers = null, shadowMarkers = null;\n\t\t\t\t\tif(stroke && theme.series.shadow && lpoly.length > 1){\n\t\t\t\t\t\tvar shadow = theme.series.shadow,\n\t\t\t\t\t\t\tspoly = arr.map(lpoly, function(c){\n\t\t\t\t\t\t\t\treturn {x: c.x + shadow.dx, y: c.y + shadow.dy};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tif(this.opt.lines){\n\t\t\t\t\t\t\tif(this.opt.tension){\n\t\t\t\t\t\t\t\trun.dyn.shadow = s.createPath(dc.curve(spoly, this.opt.tension)).setStroke(shadow).getStroke();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\trun.dyn.shadow = s.createPolyline(spoly).setStroke(shadow).getStroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.opt.markers && theme.marker.shadow){\n\t\t\t\t\t\t\tshadow = theme.marker.shadow;\n\t\t\t\t\t\t\tshadowMarkers = arr.map(spoly, function(c){\n\t\t\t\t\t\t\t\treturn this.createPath(run, s, \"M\" + c.x + \" \" + c.y + \" \" + theme.symbol).\n\t\t\t\t\t\t\t\t\tsetStroke(shadow).setFill(shadow.color);\n\t\t\t\t\t\t\t}, this);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.lines && lpoly.length > 1){\n\t\t\t\t\t\tvar shape;\n\t\t\t\t\t\tif(outline){\n\t\t\t\t\t\t\tif(this.opt.tension){\n\t\t\t\t\t\t\t\trun.dyn.outline = s.createPath(lpath).setStroke(outline).getStroke();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\trun.dyn.outline = s.createPolyline(lpoly).setStroke(outline).getStroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.opt.tension){\n\t\t\t\t\t\t\trun.dyn.stroke = (shape = s.createPath(lpath)).setStroke(stroke).getStroke();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trun.dyn.stroke = (shape = s.createPolyline(lpoly)).setStroke(stroke).getStroke();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(shape.setFilter && theme.series.filter){\n\t\t\t\t\t\t\tshape.setFilter(theme.series.filter);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar markerBox = null;\n\t\t\t\t\tif(this.opt.markers){\n\t\t\t\t\t\tvar markerTheme = theme;\n\t\t\t\t\t\tfrontMarkers = new Array(lpoly.length);\n\t\t\t\t\t\toutlineMarkers = new Array(lpoly.length);\n\t\t\t\t\t\toutline = null;\n\t\t\t\t\t\tif(markerTheme.marker.outline){\n\t\t\t\t\t\t\toutline = dc.makeStroke(markerTheme.marker.outline);\n\t\t\t\t\t\t\toutline.width = 2 * outline.width + (markerTheme.marker.stroke ? markerTheme.marker.stroke.width : 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tarr.forEach(lpoly, function(c, i){\n\t\t\t\t\t\t\tif(this.opt.styleFunc || typeof c.data != \"number\"){\n\t\t\t\t\t\t\t\tvar tMixin = typeof c.data != \"number\" ? [c.data] : [];\n\t\t\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(c.data));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmarkerTheme = t.addMixin(theme, \"marker\", tMixin, true);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tmarkerTheme = t.post(theme, \"marker\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar path = \"M\" + c.x + \" \" + c.y + \" \" + markerTheme.symbol;\n\t\t\t\t\t\t\tif(outline){\n\t\t\t\t\t\t\t\toutlineMarkers[i] = this.createPath(run, s, path).setStroke(outline);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfrontMarkers[i] = this.createPath(run, s, path).setStroke(markerTheme.marker.stroke).setFill(markerTheme.marker.fill);\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t\trun.dyn.markerFill = markerTheme.marker.fill;\n\t\t\t\t\t\trun.dyn.markerStroke = markerTheme.marker.stroke;\n\t\t\t\t\t\tif(!markerBox && this.opt.labels){\n\t\t\t\t\t\t\tmarkerBox = frontMarkers[0].getBoundingBox();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\tarr.forEach(frontMarkers, function(s, i){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"marker\",\n\t\t\t\t\t\t\t\t\tindex:   i + rsegment.index,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:   s,\n\t\t\t\t\t\t\t\t\toutline: outlineMarkers[i] || null,\n\t\t\t\t\t\t\t\t\tshadow:  shadowMarkers && shadowMarkers[i] || null,\n\t\t\t\t\t\t\t\t\tcx:      lpoly[i].x,\n\t\t\t\t\t\t\t\t\tcy:      lpoly[i].y\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tif(indexed){\n\t\t\t\t\t\t\t\t\to.x = i + rsegment.index + 1;\n\t\t\t\t\t\t\t\t\to.y = run.data[i + rsegment.index];\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\to.x = rsegment.rseg[i].x;\n\t\t\t\t\t\t\t\t\to.y = run.data[i + rsegment.index].y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[i + rsegment.index] = o;\n\t\t\t\t\t\t\t}, this);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tdelete this._eventSeries[run.name];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.labels){\n\t\t\t\t\t\tvar labelBoxW = markerBox?markerBox.width:2;\n\t\t\t\t\t\tvar labelBoxH = markerBox?markerBox.height:2;\n\t\t\t\t\t\tarr.forEach(lpoly, function(c, i){\n\t\t\t\t\t\t\tif(this.opt.styleFunc || typeof c.data != \"number\"){\n\t\t\t\t\t\t\t\tvar tMixin = typeof c.data != \"number\" ? [c.data] : [];\n\t\t\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(c.data));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmarkerTheme = t.addMixin(theme, \"marker\", tMixin, true);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tmarkerTheme = t.post(theme, \"marker\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.createLabel(s, rsegment.rseg[i], { x: c.x - labelBoxW / 2, y: c.y - labelBoxH / 2,\n\t\t\t\t\t\t\t\twidth: labelBoxW , height: labelBoxH }, markerTheme);\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\tif(this.animate){\n\t\t\t\t// grow from the bottom\n\t\t\t\tvar plotGroup = this.getGroup();\n\t\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\t\tshape: plotGroup,\n\t\t\t\t\tduration: DEFAULT_ANIMATION_LENGTH,\n\t\t\t\t\ttransform:[\n\t\t\t\t\t\t{name:\"translate\", start: [0, dim.height - offsets.b], end: [0, 0]},\n\t\t\t\t\t\t{name:\"scale\", start: [1, 0], end:[1, 1]},\n\t\t\t\t\t\t{name:\"original\"}\n\t\t\t\t\t]\n\t\t\t\t}, this.animate)).play();\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Default\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Default.js\n// module id = 225\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/sniff\", \"dojo/_base/declare\",\n\t\"dojo/_base/connect\", \"dojo/dom-geometry\", \"./Invisible\",\n\t\"../scaler/linear\", \"./common\", \"dojox/gfx\", \"dojox/lang/utils\", \"dojox/lang/functional\",\n\t\"dojo/has!dojo-bidi?../bidi/axis2d/Default\"],\n\tfunction(lang, arr, has, declare, connect, domGeom, Invisible,\n\t\t\tlin, acommon, g, du, df, BidiDefault){\n\n\t/*=====\n\tvar __AxisCtorArgs = {\n\t\t// summary:\n\t\t//\t\tOptional arguments used in the definition of an axis.\n\t\t// vertical: Boolean?\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\n\t\t// fixUpper: String?\n\t\t//\t\tAlign the greatest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\n\t\t// fixLower: String?\n\t\t//\t\tAlign the smallest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\n\t\t// natural: Boolean?\n\t\t//\t\tEnsure tick marks are made on \"natural\" numbers. Defaults to false.\n\t\t// leftBottom: Boolean?\n\t\t//\t\tDeprecated: use position instead. The position of a vertical axis; if true, will be placed against the left-bottom corner of the chart.  Defaults to true.\n\t\t// includeZero: Boolean?\n\t\t//\t\tInclude 0 on the axis rendering.  Default is false.\n\t\t// fixed: Boolean?\n\t\t//\t\tForce all axis labels to be fixed numbers.  Default is true.\n\t\t// majorLabels: Boolean?\n\t\t//\t\tFlag to draw labels at major ticks. Default is true.\n\t\t// minorTicks: Boolean?\n\t\t//\t\tFlag to draw minor ticks on an axis.  Default is true.\n\t\t// minorLabels: Boolean?\n\t\t//\t\tFlag to labels on minor ticks when there is enough space. Default is true.\n\t\t// microTicks: Boolean?\n\t\t//\t\tFlag to draw micro ticks on an axis. Default is false.\n\t\t// htmlLabels: Boolean?\n\t\t//\t\tFlag to use HTML (as opposed to the native vector graphics engine) to draw labels. Default is true.\n\t\t// min: Number?\n\t\t//\t\tThe smallest value on an axis. Default is 0.\n\t\t// max: Number?\n\t\t//\t\tThe largest value on an axis. Default is 1.\n\t\t// from: Number?\n\t\t//\t\tForce the chart to render data visible from this value. Default is 0.\n\t\t// to: Number?\n\t\t//\t\tForce the chart to render data visible to this value. Default is 1.\n\t\t// majorTickStep: Number?\n\t\t//\t\tThe amount to skip before a major tick is drawn. When not set the major ticks step is computed from\n\t\t//\t\tthe data range.\n\t\t// minorTickStep: Number?\n\t\t//\t\tThe amount to skip before a minor tick is drawn. When not set the minor ticks step is computed from\n\t\t//\t\tthe data range.\n\t\t// microTickStep: Number?\n\t\t//\t\tThe amount to skip before a micro tick is drawn. When not set the micro ticks step is computed from\n\t\t// labels: Object[]?\n\t\t//\t\tAn array of labels for major ticks, with corresponding numeric values, ordered by value.\n\t\t// labelFunc: Function?\n\t\t//\t\tAn optional function to use to compute label text. It takes precedence over\n\t\t//\t\tthe default text when available. The function must be of the following form:\n\t\t//\t|\t\tfunction labelFunc(text, value, precision) {}\n\t\t//\t\t`text` is the already pre-formatted text. Pre-formatting is done using `dojo/number` is available, `Date.toFixed` otherwise.\n\t\t//\t\t`value`  is the raw axis value.\n\t\t//\t\t`precision` is the requested precision to be applied.\n\t\t// maxLabelSize: Number?\n\t\t//\t\tThe maximum size, in pixels, for a label.  To be used with the optional label function.\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to be used for drawing an axis.\n\t\t// majorTick: Object?\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a major tick.\n\t\t// minorTick: Object?\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a minor tick.\n\t\t// microTick: Object?\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a micro tick.\n\t\t// tick: Object?\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a tick.\n\t\t// font: String?\n\t\t//\t\tAn optional font definition (as used in the CSS font property) for labels.\n\t\t// fontColor: String|dojo.Color?\n\t\t//\t\tAn optional color to be used in drawing labels.\n\t\t// titleGap: Number?\n\t\t//\t\tAn optional grap between axis title and axis label\n\t\t// titleFont: String?\n\t\t//\t\tAn optional font definition for axis title\n\t\t// titleFontColor: String?\n\t\t//\t\tAn optional axis title color\n\t\t// titleOrientation: String?\n\t\t//\t\tAn optional orientation for axis title. \"axis\" means the title facing the axis, \"away\" means facing away.\n\t\t//\t\tIf no value is set \"axis\" is used.\n\t\t// enableCache: Boolean?\n\t\t//\t\tWhether the ticks and labels are cached from one rendering to another. This improves the rendering performance of\n\t\t//\t\tsuccessive rendering but penalize the first rendering. For labels it is only working with gfx labels\n\t\t//\t\tnot html ones.  Default false.\n\t\t// dropLabels: Boolean?\n\t\t//\t\tWhether the axis automatically drops labels at regular interval or not to avoid labels overlapping.\n\t\t//\t\tThis gives better results but require more computations.  You can disable it to save computation\n\t\t//\t\ttime when you know your labels won't overlap. Default is true.\n\t\t// labelSizeChange: Boolean?\n\t\t//\t\tIndicates to the axis whether the axis labels are changing their size on zoom. If false this allows to\n\t\t//\t\toptimize the axis by avoiding recomputing labels maximum size on zoom actions. Default is false.\n\t\t// position: String?\n\t\t//\t\tThe position of the axis. Values: \"leftOrBottom\", \"center\" or \"rightOrTop\". Default is \"leftOrBottom\".\n\t};\n\t=====*/\n\n\tvar centerAnchorLimit = 45;\t// in degrees\n\n\tvar Default = declare(has(\"dojo-bidi\")? \"dojox.charting.axis2d.NonBidiDefault\" : \"dojox.charting.axis2d.Default\", Invisible, {\n\t\t// summary:\n\t\t//\t\tThe default axis object used in dojox.charting.  See dojox.charting.Chart.addAxis for details.\n\n\t\t// defaultParams: Object\n\t\t//\t\tThe default parameters used to define any axis.\n\t\t// optionalParams: Object\n\t\t//\t\tAny optional parameters needed to define an axis.\n\n\t\t/*=====\n\t\t// TODO: the documentation tools need these to be pre-defined in order to pick them up\n\t\t//\tcorrectly, but the code here is partially predicated on whether or not the properties\n\t\t//\tactually exist.  For now, we will leave these undocumented but in the code for later. -- TRT\n\n\t\t// opt: Object\n\t\t//\t\tThe actual options used to define this axis, created at initialization.\n\t\t// scaler: Object\n\t\t//\t\tThe calculated helper object to tell charts how to draw an axis and any data.\n\t\t// ticks: Object\n\t\t//\t\tThe calculated tick object that helps a chart draw the scaling on an axis.\n\t\t// dirty: Boolean\n\t\t//\t\tThe state of the axis (whether it needs to be redrawn or not)\n\t\t// scale: Number\n\t\t//\t\tThe current scale of the axis.\n\t\t// offset: Number\n\t\t//\t\tThe current offset of the axis.\n\n\t\topt: null,\n\t\tscaler: null,\n\t\tticks: null,\n\t\tdirty: true,\n\t\tscale: 1,\n\t\toffset: 0,\n\t\t=====*/\n\t\tdefaultParams: {\n\t\t\tvertical:\tfalse,\t\t// true for vertical axis\n\t\t\tfixUpper:\t\"none\",\t// align the upper on ticks: \"major\", \"minor\", \"micro\", \"none\"\n\t\t\tfixLower:\t\"none\",\t// align the lower on ticks: \"major\", \"minor\", \"micro\", \"none\"\n\t\t\tnatural:\t false,\t\t// all tick marks should be made on natural numbers\n\t\t\tleftBottom:  true,\t\t// position of the axis, used with \"vertical\" - deprecated: use position instead\n\t\t\tincludeZero: false,\t\t// 0 should be included\n\t\t\tfixed:\t   true,\t\t// all labels are fixed numbers\n\t\t\tmajorLabels: true,\t\t// draw major labels\n\t\t\tminorTicks:  true,\t\t// draw minor ticks\n\t\t\tminorLabels: true,\t\t// draw minor labels\n\t\t\tmicroTicks:  false,\t\t// draw micro ticks\n\t\t\trotation:\t0,\t\t\t// label rotation angle in degrees\n\t\t\thtmlLabels:  true,\t\t// use HTML to draw labels\n\t\t\tenableCache: false,\t\t// whether we cache or not\n\t\t\tdropLabels: true,\t\t// whether we automatically drop overlapping labels or not\n\t\t\tlabelSizeChange: false, // whether the labels size change on zoom\n\t\t\tposition: \"leftOrBottom\" // position of the axis: \"leftOrBottom\" (default), \"center\" or \"rightOrTop\"\n\t\t},\n\t\toptionalParams: {\n\t\t\tmin:\t\t\t0,\t// minimal value on this axis\n\t\t\tmax:\t\t\t1,\t// maximal value on this axis\n\t\t\tfrom:\t\t\t0,\t// visible from this value\n\t\t\tto:\t\t\t\t1,\t// visible to this value\n\t\t\tmajorTickStep:\t4,\t// major tick step\n\t\t\tminorTickStep:\t2,\t// minor tick step\n\t\t\tmicroTickStep:\t1,\t// micro tick step\n\t\t\tlabels:\t\t\t[],\t// array of labels for major ticks\n\t\t\t// with corresponding numeric values\n\t\t\t// ordered by values\n\t\t\tlabelFunc:\t\tnull, // function to compute label values\n\t\t\tmaxLabelSize:\t0,\t// size in px. For use with labelFunc\n\t\t\tmaxLabelCharCount:\t0,\t// size in word count.\n\t\t\ttrailingSymbol:\tnull,\n\n\t\t\t// TODO: add support for minRange!\n\t\t\t// minRange:\t\t1,\t// smallest distance from min allowed on the axis\n\n\t\t\t// theme components\n\t\t\tstroke:\t\t\t{},\t// stroke for an axis\n\t\t\tmajorTick:\t\t{},\t// stroke + length for a tick\n\t\t\tminorTick:\t\t{},\t// stroke + length for a tick\n\t\t\tmicroTick:\t\t{},\t// stroke + length for a tick\n\t\t\ttick:\t\t   {},\t// stroke + length for a tick\n\t\t\tfont:\t\t\t\"\",\t// font for labels\n\t\t\tfontColor:\t\t\"\",\t// color for labels as a string\n\t\t\ttitle:\t\t\t\t \"\",\t// axis title\n\t\t\ttitleGap:\t\t\t 0,\t\t// gap between axis title and axis label\n\t\t\ttitleFont:\t\t\t \"\",\t\t// axis title font\n\t\t\ttitleFontColor:\t\t \"\",\t\t// axis title font color\n\t\t\ttitleOrientation:\t \"\"\t\t// \"axis\" means the title facing the axis, \"away\" means facing away\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for an axis.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart the axis belongs to.\n\t\t\t// kwArgs: __AxisCtorArgs?\n\t\t\t//\t\tAny optional keyword arguments to be used to define this axis.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._textFreePool = [];\n\t\t\t\tthis._lineFreePool = [];\n\t\t\t\tthis._textUsePool = [];\n\t\t\t\tthis._lineUsePool = [];\n\t\t\t}\n\t\t\tthis._invalidMaxLabelSize = true;\n\t\t\t// replace deprecated leftBotton to position\n\t\t\tif(!(kwArgs && ('position' in kwArgs))){\n\t\t\t    this.opt.position = this.opt.leftBottom ? \"leftOrBottom\" : \"rightOrTop\";\n\t\t\t}\t\t\t\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\n\t\t},\n\t\tsetWindow: function(scale, offset){\n\t\t\t// summary:\n\t\t\t//\t\tSet the drawing \"window\" for the axis.\n\t\t\t// scale: Number\n\t\t\t//\t\tThe new scale for the axis.\n\t\t\t// offset: Number\n\t\t\t//\t\tThe new offset for the axis.\n\t\t\t// returns: dojox/charting/axis2d/Default\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\tif(scale != this.scale){\n\t\t\t\t// if scale changed we need to recompute new max label size\n\t\t\t\tthis._invalidMaxLabelSize = true;\n\t\t\t}\n\t\t\treturn this.inherited(arguments);\n\t\t},\n\n\t\t_groupLabelWidth: function(labels, font, wcLimit){\n\t\t\tif(!labels.length){\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif(labels.length > 50){\n\t\t\t\t// let's avoid degenerated cases\n\t\t\t\tlabels.length = 50;\n\t\t\t}\n\t\t\tif(lang.isObject(labels[0])){\n\t\t\t\tlabels = df.map(labels, function(label){ return label.text; });\n\t\t\t}\n\t\t\tif(wcLimit){\n\t\t\t\tlabels = df.map(labels, function(label){\n\t\t\t\t\treturn lang.trim(label).length == 0 ? \"\" : label.substring(0, wcLimit) + this.trailingSymbol;\n\t\t\t\t}, this);\n\t\t\t}\n\t\t\tvar s = labels.join(\"<br>\");\n\t\t\treturn g._base._getTextBox(s, {font: font}).w || 0;\n\t\t},\n\n\t\t_getMaxLabelSize: function(min, max, span, rotation, font, size){\n\t\t\tif(this._maxLabelSize == null && arguments.length == 6){\n\t\t\t\tvar o = this.opt;\n\t\t\t\t// everything might have changed, reset the minMinorStep value\n\t\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep = 0;\n\t\t\t\tvar ob = lang.clone(o);\n\t\t\t\tdelete ob.to;\n\t\t\t\tdelete ob.from;\n\t\t\t\t// build all the ticks from min, to max not from to to _but_ using the step\n\t\t\t\t// that would be used if we where just displaying from to to from.\n\t\t\t\tvar sb = lin.buildScaler(min, max, span, ob, o.to - o.from);\n\t\t\t\tsb.minMinorStep = 0;\n\t\t\t\tthis._majorStart = sb.major.start;\n\t\t\t\t// we build all the ticks not only the ones we need to draw in order to get\n\t\t\t\t// a correct drop rate computation that works for any offset of this scale\n\t\t\t\tvar tb = lin.buildTicks(sb, o);\n\t\t\t\t// if there is not tick at all tb is null\n\t\t\t\tif(size && tb){\n\t\t\t\t\tvar majLabelW = 0, minLabelW = 0; // non rotated versions\n\t\t\t\t\t// we first collect all labels when needed\n\t\t\t\t\tvar tickLabelFunc = function(tick){\n\t\t\t\t\t\tif(tick.label){\n\t\t\t\t\t\t\tthis.push(tick.label);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tvar labels = [];\n\t\t\t\t\tif(this.opt.majorLabels){\n\t\t\t\t\t\tarr.forEach(tb.major, tickLabelFunc, labels);\n\t\t\t\t\t\tmajLabelW = this._groupLabelWidth(labels, font, ob.maxLabelCharCount);\n\t\t\t\t\t\tif(ob.maxLabelSize){\n\t\t\t\t\t\t\tmajLabelW = Math.min(ob.maxLabelSize, majLabelW);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// do the minor labels computation only if dropLabels is set\n\t\t\t\t\tlabels = [];\n\t\t\t\t\tif(this.opt.dropLabels && this.opt.minorLabels){\n\t\t\t\t\t\tarr.forEach(tb.minor, tickLabelFunc, labels);\n\t\t\t\t\t\tminLabelW = this._groupLabelWidth(labels, font, ob.maxLabelCharCount);\n\t\t\t\t\t\tif(ob.maxLabelSize){\n\t\t\t\t\t\t\tminLabelW = Math.min(ob.maxLabelSize, minLabelW);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._maxLabelSize = {\n\t\t\t\t\t\tmajLabelW: majLabelW, minLabelW: minLabelW,\n\t\t\t\t\t\tmajLabelH: size, minLabelH: size\n\t\t\t\t\t};\n\t\t\t\t}else{\n\t\t\t\t\tthis._maxLabelSize = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._maxLabelSize;\n\t\t},\n\n\t\tcalculate: function(min, max, span){\n\t\t\tthis.inherited(arguments);\n\t\t\t// when the scale has not changed there is no reason for minMinorStep to change\n\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep;\n\t\t\t// we want to recompute the dropping mechanism only when the scale or the size of the axis is changing\n\t\t\t// not when for example when we scroll (otherwise effect would be weird)\n\t\t\tif((this._invalidMaxLabelSize || span != this._oldSpan) && (min != Infinity && max != -Infinity)){\n\t\t\t\tthis._invalidMaxLabelSize = false;\n\t\t\t\tif(this.opt.labelSizeChange){\n\t\t\t\t\tthis._maxLabelSize = null;\n\t\t\t\t}\n\t\t\t\tthis._oldSpan = span;\n\t\t\t\tvar o = this.opt;\n\t\t\t\tvar ta = this.chart.theme.axis, rotation = o.rotation % 360,\n\t\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\n\t\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\n\t\t\t\t\tfont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font),\n\t\t\t\t\tsize = font ? g.normalizedLength(g.splitFontString(font).size) : 0,\n\t\t\t\t\t// even if we don't drop label we need to compute max size for offsets\n\t\t\t\t\tlabelW = this._getMaxLabelSize(min, max, span, rotation, font, size);\n\t\t\t\tif(typeof labelGap != \"number\"){\n\t\t\t\t\tlabelGap = 4; // in pixels\n\t\t\t\t}\n\t\t\t\tif(labelW && o.dropLabels){\n\t\t\t\t\tvar cosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\n\t\t\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180));\n\t\t\t\t\tvar majLabelW, minLabelW;\n\t\t\t\t\tif(rotation < 0){\n\t\t\t\t\t\trotation += 360;\n\t\t\t\t\t}\n\t\t\t\t\tswitch(rotation){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcase 180:\n\t\t\t\t\t\t\t// trivial cases: horizontal labels\n\t\t\t\t\t\t\tif(this.vertical){\n\t\t\t\t\t\t\t\tmajLabelW = minLabelW = size;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tmajLabelW = labelW.majLabelW;\n\t\t\t\t\t\t\t\tminLabelW = labelW.minLabelW;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 90:\n\t\t\t\t\t\tcase 270:\n\t\t\t\t\t\t\t// trivial cases: vertical\n\t\t\t\t\t\t\tif(this.vertical){\n\t\t\t\t\t\t\t\tmajLabelW = labelW.majLabelW;\n\t\t\t\t\t\t\t\tminLabelW = labelW.minLabelW;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tmajLabelW = minLabelW = size;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// all major labels are parallel they can't collapse except if the two ticks are\n\t\t\t\t\t\t\t// closer than the height of the text * cos(90-rotation)\n\t\t\t\t\t\t\tmajLabelW  = this.vertical ? Math.min(labelW.majLabelW, size / cosr) : Math.min(labelW.majLabelW, size / sinr);\n\t\t\t\t\t\t\t// for minor labels we need to rotated them\n\t\t\t\t\t\t\tvar gap1 = Math.sqrt(labelW.minLabelW * labelW.minLabelW + size * size),\n\t\t\t\t\t\t\t\tgap2 = this.vertical ? size * cosr + labelW.minLabelW * sinr : labelW.minLabelW * cosr + size * sinr;\n\t\t\t\t\t\t\tminLabelW = Math.min(gap1, gap2);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// we need to check both minor and major labels fit a minor step\n\t\t\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep =  Math.max(majLabelW, minLabelW) + labelGap;\n\t\t\t\t\tvar canMinorLabel = this.scaler.minMinorStep <= this.scaler.minor.tick * this.scaler.bounds.scale;\n\t\t\t\t\tif(!canMinorLabel){\n\t\t\t\t\t\t// we can't place minor labels, let's see if we can place major ones\n\t\t\t\t\t\t// in a major step and if not which skip interval we must follow\n\t\t\t\t\t\tthis._skipInterval = Math.floor((majLabelW + labelGap) / (this.scaler.major.tick * this.scaler.bounds.scale));\n\t\t\t\t\t}else{\n\t\t\t\t\t\t// everything fit well\n\t\t\t\t\t\tthis._skipInterval = 0;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t// drop label disabled\n\t\t\t\t\tthis._skipInterval = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// computes the tick subset we need for that scale/offset\n\t\t\tthis.ticks = lin.buildTicks(this.scaler, this.opt);\n\t\t\treturn this;\n\t\t},\n\n\t\tgetOffsets: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the physical offset values for this axis (used in drawing data series). This method is not\n\t\t\t//\t\tsupposed to be called by the users but internally.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe calculated offsets in the form of { l, r, t, b } (left, right, top, bottom).\n\t\t\tvar s = this.scaler, offsets = { l: 0, r: 0, t: 0, b: 0 };\n\t\t\tif(!s){\n\t\t\t\treturn offsets;\n\t\t\t}\n\t\t\tvar o = this.opt,\n\t\t\t\tta = this.chart.theme.axis,\n\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\n\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\n\t\t\t\ttaTitleFont = o.titleFont || (ta.title && ta.title.font),\n\t\t\t\ttaTitleGap = (o.titleGap==0) ? 0 : o.titleGap || (ta.title && ta.title.gap),\n\t\t\t\ttaMajorTick = this.chart.theme.getTick(\"major\", o),\n\t\t\t\ttaMinorTick = this.chart.theme.getTick(\"minor\", o),\n\t\t\t\ttsize = taTitleFont ? g.normalizedLength(g.splitFontString(taTitleFont).size) : 0,\n\t\t\t\trotation = o.rotation % 360, position = o.position, \n\t\t\t\tleftBottom = position !== \"rightOrTop\",\n\t\t\t\tcosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\n\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180));\n\t\t\tthis.trailingSymbol = (o.trailingSymbol === undefined || o.trailingSymbol === null) ?\n\t\t\t\tthis.trailingSymbol : o.trailingSymbol;\n\t\t\tif(typeof labelGap != \"number\"){\n\t\t\t\tlabelGap = 4; // in pixels\n\t\t\t}\n\t\t\tif(rotation < 0){\n\t\t\t\trotation += 360;\n\t\t\t}\n\t\t\tvar maxLabelSize = this._getMaxLabelSize(); // don't need parameters, calculate has been called before => we use cached value\n\t\t\tif(maxLabelSize){\n\t\t\t\tvar side;\n\t\t\t\tvar labelWidth = Math.ceil(Math.max(maxLabelSize.majLabelW, maxLabelSize.minLabelW)) + 1,\n\t\t\t\t\tsize = Math.ceil(Math.max(maxLabelSize.majLabelH, maxLabelSize.minLabelH)) + 1;\n\t\t\t\tif(this.vertical){\n\t\t\t\t\tside = leftBottom ? \"l\" : \"r\";\n\t\t\t\t\tswitch(rotation){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcase 180:\n\t\t\t\t\t\t\toffsets[side] = position === \"center\" ? 0 : labelWidth;\n\t\t\t\t\t\t\toffsets.t = offsets.b = size / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 90:\n\t\t\t\t\t\tcase 270:\n\t\t\t\t\t\t\toffsets[side] = size;\n\t\t\t\t\t\t\toffsets.t = offsets.b = labelWidth / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif(rotation <= centerAnchorLimit || (180 < rotation && rotation <= (180 + centerAnchorLimit))){\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr / 2 + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr / 2 + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr / 2;\n\t\t\t\t\t\t\t}else if(rotation > (360 - centerAnchorLimit) || (180 > rotation && rotation > (180 - centerAnchorLimit))){\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr / 2 + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr / 2 + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr / 2;\n\t\t\t\t\t\t\t}else if(rotation < 90 || (180 < rotation && rotation < 270)){\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr + labelWidth * sinr;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr + labelWidth * sinr;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(position === \"center\"){\n\t\t\t\t\t    offsets[side] = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse{\t\t\t\t\t\n\t\t\t\t\t    offsets[side] += labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) + (o.title ? (tsize + taTitleGap) : 0);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tside = leftBottom ? \"b\" : \"t\";\n\t\t\t\t\tswitch(rotation){\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\tcase 180:\n\t\t\t\t\t\t\toffsets[side] = position === \"center\" ? 0 : size;\n\t\t\t\t\t\t\toffsets.l = offsets.r = labelWidth / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 90:\n\t\t\t\t\t\tcase 270:\n\t\t\t\t\t\t\toffsets[side] = labelWidth;\n\t\t\t\t\t\t\toffsets.l = offsets.r = size / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif((90 - centerAnchorLimit) <= rotation && rotation <= 90 || (270 - centerAnchorLimit) <= rotation && rotation <= 270){\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr / 2 + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr / 2 + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr / 2;\n\t\t\t\t\t\t\t}else if(90 <= rotation && rotation <= (90 + centerAnchorLimit) || 270 <= rotation && rotation <= (270 + centerAnchorLimit)){\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr / 2 + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr / 2 + labelWidth * cosr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr / 2;\n\t\t\t\t\t\t\t}else if(rotation < centerAnchorLimit || (180 < rotation && rotation < (180 + centerAnchorLimit))){\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr + labelWidth * cosr;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr + labelWidth * sinr;\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr + labelWidth * cosr;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(position === \"center\"){\n\t\t\t\t\t    offsets[side] = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse{\t\t\t\t\t\n\t\t\t\t\toffsets[side] += labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) + (o.title ? (tsize + taTitleGap) : 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn offsets;\t//\tObject\n\t\t},\n\t\tcleanGroup: function(creator){\n\t\t\tif(this.opt.enableCache && this.group){\n\t\t\t\tthis._lineFreePool = this._lineFreePool.concat(this._lineUsePool);\n\t\t\t\tthis._lineUsePool = [];\n\t\t\t\tthis._textFreePool = this._textFreePool.concat(this._textUsePool);\n\t\t\t\tthis._textUsePool = [];\n\t\t\t}\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\tcreateText: function(labelType, creator, x, y, align, textContent, font, fontColor, labelWidth){\n\t\t\tif(!this.opt.enableCache || labelType==\"html\"){\n\t\t\t\treturn acommon.createText[labelType](\n\t\t\t\t\t\tthis.chart,\n\t\t\t\t\t\tcreator,\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\talign,\n\t\t\t\t\t\ttextContent,\n\t\t\t\t\t\tfont,\n\t\t\t\t\t\tfontColor,\n\t\t\t\t\t\tlabelWidth\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tvar text;\n\t\t\tif(this._textFreePool.length > 0){\n\t\t\t\ttext = this._textFreePool.pop();\n\t\t\t\ttext.setShape({x: x, y: y, text: textContent, align: align});\n\t\t\t\t// For now all items share the same font, no need to re-set it\n\t\t\t\t//.setFont(font).setFill(fontColor);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(text);\n\t\t\t}else{\n\t\t\t\ttext = acommon.createText[labelType](\n\t\t\t\t\t\tthis.chart,\n\t\t\t\t\t\tcreator,\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\talign,\n\t\t\t\t\t\ttextContent,\n\t\t\t\t\t\tfont,\n\t\t\t\t\t\tfontColor\t\t\t\t\t\t\n\t\t\t\t\t);\t\t\t\n\t\t\t}\n\t\t\tthis._textUsePool.push(text);\n\t\t\treturn text;\n\t\t},\n\t\tcreateLine: function(creator, params){\n\t\t\tvar line;\n\t\t\tif(this.opt.enableCache && this._lineFreePool.length > 0){\n\t\t\t\tline = this._lineFreePool.pop();\n\t\t\t\tline.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(line);\n\t\t\t}else{\n\t\t\t\tline = creator.createLine(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._lineUsePool.push(line);\n\t\t\t}\n\t\t\treturn line;\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender/draw the axis.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height}.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/axis2d/Default\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\t\n\t\t\tvar isRtl = this._isRtl();\t// chart mirroring\n\t\t\tif(!this.dirty || !this.scaler){\n\t\t\t\treturn this;\t//\tdojox/charting/axis2d/Default\n\t\t\t}\n\t\t\t// prepare variable\n\t\t\tvar o = this.opt, ta = this.chart.theme.axis, position = o.position, \n\t\t\t       leftBottom = position !== \"rightOrTop\", rotation = o.rotation % 360,\n\t\t\t\tstart, stop, titlePos, titleRotation=0, titleOffset, axisVector, tickVector, anchorOffset, labelOffset, labelAlign,\n\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\n\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\n\t\t\t\ttaFont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font),\n\t\t\t\ttaTitleFont = o.titleFont || (ta.title && ta.title.font),\n\t\t\t\t// TODO: we use one font color --- we need to use different colors\n\t\t\t\ttaFontColor = o.fontColor || (ta.majorTick && ta.majorTick.fontColor) || (ta.tick && ta.tick.fontColor) || \"black\",\n\t\t\t\ttaTitleFontColor = o.titleFontColor || (ta.title && ta.title.fontColor) || \"black\",\n\t\t\t\ttaTitleGap = (o.titleGap==0) ? 0 : o.titleGap || (ta.title && ta.title.gap) || 15,\n\t\t\t\ttaTitleOrientation = o.titleOrientation || (ta.title && ta.title.orientation) || \"axis\",\n\t\t\t\ttaMajorTick = this.chart.theme.getTick(\"major\", o),\n\t\t\t\ttaMinorTick = this.chart.theme.getTick(\"minor\", o),\n\t\t\t\ttaMicroTick = this.chart.theme.getTick(\"micro\", o),\n\n\t\t\t\ttaStroke = \"stroke\" in o ? o.stroke : ta.stroke,\n\t\t\t\tsize = taFont ? g.normalizedLength(g.splitFontString(taFont).size) : 0,\n\t\t\t\tcosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\n\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180)),\n\t\t\t\ttsize = taTitleFont ? g.normalizedLength(g.splitFontString(taTitleFont).size) : 0;\n\t\t\tif(typeof labelGap != \"number\"){\n\t\t\t\tlabelGap = 4; // in pixels\n\t\t\t}\n\t\t\tif(rotation < 0){\n\t\t\t\trotation += 360;\n\t\t\t}\n\t\t\tvar cachedLabelW = this._getMaxLabelSize();\n\t\t\tcachedLabelW = cachedLabelW && cachedLabelW.majLabelW;\n\t\t\tif(this.vertical){\n\t\t\t\tstart = {y: dim.height - offsets.b};\n\t\t\t\tstop  = {y: offsets.t};\n\t\t\t\ttitlePos = {y: (dim.height - offsets.b + offsets.t)/2};\n\t\t\t\ttitleOffset = size * sinr + (cachedLabelW || 0) * cosr + labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) +\n\t\t\t\t\ttsize + taTitleGap;\n\t\t\t\taxisVector = {x: 0, y: -1};\n\t\t\t\tlabelOffset = {x: 0, y: 0};\n\t\t\t\ttickVector = {x: 1, y: 0};\n\t\t\t\tanchorOffset = {x: labelGap, y: 0};\n\t\t\t\tswitch(rotation){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\tlabelOffset.y = size * 0.4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 90:\n\t\t\t\t\t\tlabelAlign = \"middle\";\n\t\t\t\t\t\tlabelOffset.x = -size;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 180:\n\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\tlabelOffset.y = -size * 0.4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 270:\n\t\t\t\t\t\tlabelAlign = \"middle\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(rotation < centerAnchorLimit){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\n\t\t\t\t\t\t}else if(rotation < 90){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\n\t\t\t\t\t\t}else if(rotation < (180 - centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t}else if(rotation < (180 + centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.y = -size * 0.4;\n\t\t\t\t\t\t}else if(rotation < 270){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.x = leftBottom ? 0 : size * 0.4;\n\t\t\t\t\t\t}else if(rotation < (360 - centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.x = leftBottom ? 0 : size * 0.4;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(leftBottom){\n\t\t\t\t\tstart.x = stop.x = position === \"center\" ? dim.width/2 : offsets.l;\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"away\") ? 90 : 270;\n\t\t\t\t\ttitlePos.x = offsets.l - titleOffset + (titleRotation == 270 ? tsize : 0);\n\t\t\t\t\ttickVector.x = -1;\n\t\t\t\t\tanchorOffset.x = -anchorOffset.x;\n\t\t\t\t}else{\n\t\t\t\t\tstart.x = stop.x = dim.width - offsets.r;\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"axis\") ? 90 : 270;\n\t\t\t\t\ttitlePos.x = dim.width - offsets.r + titleOffset - (titleRotation == 270 ? 0 : tsize);\n\t\t\t\t\tswitch(labelAlign){\n\t\t\t\t\t\tcase \"start\":\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\t\tlabelOffset.x += size;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tstart = {x: offsets.l};\n\t\t\t\tstop  = {x: dim.width - offsets.r};\n\t\t\t\ttitlePos = {x: (dim.width - offsets.r + offsets.l)/2};\n\t\t\t\ttitleOffset = size * cosr + (cachedLabelW || 0) * sinr + labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) +\n\t\t\t\t\ttsize + taTitleGap;\n\t\t\t\taxisVector = {x: isRtl ? -1 : 1, y: 0}; \t// chart mirroring\n\t\t\t\tlabelOffset = {x: 0, y: 0};\n\t\t\t\ttickVector = {x: 0, y: 1};\n\t\t\t\tanchorOffset = {x: 0, y: labelGap};\n\t\t\t\tswitch(rotation){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tlabelAlign = \"middle\";\n\t\t\t\t\t\tlabelOffset.y = size;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 90:\n\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\tlabelOffset.x = -size * 0.4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 180:\n\t\t\t\t\t\tlabelAlign = \"middle\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 270:\n\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\tlabelOffset.x = size * 0.4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif(rotation < (90 - centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size : 0;\n\t\t\t\t\t\t}else if(rotation < (90 + centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.x = -size * 0.4;\n\t\t\t\t\t\t}else if(rotation < 180){\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? 0 : -size;\n\t\t\t\t\t\t}else if(rotation < (270 - centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? 0 : -size;\n\t\t\t\t\t\t}else if(rotation < (270 + centerAnchorLimit)){\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size * 0.4 : 0;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size : 0;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(leftBottom){\n\t\t\t\t\tstart.y = stop.y = position === \"center\" ? dim.height/2 : dim.height - offsets.b;\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"axis\") ? 180 : 0;\n\t\t\t\t\ttitlePos.y = dim.height - offsets.b + titleOffset - (titleRotation ? tsize : 0);\n\t\t\t\t}else{\n\t\t\t\t\tstart.y = stop.y = offsets.t;\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"away\") ? 180 : 0;\n\t\t\t\t\ttitlePos.y = offsets.t - titleOffset + (titleRotation ? 0 : tsize);\n\t\t\t\t\ttickVector.y = -1;\n\t\t\t\t\tanchorOffset.y = -anchorOffset.y;\n\t\t\t\t\tswitch(labelAlign){\n\t\t\t\t\t\tcase \"start\":\n\t\t\t\t\t\t\tlabelAlign = \"end\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\tlabelAlign = \"start\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\t\tlabelOffset.y -= size;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// render shapes\n\n\t\t\tthis.cleanGroup();\n\n\t\t\tvar s = this.group,\n\t\t\t\tc = this.scaler,\n\t\t\t\tt = this.ticks,\n\t\t\t\tf = lin.getTransformerFromModel(this.scaler),\n\t\t\t\t// GFX Canvas now supports labels, so let's _not_ fallback to HTML anymore on canvas, just use\n\t\t\t\t// HTML labels if explicitly asked + no rotation + no IE + no Opera\n\t\t\t\tlabelType = (!o.title || !titleRotation) && !rotation && this.opt.htmlLabels && !has(\"ie\") && !has(\"opera\") ? \"html\" : \"gfx\",\n\t\t\t\tdx = tickVector.x * taMajorTick.length,\n\t\t\t\tdy = tickVector.y * taMajorTick.length,\n\t\t\t\tskip = this._skipInterval;\n\n\t\t\ts.createLine({\n\t\t\t\tx1: start.x,\n\t\t\t\ty1: start.y,\n\t\t\t\tx2: stop.x,\n\t\t\t\ty2: stop.y\n\t\t\t}).setStroke(taStroke);\n\n\t\t\t//create axis title\n\t\t\tif(o.title){\n\t\t\t\tvar axisTitle = acommon.createText[labelType](\n\t\t\t\t\tthis.chart,\n\t\t\t\t\ts,\n\t\t\t\t\ttitlePos.x,\n\t\t\t\t\ttitlePos.y,\n\t\t\t\t\t\"middle\",\n\t\t\t\t\to.title,\n\t\t\t\t\ttaTitleFont,\n\t\t\t\t\ttaTitleFontColor\n\t\t\t\t);\n\t\t\t\tif(labelType == \"html\"){\n\t\t\t\t\tthis.htmlElements.push(axisTitle);\n\t\t\t\t}else{\n\t\t\t\t\t//as soon as rotation is provided, labelType won't be \"html\"\n\t\t\t\t\t//rotate gfx labels\n\t\t\t\t\taxisTitle.setTransform(g.matrix.rotategAt(titleRotation, titlePos.x, titlePos.y));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// go out nicely instead of try/catch\n\t\t\tif(t == null){\n\t\t\t\tthis.dirty = false;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar rel = (t.major.length > 0)?(t.major[0].value - this._majorStart) / c.major.tick:0;\n\t\t\tvar canLabel = this.opt.majorLabels;\n\t\t\tarr.forEach(t.major, function(tick, i){\n\t\t\t\tvar offset = f(tick.value), elem,\n\t\t\t\t\tx = (isRtl ? stop.x : start.x) + axisVector.x * offset, // chart mirroring\n\t\t\t\t\ty = start.y + axisVector.y * offset;\n\t\t\t\ti += rel;\n\t\t\t\tthis.createLine(s, {\n\t\t\t\t\tx1: x, y1: y,\n\t\t\t\t\tx2: x + dx,\n\t\t\t\t\ty2: y + dy\n\t\t\t\t}).setStroke(taMajorTick);\n\t\t\t\tif(tick.label && (!skip || (i - (1 + skip)) % (1 + skip) == 0)){\n\t\t\t\t\tvar label = o.maxLabelCharCount ? this.getTextWithLimitCharCount(tick.label, taFont, o.maxLabelCharCount) : {\n\t\t\t\t\t\ttext: tick.label,\n\t\t\t\t\t\ttruncated: false\n\t\t\t\t\t};\n\t\t\t\t\tlabel = o.maxLabelSize ? this.getTextWithLimitLength(label.text, taFont, o.maxLabelSize, label.truncated) : label;\n\t\t\t\t\telem = this.createText(labelType,\n\t\t\t\t\t\ts,\n\t\t\t\t\t\tx + (taMajorTick.length > 0 ? dx : 0) + anchorOffset.x + (rotation ? 0 : labelOffset.x),\n\t\t\t\t\t\ty + (taMajorTick.length > 0 ? dy : 0) + anchorOffset.y + (rotation ? 0 : labelOffset.y),\n\t\t\t\t\t\tlabelAlign,\n\t\t\t\t\t\tlabel.text,\n\t\t\t\t\t\ttaFont,\n\t\t\t\t\t\ttaFontColor\n\t\t\t\t\t\t//cachedLabelW\n\t\t\t\t\t);\n\t\t\t\t\t// if bidi support was required, the textDir is \"auto\" and truncation\n\t\t\t\t\t// took place, we need to update the dir of the element for cases as:\n\t\t\t\t\t// Fool label: 111111W (W for bidi character)\n\t\t\t\t\t// truncated label: 11...\n\t\t\t\t\t// in this case for auto textDir the dir will be \"ltr\" which is wrong.\n\t\t\t\t\tif(label.truncated){\n\t\t\t\t\t\tthis.chart.formatTruncatedLabel(elem, tick.label, labelType);\n\t\t\t\t\t}\n\t\t\t\t\tlabel.truncated && this.labelTooltip(elem, this.chart, tick.label, label.text, taFont, labelType);\n\t\t\t\t\tif(labelType == \"html\"){\n\t\t\t\t\t\tthis.htmlElements.push(elem);\n\t\t\t\t\t}else if(rotation){\n\t\t\t\t\t\telem.setTransform([\n\t\t\t\t\t\t\t{dx: labelOffset.x, dy: labelOffset.y},\n\t\t\t\t\t\t\tg.matrix.rotategAt(\n\t\t\t\t\t\t\t\trotation,\n\t\t\t\t\t\t\t\tx + (taMajorTick.length > 0 ? dx : 0) + anchorOffset.x,\n\t\t\t\t\t\t\t\ty + (taMajorTick.length > 0 ? dy : 0) + anchorOffset.y\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\tdx = tickVector.x * taMinorTick.length;\n\t\t\tdy = tickVector.y * taMinorTick.length;\n\t\t\tcanLabel = this.opt.minorLabels && c.minMinorStep <= c.minor.tick * c.bounds.scale;\n\t\t\tarr.forEach(t.minor, function(tick){\n\t\t\t\tvar offset = f(tick.value), elem,\n\t\t\t\t\tx = (isRtl ? stop.x : start.x)  + axisVector.x * offset,\n\t\t\t\t\ty = start.y + axisVector.y * offset; // chart mirroring\n\t\t\t\tthis.createLine(s, {\n\t\t\t\t\tx1: x, y1: y,\n\t\t\t\t\tx2: x + dx,\n\t\t\t\t\ty2: y + dy\n\t\t\t\t}).setStroke(taMinorTick);\n\t\t\t\tif(canLabel && tick.label){\n\t\t\t\t\tvar label = o.maxLabelCharCount ? this.getTextWithLimitCharCount(tick.label, taFont, o.maxLabelCharCount) : {\n\t\t\t\t\t\ttext: tick.label,\n\t\t\t\t\t\ttruncated: false\n\t\t\t\t\t};\n\t\t\t\t\tlabel = o.maxLabelSize ? this.getTextWithLimitLength(label.text, taFont, o.maxLabelSize, label.truncated) : label;\n\t\t\t\t\telem = this.createText(labelType,\n\t\t\t\t\t\ts,\n\t\t\t\t\t\tx + (taMinorTick.length > 0 ? dx : 0) + anchorOffset.x + (rotation ? 0 : labelOffset.x),\n\t\t\t\t\t\ty + (taMinorTick.length  > 0 ? dy : 0) + anchorOffset.y + (rotation ? 0 : labelOffset.y),\n\t\t\t\t\t\tlabelAlign,\n\t\t\t\t\t\tlabel.text,\n\t\t\t\t\t\ttaFont,\n\t\t\t\t\t\ttaFontColor\n\t\t\t\t\t\t//cachedLabelW\n\t\t\t\t\t);\n\t\t\t\t\t// if bidi support was required, the textDir is \"auto\" and truncation\n\t\t\t\t\t// took place, we need to update the dir of the element for cases as:\n\t\t\t\t\t// Fool label: 111111W (W for bidi character)\n\t\t\t\t\t// truncated label: 11...\n\t\t\t\t\t// in this case for auto textDir the dir will be \"ltr\" which is wrong.\n\t\t\t\t\tif(label.truncated){\n\t\t\t\t\t\tthis.chart.formatTruncatedLabel(elem, tick.label, labelType);\n\t\t\t\t\t}\n\t\t\t\t\tlabel.truncated && this.labelTooltip(elem, this.chart, tick.label, label.text, taFont, labelType);\n\t\t\t\t\tif(labelType == \"html\"){\n\t\t\t\t\t\tthis.htmlElements.push(elem);\n\t\t\t\t\t}else if(rotation){\n\t\t\t\t\t\telem.setTransform([\n\t\t\t\t\t\t\t{dx: labelOffset.x, dy: labelOffset.y},\n\t\t\t\t\t\t\tg.matrix.rotategAt(\n\t\t\t\t\t\t\t\trotation,\n\t\t\t\t\t\t\t\tx + (taMinorTick.length > 0 ? dx : 0) + anchorOffset.x,\n\t\t\t\t\t\t\t\ty + (taMinorTick.length > 0 ? dy : 0) + anchorOffset.y\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\tdx = tickVector.x * taMicroTick.length;\n\t\t\tdy = tickVector.y * taMicroTick.length;\n\t\t\tarr.forEach(t.micro, function(tick){\n\t\t\t\tvar offset = f(tick.value),\n\t\t\t\t\tx = start.x + axisVector.x * offset,\n\t\t\t\t\ty = start.y + axisVector.y * offset;\n\t\t\t\t\tthis.createLine(s, {\n\t\t\t\t\t\tx1: x, y1: y,\n\t\t\t\t\t\tx2: x + dx,\n\t\t\t\t\t\ty2: y + dy\n\t\t\t\t\t}).setStroke(taMicroTick);\n\t\t\t}, this);\n\n\t\t\tthis.dirty = false;\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Default\n\t\t},\n\t\tlabelTooltip: function(elem, chart, label, truncatedLabel, font, elemType){\n\t\t\tvar modules = [\"dijit/Tooltip\"];\n\t\t\tvar aroundRect = {type: \"rect\"}, position = [\"above\", \"below\"],\n\t\t\t\tfontWidth = g._base._getTextBox(truncatedLabel, {font: font}).w || 0,\n\t\t\t\tfontHeight = font ? g.normalizedLength(g.splitFontString(font).size) : 0;\n\t\t\tif(elemType == \"html\"){\n\t\t\t\tlang.mixin(aroundRect, domGeom.position(elem.firstChild, true));\n\t\t\t\taroundRect.width = Math.ceil(fontWidth);\n\t\t\t\taroundRect.height = Math.ceil(fontHeight);\n\t\t\t\tthis._events.push({\n\t\t\t\t\tshape:  dojo,\n\t\t\t\t\thandle: connect.connect(elem.firstChild, \"onmouseover\", this, function(e){\n\t\t\t\t\t\trequire(modules, function(Tooltip){\n\t\t\t\t\t\t\tTooltip.show(label, aroundRect, position);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\tthis._events.push({\n\t\t\t\t\tshape:  dojo,\n\t\t\t\t\thandle: connect.connect(elem.firstChild, \"onmouseout\", this, function(e){\n\t\t\t\t\t\trequire(modules, function(Tooltip){\n\t\t\t\t\t\t\tTooltip.hide(aroundRect);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\tvar shp = elem.getShape(),\n\t\t\t\t\tlt = chart.getCoords();\n\t\t\t\taroundRect = lang.mixin(aroundRect, {\n\t\t\t\t\tx: shp.x - fontWidth / 2,\n\t\t\t\t\ty: shp.y\n\t\t\t\t});\n\t\t\t\taroundRect.x += lt.x;\n\t\t\t\taroundRect.y += lt.y;\n\t\t\t\taroundRect.x = Math.round(aroundRect.x);\n\t\t\t\taroundRect.y = Math.round(aroundRect.y);\n\t\t\t\taroundRect.width = Math.ceil(fontWidth);\n\t\t\t\taroundRect.height = Math.ceil(fontHeight);\n\t\t\t\tthis._events.push({\n\t\t\t\t\tshape:  elem,\n\t\t\t\t\thandle: elem.connect(\"onmouseenter\", this, function(e){\n\t\t\t\t\t\trequire(modules, function(Tooltip){\n\t\t\t\t\t\t\tTooltip.show(label, aroundRect, position);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\tthis._events.push({\n\t\t\t\t\tshape:  elem,\n\t\t\t\t\thandle: elem.connect(\"onmouseleave\", this, function(e){\n\t\t\t\t\t\trequire(modules, function(Tooltip){\n\t\t\t\t\t\t\tTooltip.hide(aroundRect);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t_isRtl: function(){\n\t\t\treturn false;\n\t\t}\n\t});\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.axis2d.Default\", [Default, BidiDefault]) : Default;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/axis2d/Default.js\n// module id = 226\n// module chunks = 0","define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"..\", \"./Chart\",\n\t\"./axis2d/Default\", \"./axis2d/Invisible\", \"./plot2d/Default\", \"./plot2d/Lines\", \"./plot2d/Areas\",\n\t\"./plot2d/Markers\", \"./plot2d/MarkersOnly\", \"./plot2d/Scatter\", \"./plot2d/Stacked\", \"./plot2d/StackedLines\",\n\t\"./plot2d/StackedAreas\", \"./plot2d/Columns\", \"./plot2d/StackedColumns\", \"./plot2d/ClusteredColumns\",\n\t\"./plot2d/Bars\", \"./plot2d/StackedBars\", \"./plot2d/ClusteredBars\", \"./plot2d/Grid\", \"./plot2d/Pie\",\n\t\"./plot2d/Bubble\", \"./plot2d/Candlesticks\", \"./plot2d/OHLC\", \"./plot2d/Spider\"], \n\t  function(kernel, lang, dojox, Chart){\n\tkernel.deprecated(\"dojox.charting.Chart2D\", \"Use dojox.charting.Chart instead and require all other components explicitly\", \"2.0\");\n\t// module:\n\t//\t\tdojox/charting/Chart2D\n\t// summary:\n\t//\t\tThis is a compatibility module which loads all charting modules that used to be automatically\n\t//\t\tloaded in versions prior to 1.6.  It is highly recommended for performance reasons that\n\t//\t\tthis module no longer be referenced by applications.  Instead, use dojox/charting/Chart.\n\treturn lang.setObject(\"dojox.charting.Chart2D\", Chart);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/Chart2D.js\n// module id = 230\n// module chunks = 0","define([\"../SimpleTheme\", \"./common\"], function(SimpleTheme, themes){\n\tthemes.Wetland = new SimpleTheme({\n\t\tcolors: [\n\t\t\t\"#bfbc64\",\n\t\t\t\"#737130\",\n\t\t\t\"#73373b\",\n\t\t\t\"#7dafca\",\n\t\t\t\"#8d3c42\"\n\t\t]\n\t});\n\treturn themes.Wetland;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/themes/Wetland.js\n// module id = 231\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/Color\", \n\t\t\"dojox/gfx\", \"dojox/lang/functional\", \"../scaler/common\"], \n\tfunction(lang, arr, Color, g, df, sc){\n\t\n\tvar common = lang.getObject(\"dojox.charting.plot2d.common\", true);\n\t\n\treturn lang.mixin(common, {\t\n\t\tdoIfLoaded: sc.doIfLoaded,\n\t\tmakeStroke: function(stroke){\n\t\t\tif(!stroke){ return stroke; }\n\t\t\tif(typeof stroke == \"string\" || stroke instanceof Color){\n\t\t\t\tstroke = {color: stroke};\n\t\t\t}\n\t\t\treturn g.makeParameters(g.defaultStroke, stroke);\n\t\t},\n\t\taugmentColor: function(target, color){\n\t\t\tvar t = new Color(target),\n\t\t\t\tc = new Color(color);\n\t\t\tc.a = t.a;\n\t\t\treturn c;\n\t\t},\n\t\taugmentStroke: function(stroke, color){\n\t\t\tvar s = common.makeStroke(stroke);\n\t\t\tif(s){\n\t\t\t\ts.color = common.augmentColor(s.color, color);\n\t\t\t}\n\t\t\treturn s;\n\t\t},\n\t\taugmentFill: function(fill, color){\n\t\t\tvar fc, c = new Color(color);\n\t\t\tif(typeof fill == \"string\" || fill instanceof Color){\n\t\t\t\treturn common.augmentColor(fill, color);\n\t\t\t}\n\t\t\treturn fill;\n\t\t},\n\n\t\tdefaultStats: {\n\t\t\tvmin: Number.POSITIVE_INFINITY, vmax: Number.NEGATIVE_INFINITY,\n\t\t\thmin: Number.POSITIVE_INFINITY, hmax: Number.NEGATIVE_INFINITY\n\t\t},\n\n\t\tcollectSimpleStats: function(series, isNullValue){\n\t\t\tvar stats = lang.delegate(common.defaultStats);\n\t\t\tfor(var i = 0; i < series.length; ++i){\n\t\t\t\tvar run = series[i];\n\t\t\t\tfor(var j = 0; j < run.data.length; j++){\n\t\t\t\t\tif(!isNullValue(run.data[j])){\n\t\t\t\t\t\tif(typeof run.data[j] == \"number\"){\n\t\t\t\t\t\t\t// 1D case\n\t\t\t\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\n\t\t\t\t\t\t\tarr.forEach(run.data, function(val, i){\n\t\t\t\t\t\t\t\tif(!isNullValue(val)){\n\t\t\t\t\t\t\t\t\tvar x = i + 1, y = val;\n\t\t\t\t\t\t\t\t\tif(isNaN(y)){ y = 0; }\n\t\t\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\n\t\t\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\n\t\t\t\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t// 2D case\n\t\t\t\t\t\t\tvar old_hmin = stats.hmin, old_hmax = stats.hmax,\n\t\t\t\t\t\t\t\told_vmin = stats.vmin, old_vmax = stats.vmax;\n\t\t\t\t\t\t\tif(!(\"xmin\" in run) || !(\"xmax\" in run) || !(\"ymin\" in run) || !(\"ymax\" in run)){\n\t\t\t\t\t\t\t\tarr.forEach(run.data, function(val, i){\n\t\t\t\t\t\t\t\t\tif(!isNullValue(val)){\n\t\t\t\t\t\t\t\t\t\tvar x = \"x\" in val ? val.x : i + 1, y = val.y;\n\t\t\t\t\t\t\t\t\t\tif(isNaN(x)){ x = 0; }\n\t\t\t\t\t\t\t\t\t\tif(isNaN(y)){ y = 0; }\n\t\t\t\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\n\t\t\t\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(\"xmin\" in run){ stats.hmin = Math.min(old_hmin, run.xmin); }\n\t\t\t\t\t\t\tif(\"xmax\" in run){ stats.hmax = Math.max(old_hmax, run.xmax); }\n\t\t\t\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\n\t\t\t\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stats;\n\t\t},\n\n\t\tcalculateBarSize: function(/* Number */ availableSize, /* Object */ opt, /* Number? */ clusterSize){\n\t\t\tif(!clusterSize){\n\t\t\t\tclusterSize = 1;\n\t\t\t}\n\t\t\tvar gap = opt.gap, size = (availableSize - 2 * gap) / clusterSize;\n\t\t\tif(\"minBarSize\" in opt){\n\t\t\t\tsize = Math.max(size, opt.minBarSize);\n\t\t\t}\n\t\t\tif(\"maxBarSize\" in opt){\n\t\t\t\tsize = Math.min(size, opt.maxBarSize);\n\t\t\t}\n\t\t\tsize = Math.max(size, 1);\n\t\t\tgap = (availableSize - size * clusterSize) / 2;\n\t\t\treturn {size: size, gap: gap};\t// Object\n\t\t},\n\n\t\tcollectStackedStats: function(series){\n\t\t\t// collect statistics\n\t\t\tvar stats = lang.clone(common.defaultStats);\n\t\t\tif(series.length){\n\t\t\t\t// 1st pass: find the maximal length of runs\n\t\t\t\tstats.hmin = Math.min(stats.hmin, 1);\n\t\t\t\tstats.hmax = df.foldl(series, \"seed, run -> Math.max(seed, run.data.length)\", stats.hmax);\n\t\t\t\t// 2nd pass: stack values\n\t\t\t\tfor(var i = 0; i < stats.hmax; ++i){\n\t\t\t\t\tvar v = series[0].data[i];\n\t\t\t\t\tv = v && (typeof v == \"number\" ? v : v.y);\n\t\t\t\t\tif(isNaN(v)){ v = 0; }\n\t\t\t\t\tstats.vmin = Math.min(stats.vmin, v);\n\t\t\t\t\tfor(var j = 1; j < series.length; ++j){\n\t\t\t\t\t\tvar t = series[j].data[i];\n\t\t\t\t\t\tt = t && (typeof t == \"number\" ? t : t.y);\n\t\t\t\t\t\tif(isNaN(t)){ t = 0; }\n\t\t\t\t\t\tv += t;\n\t\t\t\t\t}\n\t\t\t\t\tstats.vmax = Math.max(stats.vmax, v);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stats;\n\t\t},\n\n\t\tcurve: function(/* Number[] */a, /* Number|String */tension){\n\t\t\t//\tFIX for #7235, submitted by Enzo Michelangeli.\n\t\t\t//\tEmulates the smoothing algorithms used in a famous, unnamed spreadsheet\n\t\t\t//\t\tprogram ;)\n\t\t\tvar array = a.slice(0);\n\t\t\tif(tension == \"x\") {\n\t\t\t\tarray[array.length] = array[0];   // add a last element equal to the first, closing the loop\n\t\t\t}\n\t\t\tvar p=arr.map(array, function(item, i){\n\t\t\t\tif(i==0){ return \"M\" + item.x + \",\" + item.y; }\n\t\t\t\tif(!isNaN(tension)) { // use standard Dojo smoothing in tension is numeric\n\t\t\t\t\tvar dx=item.x-array[i-1].x, dy=array[i-1].y;\n\t\t\t\t\treturn \"C\"+(item.x-(tension-1)*(dx/tension))+\",\"+dy+\" \"+(item.x-(dx/tension))+\",\"+item.y+\" \"+item.x+\",\"+item.y;\n\t\t\t\t} else if(tension == \"X\" || tension == \"x\" || tension == \"S\") {\n\t\t\t\t\t// use Excel \"line smoothing\" algorithm (http://xlrotor.com/resources/files.shtml)\n\t\t\t\t\tvar p0, p1 = array[i-1], p2 = array[i], p3;\n\t\t\t\t\tvar bz1x, bz1y, bz2x, bz2y;\n\t\t\t\t\tvar f = 1/6;\n\t\t\t\t\tif(i==1) {\n\t\t\t\t\t\tif(tension == \"x\") {\n\t\t\t\t\t\t\tp0 = array[array.length-2];\n\t\t\t\t\t\t} else { // \"tension == X || tension == \"S\"\n\t\t\t\t\t\t\tp0 = p1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tf = 1/3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp0 = array[i-2];\n\t\t\t\t\t}\n\t\t\t\t\tif(i==(array.length-1)) {\n\t\t\t\t\t\tif(tension == \"x\") {\n\t\t\t\t\t\t\tp3 = array[1];\n\t\t\t\t\t\t} else { // \"tension == X || tension == \"S\"\n\t\t\t\t\t\t\tp3 = p2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tf = 1/3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp3 = array[i+1];\n\t\t\t\t\t}\n\t\t\t\t\tvar p1p2 = Math.sqrt((p2.x-p1.x)*(p2.x-p1.x)+(p2.y-p1.y)*(p2.y-p1.y));\n\t\t\t\t\tvar p0p2 = Math.sqrt((p2.x-p0.x)*(p2.x-p0.x)+(p2.y-p0.y)*(p2.y-p0.y));\n\t\t\t\t\tvar p1p3 = Math.sqrt((p3.x-p1.x)*(p3.x-p1.x)+(p3.y-p1.y)*(p3.y-p1.y));\n\n\t\t\t\t\tvar p0p2f = p0p2 * f;\n\t\t\t\t\tvar p1p3f = p1p3 * f;\n\n\t\t\t\t\tif(p0p2f > p1p2/2 && p1p3f > p1p2/2) {\n\t\t\t\t\t\tp0p2f = p1p2/2;\n\t\t\t\t\t\tp1p3f = p1p2/2;\n\t\t\t\t\t} else if(p0p2f > p1p2/2) {\n\t\t\t\t\t\tp0p2f = p1p2/2;\n\t\t\t\t\t\tp1p3f = p1p2/2 * p1p3/p0p2;\n\t\t\t\t\t} else if(p1p3f > p1p2/2) {\n\t\t\t\t\t\tp1p3f = p1p2/2;\n\t\t\t\t\t\tp0p2f = p1p2/2 * p0p2/p1p3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(tension == \"S\") {\n\t\t\t\t\t\tif(p0 == p1) { p0p2f = 0; }\n\t\t\t\t\t\tif(p2 == p3) { p1p3f = 0; }\n\t\t\t\t\t}\n\n\t\t\t\t\tbz1x = p1.x + p0p2f*(p2.x - p0.x)/p0p2;\n\t\t\t\t\tbz1y = p1.y + p0p2f*(p2.y - p0.y)/p0p2;\n\t\t\t\t\tbz2x = p2.x - p1p3f*(p3.x - p1.x)/p1p3;\n\t\t\t\t\tbz2y = p2.y - p1p3f*(p3.y - p1.y)/p1p3;\n\t\t\t\t}\n\t\t\t\treturn \"C\"+(bz1x+\",\"+bz1y+\" \"+bz2x+\",\"+bz2y+\" \"+p2.x+\",\"+p2.y);\n\t\t\t});\n\t\t\treturn p.join(\" \");\n\t\t},\n\t\t\n\t\tgetLabel: function(/*Number*/number, /*Boolean*/fixed, /*Number*/precision){\n\t\t\treturn sc.doIfLoaded(\"dojo/number\", function(numberLib){\n\t\t\t\treturn (fixed ? numberLib.format(number, {places : precision}) :\n\t\t\t\t\tnumberLib.format(number)) || \"\";\n\t\t\t}, function(){\n\t\t\t\treturn fixed ? number.toFixed(precision) : number.toString();\n\t\t\t});\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/common.js\n// module id = 233\n// module chunks = 0","define([\"./functional/lambda\", \"./functional/array\", \"./functional/object\"], function(df){\n\treturn df;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/lang/functional.js\n// module id = 234\n// module chunks = 0","define([\"..\", \"dojo/_base/lang\"], \n  function(dojox, lang){\n\tvar du = lang.getObject(\"lang.utils\", true, dojox);\n\t\n\tvar empty = {}, opts = Object.prototype.toString;\n\n\tvar clone = function(o){\n\t\tif(o){\n\t\t\tswitch(opts.call(o)){\n\t\t\t\tcase \"[object Array]\":\n\t\t\t\t\treturn o.slice(0);\n\t\t\t\tcase \"[object Object]\":\n\t\t\t\t\treturn lang.delegate(o);\n\t\t\t}\n\t\t}\n\t\treturn o;\n\t}\n\t\n\tlang.mixin(du, {\n\t\tcoerceType: function(target, source){\n\t\t\t// summary:\n\t\t\t//\t\tCoerces one object to the type of another.\n\t\t\t// target: Object\n\t\t\t//\t\tobject, which typeof result is used to coerce \"source\" object.\n\t\t\t// source: Object\n\t\t\t//\t\tobject, which will be forced to change type.\n\t\t\tswitch(typeof target){\n\t\t\t\tcase \"number\":\treturn Number(eval(\"(\" + source + \")\"));\n\t\t\t\tcase \"string\":\treturn String(source);\n\t\t\t\tcase \"boolean\":\treturn Boolean(eval(\"(\" + source + \")\"));\n\t\t\t}\n\t\t\treturn eval(\"(\" + source + \")\");\n\t\t},\n\t\t\n\t\tupdateWithObject: function(target, source, conv){\n\t\t\t// summary:\n\t\t\t//\t\tUpdates an existing object in place with properties from an \"source\" object.\n\t\t\t// target: Object\n\t\t\t//\t\tthe \"target\" object to be updated\n\t\t\t// source: Object\n\t\t\t//\t\tthe \"source\" object, whose properties will be used to source the existed object.\n\t\t\t// conv: Boolean?\n\t\t\t//\t\tforce conversion to the original type\n\t\t\tif(!source){ return target; }\n\t\t\tfor(var x in target){\n\t\t\t\tif(x in source && !(x in empty)){\n\t\t\t\t\tvar t = target[x];\n\t\t\t\t\tif(t && typeof t == \"object\"){\n\t\t\t\t\t\tdu.updateWithObject(t, source[x], conv);\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttarget[x] = conv ? du.coerceType(t, source[x]) : clone(source[x]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn target;\t// Object\n\t\t},\n\t\n\t\tupdateWithPattern: function(target, source, pattern, conv){\n\t\t\t// summary:\n\t\t\t//\t\tUpdates an existing object in place with properties from an \"source\" object.\n\t\t\t// target: Object\n\t\t\t//\t\tthe \"target\" object to be updated\n\t\t\t// source: Object\n\t\t\t//\t\tthe \"source\" object, whose properties will be used to source the existed object.\n\t\t\t// pattern: Object\n\t\t\t//\t\tobject, whose properties will be used to pull values from the \"source\"\n\t\t\t// conv: Boolean?\n\t\t\t//\t\tforce conversion to the original type\n\t\t\tif(!source || !pattern){ return target; }\n\t\t\tfor(var x in pattern){\n\t\t\t\tif(x in source && !(x in empty)){\n\t\t\t\t\ttarget[x] = conv ? du.coerceType(pattern[x], source[x]) : clone(source[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn target;\t// Object\n\t\t},\n\t\t\n\t\tmerge: function(object, mixin){\n\t\t\t// summary:\n\t\t\t//\t\tMerge two objects structurally, mixin properties will override object's properties.\n\t\t\t// object: Object\n\t\t\t//\t\toriginal object.\n\t\t\t// mixin: Object\n\t\t\t//\t\tadditional object, which properties will override object's properties.\n\t\t\tif(mixin){\n\t\t\t\tvar otype = opts.call(object), mtype = opts.call(mixin), t, i, l, m;\n\t\t\t\tswitch(mtype){\n\t\t\t\t\tcase \"[object Array]\":\n\t\t\t\t\t\tif(mtype == otype){\n\t\t\t\t\t\t\tt = new Array(Math.max(object.length, mixin.length));\n\t\t\t\t\t\t\tfor(i = 0, l = t.length; i < l; ++i){\n\t\t\t\t\t\t\t\tt[i] = du.merge(object[i], mixin[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn t;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn mixin.slice(0);\n\t\t\t\t\tcase \"[object Object]\":\n\t\t\t\t\t\tif(mtype == otype && object){\n\t\t\t\t\t\t\tt = lang.delegate(object);\n\t\t\t\t\t\t\tfor(i in mixin){\n\t\t\t\t\t\t\t\tif(i in object){\n\t\t\t\t\t\t\t\t\tl = object[i];\n\t\t\t\t\t\t\t\t\tm = mixin[i];\n\t\t\t\t\t\t\t\t\tif(m !== l){\n\t\t\t\t\t\t\t\t\t\tt[i] = du.merge(l, m);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tt[i] = lang.clone(mixin[i]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn t;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn lang.clone(mixin);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn mixin;\n\t\t}\n\t});\n\t\n\treturn du;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/lang/utils.js\n// module id = 235\n// module chunks = 0","define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"dojo/_base/Color\", \"dojo/_base/sniff\", \"dojo/_base/window\",\n\t    \"dojo/_base/array\",\"dojo/dom\", \"dojo/dom-construct\",\"dojo/dom-geometry\"],\nfunction(kernel, lang, Color, has, win, arr, dom, domConstruct, domGeom){\n\t// module:\n\t//\t\tdojox/gfx\n\t// summary:\n\t//\t\tThis module contains common core Graphics API used by different graphics renderers.\n\n\tvar g = lang.getObject(\"dojox.gfx\", true),\n\t\tb = g._base = {};\n\t\n\t// candidates for dojox.style (work on VML and SVG nodes)\n\tg._hasClass = function(/*DomNode*/node, /*String*/classStr){\n\t\t// summary:\n\t\t//\t\tReturns whether or not the specified classes are a portion of the\n\t\t//\t\tclass list currently applied to the node.\n\t\t\n\t\t// return (new RegExp('(^|\\\\s+)'+classStr+'(\\\\s+|$)')).test(node.className)\t// Boolean\n\t\tvar cls = node.getAttribute(\"className\");\n\t\treturn cls && (\" \" + cls + \" \").indexOf(\" \" + classStr + \" \") >= 0;  // Boolean\n\t};\n\tg._addClass = function(/*DomNode*/node, /*String*/classStr){\n\t\t// summary:\n\t\t//\t\tAdds the specified classes to the end of the class list on the\n\t\t//\t\tpassed node.\n\t\tvar cls = node.getAttribute(\"className\") || \"\";\n\t\tif(!cls || (\" \" + cls + \" \").indexOf(\" \" + classStr + \" \") < 0){\n\t\t\tnode.setAttribute(\"className\", cls + (cls ? \" \" : \"\") + classStr);\n\t\t}\n\t};\n\tg._removeClass = function(/*DomNode*/node, /*String*/classStr){\n\t\t// summary:\n\t\t//\t\tRemoves classes from node.\n\t\tvar cls = node.getAttribute(\"className\");\n\t\tif(cls){\n\t\t\tnode.setAttribute(\n\t\t\t\t\"className\",\n\t\t\t\tcls.replace(new RegExp('(^|\\\\s+)' + classStr + '(\\\\s+|$)'), \"$1$2\")\n\t\t\t);\n\t\t}\n\t};\n\n\t// candidate for dojox.html.metrics (dynamic font resize handler is not implemented here)\n\n\t//\t\tderived from Morris John's emResized measurer\n\tb._getFontMeasurements = function(){\n\t\t// summary:\n\t\t//\t\tReturns an object that has pixel equivilents of standard font\n\t\t//\t\tsize values.\n\t\tvar heights = {\n\t\t\t'1em': 0, '1ex': 0, '100%': 0, '12pt': 0, '16px': 0, 'xx-small': 0,\n\t\t\t'x-small': 0, 'small': 0, 'medium': 0, 'large': 0, 'x-large': 0,\n\t\t\t'xx-large': 0\n\t\t};\n\t\tvar p, oldStyle;\t\n\t\tif(has(\"ie\")){\n\t\t\t//\tWe do a font-size fix if and only if one isn't applied already.\n\t\t\t// NOTE: If someone set the fontSize on the HTML Element, this will kill it.\n\t\t\toldStyle = win.doc.documentElement.style.fontSize || \"\";\n\t\t\tif(!oldStyle){\n\t\t\t\twin.doc.documentElement.style.fontSize=\"100%\";\n\t\t\t}\n\t\t}\n\n\t\t//\t\tset up the measuring node.\n\t\tvar div = domConstruct.create(\"div\", {style: {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tleft: \"0\",\n\t\t\t\ttop: \"-100px\",\n\t\t\t\twidth: \"30px\",\n\t\t\t\theight: \"1000em\",\n\t\t\t\tborderWidth: \"0\",\n\t\t\t\tmargin: \"0\",\n\t\t\t\tpadding: \"0\",\n\t\t\t\toutline: \"none\",\n\t\t\t\tlineHeight: \"1\",\n\t\t\t\toverflow: \"hidden\"\n\t\t\t}}, win.body());\n\n\t\t//\t\tdo the measurements.\n\t\tfor(p in heights){\n\t\t\tdiv.style.fontSize = p;\n\t\t\theights[p] = Math.round(div.offsetHeight * 12/16) * 16/12 / 1000;\n\t\t}\n\n\t\tif(has(\"ie\")){\n\t\t\t// Restore the font to its old style.\n\t\t\twin.doc.documentElement.style.fontSize = oldStyle;\n\t\t}\n\t\twin.body().removeChild(div);\n\t\treturn heights; //object\n\t};\n\n\tvar fontMeasurements = null;\n\n\tb._getCachedFontMeasurements = function(recalculate){\n\t\tif(recalculate || !fontMeasurements){\n\t\t\tfontMeasurements = b._getFontMeasurements();\n\t\t}\n\t\treturn fontMeasurements;\n\t};\n\n\t// candidate for dojox.html.metrics\n\n\tvar measuringNode = null, empty = {};\n\tb._getTextBox = function(\t/*String*/ text,\n\t\t\t\t\t\t\t\t/*Object*/ style,\n\t\t\t\t\t\t\t\t/*String?*/ className){\n\t\tvar m, s, al = arguments.length;\n\t\tvar i, box;\n\t\tif(!measuringNode){\n\t\t\tmeasuringNode = domConstruct.create(\"div\", {style: {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: \"-10000px\",\n\t\t\t\tleft: \"0\",\n\t\t\t\tvisibility: \"hidden\"\n\t\t\t}}, win.body());\n\t\t}\n\t\tm = measuringNode;\n\t\t// reset styles\n\t\tm.className = \"\";\n\t\ts = m.style;\n\t\ts.borderWidth = \"0\";\n\t\ts.margin = \"0\";\n\t\ts.padding = \"0\";\n\t\ts.outline = \"0\";\n\t\t// set new style\n\t\tif(al > 1 && style){\n\t\t\tfor(i in style){\n\t\t\t\tif(i in empty){ continue; }\n\t\t\t\ts[i] = style[i];\n\t\t\t}\n\t\t}\n\t\t// set classes\n\t\tif(al > 2 && className){\n\t\t\tm.className = className;\n\t\t}\n\t\t// take a measure\n\t\tm.innerHTML = text;\n\n\t\tif(m.getBoundingClientRect){\n\t\t\tvar bcr = m.getBoundingClientRect();\n\t\t\tbox = {l: bcr.left, t: bcr.top, w: bcr.width || (bcr.right - bcr.left), h: bcr.height || (bcr.bottom - bcr.top)};\n\t\t}else{\n\t\t\tbox = domGeom.getMarginBox(m);\n\t\t}\n\t\tm.innerHTML = \"\";\n\t\treturn box;\n\t};\n\n\tb._computeTextLocation = function(/*g.defaultTextShape*/textShape, /*Number*/width, /*Number*/height, /*Boolean*/fixHeight) {\n\t\tvar loc = {}, align = textShape.align;\n\t\tswitch (align) {\n\t\t\tcase 'end':\n\t\t\t\tloc.x = textShape.x - width;\n\t\t\t\tbreak;\n\t\t\tcase 'middle':\n\t\t\t\tloc.x = textShape.x - width / 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tloc.x = textShape.x;\n\t\t\t\tbreak;\n\t\t}\n\t\tvar c = fixHeight ? 0.75 : 1;\n\t\tloc.y = textShape.y - height*c; // **rough** approximation of the ascent...\n\t\treturn loc;\n\t};\n\tb._computeTextBoundingBox = function(/*shape.Text*/s){\n\t\t// summary:\n\t\t//\t\tCompute the bbox of the given shape.Text instance. Note that this method returns an\n\t\t//\t\tapproximation of the bbox, and should be used when the underlying renderer cannot provide precise metrics.\n\t\tif(!g._base._isRendered(s)){\n\t\t\treturn {x:0, y:0, width:0, height:0};\n\t\t}\n\t\tvar loc, textShape = s.getShape(),\n\t\t\tfont = s.getFont() || g.defaultFont,\n\t\t\tw = s.getTextWidth(),\n\t\t\th = g.normalizedLength(font.size);\n\t\tloc = b._computeTextLocation(textShape, w, h, true);\n\t\treturn {\n\t\t\tx: loc.x,\n\t\t\ty: loc.y,\n\t\t\twidth: w,\n\t\t\theight: h\n\t\t};\n\t};\n\tb._isRendered = function(/*Shape*/s){\n\t\tvar p = s.parent;\n\t\twhile(p && p.getParent){\n\t\t\tp = p.parent;\n\t\t}\n\t\treturn p !== null;\n\t};\n\n\t// candidate for dojo.dom\n\n\tvar uniqueId = 0;\n\tb._getUniqueId = function(){\n\t\t// summary:\n\t\t//\t\treturns a unique string for use with any DOM element\n\t\tvar id;\n\t\tdo{\n\t\t\tid = kernel._scopeName + \"xUnique\" + (++uniqueId);\n\t\t}while(dom.byId(id));\n\t\treturn id;\n\t};\n\n\t// IE10\n\n\tvar touchActionProp = has(\"pointer-events\") ? \"touchAction\" : has(\"MSPointer\") ? \"msTouchAction\" : null;\n\tb._fixMsTouchAction = touchActionProp ? function(/*dojox/gfx/shape.Surface*/surface){\n\t\tsurface.rawNode.style[touchActionProp] = \"none\";\n\t} : function() {};\n\n\t/*=====\n\tg.Stroke = {\n\t\t// summary:\n\t\t//\t\tA stroke defines stylistic properties that are used when drawing a path.\n\n\t\t// color: String\n\t\t//\t\tThe color of the stroke, default value 'black'.\n\t\tcolor: \"black\",\n\n\t\t// style: String\n\t\t//\t\tThe style of the stroke, one of 'solid', ... . Default value 'solid'.\n\t\tstyle: \"solid\",\n\n\t\t// width: Number\n\t\t//\t\tThe width of a stroke, default value 1.\n\t\twidth: 1,\n\n\t\t// cap: String\n\t\t//\t\tThe endcap style of the path. One of 'butt', 'round', ... . Default value 'butt'.\n\t\tcap: \"butt\",\n\n\t\t// join: Number\n\t\t//\t\tThe join style to use when combining path segments. Default value 4.\n\t\tjoin: 4\n\t};\n\t\n\tg.Fill = {\n\t\t// summary:\n\t\t//\t\tDefines how to fill a shape. Four types of fills can be used: solid, linear gradient, radial gradient and pattern.\n\t\t//\t\tSee dojox/gfx.LinearGradient, dojox/gfx.RadialGradient and dojox/gfx.Pattern respectively for more information about the properties supported by each type.\n\t\t\n\t\t// type: String?\n\t\t//\t\tThe type of fill. One of 'linear', 'radial', 'pattern' or undefined. If not specified, a solid fill is assumed.\n\t\ttype:\"\",\n\t\t\n\t\t// color: String|dojo/Color?\n\t\t//\t\tThe color of a solid fill type.\n\t\tcolor:null,\n\t\t\n\t};\n\t\n\tg.LinearGradient = {\n\t\t// summary:\n\t\t//\t\tAn object defining the default stylistic properties used for Linear Gradient fills.\n\t\t//\t\tLinear gradients are drawn along a virtual line, which results in appearance of a rotated pattern in a given direction/orientation.\n\n\t\t// type: String\n\t\t//\t\tSpecifies this object is a Linear Gradient, value 'linear'\n\t\ttype: \"linear\",\n\n\t\t// x1: Number\n\t\t//\t\tThe X coordinate of the start of the virtual line along which the gradient is drawn, default value 0.\n\t\tx1: 0,\n\n\t\t// y1: Number\n\t\t//\t\tThe Y coordinate of the start of the virtual line along which the gradient is drawn, default value 0.\n\t\ty1: 0,\n\n\t\t// x2: Number\n\t\t//\t\tThe X coordinate of the end of the virtual line along which the gradient is drawn, default value 100.\n\t\tx2: 100,\n\n\t\t// y2: Number\n\t\t//\t\tThe Y coordinate of the end of the virtual line along which the gradient is drawn, default value 100.\n\t\ty2: 100,\n\n\t\t// colors: Array\n\t\t//\t\tAn array of colors at given offsets (from the start of the line).  The start of the line is\n\t\t//\t\tdefined at offest 0 with the end of the line at offset 1.\n\t\t//\t\tDefault value, [{ offset: 0, color: 'black'},{offset: 1, color: 'white'}], is a gradient from black to white.\n\t\tcolors: []\n\t};\n\t\n\tg.RadialGradient = {\n\t\t// summary:\n\t\t//\t\tSpecifies the properties for RadialGradients using in fills patterns.\n\n\t\t// type: String\n\t\t//\t\tSpecifies this is a RadialGradient, value 'radial'\n\t\ttype: \"radial\",\n\n\t\t// cx: Number\n\t\t//\t\tThe X coordinate of the center of the radial gradient, default value 0.\n\t\tcx: 0,\n\n\t\t// cy: Number\n\t\t//\t\tThe Y coordinate of the center of the radial gradient, default value 0.\n\t\tcy: 0,\n\n\t\t// r: Number\n\t\t//\t\tThe radius to the end of the radial gradient, default value 100.\n\t\tr: 100,\n\n\t\t// colors: Array\n\t\t//\t\tAn array of colors at given offsets (from the center of the radial gradient).\n\t\t//\t\tThe center is defined at offest 0 with the outer edge of the gradient at offset 1.\n\t\t//\t\tDefault value, [{ offset: 0, color: 'black'},{offset: 1, color: 'white'}], is a gradient from black to white.\n\t\tcolors: []\n\t};\n\t\n\tg.Pattern = {\n\t\t// summary:\n\t\t//\t\tAn object specifying the default properties for a Pattern using in fill operations.\n\n\t\t// type: String\n\t\t//\t\tSpecifies this object is a Pattern, value 'pattern'.\n\t\ttype: \"pattern\",\n\n\t\t// x: Number\n\t\t//\t\tThe X coordinate of the position of the pattern, default value is 0.\n\t\tx: 0,\n\n\t\t// y: Number\n\t\t//\t\tThe Y coordinate of the position of the pattern, default value is 0.\n\t\ty: 0,\n\n\t\t// width: Number\n\t\t//\t\tThe width of the pattern image, default value is 0.\n\t\twidth: 0,\n\n\t\t// height: Number\n\t\t//\t\tThe height of the pattern image, default value is 0.\n\t\theight: 0,\n\n\t\t// src: String\n\t\t//\t\tA url specifying the image to use for the pattern.\n\t\tsrc: \"\"\n\t};\n\n\tg.Text = {\n\t\t//\tsummary:\n\t\t//\t\tA keyword argument object defining both the text to be rendered in a VectorText shape,\n\t\t//\t\tand specifying position, alignment, and fitting.\n\t\t//\ttext: String\n\t\t//\t\tThe text to be rendered.\n\t\t//\tx: Number?\n\t\t//\t\tThe left coordinate for the text's bounding box.\n\t\t//\ty: Number?\n\t\t//\t\tThe top coordinate for the text's bounding box.\n\t\t//\twidth: Number?\n\t\t//\t\tThe width of the text's bounding box.\n\t\t//\theight: Number?\n\t\t//\t\tThe height of the text's bounding box.\n\t\t//\talign: String?\n\t\t//\t\tThe alignment of the text, as defined in SVG. Can be \"start\", \"end\" or \"middle\".\n\t\t//\tfitting: Number?\n\t\t//\t\tHow the text is to be fitted to the bounding box. Can be 0 (no fitting), 1 (fitting based on\n\t\t//\t\tpassed width of the bounding box and the size of the font), or 2 (fit text to the bounding box,\n\t\t//\t\tand ignore any size parameters).\n\t\t//\tleading: Number?\n\t\t//\t\tThe leading to be used between lines in the text.\n\t\t//\tdecoration: String?\n\t\t//\t\tAny text decoration to be used.\n\t};\n\n\tg.Font = {\n\t\t// summary:\n\t\t//\t\tAn object specifying the properties for a Font used in text operations.\n\t\n\t\t// type: String\n\t\t//\t\tSpecifies this object is a Font, value 'font'.\n\t\ttype: \"font\",\n\t\n\t\t// style: String\n\t\t//\t\tThe font style, one of 'normal', 'bold', default value 'normal'.\n\t\tstyle: \"normal\",\n\t\n\t\t// variant: String\n\t\t//\t\tThe font variant, one of 'normal', ... , default value 'normal'.\n\t\tvariant: \"normal\",\n\t\n\t\t// weight: String\n\t\t//\t\tThe font weight, one of 'normal', ..., default value 'normal'.\n\t\tweight: \"normal\",\n\t\n\t\t// size: String\n\t\t//\t\tThe font size (including units), default value '10pt'.\n\t\tsize: \"10pt\",\n\t\n\t\t// family: String\n\t\t//\t\tThe font family, one of 'serif', 'sanserif', ..., default value 'serif'.\n\t\tfamily: \"serif\"\n\t};\n\n\t=====*/\n\n\tlang.mixin(g, {\n\t\t// summary:\n\t\t//\t\tdefines constants, prototypes, and utility functions for the core Graphics API\n\n\t\t// default shapes, which are used to fill in missing parameters\n\t\tdefaultPath: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Path prototype object.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a Path, default value 'path'.\n\t\t\ttype: \"path\", \n\n\t\t\t// path: String\n\t\t\t//\t\tThe path commands. See W32C SVG 1.0 specification.\n\t\t\t//\t\tDefaults to empty string value.\n\t\t\tpath: \"\"\n\t\t},\n\t\tdefaultPolyline: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default PolyLine prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a PolyLine, default value 'polyline'.\n\t\t\ttype: \"polyline\",\n\n\t\t\t// points: Array\n\t\t\t//\t\tAn array of point objects [{x:0,y:0},...] defining the default polyline's line segments. Value is an empty array [].\n\t\t\tpoints: []\n\t\t},\n\t\tdefaultRect: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Rect prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this default object is a type of Rect. Value is 'rect'\n\t\t\ttype: \"rect\",\n\n\t\t\t// x: Number\n\t\t\t//\t\tThe X coordinate of the default rectangles position, value 0.\n\t\t\tx: 0,\n\n\t\t\t// y: Number\n\t\t\t//\t\tThe Y coordinate of the default rectangle's position, value 0.\n\t\t\ty: 0,\n\n\t\t\t// width: Number\n\t\t\t//\t\tThe width of the default rectangle, value 100.\n\t\t\twidth: 100,\n\n\t\t\t// height: Number\n\t\t\t//\t\tThe height of the default rectangle, value 100.\n\t\t\theight: 100,\n\n\t\t\t// r: Number\n\t\t\t//\t\tThe corner radius for the default rectangle, value 0.\n\t\t\tr: 0\n\t\t},\n\t\tdefaultEllipse: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Ellipse prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies that this object is a type of Ellipse, value is 'ellipse'\n\t\t\ttype: \"ellipse\",\n\n\t\t\t// cx: Number\n\t\t\t//\t\tThe X coordinate of the center of the ellipse, default value 0.\n\t\t\tcx: 0,\n\n\t\t\t// cy: Number\n\t\t\t//\t\tThe Y coordinate of the center of the ellipse, default value 0.\n\t\t\tcy: 0,\n\n\t\t\t// rx: Number\n\t\t\t//\t\tThe radius of the ellipse in the X direction, default value 200.\n\t\t\trx: 200,\n\n\t\t\t// ry: Number\n\t\t\t//\t\tThe radius of the ellipse in the Y direction, default value 200.\n\t\t\try: 100\n\t\t},\n\t\tdefaultCircle: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object defining the default Circle prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a circle, value 'circle'\n\t\t\ttype: \"circle\",\n\n\t\t\t// cx: Number\n\t\t\t//\t\tThe X coordinate of the center of the circle, default value 0.\n\t\t\tcx: 0,\n\t\t\t// cy: Number\n\t\t\t//\t\tThe Y coordinate of the center of the circle, default value 0.\n\t\t\tcy: 0,\n\n\t\t\t// r: Number\n\t\t\t//\t\tThe radius, default value 100.\n\t\t\tr: 100\n\t\t},\n\t\tdefaultLine: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object defining the default Line prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this is a Line, value 'line'\n\t\t\ttype: \"line\",\n\n\t\t\t// x1: Number\n\t\t\t//\t\tThe X coordinate of the start of the line, default value 0.\n\t\t\tx1: 0,\n\n\t\t\t// y1: Number\n\t\t\t//\t\tThe Y coordinate of the start of the line, default value 0.\n\t\t\ty1: 0,\n\n\t\t\t// x2: Number\n\t\t\t//\t\tThe X coordinate of the end of the line, default value 100.\n\t\t\tx2: 100,\n\n\t\t\t// y2: Number\n\t\t\t//\t\tThe Y coordinate of the end of the line, default value 100.\n\t\t\ty2: 100\n\t\t},\n\t\tdefaultImage: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Image prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is an image, value 'image'.\n\t\t\ttype: \"image\",\n\n\t\t\t// x: Number\n\t\t\t//\t\tThe X coordinate of the image's position, default value 0.\n\t\t\tx: 0,\n\n\t\t\t// y: Number\n\t\t\t//\t\tThe Y coordinate of the image's position, default value 0.\n\t\t\ty: 0,\n\n\t\t\t// width: Number\n\t\t\t//\t\tThe width of the image, default value 0.\n\t\t\twidth: 0,\n\n\t\t\t// height: Number\n\t\t\t//\t\tThe height of the image, default value 0.\n\t\t\theight: 0,\n\n\t\t\t// src: String\n\t\t\t//\t\tThe src url of the image, defaults to empty string.\n\t\t\tsrc: \"\"\n\t\t},\n\t\tdefaultText: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default Text prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this is a Text shape, value 'text'.\n\t\t\ttype: \"text\",\n\n\t\t\t// x: Number\n\t\t\t//\t\tThe X coordinate of the text position, default value 0.\n\t\t\tx: 0,\n\n\t\t\t// y: Number\n\t\t\t//\t\tThe Y coordinate of the text position, default value 0.\n\t\t\ty: 0,\n\n\t\t\t// text: String\n\t\t\t//\t\tThe text to be displayed, default value empty string.\n\t\t\ttext: \"\",\n\n\t\t\t// align:\tString\n\t\t\t//\t\tThe horizontal text alignment, one of 'start', 'end', 'center'. Default value 'start'.\n\t\t\talign: \"start\",\n\n\t\t\t// decoration: String\n\t\t\t//\t\tThe text decoration , one of 'none', ... . Default value 'none'.\n\t\t\tdecoration: \"none\",\n\n\t\t\t// rotated: Boolean\n\t\t\t//\t\tWhether the text is rotated, boolean default value false.\n\t\t\trotated: false,\n\n\t\t\t// kerning: Boolean\n\t\t\t//\t\tWhether kerning is used on the text, boolean default value true.\n\t\t\tkerning: true\n\t\t},\n\t\tdefaultTextPath: {\n\t\t\t// summary:\n\t\t\t//\t\tDefines the default TextPath prototype.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this is a TextPath, value 'textpath'.\n\t\t\ttype: \"textpath\",\n\n\t\t\t// text: String\n\t\t\t//\t\tThe text to be displayed, default value empty string.\n\t\t\ttext: \"\",\n\n\t\t\t// align: String\n\t\t\t//\t\tThe horizontal text alignment, one of 'start', 'end', 'center'. Default value 'start'.\n\t\t\talign: \"start\",\n\n\t\t\t// decoration: String\n\t\t\t//\t\tThe text decoration , one of 'none', ... . Default value 'none'.\n\t\t\tdecoration: \"none\",\n\n\t\t\t// rotated: Boolean\n\t\t\t//\t\tWhether the text is rotated, boolean default value false.\n\t\t\trotated: false,\n\n\t\t\t// kerning: Boolean\n\t\t\t//\t\tWhether kerning is used on the text, boolean default value true.\n\t\t\tkerning: true\n\t\t},\n\n\t\t// default stylistic attributes\n\t\tdefaultStroke: {\n\t\t\t// summary:\n\t\t\t//\t\tA stroke defines stylistic properties that are used when drawing a path.\n\t\t\t//\t\tThis object defines the default Stroke prototype.\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a type of Stroke, value 'stroke'.\n\t\t\ttype: \"stroke\",\n\n\t\t\t// color: String\n\t\t\t//\t\tThe color of the stroke, default value 'black'.\n\t\t\tcolor: \"black\",\n\n\t\t\t// style: String\n\t\t\t//\t\tThe style of the stroke, one of 'solid', ... . Default value 'solid'.\n\t\t\tstyle: \"solid\",\n\n\t\t\t// width: Number\n\t\t\t//\t\tThe width of a stroke, default value 1.\n\t\t\twidth: 1,\n\n\t\t\t// cap: String\n\t\t\t//\t\tThe endcap style of the path. One of 'butt', 'round', ... . Default value 'butt'.\n\t\t\tcap: \"butt\",\n\n\t\t\t// join: Number\n\t\t\t//\t\tThe join style to use when combining path segments. Default value 4.\n\t\t\tjoin: 4\n\t\t},\n\t\tdefaultLinearGradient: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object defining the default stylistic properties used for Linear Gradient fills.\n\t\t\t//\t\tLinear gradients are drawn along a virtual line, which results in appearance of a rotated pattern in a given direction/orientation.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a Linear Gradient, value 'linear'\n\t\t\ttype: \"linear\",\n\n\t\t\t// x1: Number\n\t\t\t//\t\tThe X coordinate of the start of the virtual line along which the gradient is drawn, default value 0.\n\t\t\tx1: 0,\n\n\t\t\t// y1: Number\n\t\t\t//\t\tThe Y coordinate of the start of the virtual line along which the gradient is drawn, default value 0.\n\t\t\ty1: 0,\n\n\t\t\t// x2: Number\n\t\t\t//\t\tThe X coordinate of the end of the virtual line along which the gradient is drawn, default value 100.\n\t\t\tx2: 100,\n\n\t\t\t// y2: Number\n\t\t\t//\t\tThe Y coordinate of the end of the virtual line along which the gradient is drawn, default value 100.\n\t\t\ty2: 100,\n\n\t\t\t// colors: Array\n\t\t\t//\t\tAn array of colors at given offsets (from the start of the line).  The start of the line is\n\t\t\t//\t\tdefined at offest 0 with the end of the line at offset 1.\n\t\t\t//\t\tDefault value, [{ offset: 0, color: 'black'},{offset: 1, color: 'white'}], is a gradient from black to white.\n\t\t\tcolors: [\n\t\t\t\t{ offset: 0, color: \"black\" }, { offset: 1, color: \"white\" }\n\t\t\t]\n\t\t},\n\t\tdefaultRadialGradient: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object specifying the default properties for RadialGradients using in fills patterns.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this is a RadialGradient, value 'radial'\n\t\t\ttype: \"radial\",\n\n\t\t\t// cx: Number\n\t\t\t//\t\tThe X coordinate of the center of the radial gradient, default value 0.\n\t\t\tcx: 0,\n\n\t\t\t// cy: Number\n\t\t\t//\t\tThe Y coordinate of the center of the radial gradient, default value 0.\n\t\t\tcy: 0,\n\n\t\t\t// r: Number\n\t\t\t//\t\tThe radius to the end of the radial gradient, default value 100.\n\t\t\tr: 100,\n\n\t\t\t// colors: Array\n\t\t\t//\t\tAn array of colors at given offsets (from the center of the radial gradient).\n\t\t\t//\t\tThe center is defined at offest 0 with the outer edge of the gradient at offset 1.\n\t\t\t//\t\tDefault value, [{ offset: 0, color: 'black'},{offset: 1, color: 'white'}], is a gradient from black to white.\n\t\t\tcolors: [\n\t\t\t\t{ offset: 0, color: \"black\" }, { offset: 1, color: \"white\" }\n\t\t\t]\n\t\t},\n\t\tdefaultPattern: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object specifying the default properties for a Pattern using in fill operations.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a Pattern, value 'pattern'.\n\t\t\ttype: \"pattern\",\n\n\t\t\t// x: Number\n\t\t\t//\t\tThe X coordinate of the position of the pattern, default value is 0.\n\t\t\tx: 0,\n\n\t\t\t// y: Number\n\t\t\t//\t\tThe Y coordinate of the position of the pattern, default value is 0.\n\t\t\ty: 0,\n\n\t\t\t// width: Number\n\t\t\t//\t\tThe width of the pattern image, default value is 0.\n\t\t\twidth: 0,\n\n\t\t\t// height: Number\n\t\t\t//\t\tThe height of the pattern image, default value is 0.\n\t\t\theight: 0,\n\n\t\t\t// src: String\n\t\t\t//\t\tA url specifying the image to use for the pattern.\n\t\t\tsrc: \"\"\n\t\t},\n\t\tdefaultFont: {\n\t\t\t// summary:\n\t\t\t//\t\tAn object specifying the default properties for a Font used in text operations.\n\n\t\t\t// type: String\n\t\t\t//\t\tSpecifies this object is a Font, value 'font'.\n\t\t\ttype: \"font\",\n\n\t\t\t// style: String\n\t\t\t//\t\tThe font style, one of 'normal', 'bold', default value 'normal'.\n\t\t\tstyle: \"normal\",\n\n\t\t\t// variant: String\n\t\t\t//\t\tThe font variant, one of 'normal', ... , default value 'normal'.\n\t\t\tvariant: \"normal\",\n\n\t\t\t// weight: String\n\t\t\t//\t\tThe font weight, one of 'normal', ..., default value 'normal'.\n\t\t\tweight: \"normal\",\n\n\t\t\t// size: String\n\t\t\t//\t\tThe font size (including units), default value '10pt'.\n\t\t\tsize: \"10pt\",\n\n\t\t\t// family: String\n\t\t\t//\t\tThe font family, one of 'serif', 'sanserif', ..., default value 'serif'.\n\t\t\tfamily: \"serif\"\n\t\t},\n\n\t\tgetDefault: (function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a function used to access default memoized prototype objects (see them defined above).\n\t\t\tvar typeCtorCache = {};\n\t\t\t// a memoized delegate()\n\t\t\treturn function(/*String*/ type){\n\t\t\t\tvar t = typeCtorCache[type];\n\t\t\t\tif(t){\n\t\t\t\t\treturn new t();\n\t\t\t\t}\n\t\t\t\tt = typeCtorCache[type] = new Function();\n\t\t\t\tt.prototype = g[ \"default\" + type ];\n\t\t\t\treturn new t();\n\t\t\t}\n\t\t})(),\n\n\t\tnormalizeColor: function(/*dojo/Color|Array|string|Object*/ color){\n\t\t\t// summary:\n\t\t\t//\t\tconverts any legal color representation to normalized\n\t\t\t//\t\tdojo/Color object\n\t\t\t// color:\n\t\t\t//\t\tA color representation.\n\t\t\treturn (color instanceof Color) ? color : new Color(color); // dojo/Color\n\t\t},\n\t\tnormalizeParameters: function(existed, update){\n\t\t\t// summary:\n\t\t\t//\t\tupdates an existing object with properties from an 'update'\n\t\t\t//\t\tobject\n\t\t\t// existed: Object\n\t\t\t//\t\tthe target object to be updated\n\t\t\t// update: Object\n\t\t\t//\t\tthe 'update' object, whose properties will be used to update\n\t\t\t//\t\tthe existed object\n\t\t\tvar x;\n\t\t\tif(update){\n\t\t\t\tvar empty = {};\n\t\t\t\tfor(x in existed){\n\t\t\t\t\tif(x in update && !(x in empty)){\n\t\t\t\t\t\texisted[x] = update[x];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn existed;\t// Object\n\t\t},\n\t\tmakeParameters: function(defaults, update){\n\t\t\t// summary:\n\t\t\t//\t\tcopies the original object, and all copied properties from the\n\t\t\t//\t\t'update' object\n\t\t\t// defaults: Object\n\t\t\t//\t\tthe object to be cloned before updating\n\t\t\t// update: Object\n\t\t\t//\t\tthe object, which properties are to be cloned during updating\n\t\t\t// returns: Object\n\t\t\t//      new object with new and default properties\n\t\t\tvar i = null;\n\t\t\tif(!update){\n\t\t\t\t// return dojo.clone(defaults);\n\t\t\t\treturn lang.delegate(defaults);\n\t\t\t}\n\t\t\tvar result = {};\n\t\t\tfor(i in defaults){\n\t\t\t\tif(!(i in result)){\n\t\t\t\t\tresult[i] = lang.clone((i in update) ? update[i] : defaults[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result; // Object\n\t\t},\n\t\tformatNumber: function(x, addSpace){\n\t\t\t// summary:\n\t\t\t//\t\tconverts a number to a string using a fixed notation\n\t\t\t// x: Number\n\t\t\t//\t\tnumber to be converted\n\t\t\t// addSpace: Boolean\n\t\t\t//\t\twhether to add a space before a positive number\n\t\t\t// returns: String\n\t\t\t//      the formatted value\n\t\t\tvar val = x.toString();\n\t\t\tif(val.indexOf(\"e\") >= 0){\n\t\t\t\tval = x.toFixed(4);\n\t\t\t}else{\n\t\t\t\tvar point = val.indexOf(\".\");\n\t\t\t\tif(point >= 0 && val.length - point > 5){\n\t\t\t\t\tval = x.toFixed(4);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(x < 0){\n\t\t\t\treturn val; // String\n\t\t\t}\n\t\t\treturn addSpace ? \" \" + val : val; // String\n\t\t},\n\t\t// font operations\n\t\tmakeFontString: function(font){\n\t\t\t// summary:\n\t\t\t//\t\tconverts a font object to a CSS font string\n\t\t\t// font: Object\n\t\t\t//\t\tfont object (see dojox/gfx.defaultFont)\n\t\t\treturn font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \" \" + font.family; // Object\n\t\t},\n\t\tsplitFontString: function(str){\n\t\t\t// summary:\n\t\t\t//\t\tconverts a CSS font string to a font object\n\t\t\t// description:\n\t\t\t//\t\tConverts a CSS font string to a gfx font object. The CSS font\n\t\t\t//\t\tstring components should follow the W3C specified order\n\t\t\t//\t\t(see http://www.w3.org/TR/CSS2/fonts.html#font-shorthand):\n\t\t\t//\t\tstyle, variant, weight, size, optional line height (will be\n\t\t\t//\t\tignored), and family. Note that the Font.size attribute is limited to numeric CSS length.\n\t\t\t// str: String\n\t\t\t//\t\ta CSS font string.\n\t\t\t// returns: Object\n\t\t\t//      object in dojox/gfx.defaultFont format\n\t\t\tvar font = g.getDefault(\"Font\");\n\t\t\tvar t = str.split(/\\s+/);\n\t\t\tdo{\n\t\t\t\tif(t.length < 5){ break; }\n\t\t\t\tfont.style   = t[0];\n\t\t\t\tfont.variant = t[1];\n\t\t\t\tfont.weight  = t[2];\n\t\t\t\tvar i = t[3].indexOf(\"/\");\n\t\t\t\tfont.size = i < 0 ? t[3] : t[3].substring(0, i);\n\t\t\t\tvar j = 4;\n\t\t\t\tif(i < 0){\n\t\t\t\t\tif(t[4] == \"/\"){\n\t\t\t\t\t\tj = 6;\n\t\t\t\t\t}else if(t[4].charAt(0) == \"/\"){\n\t\t\t\t\t\tj = 5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(j < t.length){\n\t\t\t\t\tfont.family = t.slice(j).join(\" \");\n\t\t\t\t}\n\t\t\t}while(false);\n\t\t\treturn font;\t// Object\n\t\t},\n\t\t// length operations\n\n\t\t// cm_in_pt: Number\n\t\t//\t\tpoints per centimeter (constant)\n\t\tcm_in_pt: 72 / 2.54,\n\n\t\t// mm_in_pt: Number\n\t\t//\t\tpoints per millimeter (constant)\n\t\tmm_in_pt: 7.2 / 2.54,\n\n\t\tpx_in_pt: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current number of pixels per point.\n\t\t\treturn g._base._getCachedFontMeasurements()[\"12pt\"] / 12;\t// Number\n\t\t},\n\n\t\tpt2px: function(len){\n\t\t\t// summary:\n\t\t\t//\t\tconverts points to pixels\n\t\t\t// len: Number\n\t\t\t//\t\ta value in points\n\t\t\treturn len * g.px_in_pt();\t// Number\n\t\t},\n\n\t\tpx2pt: function(len){\n\t\t\t// summary:\n\t\t\t//\t\tconverts pixels to points\n\t\t\t// len: Number\n\t\t\t//\t\ta value in pixels\n\t\t\treturn len / g.px_in_pt();\t// Number\n\t\t},\n\n\t\tnormalizedLength: function(len) {\n\t\t\t// summary:\n\t\t\t//\t\tconverts any length value to pixels\n\t\t\t// len: String\n\t\t\t//\t\ta length, e.g., '12pc'\n\t\t\t// returns: Number\n\t\t\t//      pixels\n\t\t\tif(len.length === 0){ return 0; }\n\t\t\tif(len.length > 2){\n\t\t\t\tvar px_in_pt = g.px_in_pt();\n\t\t\t\tvar val = parseFloat(len);\n\t\t\t\tswitch(len.slice(-2)){\n\t\t\t\t\tcase \"px\": return val;\n\t\t\t\t\tcase \"pt\": return val * px_in_pt;\n\t\t\t\t\tcase \"in\": return val * 72 * px_in_pt;\n\t\t\t\t\tcase \"pc\": return val * 12 * px_in_pt;\n\t\t\t\t\tcase \"mm\": return val * g.mm_in_pt * px_in_pt;\n\t\t\t\t\tcase \"cm\": return val * g.cm_in_pt * px_in_pt;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn parseFloat(len);\t// Number\n\t\t},\n\n\t\t// pathVmlRegExp: RegExp\n\t\t//\t\ta constant regular expression used to split a SVG/VML path into primitive components\n\t\t// tags:\n\t\t//\t\tprivate\n\t\tpathVmlRegExp: /([A-Za-z]+)|(\\d+(\\.\\d+)?)|(\\.\\d+)|(-\\d+(\\.\\d+)?)|(-\\.\\d+)/g,\n\n\t\t// pathVmlRegExp: RegExp\n\t\t//\t\ta constant regular expression used to split a SVG/VML path into primitive components\n\t\t// tags:\n\t\t//\t\tprivate\n\t\tpathSvgRegExp: /([A-DF-Za-df-z])|([-+]?\\d*[.]?\\d+(?:[eE][-+]?\\d+)?)/g,\n\n\t\tequalSources: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tcompares event sources, returns true if they are equal\n\t\t\t// a: Object\n\t\t\t//\t\tfirst event source\n\t\t\t// b: Object\n\t\t\t//\t\tevent source to compare against a\n\t\t\t// returns: Boolean\n\t\t\t//      true, if objects are truthy and the same\n\t\t\treturn a && b && a === b;\n\t\t},\n\n\t\tswitchTo: function(/*String|Object*/ renderer){\n\t\t\t// summary:\n\t\t\t//\t\tswitch the graphics implementation to the specified renderer.\n\t\t\t// renderer:\n\t\t\t//\t\tEither the string name of a renderer (eg. 'canvas', 'svg, ...) or the renderer\n\t\t\t//\t\tobject to switch to.\n\t\t\tvar ns = typeof renderer == \"string\" ? g[renderer] : renderer;\n\t\t\tif(ns){\n\t\t\t\t// If more options are added, update the docblock at the end of shape.js!\n\t\t\t\tarr.forEach([\"Group\", \"Rect\", \"Ellipse\", \"Circle\", \"Line\",\n\t\t\t\t\t\t\"Polyline\", \"Image\", \"Text\", \"Path\", \"TextPath\",\n\t\t\t\t\t\t\"Surface\", \"createSurface\", \"fixTarget\"], function(name){\n\t\t\t\t\tg[name] = ns[name];\n\t\t\t\t});\n\t\t\t\tif(typeof renderer == \"string\"){\n\t\t\t\t\tg.renderer = renderer;\n\t\t\t\t}else{\n\t\t\t\t\tarr.some([\"svg\",\"vml\",\"canvas\",\"canvasWithEvents\",\"silverlight\"], function(r){\n\t\t\t\t\t\treturn (g.renderer = g[r] && g[r].Surface === g.Surface ? r : null);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\t\n\t/*=====\n\t\tg.createSurface = function(parentNode, width, height){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a surface\n\t\t\t// parentNode: Node\n\t\t\t//\t\ta parent node\n\t\t\t// width: String|Number\n\t\t\t//\t\twidth of surface, e.g., \"100px\" or 100\n\t\t\t// height: String|Number\n\t\t\t//\t\theight of surface, e.g., \"100px\" or 100\n\t\t\t// returns: dojox/gfx.Surface\n\t\t\t//     newly created surface\n\t\t};\n\t\tg.fixTarget = function(){\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t};\n\t=====*/\n\t\n\treturn g; // defaults object api\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/gfx/_base.js\n// module id = 236\n// module chunks = 0","define([\"dojo/_base/lang\", \"./gfx/_base\", \"./gfx/renderer!\"], \n  function(lang, gfxBase, renderer){\n\t// module:\n\t//\t\tdojox/gfx\n\t// summary:\n\t//\t\tThis the root of the Dojo Graphics package\n\tgfxBase.switchTo(renderer);\n\treturn gfxBase;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/gfx.js\n// module id = 237\n// module chunks = 0","define([\"dojo/_base/lang\", \"./_base\", \"./matrix\", \"dojo/_base/Color\", \"dojo/_base/array\", \"dojo/_base/fx\", \"dojo/_base/connect\", \"dojo/sniff\"], \n  function(lang, g, m, Color, arr, fx, Hub, has){\n\tvar fxg = g.fx = {};\n\n\t// Generic interpolators. Should they be moved to dojox.fx?\n\n\tfunction InterpolNumber(start, end){\n\t\tthis.start = start, this.end = end;\n\t}\n\tInterpolNumber.prototype.getValue = function(r){\n\t\treturn (this.end - this.start) * r + this.start;\n\t};\n\n\tfunction InterpolUnit(start, end, units){\n\t\tthis.start = start, this.end = end;\n\t\tthis.units = units;\n\t}\n\tInterpolUnit.prototype.getValue = function(r){\n\t\treturn (this.end - this.start) * r + this.start + this.units;\n\t};\n\n\tfunction InterpolColor(start, end){\n\t\tthis.start = start, this.end = end;\n\t\tthis.temp = new Color();\n\t}\n\tInterpolColor.prototype.getValue = function(r){\n\t\treturn Color.blendColors(this.start, this.end, r, this.temp);\n\t};\n\n\tfunction InterpolValues(values){\n\t\tthis.values = values;\n\t\tthis.length = values.length;\n\t}\n\tInterpolValues.prototype.getValue = function(r){\n\t\treturn this.values[Math.min(Math.floor(r * this.length), this.length - 1)];\n\t};\n\n\tfunction InterpolObject(values, def){\n\t\tthis.values = values;\n\t\tthis.def = def ? def : {};\n\t}\n\tInterpolObject.prototype.getValue = function(r){\n\t\tvar ret = lang.clone(this.def);\n\t\tfor(var i in this.values){\n\t\t\tret[i] = this.values[i].getValue(r);\n\t\t}\n\t\treturn ret;\n\t};\n\n\tfunction InterpolTransform(stack, original){\n\t\tthis.stack = stack;\n\t\tthis.original = original;\n\t}\n\tInterpolTransform.prototype.getValue = function(r){\n\t\tvar ret = [];\n\t\tarr.forEach(this.stack, function(t){\n\t\t\tif(t instanceof m.Matrix2D){\n\t\t\t\tret.push(t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(t.name == \"original\" && this.original){\n\t\t\t\tret.push(this.original);\n\t\t\t\treturn;\n\t\t\t}\n \t\t\t// Adding support for custom matrices\n \t\t\tif(t.name == \"matrix\"){\n \t\t\t\tif((t.start instanceof m.Matrix2D) && (t.end instanceof m.Matrix2D)){\n \t\t\t\t\tvar transfMatrix = new m.Matrix2D();\n \t\t\t\t\tfor(var p in t.start) {\n \t\t\t\t\t\ttransfMatrix[p] = (t.end[p] - t.start[p])*r + t.start[p];\n \t\t\t\t\t}\n \t\t\t\t\tret.push(transfMatrix);\n \t\t\t\t}\n \t\t\t\treturn;\n \t\t\t}\n\t\t\tif(!(t.name in m)){ return; }\n\t\t\tvar f = m[t.name];\n\t\t\tif(typeof f != \"function\"){\n\t\t\t\t// constant\n\t\t\t\tret.push(f);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar val = arr.map(t.start, function(v, i){\n\t\t\t\t\t\t\treturn (t.end[i] - v) * r + v;\n\t\t\t\t\t\t}),\n\t\t\t\tmatrix = f.apply(m, val);\n\t\t\tif(matrix instanceof m.Matrix2D){\n\t\t\t\tret.push(matrix);\n\t\t\t}\n\t\t}, this);\n\t\treturn ret;\n\t};\n\n\tvar transparent = new Color(0, 0, 0, 0);\n\n\tfunction getColorInterpol(prop, obj, name, def){\n\t\tif(prop.values){\n\t\t\treturn new InterpolValues(prop.values);\n\t\t}\n\t\tvar value, start, end;\n\t\tif(prop.start){\n\t\t\tstart = g.normalizeColor(prop.start);\n\t\t}else{\n\t\t\tstart = value = obj ? (name ? obj[name] : obj) : def;\n\t\t}\n\t\tif(prop.end){\n\t\t\tend = g.normalizeColor(prop.end);\n\t\t}else{\n\t\t\tif(!value){\n\t\t\t\tvalue = obj ? (name ? obj[name] : obj) : def;\n\t\t\t}\n\t\t\tend = value;\n\t\t}\n\t\treturn new InterpolColor(start, end);\n\t}\n\n\tfunction getNumberInterpol(prop, obj, name, def){\n\t\tif(prop.values){\n\t\t\treturn new InterpolValues(prop.values);\n\t\t}\n\t\tvar value, start, end;\n\t\tif(prop.start){\n\t\t\tstart = prop.start;\n\t\t}else{\n\t\t\tstart = value = obj ? obj[name] : def;\n\t\t}\n\t\tif(prop.end){\n\t\t\tend = prop.end;\n\t\t}else{\n\t\t\tif(typeof value != \"number\"){\n\t\t\t\tvalue = obj ? obj[name] : def;\n\t\t\t}\n\t\t\tend = value;\n\t\t}\n\t\treturn new InterpolNumber(start, end);\n\t}\n\n\tfxg.animateStroke = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tReturns an animation which will change stroke properties over time.\n\t\t// args:\n\t\t//\t\tan object defining the animation setting.\n\t\t// example:\n\t\t//\t|\tfxg.animateStroke{{\n\t\t//\t|\t\tshape: shape,\n\t\t//\t|\t\tduration: 500,\n\t\t//\t|\t\tcolor: {start: \"red\", end: \"green\"},\n\t\t//\t|\t\twidth: {end: 15},\n\t\t//\t|\t\tjoin:  {values: [\"miter\", \"bevel\", \"round\"]}\n\t\t//\t|\t}).play();\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\n\t\tvar anim = new fx.Animation(args), shape = args.shape, stroke;\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\n\t\t\tstroke = shape.getStroke();\n\t\t\tvar prop = args.color, values = {}, value, start, end;\n\t\t\tif(prop){\n\t\t\t\tvalues.color = getColorInterpol(prop, stroke, \"color\", transparent);\n\t\t\t}\n\t\t\tprop = args.style;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.style = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.width;\n\t\t\tif(prop){\n\t\t\t\tvalues.width = getNumberInterpol(prop, stroke, \"width\", 1);\n\t\t\t}\n\t\t\tprop = args.cap;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.cap = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.join;\n\t\t\tif(prop){\n\t\t\t\tif(prop.values){\n\t\t\t\t\tvalues.join = new InterpolValues(prop.values);\n\t\t\t\t}else{\n\t\t\t\t\tstart = prop.start ? prop.start : (stroke && stroke.join || 0);\n\t\t\t\t\tend = prop.end ? prop.end : (stroke && stroke.join || 0);\n\t\t\t\t\tif(typeof start == \"number\" && typeof end == \"number\"){\n\t\t\t\t\t\tvalues.join = new InterpolNumber(start, end);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.curve = new InterpolObject(values, stroke);\n\t\t});\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setStroke\");\n\t\treturn anim; // dojo.Animation\n\t};\n\n\tfxg.animateFill = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tReturns an animation which will change fill color over time.\n\t\t//\t\tOnly solid fill color is supported at the moment\n\t\t// args:\n\t\t//\t\tan object defining the animation setting.\n\t\t// example:\n\t\t//\t|\tgfx.animateFill{{\n\t\t//\t|\t\tshape: shape,\n\t\t//\t|\t\tduration: 500,\n\t\t//\t|\t\tcolor: {start: \"red\", end: \"green\"}\n\t\t//\t|\t}).play();\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\n\t\tvar anim = new fx.Animation(args), shape = args.shape, fill;\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\n\t\t\tfill = shape.getFill();\n\t\t\tvar prop = args.color, values = {};\n\t\t\tif(prop){\n\t\t\t\tthis.curve = getColorInterpol(prop, fill, \"\", transparent);\n\t\t\t}\n\t\t});\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setFill\");\n\t\treturn anim; // dojo.Animation\n\t};\n\n\tfxg.animateFont = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tReturns an animation which will change font properties over time.\n\t\t// args:\n\t\t//\t\tan object defining the animation setting.\n\t\t// example:\n\t\t//\t|\tgfx.animateFont{{\n\t\t//\t|\t\tshape: shape,\n\t\t//\t|\t\tduration: 500,\n\t\t//\t|\t\tvariant: {values: [\"normal\", \"small-caps\"]},\n\t\t//\t|\t\tsize:  {end: 10, units: \"pt\"}\n\t\t//\t|\t}).play();\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\n\t\tvar anim = new fx.Animation(args), shape = args.shape, font;\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\n\t\t\tfont = shape.getFont();\n\t\t\tvar prop = args.style, values = {}, value, start, end;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.style = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.variant;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.variant = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.weight;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.weight = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.family;\n\t\t\tif(prop && prop.values){\n\t\t\t\tvalues.family = new InterpolValues(prop.values);\n\t\t\t}\n\t\t\tprop = args.size;\n\t\t\tif(prop && prop.units){\n\t\t\t\tstart = parseFloat(prop.start ? prop.start : (shape.font && shape.font.size || \"0\"));\n\t\t\t\tend = parseFloat(prop.end ? prop.end : (shape.font && shape.font.size || \"0\"));\n\t\t\t\tvalues.size = new InterpolUnit(start, end, prop.units);\n\t\t\t}\n\t\t\tthis.curve = new InterpolObject(values, font);\n\t\t});\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setFont\");\n\t\treturn anim; // dojo.Animation\n\t};\n\n\tfxg.animateTransform = function(/*Object*/ args){\n\t\t// summary:\n\t\t//\t\tReturns an animation which will change transformation over time.\n\t\t// args:\n\t\t//\t\tan object defining the animation setting.\n\t\t// example:\n\t\t//\t|\tgfx.animateTransform{{\n\t\t//\t|\t\tshape: shape,\n\t\t//\t|\t\tduration: 500,\n\t\t//\t|\t\ttransform: [\n\t\t//\t|\t\t\t{name: \"translate\", start: [0, 0], end: [200, 200]},\n\t\t//\t|\t\t\t{name: \"original\"}\n\t\t//\t|\t\t]\n\t\t//\t|\t}).play();\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\n\t\tvar anim = new fx.Animation(args), shape = args.shape, original;\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\n\t\t\toriginal = shape.getTransform();\n\t\t\tthis.curve = new InterpolTransform(args.transform, original);\n\t\t});\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setTransform\");\n\t\tif(g.renderer === \"svg\" && (has(\"ie\") >= 9 || has(\"ff\"))){\n\t\t\t// fix http://bugs.dojotoolkit.org/ticket/16879\n\t\t\tvar handlers = [\n\t\t\t\t\tHub.connect(anim, \"onBegin\", anim, function(){\n\t\t\t\t\t\tvar parent = shape.getParent();\n\t\t\t\t\t\twhile(parent && parent.getParent){\n\t\t\t\t\t\t\tparent = parent.getParent();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(parent){\n\t\t\t\t\t\t\tshape.__svgContainer = parent.rawNode.parentNode;\n\t\t\t\t\t\t\tshape.__svgRoot = parent.rawNode;\n\t\t\t\t\t\t\tif(shape.__svgRoot && shape.__svgRoot.getAttribute){\n\t\t\t\t\t\t\t\tshape.__svgWidth = parseInt(shape.__svgRoot.getAttribute(\"width\"), 10);\n\t\t\t\t\t\t\t\tif(isNaN(shape.__svgWidth)){\n\t\t\t\t\t\t\t\t\tdelete shape.__svgWidth;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tHub.connect(anim, \"onAnimate\", anim, function(){\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tif(shape.__svgContainer){\n\t\t\t\t\t\t\t\tvar ov = shape.__svgContainer.style.visibility;\n\t\t\t\t\t\t\t\tshape.__svgContainer.style.visibility = \"visible\";\n\t\t\t\t\t\t\t\tvar pokeNode = shape.__svgContainer.offsetHeight;\n\t\t\t\t\t\t\t\tshape.__svgContainer.style.visibility = ov;\n\t\t\t\t\t\t\t\tvar width = shape.__svgWidth;\n\t\t\t\t\t\t\t\tif(!isNaN(width)){\n\t\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\t\tshape.__svgRoot.setAttribute(\"width\", width  - 0.000005);\n\t\t\t\t\t\t\t\t\t\tshape.__svgRoot.setAttribute(\"width\", width);\n\t\t\t\t\t\t\t\t\t}catch(ignore){}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}catch(e){}\n\t\t\t\t\t}),\n\t\t\t\t\tHub.connect(anim, \"onEnd\", anim, function(){\n\t\t\t\t\t\tarr.forEach(handlers, Hub.disconnect);\n\t\t\t\t\t\tif(shape.__svgContainer){\n\t\t\t\t\t\t\tvar sn = shape.__svgContainer;\n\t\t\t\t\t\t\tif(sn.getAttribute(\"__gotVis\") == null){\n\t\t\t\t\t\t\t\tsn.setAttribute(\"__gotVis\", true);\n\t\t\t\t\t\t\t\tvar ov = shape.__svgContainer.style.visibility;\n\t\t\t\t\t\t\t\tvar root = shape.__svgRoot;\n\t\t\t\t\t\t\t\tvar width = shape.__svgWidth;\n\t\t\t\t\t\t\t\tsn.style.visibility = \"visible\";\n\t\t\t\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\t\tsn.style.visibility = ov;\n\t\t\t\t\t\t\t\t\t\tsn.removeAttribute(\"__gotVis\");\n\t\t\t\t\t\t\t\t\t\tsn = null;\n\t\t\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\t\t\tif(!isNaN(width)){\n\t\t\t\t\t\t\t\t\t\t\t\troot.setAttribute(\"width\", width - 0.000005);\n\t\t\t\t\t\t\t\t\t\t\t\troot.setAttribute(\"width\", width);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}catch(ignore){}\n\t\t\t\t\t\t\t\t\t}catch(e){}\n\t\t\t\t\t\t\t\t},100);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete shape.__svgContainer;\n\t\t\t\t\t\tdelete shape.__svgRoot;\n\t\t\t\t\t\tdelete shape.__svgWidth;\n\t\t\t\t\t})\n\t\t\t\t];\n\t\t}\n\t\treturn anim; // dojo.Animation\n\t};\n\t\n\treturn fxg;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/gfx/fx.js\n// module id = 238\n// module chunks = 0","define([\"./_base\",\"dojo/_base/lang\"], \n  function(g, lang){\n\tvar m = g.matrix = {};\n\n\t// candidates for dojox.math:\n\tvar _degToRadCache = {};\n\tm._degToRad = function(degree){\n\t\treturn _degToRadCache[degree] || (_degToRadCache[degree] = (Math.PI * degree / 180));\n\t};\n\tm._radToDeg = function(radian){ return radian / Math.PI * 180; };\n\n\tm.Matrix2D = function(arg){\n\t\t// summary:\n\t\t//\t\ta 2D matrix object\n\t\t// description:\n\t\t//\t\tNormalizes a 2D matrix-like object. If arrays is passed,\n\t\t//\t\tall objects of the array are normalized and multiplied sequentially.\n\t\t// arg: Object\n\t\t//\t\ta 2D matrix-like object, a number, or an array of such objects\n\t\tif(arg){\n\t\t\tif(typeof arg == \"number\"){\n\t\t\t\tthis.xx = this.yy = arg;\n\t\t\t}else if(arg instanceof Array){\n\t\t\t\tif(arg.length > 0){\n\t\t\t\t\tvar matrix = m.normalize(arg[0]);\n\t\t\t\t\t// combine matrices\n\t\t\t\t\tfor(var i = 1; i < arg.length; ++i){\n\t\t\t\t\t\tvar l = matrix, r = m.normalize(arg[i]);\n\t\t\t\t\t\tmatrix = new m.Matrix2D();\n\t\t\t\t\t\tmatrix.xx = l.xx * r.xx + l.xy * r.yx;\n\t\t\t\t\t\tmatrix.xy = l.xx * r.xy + l.xy * r.yy;\n\t\t\t\t\t\tmatrix.yx = l.yx * r.xx + l.yy * r.yx;\n\t\t\t\t\t\tmatrix.yy = l.yx * r.xy + l.yy * r.yy;\n\t\t\t\t\t\tmatrix.dx = l.xx * r.dx + l.xy * r.dy + l.dx;\n\t\t\t\t\t\tmatrix.dy = l.yx * r.dx + l.yy * r.dy + l.dy;\n\t\t\t\t\t}\n\t\t\t\t\tlang.mixin(this, matrix);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tlang.mixin(this, arg);\n\t\t\t}\n\t\t}\n\t};\n\n\t// the default (identity) matrix, which is used to fill in missing values\n\tlang.extend(m.Matrix2D, {xx: 1, xy: 0, yx: 0, yy: 1, dx: 0, dy: 0});\n\n\tlang.mixin(m, {\n\t\t// summary:\n\t\t//\t\tclass constants, and methods of dojox/gfx/matrix\n\n\t\t// matrix constants\n\n\t\t// identity: dojox/gfx/matrix.Matrix2D\n\t\t//\t\tan identity matrix constant: identity * (x, y) == (x, y)\n\t\tidentity: new m.Matrix2D(),\n\n\t\t// flipX: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta matrix, which reflects points at x = 0 line: flipX * (x, y) == (-x, y)\n\t\tflipX:    new m.Matrix2D({xx: -1}),\n\n\t\t// flipY: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta matrix, which reflects points at y = 0 line: flipY * (x, y) == (x, -y)\n\t\tflipY:    new m.Matrix2D({yy: -1}),\n\n\t\t// flipXY: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta matrix, which reflects points at the origin of coordinates: flipXY * (x, y) == (-x, -y)\n\t\tflipXY:   new m.Matrix2D({xx: -1, yy: -1}),\n\n\t\t// matrix creators\n\n\t\ttranslate: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tforms a translation matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to translate (move) points by specified offsets.\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x coordinate value, or a point-like object, which specifies offsets for both dimensions\n\t\t\t// b: Number?\n\t\t\t//\t\ta y coordinate value\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 1){\n\t\t\t\treturn new m.Matrix2D({dx: a, dy: b}); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\t// branch\n\t\t\treturn new m.Matrix2D({dx: a.x, dy: a.y}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tscale: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tforms a scaling matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to scale (magnify) points by specified offsets.\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\ta scaling factor used for the x coordinate, or\n\t\t\t//\t\ta uniform scaling factor used for the both coordinates, or\n\t\t\t//\t\ta point-like object, which specifies scale factors for both dimensions\n\t\t\t// b: Number?\n\t\t\t//\t\ta scaling factor used for the y coordinate\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 1){\n\t\t\t\treturn new m.Matrix2D({xx: a, yy: b}); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\tif(typeof a == \"number\"){\n\t\t\t\treturn new m.Matrix2D({xx: a, yy: a}); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn new m.Matrix2D({xx: a.x, yy: a.y}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\trotate: function(angle){\n\t\t\t// summary:\n\t\t\t//\t\tforms a rotating matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to rotate points\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified angle.\n\t\t\t// angle: Number\n\t\t\t//\t\tan angle of rotation in radians (>0 for CW)\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tvar c = Math.cos(angle);\n\t\t\tvar s = Math.sin(angle);\n\t\t\treturn new m.Matrix2D({xx: c, xy: -s, yx: s, yy: c}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\trotateg: function(degree){\n\t\t\t// summary:\n\t\t\t//\t\tforms a rotating matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to rotate points\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified degree.\n\t\t\t//\t\tSee dojox/gfx/matrix.rotate() for comparison.\n\t\t\t// degree: Number\n\t\t\t//\t\tan angle of rotation in degrees (>0 for CW)\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn m.rotate(m._degToRad(degree)); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewX: function(angle) {\n\t\t\t// summary:\n\t\t\t//\t\tforms an x skewing matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to skew points in the x dimension\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified angle.\n\t\t\t// angle: Number\n\t\t\t//\t\ta skewing angle in radians\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn new m.Matrix2D({xy: Math.tan(angle)}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewXg: function(degree){\n\t\t\t// summary:\n\t\t\t//\t\tforms an x skewing matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to skew points in the x dimension\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified degree.\n\t\t\t//\t\tSee dojox/gfx/matrix.skewX() for comparison.\n\t\t\t// degree: Number\n\t\t\t//\t\ta skewing angle in degrees\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn m.skewX(m._degToRad(degree)); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewY: function(angle){\n\t\t\t// summary:\n\t\t\t//\t\tforms a y skewing matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to skew points in the y dimension\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified angle.\n\t\t\t// angle: Number\n\t\t\t//\t\ta skewing angle in radians\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn new m.Matrix2D({yx: Math.tan(angle)}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewYg: function(degree){\n\t\t\t// summary:\n\t\t\t//\t\tforms a y skewing matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to skew points in the y dimension\n\t\t\t//\t\taround the origin of coordinates (0, 0) by specified degree.\n\t\t\t//\t\tSee dojox/gfx/matrix.skewY() for comparison.\n\t\t\t// degree: Number\n\t\t\t//\t\ta skewing angle in degrees\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn m.skewY(m._degToRad(degree)); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\treflect: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tforms a reflection matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to reflect points around a vector,\n\t\t\t//\t\twhich goes through the origin.\n\t\t\t// a: dojox/gfx.Point|Number\n\t\t\t//\t\ta point-like object, which specifies a vector of reflection, or an X value\n\t\t\t// b: Number?\n\t\t\t//\t\ta Y value\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length == 1){\n\t\t\t\tb = a.y;\n\t\t\t\ta = a.x;\n\t\t\t}\n\t\t\t// make a unit vector\n\t\t\tvar a2 = a * a, b2 = b * b, n2 = a2 + b2, xy = 2 * a * b / n2;\n\t\t\treturn new m.Matrix2D({xx: 2 * a2 / n2 - 1, xy: xy, yx: xy, yy: 2 * b2 / n2 - 1}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tproject: function(a, b){\n\t\t\t// summary:\n\t\t\t//\t\tforms an orthogonal projection matrix\n\t\t\t// description:\n\t\t\t//\t\tThe resulting matrix is used to project points orthogonally on a vector,\n\t\t\t//\t\twhich goes through the origin.\n\t\t\t// a: dojox/gfx.Point|Number\n\t\t\t//\t\ta point-like object, which specifies a vector of projection, or\n\t\t\t//\t\tan x coordinate value\n\t\t\t// b: Number?\n\t\t\t//\t\ta y coordinate value\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length == 1){\n\t\t\t\tb = a.y;\n\t\t\t\ta = a.x;\n\t\t\t}\n\t\t\t// make a unit vector\n\t\t\tvar a2 = a * a, b2 = b * b, n2 = a2 + b2, xy = a * b / n2;\n\t\t\treturn new m.Matrix2D({xx: a2 / n2, xy: xy, yx: xy, yy: b2 / n2}); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\n\t\t// ensure matrix 2D conformance\n\t\tnormalize: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tconverts an object to a matrix, if necessary\n\t\t\t// description:\n\t\t\t//\t\tConverts any 2D matrix-like object or an array of\n\t\t\t//\t\tsuch objects to a valid dojox/gfx/matrix.Matrix2D object.\n\t\t\t// matrix: Object\n\t\t\t//\t\tan object, which is converted to a matrix, if necessary\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\treturn (matrix instanceof m.Matrix2D) ? matrix : new m.Matrix2D(matrix); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\n\t\t// common operations\n\n\t\tisIdentity: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\treturns whether the specified matrix is the identity.\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix object to be tested\n\t\t\t// returns: Boolean\n\t\t\treturn matrix.xx == 1 && matrix.xy == 0 && matrix.yx == 0 && matrix.yy == 1 && matrix.dx == 0 && matrix.dy == 0; // Boolean\n\t\t},\n\t\tclone: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a copy of a 2D matrix\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix-like object to be cloned\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tvar obj = new m.Matrix2D();\n\t\t\tfor(var i in matrix){\n\t\t\t\tif(typeof(matrix[i]) == \"number\" && typeof(obj[i]) == \"number\" && obj[i] != matrix[i]) obj[i] = matrix[i];\n\t\t\t}\n\t\t\treturn obj; // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tinvert: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tinverts a 2D matrix\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix-like object to be inverted\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tvar M = m.normalize(matrix),\n\t\t\t\tD = M.xx * M.yy - M.xy * M.yx;\n\t\t\t\tM = new m.Matrix2D({\n\t\t\t\t\txx: M.yy/D, xy: -M.xy/D,\n\t\t\t\t\tyx: -M.yx/D, yy: M.xx/D,\n\t\t\t\t\tdx: (M.xy * M.dy - M.yy * M.dx) / D,\n\t\t\t\t\tdy: (M.yx * M.dx - M.xx * M.dy) / D\n\t\t\t\t});\n\t\t\treturn M; // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\t_multiplyPoint: function(matrix, x, y){\n\t\t\t// summary:\n\t\t\t//\t\tapplies a matrix to a point\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix object to be applied\n\t\t\t// x: Number\n\t\t\t//\t\tan x coordinate of a point\n\t\t\t// y: Number\n\t\t\t//\t\ta y coordinate of a point\n\t\t\t// returns: dojox/gfx.Point\n\t\t\treturn {x: matrix.xx * x + matrix.xy * y + matrix.dx, y: matrix.yx * x + matrix.yy * y + matrix.dy}; // dojox/gfx.Point\n\t\t},\n\t\tmultiplyPoint: function(matrix, /* Number||Point */ a, /* Number? */ b){\n\t\t\t// summary:\n\t\t\t//\t\tapplies a matrix to a point\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix object to be applied\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x coordinate of a point, or a point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y coordinate of a point\n\t\t\t// returns: dojox/gfx.Point\n\t\t\tvar M = m.normalize(matrix);\n\t\t\tif(typeof a == \"number\" && typeof b == \"number\"){\n\t\t\t\treturn m._multiplyPoint(M, a, b); // dojox/gfx.Point\n\t\t\t}\n\t\t\treturn m._multiplyPoint(M, a.x, a.y); // dojox/gfx.Point\n\t\t},\n\t\tmultiplyRectangle: function(matrix, /*Rectangle*/ rect){\n\t\t\t// summary:\n\t\t\t//\t\tApplies a matrix to a rectangle.\n\t\t\t// description:\n\t\t\t//\t\tThe method applies the transformation on all corners of the\n\t\t\t//\t\trectangle and returns the smallest rectangle enclosing the 4 transformed\n\t\t\t//\t\tpoints.\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix object to be applied.\n\t\t\t// rect: Rectangle\n\t\t\t//\t\tthe rectangle to transform.\n\t\t\t// returns: dojox/gfx.Rectangle\n\t\t\tvar M = m.normalize(matrix);\n\t\t\trect = rect || {x:0, y:0, width:0, height:0}; \n\t\t\tif(m.isIdentity(M))\n\t\t\t\treturn {x: rect.x, y: rect.y, width: rect.width, height: rect.height}; // dojo/gfx.Rectangle\n\t\t\tvar p0 = m.multiplyPoint(M, rect.x, rect.y),\n\t\t\t\tp1 = m.multiplyPoint(M, rect.x, rect.y + rect.height),\n\t\t\t\tp2 = m.multiplyPoint(M, rect.x + rect.width, rect.y),\n\t\t\t\tp3 = m.multiplyPoint(M, rect.x + rect.width, rect.y + rect.height),\n\t\t\t\tminx = Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\tminy = Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\t\tmaxx = Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\tmaxy = Math.max(p0.y, p1.y, p2.y, p3.y);\n\t\t\treturn{ // dojo/gfx.Rectangle\n\t\t\t\tx: minx,\n\t\t\t\ty: miny,\n\t\t\t\twidth: maxx - minx,\n\t\t\t\theight: maxy - miny\n\t\t\t};\n\t\t},\n\t\tmultiply: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tcombines matrices by multiplying them sequentially in the given order\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix-like object,\n\t\t\t//\t\tall subsequent arguments are matrix-like objects too\n\t\t\tvar M = m.normalize(matrix);\n\t\t\t// combine matrices\n\t\t\tfor(var i = 1; i < arguments.length; ++i){\n\t\t\t\tvar l = M, r = m.normalize(arguments[i]);\n\t\t\t\tM = new m.Matrix2D();\n\t\t\t\tM.xx = l.xx * r.xx + l.xy * r.yx;\n\t\t\t\tM.xy = l.xx * r.xy + l.xy * r.yy;\n\t\t\t\tM.yx = l.yx * r.xx + l.yy * r.yx;\n\t\t\t\tM.yy = l.yx * r.xy + l.yy * r.yy;\n\t\t\t\tM.dx = l.xx * r.dx + l.xy * r.dy + l.dx;\n\t\t\t\tM.dy = l.yx * r.dx + l.yy * r.dy + l.dy;\n\t\t\t}\n\t\t\treturn M; // dojox/gfx/matrix.Matrix2D\n\t\t},\n\n\t\t// high level operations\n\n\t\t_sandwich: function(matrix, x, y){\n\t\t\t// summary:\n\t\t\t//\t\tapplies a matrix at a central point\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix-like object, which is applied at a central point\n\t\t\t// x: Number\n\t\t\t//\t\tan x component of the central point\n\t\t\t// y: Number\n\t\t\t//\t\ta y component of the central point\n\t\t\treturn m.multiply(m.translate(x, y), matrix, m.translate(-x, -y)); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tscaleAt: function(a, b, c, d){\n\t\t\t// summary:\n\t\t\t//\t\tscales a picture using a specified point as a center of scaling\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.scale().\n\t\t\t// a: Number\n\t\t\t//\t\ta scaling factor used for the x coordinate, or a uniform scaling factor used for both coordinates\n\t\t\t// b: Number?\n\t\t\t//\t\ta scaling factor used for the y coordinate\n\t\t\t// c: Number|Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// d: Number\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tswitch(arguments.length){\n\t\t\t\tcase 4:\n\t\t\t\t\t// a and b are scale factor components, c and d are components of a point\n\t\t\t\t\treturn m._sandwich(m.scale(a, b), c, d); // dojox/gfx/matrix.Matrix2D\n\t\t\t\tcase 3:\n\t\t\t\t\tif(typeof c == \"number\"){\n\t\t\t\t\t\treturn m._sandwich(m.scale(a), b, c); // dojox/gfx/matrix.Matrix2D\n\t\t\t\t\t}\n\t\t\t\t\treturn m._sandwich(m.scale(a, b), c.x, c.y); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.scale(a), b.x, b.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\trotateAt: function(angle, a, b){\n\t\t\t// summary:\n\t\t\t//\t\trotates a picture using a specified point as a center of rotation\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.rotate().\n\t\t\t// angle: Number\n\t\t\t//\t\tan angle of rotation in radians (>0 for CW)\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.rotate(angle), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.rotate(angle), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\trotategAt: function(degree, a, b){\n\t\t\t// summary:\n\t\t\t//\t\trotates a picture using a specified point as a center of rotation\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.rotateg().\n\t\t\t// degree: Number\n\t\t\t//\t\tan angle of rotation in degrees (>0 for CW)\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.rotateg(degree), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.rotateg(degree), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewXAt: function(angle, a, b){\n\t\t\t// summary:\n\t\t\t//\t\tskews a picture along the x axis using a specified point as a center of skewing\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.skewX().\n\t\t\t// angle: Number\n\t\t\t//\t\ta skewing angle in radians\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.skewX(angle), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.skewX(angle), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewXgAt: function(degree, a, b){\n\t\t\t// summary:\n\t\t\t//\t\tskews a picture along the x axis using a specified point as a center of skewing\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.skewXg().\n\t\t\t// degree: Number\n\t\t\t//\t\ta skewing angle in degrees\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.skewXg(degree), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.skewXg(degree), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewYAt: function(angle, a, b){\n\t\t\t// summary:\n\t\t\t//\t\tskews a picture along the y axis using a specified point as a center of skewing\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.skewY().\n\t\t\t// angle: Number\n\t\t\t//\t\ta skewing angle in radians\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.skewY(angle), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.skewY(angle), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tskewYgAt: function(/* Number */ degree, /* Number||Point */ a, /* Number? */ b){\n\t\t\t// summary:\n\t\t\t//\t\tskews a picture along the y axis using a specified point as a center of skewing\n\t\t\t// description:\n\t\t\t//\t\tCompare with dojox/gfx/matrix.skewYg().\n\t\t\t// degree: Number\n\t\t\t//\t\ta skewing angle in degrees\n\t\t\t// a: Number|dojox/gfx.Point\n\t\t\t//\t\tan x component of a central point, or a central point\n\t\t\t// b: Number?\n\t\t\t//\t\ta y component of a central point\n\t\t\t// returns: dojox/gfx/matrix.Matrix2D\n\t\t\tif(arguments.length > 2){\n\t\t\t\treturn m._sandwich(m.skewYg(degree), a, b); // dojox/gfx/matrix.Matrix2D\n\t\t\t}\n\t\t\treturn m._sandwich(m.skewYg(degree), a.x, a.y); // dojox/gfx/matrix.Matrix2D\n\t\t}\n\n\t\t//TODO: rect-to-rect mapping, scale-to-fit (isotropic and anisotropic versions)\n\n\t});\n\t// propagate Matrix2D up\n\tg.Matrix2D = m.Matrix2D;\n\n\treturn m;\n});\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/gfx/matrix.js\n// module id = 239\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/_base/connect\"], \n\tfunction(lang, arr, declare, hub){\n\n\treturn declare(\"dojox.charting.plot2d._PlotEvents\", null, {\n\t\tconstructor: function(){\n\t\t\tthis._shapeEvents = [];\n\t\t\tthis._eventSeries = {};\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDestroy any internal elements and event handlers.\n\t\t\tthis.resetEvents();\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\tplotEvent: function(o){\n\t\t\t// summary:\n\t\t\t//\t\tStub function for use by specific plots.\n\t\t\t// o: Object\n\t\t\t//\t\tAn object intended to represent event parameters.\n\t\t},\n\t\traiseEvent: function(o){\n\t\t\t// summary:\n\t\t\t//\t\tRaises events in predefined order\n\t\t\t// o: Object\n\t\t\t//\t\tAn object intended to represent event parameters.\n\t\t\tthis.plotEvent(o);\n\t\t\tvar t = lang.delegate(o);\n\t\t\tt.originalEvent = o.type;\n\t\t\tt.originalPlot  = o.plot;\n\t\t\tt.type = \"onindirect\";\n\t\t\tarr.forEach(this.chart.stack, function(plot){\n\t\t\t\tif(plot !== this && plot.plotEvent){\n\t\t\t\t\tt.plot = plot;\n\t\t\t\t\tplot.plotEvent(t);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\t\tconnect: function(object, method){\n\t\t\t// summary:\n\t\t\t//\t\tHelper function to connect any object's method to our plotEvent.\n\t\t\t// object: Object\n\t\t\t//\t\tThe object to connect to.\n\t\t\t// method: String|Function\n\t\t\t//\t\tThe method to fire when our plotEvent is fired.\n\t\t\t// returns: Array\n\t\t\t//\t\tThe handle as returned from dojo.connect (see dojo.connect).\n\t\t\tthis.dirty = true;\n\t\t\treturn hub.connect(this, \"plotEvent\", object, method);\t//\tArray\n\t\t},\n\t\tevents: function(){\n\t\t\t// summary:\n\t\t\t//\t\tFind out if any event handlers have been connected to our plotEvent.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tA flag indicating that there are handlers attached.\n\t\t\treturn !!this.plotEvent.after;\n\t\t},\n\t\tresetEvents: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReset all events attached to our plotEvent (i.e. disconnect).\n\t\t\tif(this._shapeEvents.length){\n\t\t\t\tarr.forEach(this._shapeEvents, function(item){\n\t\t\t\t\titem.shape.disconnect(item.handle);\n\t\t\t\t});\n\t\t\t\tthis._shapeEvents = [];\n\t\t\t}\n\t\t\tthis.raiseEvent({type: \"onplotreset\", plot: this});\n\t\t},\n\t\t_connectSingleEvent: function(o, eventName){\n\t\t\tthis._shapeEvents.push({\n\t\t\t\tshape:  o.eventMask,\n\t\t\t\thandle: o.eventMask.connect(eventName, this, function(e){\n\t\t\t\t\to.type  = eventName;\n\t\t\t\t\to.event = e;\n\t\t\t\t\tthis.raiseEvent(o);\n\t\t\t\t\to.event = null;\n\t\t\t\t})\n\t\t\t});\n\t\t},\n\t\t_connectEvents: function(o){\n\t\t\tif(o){\n\t\t\t\to.chart = this.chart;\n\t\t\t\to.plot  = this;\n\t\t\t\to.hAxis = this.hAxis || null;\n\t\t\t\to.vAxis = this.vAxis || null;\n\t\t\t\to.eventMask = o.eventMask || o.shape;\n\t\t\t\tthis._connectSingleEvent(o, \"onmouseover\");\n\t\t\t\tthis._connectSingleEvent(o, \"onmouseout\");\n\t\t\t\tthis._connectSingleEvent(o, \"onclick\");\n\t\t\t}\n\t\t},\n\t\t_reconnectEvents: function(seriesName){\n\t\t\tvar a = this._eventSeries[seriesName];\n\t\t\tif(a){\n\t\t\t\tarr.forEach(a, this._connectEvents, this);\n\t\t\t}\n\t\t},\n\t\tfireEvent: function(seriesName, eventName, index, eventObject){\n\t\t\t// summary:\n\t\t\t//\t\tEmulates firing an event for a given data value (specified by\n\t\t\t//\t\tan index) of a given series.\n\t\t\t// seriesName: String\n\t\t\t//\t\tSeries name.\n\t\t\t// eventName: String\n\t\t\t//\t\tEvent name to emulate.\n\t\t\t// index: Number\n\t\t\t//\t\tValid data value index used to raise an event.\n\t\t\t// eventObject: Object?\n\t\t\t//\t\tOptional event object. Especially useful for synthetic events.\n\t\t\t//\t\tDefault: null.\n\t\t\tvar s = this._eventSeries[seriesName];\n\t\t\tif(s && s.length && index < s.length){\n\t\t\t\tvar o = s[index];\n\t\t\t\to.type  = eventName;\n\t\t\t\to.event = eventObject || null;\n\t\t\t\tthis.raiseEvent(o);\n\t\t\t\to.event = null;\n\t\t\t}\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/_PlotEvents.js\n// module id = 240\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/connect\", \"dojo/has\",\n\t\t\"./Base\", \"../scaler/primitive\", \"dojox/gfx\", \"dojox/gfx/fx\", \"dojox/lang/utils\"], \n\tfunction(lang, declare, hub, has, Base, primitive, gfx, fx, du){\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__CartesianCtorArgs\", dojox.charting.plot2d.__PlotCtorArgs, {\n\t\t// hAxis: String?\n\t\t//\t\tThe horizontal axis name.\n\t\thAxis: \"x\",\n\n\t\t// vAxis: String?\n\t\t//\t\tThe vertical axis name\n\t\tvAxis: \"y\",\n\n\t\t// labels: Boolean?\n\t\t//\t\tFor plots that support labels, whether or not to draw labels for each data item.  Default is false.\n\t\tlabels:\t\t\tfalse,\n\n\t\t// fixed: Boolean?\n        //\t\tWhether a fixed precision must be applied to data values for display. Default is true.\n\t\tfixed:\t\t\ttrue,\n\n\t\t// precision: Number?\n        //\t\tThe precision at which to round data values for display. Default is 0.\n\t\tprecision:\t\t1,\n\n\t\t// labelOffset: Number?\n\t\t//\t\tThe amount in pixels by which to offset labels when using \"outside\" labelStyle.  Default is 10.\n\t\tlabelOffset:\t10,\n\n\t\t// labelStyle: String?\n\t\t//\t\tOptions as to where to draw labels.  This must be either \"inside\" or \"outside\". By default\n\t\t//      the labels are drawn \"inside\" the shape representing the data point (a column rectangle for a Columns plot\n\t\t//      or a marker for a Line plot for instance). When \"outside\" is used the labels are drawn above the data point shape.\n\t\tlabelStyle:\t\t\"inside\",\n\n\t\t// htmlLabels: Boolean?\n\t\t//\t\tWhether or not to use HTML to render slice labels. Default is true.\n\t\thtmlLabels:\t\ttrue,\n\n\t\t// omitLabels: Boolean?\n\t\t//\t\tWhether labels that do not fit in an item render are omitted or not.\tThis applies only when labelStyle\n\t\t//\t\tis \"inside\".\tDefault is false.\n\t\tomitLabels: true,\n\n\t\t// labelFunc: Function?\n\t\t//\t\tAn optional function to use to compute label text. It takes precedence over\n\t\t//\t\tthe default text when available.\n\t\t//\t|\t\tfunction labelFunc(value, fixed, precision) {}\n\t\t//\t\t`value` is the data value to display\n\t\t//\t\t`fixed` is true if fixed precision must be applied.\n\t\t//\t\t`precision` is the requested precision to be applied.\n\t\tlabelFunc: null\n\t});\n\t=====*/\n\n\tvar alwaysFalse = function(){ return false; }\n\n\treturn declare(\"dojox.charting.plot2d.CartesianBase\", Base, {\n\t\tbaseParams: {\n\t\t\thAxis: \t\t\t\"x\",\n\t\t\tvAxis: \t\t\t\"y\",\n\t\t\tlabels:\t\t\tfalse,\n\t\t\tlabelOffset:    10,\n\t\t\tfixed:\t\t\ttrue,\n\t\t\tprecision:\t\t1,\n\t\t\tlabelStyle:\t\t\"inside\",\n\t\t\thtmlLabels:\t\ttrue,\t\t// use HTML to draw labels\n\t\t\tomitLabels:\t\ttrue,\n\t\t\tlabelFunc:\t\tnull\n        },\n\n\t\t// summary:\n\t\t//\t\tBase class for cartesian plot types.\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a cartesian base plot for cartesian charts.\n\t\t\t// chart: dojox/chart/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__CartesianCtorArgs?\n\t\t\t//\t\tAn optional arguments object to help define the plot.\n\t\t\tthis.axes = [\"hAxis\", \"vAxis\"];\n\t\t\tthis.zoom = null;\n\t\t\tthis.zoomQueue = [];\t// zooming action task queue\n\t\t\tthis.lastWindow = {vscale: 1, hscale: 1, xoffset: 0, yoffset: 0};\n\t\t\tthis.hAxis = (kwArgs && kwArgs.hAxis) || \"x\";\n\t\t\tthis.vAxis = (kwArgs && kwArgs.vAxis) || \"y\";\n\t\t\tthis.series = [];\n\t\t\tthis.opt = lang.clone(this.baseParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all of the information tied to this plot.\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.inherited(arguments);\n\t\t\tthis._hAxis = null;\n\t\t\tthis._vAxis = null;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\n\t\t},\n\t\tcleanGroup: function(creator, noClip){\n\t\t\tthis.inherited(arguments);\n\t\t\tif(!noClip && this.chart._nativeClip){\n\t\t\t\tvar offsets = this.chart.offsets, dim = this.chart.dim;\n\t\t\t\tvar w = Math.max(0, dim.width  - offsets.l - offsets.r),\n\t\t\t\t\th = Math.max(0, dim.height - offsets.t - offsets.b);\n\t\t\t\tthis.group.setClip({ x: offsets.l, y: offsets.t, width: w, height: h });\n\t\t\t\tif(!this._clippedGroup){\n\t\t\t\t\tthis._clippedGroup = this.group.createGroup();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tpurgeGroup: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tthis._clippedGroup = null;\n\t\t},\n\t\tgetGroup: function(){\n\t\t\treturn this._clippedGroup || this.group;\n\t\t},\n\t\tsetAxis: function(axis){\n\t\t\t// summary:\n\t\t\t//\t\tSet an axis for this plot.\n\t\t\t// axis: dojox/charting/axis2d/Base\n\t\t\t//\t\tThe axis to set.\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(axis){\n\t\t\t\tthis[axis.vertical ? \"_vAxis\" : \"_hAxis\"] = axis;\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\n\t\t},\n\t\ttoPage: function(coord){\n\t\t\t// summary:\n\t\t\t//\t\tCompute page coordinates from plot axis data coordinates.\n\t\t\t// coord: Object?\n\t\t\t//\t\tThe coordinates in plot axis data coordinate space. For cartesian charts that is of the following form:\n\t\t\t//\t\t`{ hAxisName: 50, vAxisName: 200 }`\n\t\t\t//\t\tIf not provided return the transform method instead of the result of the transformation.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe resulting page pixel coordinates. That is of the following form:\n\t\t\t//\t\t`{ x: 50, y: 200 }`\n\t\t\tvar ah = this._hAxis, av = this._vAxis,\n\t\t\t\tsh = ah.getScaler(), sv = av.getScaler(),\n\t\t\t\tth = sh.scaler.getTransformerFromModel(sh),\n\t\t\t\ttv = sv.scaler.getTransformerFromModel(sv),\n\t\t\t\tc = this.chart.getCoords(),\n\t\t\t\to = this.chart.offsets, dim = this.chart.dim;\n\t\t\tvar t = function(coord){\n\t\t\t\tvar r = {};\n\t\t\t\tr.x = th(coord[ah.name]) + c.x + o.l;\n\t\t\t\tr.y = c.y + dim.height - o.b - tv(coord[av.name]);\n\t\t\t\treturn r;\n\t\t\t};\n\t\t\t// if no coord return the function so that we can capture the current transforms\n\t\t\t// and reuse them later on\n\t\t\treturn coord?t(coord):t; // Object\n\t\t},\n\t\ttoData: function(coord){\n\t\t\t// summary:\n\t\t\t//\t\tCompute plot axis data coordinates from page coordinates.\n\t\t\t// coord: Object\n\t\t\t//\t\tThe pixel coordinate in page coordinate space. That is of the following form:\n\t\t\t//\t\t`{ x: 50, y: 200 }`\n\t\t\t//\t\tIf not provided return the tranform method instead of the result of the transformation.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe resulting plot axis data coordinates. For cartesian charts that is of the following form:\n\t\t\t//\t\t`{ hAxisName: 50, vAxisName: 200 }`\n\t\t\tvar ah = this._hAxis, av = this._vAxis,\n\t\t\t\tsh = ah.getScaler(), sv = av.getScaler(),\n\t\t\t\tth = sh.scaler.getTransformerFromPlot(sh),\n\t\t\t\ttv = sv.scaler.getTransformerFromPlot(sv),\n\t\t\t\tc = this.chart.getCoords(),\n\t\t\t\to = this.chart.offsets, dim = this.chart.dim;\n\t\t\tvar t = function(coord){\n\t\t\t\tvar r = {};\n\t\t\t\tr[ah.name] = th(coord.x - c.x - o.l);\n\t\t\t\tr[av.name] = tv(c.y + dim.height - coord.y  - o.b);\n\t\t\t\treturn r;\n\t\t\t};\n\t\t\t// if no coord return the function so that we can capture the current transforms\n\t\t\t// and reuse them later on\n\t\t\treturn coord?t(coord):t; // Object\n\t\t},\n\t\tisDirty: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns whether or not this plot needs to be rendered.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tThe state of the plot.\n\t\t\treturn this.dirty || this._hAxis && this._hAxis.dirty || this._vAxis && this._vAxis.dirty;\t//\tBoolean\n\t\t},\n\t\tcreateLabel: function(group, value, bbox, theme){\n\t\t\tif(this.opt.labels){\n\t\t\t\tvar x, y, label = this.opt.labelFunc?this.opt.labelFunc.apply(this, [value, this.opt.fixed, this.opt.precision]):\n\t\t\t\t\tthis._getLabel(isNaN(value.y)?value:value.y);\n\t\t\t\tif(this.opt.labelStyle == \"inside\"){\n\t\t\t\t\tvar lbox = gfx._base._getTextBox(label, { font: theme.series.font } );\n\t\t\t\t\tx = bbox.x + bbox.width / 2;\n\t\t\t\t\ty = bbox.y + bbox.height / 2 + lbox.h / 4;\n\t\t\t\t\tif(lbox.w > bbox.width || lbox.h > bbox.height){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t}else{\n\t\t\t\t\tx = bbox.x + bbox.width / 2;\n\t\t\t\t\ty = bbox.y - this.opt.labelOffset;\n\t\t\t\t}\n\t\t\t\tthis.renderLabel(group, x, y, label, theme, this.opt.labelStyle == \"inside\");\n\t\t\t}\n\t\t},\n\t\tperformZoom: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tCreate/alter any zooming windows on this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\n\t\t\t// get current zooming various\n\t\t\tvar vs = this._vAxis.scale || 1,\n\t\t\t\ths = this._hAxis.scale || 1,\n\t\t\t\tvOffset = dim.height - offsets.b,\n\t\t\t\thBounds = this._hScaler.bounds,\n\t\t\t\txOffset = (hBounds.from - hBounds.lower) * hBounds.scale,\n\t\t\t\tvBounds = this._vScaler.bounds,\n\t\t\t\tyOffset = (vBounds.from - vBounds.lower) * vBounds.scale,\n\t\t\t\t// get incremental zooming various\n\t\t\t\trVScale = vs / this.lastWindow.vscale,\n\t\t\t\trHScale = hs / this.lastWindow.hscale,\n\t\t\t\trXOffset = (this.lastWindow.xoffset - xOffset)/\n\t\t\t\t\t((this.lastWindow.hscale == 1)? hs : this.lastWindow.hscale),\n\t\t\t\trYOffset = (yOffset - this.lastWindow.yoffset)/\n\t\t\t\t\t((this.lastWindow.vscale == 1)? vs : this.lastWindow.vscale),\n\n\t\t\t\tshape = this.getGroup(),\n\t\t\t\tanim = fx.animateTransform(lang.delegate({\n\t\t\t\t\tshape: shape,\n\t\t\t\t\tduration: 1200,\n\t\t\t\t\ttransform:[\n\t\t\t\t\t\t{name:\"translate\", start:[0, 0], end: [offsets.l * (1 - rHScale), vOffset * (1 - rVScale)]},\n\t\t\t\t\t\t{name:\"scale\", start:[1, 1], end: [rHScale, rVScale]},\n\t\t\t\t\t\t{name:\"original\"},\n\t\t\t\t\t\t{name:\"translate\", start: [0, 0], end: [rXOffset, rYOffset]}\n\t\t\t\t\t]}, this.zoom));\n\n\t\t\tlang.mixin(this.lastWindow, {vscale: vs, hscale: hs, xoffset: xOffset, yoffset: yOffset});\n\t\t\t//add anim to zooming action queue,\n\t\t\t//in order to avoid several zooming action happened at the same time\n\t\t\tthis.zoomQueue.push(anim);\n\t\t\t//perform each anim one by one in zoomQueue\n\t\t\thub.connect(anim, \"onEnd\", this, function(){\n\t\t\t\tthis.zoom = null;\n\t\t\t\tthis.zoomQueue.shift();\n\t\t\t\tif(this.zoomQueue.length > 0){\n\t\t\t\t\tthis.zoomQueue[0].play();\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(this.zoomQueue.length == 1){\n\t\t\t\tthis.zoomQueue[0].play();\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\n\t\t},\n\t\tinitializeScalers: function(dim, stats){\n\t\t\t// summary:\n\t\t\t//\t\tInitializes scalers using attached axes.\n\t\t\t// dim: Object\n\t\t\t//\t\tSize of a plot area in pixels as {width, height}.\n\t\t\t// stats: Object\n\t\t\t//\t\tMin/max of data in both directions as {hmin, hmax, vmin, vmax}.\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this._hAxis){\n\t\t\t\tif(!this._hAxis.initialized()){\n\t\t\t\t\tthis._hAxis.calculate(stats.hmin, stats.hmax, dim.width);\n\t\t\t\t}\n\t\t\t\tthis._hScaler = this._hAxis.getScaler();\n\t\t\t}else{\n\t\t\t\tthis._hScaler = primitive.buildScaler(stats.hmin, stats.hmax, dim.width);\n\t\t\t}\n\t\t\tif(this._vAxis){\n\t\t\t\tif(!this._vAxis.initialized()){\n\t\t\t\t\tthis._vAxis.calculate(stats.vmin, stats.vmax, dim.height);\n\t\t\t\t}\n\t\t\t\tthis._vScaler = this._vAxis.getScaler();\n\t\t\t}else{\n\t\t\t\tthis._vScaler = primitive.buildScaler(stats.vmin, stats.vmax, dim.height);\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\n\t\t},\n\t\tisNullValue: function(value){\n\t\t\tif(value === null || typeof value == \"undefined\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar h = this._hAxis ? this._hAxis.isNullValue : alwaysFalse,\n\t\t\t\tv = this._vAxis ? this._vAxis.isNullValue : alwaysFalse;\n\t\t\tif(typeof value == \"number\"){\n\t\t\t\treturn h(1) || v(value);\n\t\t\t}\n\t\t\treturn h(isNaN(value.x) ? 1 : value.x) || value.y === null || v(value.y);\n\t\t}\t\t\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/CartesianBase.js\n// module id = 241\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/kernel\" ,\"./lambda\"],\n\tfunction(lang, kernel, df){\n// This module adds high-level functions and related constructs:\n//\t- reversed versions of array-processing functions similar to standard JS functions\n\n// Notes:\n//\t- this module provides reversed versions of standard array-processing functions:\n//\t\tforEachRev, mapRev, filterRev\n\n// Defined methods:\n//\t- take any valid lambda argument as the functional argument\n//\t- operate on dense arrays\n//\t- take a string as the array argument\n\n\tlang.mixin(df, {\n\t\t// JS 1.6 standard array functions, which can take a lambda as a parameter.\n\t\t// Consider using dojo._base.array functions, if you don't need the lambda support.\n\t\tfilterRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a new array with all elements that pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t = [], v, i = a.length - 1;\n\t\t\tfor(; i >= 0; --i){\n\t\t\t\tv = a[i];\n\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\n\t\t\t}\n\t\t\treturn t;\t// Array\n\t\t},\n\t\tforEachRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\texecutes a provided function once per array element.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i = a.length - 1; i >= 0; f.call(o, a[i], i, a), --i);\n\t\t},\n\t\tmapRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a new array with the results of calling\n\t\t\t//\t\ta provided function on every element in this array.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar n = a.length, t = new Array(n), i = n - 1, j = 0;\n\t\t\tfor(; i >= 0; t[j++] = f.call(o, a[i], i, a), --i);\n\t\t\treturn t;\t// Array\n\t\t},\n\t\teveryRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\ttests whether all elements in the array pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i = a.length - 1; i >= 0; --i){\n\t\t\t\tif(!f.call(o, a[i], i, a)){\n\t\t\t\t\treturn false;\t// Boolean\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\t// Boolean\n\t\t},\n\t\tsomeRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\ttests whether some element in the array passes the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i = a.length - 1; i >= 0; --i){\n\t\t\t\tif(f.call(o, a[i], i, a)){\n\t\t\t\t\treturn true;\t// Boolean\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\t// Boolean\n\t\t}\n\t});\n\t\n\treturn df;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/lang/functional/reversed.js\n// module id = 242\n// module chunks = 0","define([\"./_base\", \"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/kernel\", \"dojo/_base/sniff\",\n\t\"dojo/on\", \"dojo/_base/array\", \"dojo/dom-construct\", \"dojo/_base/Color\", \"./matrix\" ],\n\tfunction(g, lang, declare, kernel, has, on, arr, domConstruct, Color, matrixLib){\n\n\tvar shape = g.shape = {\n\t\t// summary:\n\t\t//\t\tThis module contains the core graphics Shape API.\n\t\t//\t\tDifferent graphics renderer implementation modules (svg, canvas, vml, silverlight, etc.) extend this\n\t\t//\t\tbasic api to provide renderer-specific implementations for each shape.\n\t};\n\n\tshape.Shape = declare(\"dojox.gfx.shape.Shape\", null, {\n\t\t// summary:\n\t\t//\t\ta Shape object, which knows how to apply\n\t\t//\t\tgraphical attributes and transformations\n\t\n\t\tconstructor: function(){\n\t\t\t// rawNode: Node\n\t\t\t//\t\tunderlying graphics-renderer-specific implementation object (if applicable)\n\t\t\tthis.rawNode = null;\n\n\t\t\t// shape: Object\n\t\t\t//\t\tan abstract shape object\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\n\t\t\t//\t\tdojox/gfx.defaultRect,\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\n\t\t\t//\t\tdojox/gfx.defaultCircle,\n\t\t\t//\t\tdojox/gfx.defaultLine,\n\t\t\t//\t\tor dojox/gfx.defaultImage)\n\t\t\tthis.shape = null;\n\t\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta transformation matrix\n\t\t\tthis.matrix = null;\n\t\n\t\t\t// fillStyle: dojox/gfx.Fill\n\t\t\t//\t\ta fill object\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\n\t\t\t//\t\tdojox/gfx.defaultPattern,\n\t\t\t//\t\tor dojo/Color)\n\t\t\tthis.fillStyle = null;\n\t\n\t\t\t// strokeStyle: dojox/gfx.Stroke\n\t\t\t//\t\ta stroke object\n\t\t\t//\t\t(see dojox/gfx.defaultStroke)\n\t\t\tthis.strokeStyle = null;\n\t\n\t\t\t// bbox: dojox/gfx.Rectangle\n\t\t\t//\t\ta bounding box of this shape\n\t\t\t//\t\t(see dojox/gfx.defaultRect)\n\t\t\tthis.bbox = null;\n\t\n\t\t\t// virtual group structure\n\t\n\t\t\t// parent: Object\n\t\t\t//\t\ta parent or null\n\t\t\t//\t\t(see dojox/gfx/shape.Surface,\n\t\t\t//\t\tor dojox/gfx.Group)\n\t\t\tthis.parent = null;\n\t\n\t\t\t// parentMatrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta transformation matrix inherited from the parent\n\t\t\tthis.parentMatrix = null;\n\n\t\t\tif(has(\"gfxRegistry\")){\n\t\t\t\tvar uid = shape.register(this);\n\t\t\t\tthis.getUID = function(){\n\t\t\t\t\treturn uid;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReleases all internal resources owned by this shape. Once this method has been called,\n\t\t\t//\t\tthe instance is considered destroyed and should not be used anymore.\n\t\t\tif(has(\"gfxRegistry\")){\n\t\t\t\tshape.dispose(this);\n\t\t\t}\n\t\t\tif(this.rawNode && \"__gfxObject__\" in this.rawNode){\n\t\t\t\tthis.rawNode.__gfxObject__ = null;\n\t\t\t}\n\t\t\tthis.rawNode = null;\n\t\t},\n\t\n\t\t// trivial getters\n\t\n\t\tgetNode: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDifferent graphics rendering subsystems implement shapes in different ways.  This\n\t\t\t//\t\tmethod provides access to the underlying graphics subsystem object.  Clients calling this\n\t\t\t//\t\tmethod and using the return value must be careful not to try sharing or using the underlying node\n\t\t\t//\t\tin a general way across renderer implementation.\n\t\t\t//\t\tReturns the underlying graphics Node, or null if no underlying graphics node is used by this shape.\n\t\t\treturn this.rawNode; // Node\n\t\t},\n\t\tgetShape: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current Shape object or null\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\n\t\t\t//\t\tdojox/gfx.defaultRect,\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\n\t\t\t//\t\tdojox/gfx.defaultCircle,\n\t\t\t//\t\tdojox/gfx.defaultLine,\n\t\t\t//\t\tor dojox/gfx.defaultImage)\n\t\t\treturn this.shape; // Object\n\t\t},\n\t\tgetTransform: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the current transformation matrix applied to this Shape or null\n\t\t\treturn this.matrix;\t// dojox/gfx/matrix.Matrix2D\n\t\t},\n\t\tgetFill: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the current fill object or null\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\n\t\t\t//\t\tdojox/gfx.defaultPattern,\n\t\t\t//\t\tor dojo/Color)\n\t\t\treturn this.fillStyle;\t// Object\n\t\t},\n\t\tgetStroke: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the current stroke object or null\n\t\t\t//\t\t(see dojox/gfx.defaultStroke)\n\t\t\treturn this.strokeStyle;\t// Object\n\t\t},\n\t\tgetParent: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the parent Shape, Group or null if this Shape is unparented.\n\t\t\t//\t\t(see dojox/gfx/shape.Surface,\n\t\t\t//\t\tor dojox/gfx.Group)\n\t\t\treturn this.parent;\t// Object\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the bounding box Rectangle for this shape or null if a BoundingBox cannot be\n\t\t\t//\t\tcalculated for the shape on the current renderer or for shapes with no geometric area (points).\n\t\t\t//\t\tA bounding box is a rectangular geometric region\n\t\t\t//\t\tdefining the X and Y extent of the shape.\n\t\t\t//\t\t(see dojox/gfx.defaultRect)\n\t\t\t//\t\tNote that this method returns a direct reference to the attribute of this instance. Therefore you should\n\t\t\t//\t\tnot modify its value directly but clone it instead.\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t},\n\t\tgetTransformedBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns an array of four points or null\n\t\t\t//\t\tfour points represent four corners of the untransformed bounding box\n\t\t\tvar b = this.getBoundingBox();\n\t\t\tif(!b){\n\t\t\t\treturn null;\t// null\n\t\t\t}\n\t\t\tvar m = this._getRealMatrix(),\n\t\t\t\tgm = matrixLib;\n\t\t\treturn [\t// Array\n\t\t\t\t\tgm.multiplyPoint(m, b.x, b.y),\n\t\t\t\t\tgm.multiplyPoint(m, b.x + b.width, b.y),\n\t\t\t\t\tgm.multiplyPoint(m, b.x + b.width, b.y + b.height),\n\t\t\t\t\tgm.multiplyPoint(m, b.x, b.y + b.height)\n\t\t\t\t];\n\t\t},\n\t\tgetEventSource: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns a Node, which is used as\n\t\t\t//\t\ta source of events for this shape\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\treturn this.rawNode;\t// Node\n\t\t},\n\t\n\t\t// empty settings\n\t\t\n\t\tsetClip: function(clip){\n\t\t\t// summary:\n\t\t\t//\t\tsets the clipping area of this shape.\n\t\t\t// description:\n\t\t\t//\t\tThe clipping area defines the shape area that will be effectively visible. Everything that\n\t\t\t//\t\twould be drawn outside of the clipping area will not be rendered.\n\t\t\t//\t\tThe possible clipping area types are rectangle, ellipse, polyline and path, but all are not\n\t\t\t//\t\tsupported by all the renderers. vml only supports rectangle clipping, while the gfx silverlight renderer does not\n\t\t\t//\t\tsupport path clipping.\n\t\t\t//\t\tThe clip parameter defines the clipping area geometry, and should be an object with the following properties:\n\t\t\t//\n\t\t\t//\t\t- {x:Number, y:Number, width:Number, height:Number} for rectangular clip\n\t\t\t//\t\t- {cx:Number, cy:Number, rx:Number, ry:Number} for ellipse clip\n\t\t\t//\t\t- {points:Array} for polyline clip\n\t\t\t//\t\t- {d:String} for a path clip.\n\t\t\t//\n\t\t\t//\t\tThe clip geometry coordinates are expressed in the coordinate system used to draw the shape. In other\n\t\t\t//\t\twords, the clipping area is defined in the shape parent coordinate system and the shape transform is automatically applied.\n\t\t\t// example:\n\t\t\t//\t\tThe following example shows how to clip a gfx image with all the possible clip geometry: a rectangle,\n\t\t\t//\t\tan ellipse, a circle (using the ellipse geometry), a polyline and a path:\n\t\t\t//\n\t\t\t//\t|\tsurface.createImage({src:img, width:200,height:200}).setClip({x:10,y:10,width:50,height:50});\n\t\t\t//\t|\tsurface.createImage({src:img, x:100,y:50,width:200,height:200}).setClip({cx:200,cy:100,rx:20,ry:30});\n\t\t\t//\t|\tsurface.createImage({src:img, x:0,y:350,width:200,height:200}).setClip({cx:100,cy:425,rx:60,ry:60});\n\t\t\t//\t|\tsurface.createImage({src:img, x:300,y:0,width:200,height:200}).setClip({points:[350,0,450,50,380,130,300,110]});\n\t\t\t//\t|\tsurface.createImage({src:img, x:300,y:350,width:200,height:200}).setClip({d:\"M 350,350 C314,414 317,557 373,450.0000 z\"});\n\n\t\t\t// clip: Object\n\t\t\t//\t\tan object that defines the clipping geometry, or null to remove clip.\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tthis.clip = clip;\n\t\t},\n\t\t\n\t\tgetClip: function(){\n\t\t\treturn this.clip;\n\t\t},\n\t\n\t\tsetShape: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tsets a shape object\n\t\t\t//\t\t(the default implementation simply ignores it)\n\t\t\t// shape: Object\n\t\t\t//\t\ta shape object\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\n\t\t\t//\t\tdojox/gfx.defaultRect,\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\n\t\t\t//\t\tdojox/gfx.defaultCircle,\n\t\t\t//\t\tdojox/gfx.defaultLine,\n\t\t\t//\t\tor dojox/gfx.defaultImage)\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tthis.shape = g.makeParameters(this.shape, shape);\n\t\t\tthis.bbox = null;\n\t\t\treturn this;\t// self\n\t\t},\n\t\tsetFill: function(fill){\n\t\t\t// summary:\n\t\t\t//\t\tsets a fill object\n\t\t\t//\t\t(the default implementation simply ignores it)\n\t\t\t// fill: Object\n\t\t\t//\t\ta fill object\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\n\t\t\t//\t\tdojox/gfx.defaultPattern,\n\t\t\t//\t\tor dojo/_base/Color)\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tif(!fill){\n\t\t\t\t// don't fill\n\t\t\t\tthis.fillStyle = null;\n\t\t\t\treturn this;\t// self\n\t\t\t}\n\t\t\tvar f = null;\n\t\t\tif(typeof(fill) == \"object\" && \"type\" in fill){\n\t\t\t\t// gradient or pattern\n\t\t\t\tswitch(fill.type){\n\t\t\t\t\tcase \"linear\":\n\t\t\t\t\t\tf = g.makeParameters(g.defaultLinearGradient, fill);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"radial\":\n\t\t\t\t\t\tf = g.makeParameters(g.defaultRadialGradient, fill);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"pattern\":\n\t\t\t\t\t\tf = g.makeParameters(g.defaultPattern, fill);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// color object\n\t\t\t\tf = g.normalizeColor(fill);\n\t\t\t}\n\t\t\tthis.fillStyle = f;\n\t\t\treturn this;\t// self\n\t\t},\n\t\tsetStroke: function(stroke){\n\t\t\t// summary:\n\t\t\t//\t\tsets a stroke object\n\t\t\t//\t\t(the default implementation simply ignores it)\n\t\t\t// stroke: Object\n\t\t\t//\t\ta stroke object\n\t\t\t//\t\t(see dojox/gfx.defaultStroke)\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tif(!stroke){\n\t\t\t\t// don't stroke\n\t\t\t\tthis.strokeStyle = null;\n\t\t\t\treturn this;\t// self\n\t\t\t}\n\t\t\t// normalize the stroke\n\t\t\tif(typeof stroke == \"string\" || lang.isArray(stroke) || stroke instanceof Color){\n\t\t\t\tstroke = {color: stroke};\n\t\t\t}\n\t\t\tvar s = this.strokeStyle = g.makeParameters(g.defaultStroke, stroke);\n\t\t\ts.color = g.normalizeColor(s.color);\n\t\t\treturn this;\t// self\n\t\t},\n\t\tsetTransform: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tsets a transformation matrix\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta matrix or a matrix-like object\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\tthis.matrix = matrixLib.clone(matrix ? matrixLib.normalize(matrix) : matrixLib.identity);\n\t\t\treturn this._applyTransform();\t// self\n\t\t},\n\t\n\t\t_applyTransform: function(){\n\t\t\t// summary:\n\t\t\t//\t\tphysically sets a matrix\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\treturn this;\t// self\n\t\t},\n\t\n\t\t// z-index\n\t\n\t\tmoveToFront: function(){\n\t\t\t// summary:\n\t\t\t//\t\tmoves a shape to front of its parent's list of shapes\n\t\t\tvar p = this.getParent();\n\t\t\tif(p){\n\t\t\t\tp._moveChildToFront(this);\n\t\t\t\tthis._moveToFront();\t// execute renderer-specific action\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\tmoveToBack: function(){\n\t\t\t// summary:\n\t\t\t//\t\tmoves a shape to back of its parent's list of shapes\n\t\t\tvar p = this.getParent();\n\t\t\tif(p){\n\t\t\t\tp._moveChildToBack(this);\n\t\t\t\tthis._moveToBack();\t// execute renderer-specific action\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t_moveToFront: function(){\n\t\t\t// summary:\n\t\t\t//\t\trenderer-specific hook, see dojox/gfx/shape.Shape.moveToFront()\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t},\n\t\t_moveToBack: function(){\n\t\t\t// summary:\n\t\t\t//\t\trenderer-specific hook, see dojox/gfx/shape.Shape.moveToFront()\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t},\n\t\n\t\t// apply left & right transformation\n\t\n\t\tapplyRightTransform: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tmultiplies the existing matrix with an argument on right side\n\t\t\t//\t\t(this.matrix * matrix)\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta matrix or a matrix-like object\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\n\t\t\treturn matrix ? this.setTransform([this.matrix, matrix]) : this;\t// self\n\t\t},\n\t\tapplyLeftTransform: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tmultiplies the existing matrix with an argument on left side\n\t\t\t//\t\t(matrix * this.matrix)\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta matrix or a matrix-like object\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\n\t\t\treturn matrix ? this.setTransform([matrix, this.matrix]) : this;\t// self\n\t\t},\n\t\tapplyTransform: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\ta shortcut for dojox/gfx/shape.Shape.applyRightTransform\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta matrix or a matrix-like object\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\n\t\t\treturn matrix ? this.setTransform([this.matrix, matrix]) : this;\t// self\n\t\t},\n\t\n\t\t// virtual group methods\n\t\n\t\tremoveShape: function(silently){\n\t\t\t// summary:\n\t\t\t//\t\tremoves the shape from its parent's list of shapes\n\t\t\t// silently: Boolean\n\t\t\t//\t\tif true, do not redraw a picture yet\n\t\t\tif(this.parent){\n\t\t\t\tthis.parent.remove(this, silently);\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\t_setParent: function(parent, matrix){\n\t\t\t// summary:\n\t\t\t//\t\tsets a parent\n\t\t\t// parent: Object\n\t\t\t//\t\ta parent or null\n\t\t\t//\t\t(see dojox/gfx/shape.Surface,\n\t\t\t//\t\tor dojox/gfx.Group)\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t\t//\t\ta 2D matrix or a matrix-like object\n\t\t\tthis.parent = parent;\n\t\t\treturn this._updateParentMatrix(matrix);\t// self\n\t\t},\n\t\t_updateParentMatrix: function(matrix){\n\t\t\t// summary:\n\t\t\t//\t\tupdates the parent matrix with new matrix\n\t\t\t// matrix: dojox/gfx/Matrix2D\n\t\t\t//\t\ta 2D matrix or a matrix-like object\n\t\t\tthis.parentMatrix = matrix ? matrixLib.clone(matrix) : null;\n\t\t\treturn this._applyTransform();\t// self\n\t\t},\n\t\t_getRealMatrix: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the cumulative ('real') transformation matrix\n\t\t\t//\t\tby combining the shape's matrix with its parent's matrix\n\t\t\tvar m = this.matrix;\n\t\t\tvar p = this.parent;\n\t\t\twhile(p){\n\t\t\t\tif(p.matrix){\n\t\t\t\t\tm = matrixLib.multiply(p.matrix, m);\n\t\t\t\t}\n\t\t\t\tp = p.parent;\n\t\t\t}\n\t\t\treturn m;\t// dojox/gfx/matrix.Matrix2D\n\t\t}\n\t});\n\t\n\tshape._eventsProcessing = {\n\t\ton: function(type, listener){\n\t\t\t//\tsummary:\n\t\t\t//\t\tConnects an event to this shape.\n\n\t\t\treturn on(this.getEventSource(), type, shape.fixCallback(this, g.fixTarget, listener));\n\t\t},\n\n\t\tconnect: function(name, object, method){\n\t\t\t// summary:\n\t\t\t//\t\tconnects a handler to an event on this shape\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\t// redirect to fixCallback to normalize events and add the gfxTarget to the event. The latter\n\t\t\t// is done by dojox/gfx.fixTarget which is defined by each renderer\n\t\t\tif(name.substring(0, 2) == \"on\"){\n\t\t\t\tname = name.substring(2);\n\t\t\t}\n\t\t\treturn this.on(name, method ? lang.hitch(object, method) : object);\n\t\t},\n\n\t\tdisconnect: function(token){\n\t\t\t// summary:\n\t\t\t//\t\tconnects a handler by token from an event on this shape\n\t\t\t\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\n\t\t\treturn token.remove();\n\t\t}\n\t};\n\t\n\tshape.fixCallback = function(gfxElement, fixFunction, scope, method){\n\t\t// summary:\n\t\t//\t\tWraps the callback to allow for tests and event normalization\n\t\t//\t\tbefore it gets invoked. This is where 'fixTarget' is invoked.\n\t\t// tags:\n\t\t//      private\n\t\t// gfxElement: Object\n\t\t//\t\tThe GFX object that triggers the action (ex.:\n\t\t//\t\tdojox/gfx.Surface and dojox/gfx/shape.Shape). A new event property\n\t\t//\t\t'gfxTarget' is added to the event to reference this object.\n\t\t//\t\tfor easy manipulation of GFX objects by the event handlers.\n\t\t// fixFunction: Function\n\t\t//\t\tThe function that implements the logic to set the 'gfxTarget'\n\t\t//\t\tproperty to the event. It should be 'dojox/gfx.fixTarget' for\n\t\t//\t\tmost of the cases\n\t\t// scope: Object\n\t\t//\t\tOptional. The scope to be used when invoking 'method'. If\n\t\t//\t\tomitted, a global scope is used.\n\t\t// method: Function|String\n\t\t//\t\tThe original callback to be invoked.\n\t\tif(!method){\n\t\t\tmethod = scope;\n\t\t\tscope = null;\n\t\t}\n\t\tif(lang.isString(method)){\n\t\t\tscope = scope || kernel.global;\n\t\t\tif(!scope[method]){ throw(['dojox.gfx.shape.fixCallback: scope[\"', method, '\"] is null (scope=\"', scope, '\")'].join('')); }\n\t\t\treturn function(e){  \n\t\t\t\treturn fixFunction(e,gfxElement) ? scope[method].apply(scope, arguments || []) : undefined; }; // Function\n\t\t}\n\t\treturn !scope \n\t\t\t? function(e){ \n\t\t\t\treturn fixFunction(e,gfxElement) ? method.apply(scope, arguments) : undefined; } \n\t\t\t: function(e){ \n\t\t\t\treturn fixFunction(e,gfxElement) ? method.apply(scope, arguments || []) : undefined; }; // Function\n\t};\n\tlang.extend(shape.Shape, shape._eventsProcessing);\n\t\n\tshape.Container = {\n\t\t// summary:\n\t\t//\t\ta container of shapes, which can be used\n\t\t//\t\tas a foundation for renderer-specific groups, or as a way\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\n\t\n\t\t_init: function() {\n\t\t\t// children: Array\n\t\t\t//\t\ta list of children\n\t\t\tthis.children = [];\n\t\t\tthis._batch = 0;\n\t\t},\n\t\n\t\t// group management\n\t\n\t\topenBatch: function() {\n\t\t\t// summary:\n\t\t\t//\t\tstarts a new batch, subsequent new child shapes will be held in\n\t\t\t//\t\tthe batch instead of appending to the container directly.\n\t\t\t// description:\n\t\t\t//\t\tBecause the canvas renderer has no DOM hierarchy, the canvas implementation differs\n\t\t\t//\t\tsuch that it suspends the repaint requests for this container until the current batch is closed by a call to closeBatch().\n\t\t\treturn this;\n\t\t},\n\t\tcloseBatch: function() {\n\t\t\t// summary:\n\t\t\t//\t\tsubmits the current batch, append all pending child shapes to DOM\n\t\t\t// description:\n\t\t\t//\t\tOn canvas, this method flushes the pending redraws queue.\n\t\t\treturn this;\n\t\t},\n\t\tadd: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tadds a shape to the list\n\t\t\t// shape: dojox/gfx/shape.Shape\n\t\t\t//\t\tthe shape to add to the list\n\t\t\tvar oldParent = shape.getParent();\n\t\t\tif(oldParent){\n\t\t\t\toldParent.remove(shape, true);\n\t\t\t}\n\t\t\tthis.children.push(shape);\n\t\t\treturn shape._setParent(this, this._getRealMatrix());\t// self\n\t\t},\n\t\tremove: function(shape, silently){\n\t\t\t// summary:\n\t\t\t//\t\tremoves a shape from the list\n\t\t\t// shape: dojox/gfx/shape.Shape\n\t\t\t//\t\tthe shape to remove\n\t\t\t// silently: Boolean\n\t\t\t//\t\tif true, do not redraw a picture yet\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tif(this.children[i] == shape){\n\t\t\t\t\tif(silently){\n\t\t\t\t\t\t// skip for now\n\t\t\t\t\t}else{\n\t\t\t\t\t\tshape.parent = null;\n\t\t\t\t\t\tshape.parentMatrix = null;\n\t\t\t\t\t}\n\t\t\t\t\tthis.children.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\tclear: function(/*Boolean?*/ destroy){\n\t\t\t// summary:\n\t\t\t//\t\tremoves all shapes from a group/surface.\n\t\t\t// destroy: Boolean\n\t\t\t//\t\tIndicates whether the children should be destroyed. Optional.\n\t\t\tvar shape;\n\t\t\tfor(var i = 0; i < this.children.length;++i){\n\t\t\t\tshape = this.children[i];\n\t\t\t\tshape.parent = null;\n\t\t\t\tshape.parentMatrix = null;\n\t\t\t\tif(destroy){\n\t\t\t\t\tshape.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.children = [];\n\t\t\treturn this;\t// self\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns the bounding box Rectangle for this shape.\n\t\t\tif(this.children){\n\t\t\t\t// if this is a composite shape, then sum up all the children\n\t\t\t\tvar result = null;\n\t\t\t\tarr.forEach(this.children, function(shape){\n\t\t\t\t\tvar bb = shape.getBoundingBox();\n\t\t\t\t\tif(bb){\n\t\t\t\t\t\tvar ct = shape.getTransform();\n\t\t\t\t\t\tif(ct){\n\t\t\t\t\t\t\tbb = matrixLib.multiplyRectangle(ct, bb);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(result){\n\t\t\t\t\t\t\t// merge two bbox \n\t\t\t\t\t\t\tresult.x = Math.min(result.x, bb.x);\n\t\t\t\t\t\t\tresult.y = Math.min(result.y, bb.y);\n\t\t\t\t\t\t\tresult.endX = Math.max(result.endX, bb.x + bb.width);\n\t\t\t\t\t\t\tresult.endY = Math.max(result.endY, bb.y + bb.height);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t// first bbox \n\t\t\t\t\t\t\tresult = {\n\t\t\t\t\t\t\t\tx: bb.x,\n\t\t\t\t\t\t\t\ty: bb.y,\n\t\t\t\t\t\t\t\tendX: bb.x + bb.width,\n\t\t\t\t\t\t\t\tendY: bb.y + bb.height\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif(result){\n\t\t\t\t\tresult.width = result.endX - result.x;\n\t\t\t\t\tresult.height = result.endY - result.y;\n\t\t\t\t}\n\t\t\t\treturn result; // dojox/gfx.Rectangle\n\t\t\t}\n\t\t\t// unknown/empty bounding box, subclass shall override this impl \n\t\t\treturn null;\n\t\t},\n\t\t// moving child nodes\n\t\t_moveChildToFront: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tmoves a shape to front of the list of shapes\n\t\t\t// shape: dojox/gfx/shape.Shape\n\t\t\t//\t\tone of the child shapes to move to the front\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tif(this.children[i] == shape){\n\t\t\t\t\tthis.children.splice(i, 1);\n\t\t\t\t\tthis.children.push(shape);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\t_moveChildToBack: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tmoves a shape to back of the list of shapes\n\t\t\t// shape: dojox/gfx/shape.Shape\n\t\t\t//\t\tone of the child shapes to move to the front\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tif(this.children[i] == shape){\n\t\t\t\t\tthis.children.splice(i, 1);\n\t\t\t\t\tthis.children.unshift(shape);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t}\n\t};\n\n\tshape.Surface = declare(\"dojox.gfx.shape.Surface\", null, {\n\t\t// summary:\n\t\t//\t\ta surface object to be used for drawings\n\t\tconstructor: function(){\n\t\t\t// underlying node\n\t\t\tthis.rawNode = null;\n\t\t\t// the parent node\n\t\t\tthis._parent = null;\n\t\t\t// the list of DOM nodes to be deleted in the case of destruction\n\t\t\tthis._nodes = [];\n\t\t\t// the list of events to be detached in the case of destruction\n\t\t\tthis._events = [];\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tdestroy all relevant external resources and release all\n\t\t\t//\t\texternal references to make this object garbage-collectible\n\t\t\tarr.forEach(this._nodes, domConstruct.destroy);\n\t\t\tthis._nodes = [];\n\t\t\tarr.forEach(this._events, function(h){ if(h){ h.remove(); } });\n\t\t\tthis._events = [];\n\t\t\tthis.rawNode = null;\t// recycle it in _nodes, if it needs to be recycled\n\t\t\tif(has(\"ie\")){\n\t\t\t\twhile(this._parent.lastChild){\n\t\t\t\t\tdomConstruct.destroy(this._parent.lastChild);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis._parent.innerHTML = \"\";\n\t\t\t}\n\t\t\tthis._parent = null;\n\t\t},\n\t\tgetEventSource: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns a node, which can be used to attach event listeners\n\t\t\treturn this.rawNode; // Node\n\t\t},\n\t\t_getRealMatrix: function(){\n\t\t\t// summary:\n\t\t\t//\t\talways returns the identity matrix\n\t\t\treturn null;\t// dojox/gfx/Matrix2D\n\t\t},\n\t\t/*=====\n\t\t setDimensions: function(width, height){\n\t\t\t // summary:\n\t\t\t //\t\tsets the width and height of the rawNode\n\t\t\t // width: String\n\t\t\t //\t\twidth of surface, e.g., \"100px\"\n\t\t\t // height: String\n\t\t\t //\t\theight of surface, e.g., \"100px\"\n\t\t\t return this;\t// self\n\t\t },\n\t\t getDimensions: function(){\n\t\t\t // summary:\n\t\t\t //     gets current width and height in pixels\n\t\t\t // returns: Object\n\t\t\t //     object with properties \"width\" and \"height\"\n\t\t },\n\t\t =====*/\n\t\tisLoaded: true,\n\t\tonLoad: function(/*dojox/gfx/shape.Surface*/ surface){\n\t\t\t// summary:\n\t\t\t//\t\tlocal event, fired once when the surface is created\n\t\t\t//\t\tasynchronously, used only when isLoaded is false, required\n\t\t\t//\t\tonly for Silverlight.\n\t\t},\n\t\twhenLoaded: function(/*Object|Null*/ context, /*Function|String*/ method){\n\t\t\tvar f = lang.hitch(context, method);\n\t\t\tif(this.isLoaded){\n\t\t\t\tf(this);\n\t\t\t}else{\n\t\t\t\ton.once(this, \"load\", function(surface){\n\t\t\t\t\tf(surface);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\tlang.extend(shape.Surface, shape._eventsProcessing);\n\n\t/*=====\n\tg.Point = declare(\"dojox/gfx.Point\", null, {\n\t\t// summary:\n\t\t//\t\t2D point for drawings - {x, y}\n\t\t// description:\n\t\t//\t\tDo not use this object directly!\n\t\t//\t\tUse the naked object instead: {x: 1, y: 2}.\n\t});\n\n\tg.Rectangle = declare(\"dojox.gfx.Rectangle\", null, {\n\t\t// summary:\n\t\t//\t\trectangle - {x, y, width, height}\n\t\t// description:\n\t\t//\t\tDo not use this object directly!\n\t\t//\t\tUse the naked object instead: {x: 1, y: 2, width: 100, height: 200}.\n\t});\n\t =====*/\n\n\n\tshape.Rect = declare(\"dojox.gfx.shape.Rect\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic rectangle\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\tThe underlying graphics system object (typically a DOM Node)\n\t\t\tthis.shape = g.getDefault(\"Rect\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box (its shape in this case)\n\t\t\treturn this.shape;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Ellipse = declare(\"dojox.gfx.shape.Ellipse\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic ellipse\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Ellipse\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box\n\t\t\tif(!this.bbox){\n\t\t\t\tvar shape = this.shape;\n\t\t\t\tthis.bbox = {x: shape.cx - shape.rx, y: shape.cy - shape.ry,\n\t\t\t\t\twidth: 2 * shape.rx, height: 2 * shape.ry};\n\t\t\t}\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Circle = declare(\"dojox.gfx.shape.Circle\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic circle\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Circle\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box\n\t\t\tif(!this.bbox){\n\t\t\t\tvar shape = this.shape;\n\t\t\t\tthis.bbox = {x: shape.cx - shape.r, y: shape.cy - shape.r,\n\t\t\t\t\twidth: 2 * shape.r, height: 2 * shape.r};\n\t\t\t}\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Line = declare(\"dojox.gfx.shape.Line\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic line (do not instantiate it directly)\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Line\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box\n\t\t\tif(!this.bbox){\n\t\t\t\tvar shape = this.shape;\n\t\t\t\tthis.bbox = {\n\t\t\t\t\tx:\t\tMath.min(shape.x1, shape.x2),\n\t\t\t\t\ty:\t\tMath.min(shape.y1, shape.y2),\n\t\t\t\t\twidth:\tMath.abs(shape.x2 - shape.x1),\n\t\t\t\t\theight:\tMath.abs(shape.y2 - shape.y1)\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Polyline = declare(\"dojox.gfx.shape.Polyline\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic polyline/polygon (do not instantiate it directly)\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Polyline\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tsetShape: function(points, closed){\n\t\t\t// summary:\n\t\t\t//\t\tsets a polyline/polygon shape object\n\t\t\t// points: Object|Array\n\t\t\t//\t\ta polyline/polygon shape object, or an array of points\n\t\t\t// closed: Boolean\n\t\t\t//\t\tclose the polyline to make a polygon\n\t\t\tif(points && points instanceof Array){\n\t\t\t\tthis.inherited(arguments, [{points: points}]);\n\t\t\t\tif(closed && this.shape.points.length){\n\t\t\t\t\tthis.shape.points.push(this.shape.points[0]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis.inherited(arguments, [points]);\n\t\t\t}\n\t\t\treturn this;\t// self\n\t\t},\n\t\t_normalizePoints: function(){\n\t\t\t// summary:\n\t\t\t//\t\tnormalize points to array of {x:number, y:number}\n\t\t\tvar p = this.shape.points, l = p && p.length;\n\t\t\tif(l && typeof p[0] == \"number\"){\n\t\t\t\tvar points = [];\n\t\t\t\tfor(var i = 0; i < l; i += 2){\n\t\t\t\t\tpoints.push({x: p[i], y: p[i + 1]});\n\t\t\t\t}\n\t\t\t\tthis.shape.points = points;\n\t\t\t}\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box\n\t\t\tif(!this.bbox && this.shape.points.length){\n\t\t\t\tvar p = this.shape.points;\n\t\t\t\tvar l = p.length;\n\t\t\t\tvar t = p[0];\n\t\t\t\tvar bbox = {l: t.x, t: t.y, r: t.x, b: t.y};\n\t\t\t\tfor(var i = 1; i < l; ++i){\n\t\t\t\t\tt = p[i];\n\t\t\t\t\tif(bbox.l > t.x) bbox.l = t.x;\n\t\t\t\t\tif(bbox.r < t.x) bbox.r = t.x;\n\t\t\t\t\tif(bbox.t > t.y) bbox.t = t.y;\n\t\t\t\t\tif(bbox.b < t.y) bbox.b = t.y;\n\t\t\t\t}\n\t\t\t\tthis.bbox = {\n\t\t\t\t\tx:\t\tbbox.l,\n\t\t\t\t\ty:\t\tbbox.t,\n\t\t\t\t\twidth:\tbbox.r - bbox.l,\n\t\t\t\t\theight:\tbbox.b - bbox.t\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\n\t\t}\n\t});\n\t\n\tshape.Image = declare(\"dojox.gfx.shape.Image\", shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic image (do not instantiate it directly)\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.shape = g.getDefault(\"Image\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box (its shape in this case)\n\t\t\treturn this.shape;\t// dojox/gfx.Rectangle\n\t\t},\n\t\tsetStroke: function(){\n\t\t\t// summary:\n\t\t\t//\t\tignore setting a stroke style\n\t\t\treturn this;\t// self\n\t\t},\n\t\tsetFill: function(){\n\t\t\t// summary:\n\t\t\t//\t\tignore setting a fill style\n\t\t\treturn this;\t// self\n\t\t}\n\t});\n\t\n\tshape.Text = declare(shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta generic text (do not instantiate it directly)\n\t\tconstructor: function(rawNode){\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM Node\n\t\t\tthis.fontStyle = null;\n\t\t\tthis.shape = g.getDefault(\"Text\");\n\t\t\tthis.rawNode = rawNode;\n\t\t},\n\t\tgetFont: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current font object or null\n\t\t\treturn this.fontStyle;\t// Object\n\t\t},\n\t\tsetFont: function(newFont){\n\t\t\t// summary:\n\t\t\t//\t\tsets a font for text\n\t\t\t// newFont: Object\n\t\t\t//\t\ta font object (see dojox/gfx.defaultFont) or a font string\n\t\t\tthis.fontStyle = typeof newFont == \"string\" ? g.splitFontString(newFont) :\n\t\t\t\tg.makeParameters(g.defaultFont, newFont);\n\t\t\tthis._setFont();\n\t\t\treturn this;\t// self\n\t\t},\n\t\tgetBoundingBox: function(){\n\t\t\tvar bbox = null, s = this.getShape();\n\t\t\tif(s.text){\n\t\t\t\tbbox = g._base._computeTextBoundingBox(this);\n\t\t\t}\n\t\t\treturn bbox;\n\t\t}\n\t});\n\t\n\tshape.Creator = {\n\t\t// summary:\n\t\t//\t\tshape creators\n\t\tcreateShape: function(shape){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a shape object based on its type; it is meant to be used\n\t\t\t//\t\tby group-like objects\n\t\t\t// shape: Object\n\t\t\t//\t\ta shape descriptor object\n\t\t\t// returns: dojox/gfx/shape.Shape | Null\n\t\t\t//      a fully instantiated surface-specific Shape object\n\t\t\tswitch(shape.type){\n\t\t\t\tcase g.defaultPath.type:\t\treturn this.createPath(shape);\n\t\t\t\tcase g.defaultRect.type:\t\treturn this.createRect(shape);\n\t\t\t\tcase g.defaultCircle.type:\t    return this.createCircle(shape);\n\t\t\t\tcase g.defaultEllipse.type:\t    return this.createEllipse(shape);\n\t\t\t\tcase g.defaultLine.type:\t\treturn this.createLine(shape);\n\t\t\t\tcase g.defaultPolyline.type:\treturn this.createPolyline(shape);\n\t\t\t\tcase g.defaultImage.type:\t\treturn this.createImage(shape);\n\t\t\t\tcase g.defaultText.type:\t\treturn this.createText(shape);\n\t\t\t\tcase g.defaultTextPath.type:\treturn this.createTextPath(shape);\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tcreateGroup: function(){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a group shape\n\t\t\treturn this.createObject(g.Group);\t// dojox/gfx/Group\n\t\t},\n\t\tcreateRect: function(rect){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a rectangle shape\n\t\t\t// rect: Object\n\t\t\t//\t\ta path object (see dojox/gfx.defaultRect)\n\t\t\treturn this.createObject(g.Rect, rect);\t// dojox/gfx/shape.Rect\n\t\t},\n\t\tcreateEllipse: function(ellipse){\n\t\t\t// summary:\n\t\t\t//\t\tcreates an ellipse shape\n\t\t\t// ellipse: Object\n\t\t\t//\t\tan ellipse object (see dojox/gfx.defaultEllipse)\n\t\t\treturn this.createObject(g.Ellipse, ellipse);\t// dojox/gfx/shape.Ellipse\n\t\t},\n\t\tcreateCircle: function(circle){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a circle shape\n\t\t\t// circle: Object\n\t\t\t//\t\ta circle object (see dojox/gfx.defaultCircle)\n\t\t\treturn this.createObject(g.Circle, circle);\t// dojox/gfx/shape.Circle\n\t\t},\n\t\tcreateLine: function(line){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a line shape\n\t\t\t// line: Object\n\t\t\t//\t\ta line object (see dojox/gfx.defaultLine)\n\t\t\treturn this.createObject(g.Line, line);\t// dojox/gfx/shape.Line\n\t\t},\n\t\tcreatePolyline: function(points){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a polyline/polygon shape\n\t\t\t// points: Object\n\t\t\t//\t\ta points object (see dojox/gfx.defaultPolyline)\n\t\t\t//\t\tor an Array of points\n\t\t\treturn this.createObject(g.Polyline, points);\t// dojox/gfx/shape.Polyline\n\t\t},\n\t\tcreateImage: function(image){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a image shape\n\t\t\t// image: Object\n\t\t\t//\t\tan image object (see dojox/gfx.defaultImage)\n\t\t\treturn this.createObject(g.Image, image);\t// dojox/gfx/shape.Image\n\t\t},\n\t\tcreateText: function(text){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a text shape\n\t\t\t// text: Object\n\t\t\t//\t\ta text object (see dojox/gfx.defaultText)\n\t\t\treturn this.createObject(g.Text, text);\t// dojox/gfx/shape.Text\n\t\t},\n\t\tcreatePath: function(path){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a path shape\n\t\t\t// path: Object\n\t\t\t//\t\ta path object (see dojox/gfx.defaultPath)\n\t\t\treturn this.createObject(g.Path, path);\t// dojox/gfx/shape.Path\n\t\t},\n\t\tcreateTextPath: function(text){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a text shape\n\t\t\t// text: Object\n\t\t\t//\t\ta textpath object (see dojox/gfx.defaultTextPath)\n\t\t\treturn this.createObject(g.TextPath, {}).setText(text);\t// dojox/gfx/shape.TextPath\n\t\t},\n\t\tcreateObject: function(shapeType, rawShape){\n\t\t\t// summary:\n\t\t\t//\t\tcreates an instance of the passed shapeType class\n\t\t\t// shapeType: Function\n\t\t\t//\t\ta class constructor to create an instance of\n\t\t\t// rawShape: Object \n\t\t\t//\t\tproperties to be passed in to the classes 'setShape' method\n\t\n\t\t\t// SHOULD BE RE-IMPLEMENTED BY THE RENDERER!\n\t\t\treturn null;\t// dojox/gfx/shape.Shape\n\t\t}\n\t};\n\t\n\t/*=====\n\t lang.extend(shape.Surface, shape.Container);\n\t lang.extend(shape.Surface, shape.Creator);\n\n\t g.Group = declare(shape.Shape, {\n\t\t// summary:\n\t\t//\t\ta group shape, which can be used\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\n\t});\n\tlang.extend(g.Group, shape.Container);\n\tlang.extend(g.Group, shape.Creator);\n\n\tg.Rect     = shape.Rect;\n\tg.Circle   = shape.Circle;\n\tg.Ellipse  = shape.Ellipse;\n\tg.Line     = shape.Line;\n\tg.Polyline = shape.Polyline;\n\tg.Text     = shape.Text;\n\tg.Surface  = shape.Surface;\n\t=====*/\n\n\treturn shape;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/gfx/shape.js\n// module id = 243\n// module chunks = 0","define([\"../..\", \"dojo/_base/lang\", \"dojo/_base/array\"], function(dojox, lang, arr){\n\tvar df = lang.getObject(\"lang.functional\", true, dojox);\n\n// This module adds high-level functions and related constructs:\n//\t- anonymous functions built from the string\n\n// Acknowledgements:\n//\t- lambda() is based on work by Oliver Steele\n//\t\t(http://osteele.com/sources/javascript/functional/functional.js)\n//\t\twhich was published under MIT License\n\n// Notes:\n//\t- lambda() produces functions, which after the compilation step are\n//\t\tas fast as regular JS functions (at least theoretically).\n\n// Lambda input values:\n//\t- returns functions unchanged\n//\t- converts strings to functions\n//\t- converts arrays to a functional composition\n\n\tvar lcache = {};\n\n\t// split() is augmented on IE6 to ensure the uniform behavior\n\tvar split = \"ab\".split(/a*/).length > 1 ? String.prototype.split :\n\t\t\tfunction(sep){\n\t\t\t\t var r = this.split.call(this, sep),\n\t\t\t\t\t m = sep.exec(this);\n\t\t\t\t if(m && m.index == 0){ r.unshift(\"\"); }\n\t\t\t\t return r;\n\t\t\t};\n\t\t\t\n\tvar lambda = function(/*String*/ s){\n\t\tvar args = [], sects = split.call(s, /\\s*->\\s*/m);\n\t\tif(sects.length > 1){\n\t\t\twhile(sects.length){\n\t\t\t\ts = sects.pop();\n\t\t\t\targs = sects.pop().split(/\\s*,\\s*|\\s+/m);\n\t\t\t\tif(sects.length){ sects.push(\"(function(\" + args.join(\", \") + \"){ return (\" + s + \"); })\"); }\n\t\t\t}\n\t\t}else if(s.match(/\\b_\\b/)){\n\t\t\targs = [\"_\"];\n\t\t}else{\n\t\t\tvar l = s.match(/^\\s*(?:[+*\\/%&|\\^\\.=<>]|!=)/m),\n\t\t\t\tr = s.match(/[+\\-*\\/%&|\\^\\.=<>!]\\s*$/m);\n\t\t\tif(l || r){\n\t\t\t\tif(l){\n\t\t\t\t\targs.push(\"$1\");\n\t\t\t\t\ts = \"$1\" + s;\n\t\t\t\t}\n\t\t\t\tif(r){\n\t\t\t\t\targs.push(\"$2\");\n\t\t\t\t\ts = s + \"$2\";\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// the point of the long regex below is to exclude all well-known\n\t\t\t\t// lower-case words from the list of potential arguments\n\t\t\t\tvar vars = s.\n\t\t\t\t\treplace(/(?:\\b[A-Z]|\\.[a-zA-Z_$])[a-zA-Z_$\\d]*|[a-zA-Z_$][a-zA-Z_$\\d]*:|this|true|false|null|undefined|typeof|instanceof|in|delete|new|void|arguments|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|escape|eval|isFinite|isNaN|parseFloat|parseInt|unescape|dojo|dijit|dojox|window|document|'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"/g, \"\").\n\t\t\t\t\tmatch(/([a-z_$][a-z_$\\d]*)/gi) || [], t = {};\n\t\t\t\tarr.forEach(vars, function(v){\n\t\t\t\t\tif(!t.hasOwnProperty(v)){\n\t\t\t\t\t\targs.push(v);\n\t\t\t\t\t\tt[v] = 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn {args: args, body: s};\t// Object\n\t};\n\n\tvar compose = function(/*Array*/ a){\n\t\treturn a.length ?\n\t\t\t\t\tfunction(){\n\t\t\t\t\t\tvar i = a.length - 1, x = df.lambda(a[i]).apply(this, arguments);\n\t\t\t\t\t\tfor(--i; i >= 0; --i){ x = df.lambda(a[i]).call(this, x); }\n\t\t\t\t\t\treturn x;\n\t\t\t\t\t}\n\t\t\t\t:\n\t\t\t\t\t// identity\n\t\t\t\t\tfunction(x){ return x; };\n\t};\n\n\tlang.mixin(df, {\n\t\t// lambda\n\t\trawLambda: function(/*String*/ s){\n\t\t\t// summary:\n\t\t\t//\t\tbuilds a function from a snippet, or array (composing),\n\t\t\t//\t\treturns an object describing the function; functions are\n\t\t\t//\t\tpassed through unmodified.\n\t\t\t// description:\n\t\t\t//\t\tThis method is to normalize a functional representation (a\n\t\t\t//\t\ttext snippet) to an object that contains an array of\n\t\t\t//\t\targuments, and a body , which is used to calculate the\n\t\t\t//\t\treturning value.\n\t\t\treturn lambda(s);\t// Object\n\t\t},\n\t\tbuildLambda: function(/*String*/ s){\n\t\t\t// summary:\n\t\t\t//\t\tbuilds a function from a snippet, returns a string, which\n\t\t\t//\t\trepresents the function.\n\t\t\t// description:\n\t\t\t//\t\tThis method returns a textual representation of a function\n\t\t\t//\t\tbuilt from the snippet. It is meant to be evaled in the\n\t\t\t//\t\tproper context, so local variables can be pulled from the\n\t\t\t//\t\tenvironment.\n\t\t\tvar l = lambda(s);\n\t\t\treturn \"function(\" + l.args.join(\",\") + \"){return (\" + l.body + \");}\";\t// String\n\t\t},\n\t\tlambda: function(/*Function|String|Array*/ s){\n\t\t\t// summary:\n\t\t\t//\t\tbuilds a function from a snippet, or array (composing),\n\t\t\t//\t\treturns a function object; functions are passed through\n\t\t\t//\t\tunmodified.\n\t\t\t// description:\n\t\t\t//\t\tThis method is used to normalize a functional\n\t\t\t//\t\trepresentation (a text snippet, an array, or a function) to\n\t\t\t//\t\ta function object.\n\t\t\tif(typeof s == \"function\"){ return s; }\n\t\t\tif(s instanceof Array){ return compose(s); }\n\t\t\tif(lcache.hasOwnProperty(s)){ return lcache[s]; }\n\t\t\tvar l = lambda(s);\n\t\t\treturn lcache[s] = new Function(l.args, \"return (\" + l.body + \");\");\t// Function\n\t\t},\n\t\tclearLambdaCache: function(){\n\t\t\t// summary:\n\t\t\t//\t\tclears internal cache of lambdas\n\t\t\tlcache = {};\n\t\t}\n\t});\n\t\n\treturn df;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/lang/functional/lambda.js\n// module id = 244\n// module chunks = 0","define([\"dojo/_base/kernel\"], function(dojo) {\n\t// module:\n\t//\t\tdojox/main\n\n\t/*=====\n\treturn {\n\t\t// summary:\n\t\t//\t\tThe dojox package main module; dojox package is somewhat unusual in that the main module currently just provides an empty object.\n\t\t//\t\tApps should require modules from the dojox packages directly, rather than loading this module.\n\t};\n\t=====*/\n\n\treturn dojo.dojox;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/main.js\n// module id = 245\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/window\", \"dojo/dom-geometry\", \"dojox/gfx\", \"dojo/has\"],\n\tfunction(lang, win, domGeom, g, has){\n\n\tvar common = lang.getObject(\"dojox.charting.axis2d.common\", true);\n\t\n\tvar clearNode = function(s){\n\t\ts.marginLeft   = \"0px\";\n\t\ts.marginTop    = \"0px\";\n\t\ts.marginRight  = \"0px\";\n\t\ts.marginBottom = \"0px\";\n\t\ts.paddingLeft   = \"0px\";\n\t\ts.paddingTop    = \"0px\";\n\t\ts.paddingRight  = \"0px\";\n\t\ts.paddingBottom = \"0px\";\n\t\ts.borderLeftWidth   = \"0px\";\n\t\ts.borderTopWidth    = \"0px\";\n\t\ts.borderRightWidth  = \"0px\";\n\t\ts.borderBottomWidth = \"0px\";\n\t};\n\n\tvar getBoxWidth = function(n){\n\t\t// marginBox is incredibly slow, so avoid it if we can\n\t\tif(n[\"getBoundingClientRect\"]){\n\t\t\tvar bcr = n.getBoundingClientRect();\n\t\t\treturn bcr.width || (bcr.right - bcr.left);\n\t\t}else{\n\t\t\treturn domGeom.getMarginBox(n).w;\n\t\t}\n\t};\n\n\treturn lang.mixin(common, {\n\t\t// summary:\n\t\t//\t\tCommon methods to be used by any axis.  This is considered \"static\".\n\t\tcreateText: {\n\t\t\tgfx: function(chart, creator, x, y, align, text, font, fontColor){\n\t\t\t\t// summary:\n\t\t\t\t//\t\tUse dojox.gfx to create any text.\n\t\t\t\t// chart: dojox.charting.Chart\n\t\t\t\t//\t\tThe chart to create the text into.\n\t\t\t\t// creator: dojox.gfx.Surface\n\t\t\t\t//\t\tThe graphics surface to use for creating the text.\n\t\t\t\t// x: Number\n\t\t\t\t//\t\tWhere to create the text along the x axis (CSS left).\n\t\t\t\t// y: Number\n\t\t\t\t//\t\tWhere to create the text along the y axis (CSS top).\n\t\t\t\t// align: String\n\t\t\t\t//\t\tHow to align the text.  Can be \"left\", \"right\", \"center\".\n\t\t\t\t// text: String\n\t\t\t\t//\t\tThe text to render.\n\t\t\t\t// font: String\n\t\t\t\t//\t\tThe font definition, a la CSS \"font\".\n\t\t\t\t// fontColor: String|dojo.Color\n\t\t\t\t//\t\tThe color of the resultant text.\n\t\t\t\t// returns: dojox.gfx.Text\n\t\t\t\t//\t\tThe resultant GFX object.\n\t\t\t\treturn creator.createText({\n\t\t\t\t\tx: x, y: y, text: text, align: align\n\t\t\t\t}).setFont(font).setFill(fontColor);\t//\tdojox.gfx.Text\n\t\t\t},\n\t\t\thtml: function(chart, creator, x, y, align, text, font, fontColor, labelWidth){\n\t\t\t\t// summary:\n\t\t\t\t//\t\tUse the HTML DOM to create any text.\n\t\t\t\t// chart: dojox.charting.Chart\n\t\t\t\t//\t\tThe chart to create the text into.\n\t\t\t\t// creator: dojox.gfx.Surface\n\t\t\t\t//\t\tThe graphics surface to use for creating the text.\n\t\t\t\t// x: Number\n\t\t\t\t//\t\tWhere to create the text along the x axis (CSS left).\n\t\t\t\t// y: Number\n\t\t\t\t//\t\tWhere to create the text along the y axis (CSS top).\n\t\t\t\t// align: String\n\t\t\t\t//\t\tHow to align the text.  Can be \"left\", \"right\", \"center\".\n\t\t\t\t// text: String\n\t\t\t\t//\t\tThe text to render.\n\t\t\t\t// font: String\n\t\t\t\t//\t\tThe font definition, a la CSS \"font\".\n\t\t\t\t// fontColor: String|dojo.Color\n\t\t\t\t//\t\tThe color of the resultant text.\n\t\t\t\t// labelWidth: Number?\n\t\t\t\t//\t\tThe maximum width of the resultant DOM node.\n\t\t\t\t// returns: DOMNode\n\t\t\t\t//\t\tThe resultant DOMNode (a \"div\" element).\n\n\t\t\t\t// setup the text node\n\t\t\t\tvar p = win.doc.createElement(\"div\"), s = p.style, boxWidth;\n\t\t\t\t// bidi support, if this function exists the module was loaded \n\t\t\t\tif(chart.getTextDir){\n\t\t\t\t\tp.dir = chart.getTextDir(text);\n\t\t\t\t}\n\t\t\t\tclearNode(s);\n\t\t\t\ts.font = font;\n\t\t\t\tp.innerHTML = String(text).replace(/\\s/g, \"&nbsp;\");\n\t\t\t\ts.color = fontColor;\n\t\t\t\t// measure the size\n\t\t\t\ts.position = \"absolute\";\n\t\t\t\ts.left = \"-10000px\";\n\t\t\t\twin.body().appendChild(p);\n\t\t\t\tvar size = g.normalizedLength(g.splitFontString(font).size);\n\n\t\t\t\t// do we need to calculate the label width?\n\t\t\t\tif(!labelWidth){\n\t\t\t\t\tboxWidth = getBoxWidth(p);\n\t\t\t\t}\n\t\t\t\t// when the textDir is rtl, but the UI ltr needs\n\t\t\t\t// to recalculate the starting point\n\t\t\t\tif(p.dir == \"rtl\"){\n\t\t\t\t\tx += labelWidth ? labelWidth : boxWidth;\n\t\t\t\t}\n\n\t\t\t\t// new settings for the text node\n\t\t\t\twin.body().removeChild(p);\n\n\t\t\t\ts.position = \"relative\";\n\t\t\t\tif(labelWidth){\n\t\t\t\t\ts.width = labelWidth + \"px\";\n\t\t\t\t\t// s.border = \"1px dotted grey\";\n\t\t\t\t\tswitch(align){\n\t\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\t\ts.textAlign = \"center\";\n\t\t\t\t\t\t\ts.left = (x - labelWidth / 2) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\ts.textAlign = \"right\";\n\t\t\t\t\t\t\ts.left = (x - labelWidth) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ts.left = x + \"px\";\n\t\t\t\t\t\t\ts.textAlign = \"left\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tswitch(align){\n\t\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\t\ts.left = Math.floor(x - boxWidth / 2) + \"px\";\n\t\t\t\t\t\t\t// s.left = Math.floor(x - p.offsetWidth / 2) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\ts.left = Math.floor(x - boxWidth) + \"px\";\n\t\t\t\t\t\t\t// s.left = Math.floor(x - p.offsetWidth) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t//case \"start\":\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\ts.left = Math.floor(x) + \"px\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts.top = Math.floor(y - size) + \"px\";\n\t\t\t\ts.whiteSpace = \"nowrap\";\t// hack for WebKit\n\t\t\t\t// setup the wrapper node\n\t\t\t\tvar wrap = win.doc.createElement(\"div\"), w = wrap.style;\n\t\t\t\tclearNode(w);\n\t\t\t\tw.width = \"0px\";\n\t\t\t\tw.height = \"0px\";\n\t\t\t\t// insert nodes\n\t\t\t\twrap.appendChild(p);\n\t\t\t\tchart.node.insertBefore(wrap, chart.node.firstChild);\n\t\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\t\tchart.htmlElementsRegistry.push([wrap, x, y, align, text, font, fontColor]);\n\t\t\t\t}\n\t\t\t\treturn wrap;\t//\tDOMNode\n\t\t\t}\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/axis2d/common.js\n// module id = 246\n// module chunks = 0","define([\"dojo/_base/array\", \"dojo/dom-construct\",\"dojo/_base/declare\", \"dojox/gfx\", \"dojox/gfx/shape\"],\n\tfunction(arr, domConstruct, declare, gfx, shape){\n\n\treturn declare(\"dojox.charting.Element\", null, {\n\t\t// summary:\n\t\t//\t\tA base class that is used to build other elements of a chart, such as\n\t\t//\t\ta series.\n\t\t// chart: dojox/charting/Chart\n\t\t//\t\tThe parent chart for this element.\n\t\t// group: dojox/gfx/shape.Group\n\t\t//\t\tThe visual GFX group representing this element.\n\t\t// htmlElement: Array\n\t\t//\t\tAny DOMNodes used as a part of this element (such as HTML-based labels).\n\t\t// dirty: Boolean\n\t\t//\t\tA flag indicating whether or not this element needs to be rendered.\n\n\t\tchart: null,\n\t\tgroup: null,\n\t\thtmlElements: null,\n\t\tdirty: true,\n\t\trenderingOptions: null,\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreates a new charting element.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart that this element belongs to.\n\t\t\tthis.chart = chart;\n\t\t\tthis.group = null;\n\t\t\tthis.htmlElements = [];\n\t\t\tthis.dirty = true;\n\t\t\tthis.trailingSymbol = \"...\";\n\t\t\tthis._events = [];\n\t\t\tif (kwArgs && kwArgs.renderingOptions) {\n\t\t\t\tthis.renderingOptions = kwArgs.renderingOptions;\n\t\t\t}\n\t\t},\n\t\tpurgeGroup: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear any elements out of our group, and destroy the group.\n\t\t\t// returns: dojox/charting/Element\n\t\t\t//\t\tA reference to this object for functional chaining.\n\t\t\tthis.destroyHtmlElements();\n\t\t\tif(this.group){\n\t\t\t\t// since 1.7.x we need dispose shape otherwise there is a memoryleak\n\t\t\t\tthis.getGroup().removeShape();\n\t\t\t\tvar children = this.getGroup().children;\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\t\tif(shape.dispose){\n\t\t\t\t\tfor(var i = 0; i < children.length;++i){\n\t\t\t\t\t\tshape.dispose(children[i], true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this.getGroup().rawNode){\n\t\t\t\t\tdomConstruct.empty(this.getGroup().rawNode);\n\t\t\t\t}\n\t\t\t\tthis.getGroup().clear();\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\t\tif(shape.dispose){\n\t\t\t\t\tshape.dispose(this.getGroup(), true);\n\t\t\t\t}\n\t\t\t\tif(this.getGroup() != this.group){\n\t\t\t\t\t// we do have an intermediary clipping group (see CartesianBase)\n\t\t\t\t\tif(this.group.rawNode){\n\t\t\t\t\t\tdomConstruct.empty(this.group.rawNode);\n\t\t\t\t\t}\n\t\t\t\t\tthis.group.clear();\n\t\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\t\t\tif(shape.dispose){\n\t\t\t\t\t\tshape.dispose(this.group, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.group = null;\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\tif(this._events.length){\n\t\t\t\tarr.forEach(this._events, function(item){\n\t\t\t\t\titem.shape.disconnect(item.handle);\n\t\t\t\t});\n\t\t\t\tthis._events = [];\n\t\t\t}\n\t\t\treturn this;\t//\tdojox.charting.Element\n\t\t},\n\t\tcleanGroup: function(creator){\n\t\t\t// summary:\n\t\t\t//\t\tClean any elements (HTML or GFX-based) out of our group, and create a new one.\n\t\t\t// creator: dojox/gfx/shape.Surface?\n\t\t\t//\t\tAn optional surface to work with.\n\t\t\t// returns: dojox/charting/Element\n\t\t\t//\t\tA reference to this object for functional chaining.\n\t\t\tthis.destroyHtmlElements();\n\t\t\tif(!creator){ creator = this.chart.surface; }\n\t\t\tif(this.group){\n\t\t\t\tvar bgnode;\n\t\t\t\tvar children = this.getGroup().children;\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\t\tif(shape.dispose){\n\t\t\t\t\tfor(var i = 0; i < children.length;++i){\n\t\t\t\t\t\tshape.dispose(children[i], true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this.getGroup().rawNode){\n\t\t\t\t\tbgnode = this.getGroup().bgNode;\n\t\t\t\t\tdomConstruct.empty(this.getGroup().rawNode);\n\t\t\t\t}\n\t\t\t\tthis.getGroup().clear();\n\t\t\t\tif(bgnode){\n\t\t\t\t\tthis.getGroup().rawNode.appendChild(bgnode);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis.group = creator.createGroup();\n\t\t\t\t// in some cases we have a rawNode but this is not an actual DOM element (CanvasWithEvents) so check\n\t\t\t\t// the actual rawNode type.\n\t\t\t\tif (this.renderingOptions && this.group.rawNode &&\n\t\t\t\t\tthis.group.rawNode.namespaceURI == \"http://www.w3.org/2000/svg\") {\n\t\t\t\t\tfor (var key in this.renderingOptions) {\n\t\t\t\t\t\tthis.group.rawNode.setAttribute(key, this.renderingOptions[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox.charting.Element\n\t\t},\n\t\tgetGroup: function(){\n\t\t\treturn this.group;\n\t\t},\n\t\tdestroyHtmlElements: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDestroy any DOMNodes that may have been created as a part of this element.\n\t\t\tif(this.htmlElements.length){\n\t\t\t\tarr.forEach(this.htmlElements, domConstruct.destroy);\n\t\t\t\tthis.htmlElements = [];\n\t\t\t}\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tAPI addition to conform to the rest of the Dojo Toolkit's standard.\n\t\t\tthis.purgeGroup();\n\t\t},\n\t\toverrideShape: function(shape, params){\n\t\t\t// summary:\n\t\t\t//\t\tExtension point for overriding the charting shape\n\t\t},\n\t\t//text utilities\n\t\tgetTextWidth: function(s, font){\n\t\t\treturn gfx._base._getTextBox(s, {font: font}).w || 0;\n\t\t},\n\t\tgetTextWithLimitLength: function(s, font, limitWidth, truncated){\n\t\t\t// summary:\n\t\t\t//\t\tGet the truncated string based on the limited width in px(dichotomy algorithm)\n\t\t\t// s: String?\n\t\t\t//\t\tcandidate text.\n\t\t\t// font: String?\n\t\t\t//\t\ttext's font style.\n\t\t\t// limitWidth: Number?\n\t\t\t//\t\ttext limited width in px.\n\t\t\t// truncated: Boolean?\n\t\t\t//\t\twhether the input text(s) has already been truncated.\n\t\t\t// returns: Object\n\t\t\t// |\t{\n\t\t\t// |\t\ttext: processed text, maybe truncated or not,\n\t\t\t// |\t\ttruncated: whether text has been truncated\n\t\t\t// |\t}\n\t\t\tif(!s || s.length <= 0){\n\t\t\t\treturn {\n\t\t\t\t\ttext: \"\",\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif(!limitWidth || limitWidth <= 0){\n\t\t\t\treturn {\n\t\t\t\t\ttext: s,\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}\n\t\t\tvar delta = 2,\n\t\t\t\t//golden section for dichotomy algorithm\n\t\t\t\ttrucPercentage = 0.618,\n\t\t\t\tminStr = s.substring(0,1) + this.trailingSymbol,\n\t\t\t\tminWidth = this.getTextWidth(minStr, font);\n\t\t\tif(limitWidth <= minWidth){\n\t\t\t\treturn {\n\t\t\t\t\ttext: minStr,\n\t\t\t\t\ttruncated: true\n\t\t\t\t};\n\t\t\t}\n\t\t\tvar width = this.getTextWidth(s, font);\n\t\t\tif(width <= limitWidth){\n\t\t\t\treturn {\n\t\t\t\t\ttext: s,\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}else{\n\t\t\t\tvar begin = 0,\n\t\t\t\t\tend = s.length;\n\t\t\t\twhile(begin < end){\n\t\t\t\t\tif(end - begin <= delta ){\n\t\t\t\t\t\twhile (this.getTextWidth(s.substring(0, begin) + this.trailingSymbol, font) > limitWidth) {\n\t\t\t\t\t\t\tbegin -= 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: (s.substring(0,begin) + this.trailingSymbol),\n\t\t\t\t\t\t\ttruncated: true\n\t\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tvar index = begin + Math.round((end - begin) * trucPercentage),\n\t\t\t\t\t\twidthIntercepted = this.getTextWidth(s.substring(0, index), font);\n\t\t\t\t\tif(widthIntercepted < limitWidth){\n\t\t\t\t\t\tbegin = index;\n\t\t\t\t\t\tend = end;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tbegin = begin;\n\t\t\t\t\t\tend = index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTextWithLimitCharCount: function(s, font, wcLimit, truncated){\n\t\t\t// summary:\n\t\t\t//\t\tGet the truncated string based on the limited character count(dichotomy algorithm)\n\t\t\t// s: String?\n\t\t\t//\t\tcandidate text.\n\t\t\t// font: String?\n\t\t\t//\t\ttext's font style.\n\t\t\t// wcLimit: Number?\n\t\t\t//\t\ttext limited character count.\n\t\t\t// truncated: Boolean?\n\t\t\t//\t\twhether the input text(s) has already been truncated.\n\t\t\t// returns: Object\n\t\t\t// |\t{\n\t\t\t// |\t\ttext: processed text, maybe truncated or not,\n\t\t\t// |\t\ttruncated: whether text has been truncated\n\t\t\t// |\t}\n\t\t\tif (!s || s.length <= 0) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: \"\",\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif(!wcLimit || wcLimit <= 0 || s.length <= wcLimit){\n\t\t\t\treturn {\n\t\t\t\t\ttext: s,\n\t\t\t\t\ttruncated: truncated || false\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttext: s.substring(0, wcLimit) + this.trailingSymbol,\n\t\t\t\ttruncated: true\n\t\t\t};\n\t\t},\n\t\t// fill utilities\n\t\t_plotFill: function(fill, dim, offsets){\n\t\t\t// process a plot-wide fill\n\t\t\tif(!fill || !fill.type || !fill.space){\n\t\t\t\treturn fill;\n\t\t\t}\n\t\t\tvar space = fill.space, span;\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\" || space === \"shapeY\"){\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultLinearGradient, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process dimensions\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\"){\n\t\t\t\t\t\t\t// process Y\n\t\t\t\t\t\t\tspan = dim.height - offsets.t - offsets.b;\n\t\t\t\t\t\t\tfill.y1 = offsets.t + span * fill.y1 / 100;\n\t\t\t\t\t\t\tfill.y2 = offsets.t + span * fill.y2 / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeY\"){\n\t\t\t\t\t\t\t// process X\n\t\t\t\t\t\t\tspan = dim.width - offsets.l - offsets.r;\n\t\t\t\t\t\t\tfill.x1 = offsets.l + span * fill.x1 / 100;\n\t\t\t\t\t\t\tfill.x2 = offsets.l + span * fill.x2 / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"radial\":\n\t\t\t\t\tif(space === \"plot\"){\n\t\t\t\t\t\t// this one is used exclusively for scatter charts\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process both dimensions\n\t\t\t\t\t\tvar spanX = dim.width  - offsets.l - offsets.r,\n\t\t\t\t\t\t\tspanY = dim.height - offsets.t - offsets.b;\n\t\t\t\t\t\tfill.cx = offsets.l + spanX * fill.cx / 100;\n\t\t\t\t\t\tfill.cy = offsets.t + spanY * fill.cy / 100;\n\t\t\t\t\t\tfill.r  = fill.r * Math.sqrt(spanX * spanX + spanY * spanY) / 200;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pattern\":\n\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\" || space === \"shapeY\"){\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultPattern, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process dimensions\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\"){\n\t\t\t\t\t\t\t// process Y\n\t\t\t\t\t\t\tspan = dim.height - offsets.t - offsets.b;\n\t\t\t\t\t\t\tfill.y = offsets.t + span * fill.y / 100;\n\t\t\t\t\t\t\tfill.height = span * fill.height / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeY\"){\n\t\t\t\t\t\t\t// process X\n\t\t\t\t\t\t\tspan = dim.width - offsets.l - offsets.r;\n\t\t\t\t\t\t\tfill.x = offsets.l + span * fill.x / 100;\n\t\t\t\t\t\t\tfill.width = span * fill.width / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn fill;\n\t\t},\n\t\t_shapeFill: function(fill, bbox){\n\t\t\t// process shape-specific fill\n\t\t\tif(!fill || !fill.space){\n\t\t\t\treturn fill;\n\t\t\t}\n\t\t\tvar space = fill.space, span;\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\" || space === \"shapeY\"){\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultLinearGradient, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process dimensions\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\"){\n\t\t\t\t\t\t\t// process X\n\t\t\t\t\t\t\tspan = bbox.width;\n\t\t\t\t\t\t\tfill.x1 = bbox.x + span * fill.x1 / 100;\n\t\t\t\t\t\t\tfill.x2 = bbox.x + span * fill.x2 / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeY\"){\n\t\t\t\t\t\t\t// process Y\n\t\t\t\t\t\t\tspan = bbox.height;\n\t\t\t\t\t\t\tfill.y1 = bbox.y + span * fill.y1 / 100;\n\t\t\t\t\t\t\tfill.y2 = bbox.y + span * fill.y2 / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"radial\":\n\t\t\t\t\tif(space === \"shape\"){\n\t\t\t\t\t\t// this one is used exclusively for bubble charts and pie charts\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process both dimensions\n\t\t\t\t\t\tfill.cx = bbox.x + bbox.width  / 2;\n\t\t\t\t\t\tfill.cy = bbox.y + bbox.height / 2;\n\t\t\t\t\t\tfill.r  = fill.r * bbox.width  / 200;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"pattern\":\n\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\" || space === \"shapeY\"){\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultPattern, fill);\n\t\t\t\t\t\tfill.space = space;\n\t\t\t\t\t\t// process dimensions\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\"){\n\t\t\t\t\t\t\t// process X\n\t\t\t\t\t\t\tspan = bbox.width;\n\t\t\t\t\t\t\tfill.x = bbox.x + span * fill.x / 100;\n\t\t\t\t\t\t\tfill.width = span * fill.width / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeY\"){\n\t\t\t\t\t\t\t// process Y\n\t\t\t\t\t\t\tspan = bbox.height;\n\t\t\t\t\t\t\tfill.y = bbox.y + span * fill.y / 100;\n\t\t\t\t\t\t\tfill.height = span * fill.height / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn fill;\n\t\t},\n\t\t_pseudoRadialFill: function(fill, center, radius, start, end){\n\t\t\t// process pseudo-radial fills\n\t\t\tif(!fill || fill.type !== \"radial\" || fill.space !== \"shape\"){\n\t\t\t\treturn fill;\n\t\t\t}\n\t\t\t// clone and normalize fill\n\t\t\tvar space = fill.space;\n\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\n\t\t\tfill.space = space;\n\t\t\tif(arguments.length < 4){\n\t\t\t\t// process both dimensions\n\t\t\t\tfill.cx = center.x;\n\t\t\t\tfill.cy = center.y;\n\t\t\t\tfill.r  = fill.r * radius / 100;\n\t\t\t\treturn fill;\n\t\t\t}\n\t\t\t// convert to a linear gradient\n\t\t\tvar angle = arguments.length < 5 ? start : (end + start) / 2;\n\t\t\treturn {\n\t\t\t\ttype: \"linear\",\n\t\t\t\tx1: center.x,\n\t\t\t\ty1: center.y,\n\t\t\t\tx2: center.x + fill.r * radius * Math.cos(angle) / 100,\n\t\t\t\ty2: center.y + fill.r * radius * Math.sin(angle) / 100,\n\t\t\t\tcolors: fill.colors\n\t\t\t};\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/Element.js\n// module id = 247\n// module chunks = 0","define([\"dojo/_base/declare\", \"dojo/_base/lang\", \"./Default\", \"./commonStacked\"], \n\tfunction(declare, lang, Default, commonStacked){\n\n\treturn declare(\"dojox.charting.plot2d.Stacked\", Default, {\n\t\t// summary:\n\t\t//\t\tLike the default plot, Stacked sets up lines, areas and markers\n\t\t//\t\tin a stacked fashion (values on the y axis added to each other)\n\t\t//\t\tas opposed to a direct one.\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = commonStacked.collectStats(this.series, lang.hitch(this, \"isNullValue\"));\n\t\t\treturn stats; // Object\n\t\t},\n\t\t\n\t\tbuildSegments: function(i, indexed){\n\t\t\tvar run = this.series[i],\n\t\t\t\tmin = indexed?Math.max(0, Math.floor(this._hScaler.bounds.from - 1)):0,\n\t\t\t\tmax = indexed?Math.min(run.data.length-1, Math.ceil(this._hScaler.bounds.to)):run.data.length-1,\n\t\t\t\trseg = null, segments = [], isNullValue = lang.hitch(this, \"isNullValue\");\n\t\t\t// split the run data into dense segments (each containing no nulls)\n\t\t\t// except if interpolates is false in which case ignore null between valid data\n\t\t\tfor(var j = min; j <= max; j++){\n\t\t\t\tvar value = indexed ? commonStacked.getIndexValue(this.series, i, j, isNullValue) : commonStacked.getValue(this.series, i, run.data[j] ?run.data[j].x: null, isNullValue);\n\t\t\t\tif(!isNullValue(value[0]) && (indexed || value[0].y != null)){\n\t\t\t\t\tif(!rseg){\n\t\t\t\t\t\trseg = [];\n\t\t\t\t\t\tsegments.push({index: j, rseg: rseg});\n\t\t\t\t\t}\n\t\t\t\t\trseg.push(value[0]);\n\t\t\t\t}else{\n\t\t\t\t\tif(!this.opt.interpolate || indexed){\n\t\t\t\t\t\t// we break the line only if not interpolating or if we have indexed data\n\t\t\t\t\t\trseg = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn segments;\n\t\t}\n\t\t\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Stacked.js\n// module id = 250\n// module chunks = 0","define([\"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/_base/lang\", \"dojox/gfx\",\n\t\t\"../Element\", \"./common\", \"../axis2d/common\", \"dojo/has\"],\n\tfunction(declare, arr, lang, gfx, Element, common, ac, has){\n/*=====\ndojox.charting.plot2d.__PlotCtorArgs = {\n\t// summary:\n\t//\t\tThe base keyword arguments object for plot constructors.\n\t//\t\tNote that the parameters for this may change based on the\n\t//\t\tspecific plot type (see the corresponding plot type for\n\t//\t\tdetails).\n\n\t// tooltipFunc: Function?\n\t//\t\tAn optional function used to compute tooltip text for this plot. It takes precedence over\n\t//\t\tthe default function when available.\n\t//\t|\t\tfunction tooltipFunc(o) { return \"text\"; }\n\t//\t\t`o`is the event object that triggered the tooltip.\n\ttooltipFunc: null\n};\n=====*/\n\tvar Base = declare(\"dojox.charting.plot2d.Base\", Element, {\n\t\t// summary:\n\t\t//\t\tBase class for all plot types.\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a base plot for charting.\n\t\t\t// chart: dojox/chart/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__PlotCtorArgs?\n\t\t\t//\t\tAn optional arguments object to help define the plot.\n\t\n\t\t\t// TODO does not work in markup\n\t\t\tif(kwArgs && kwArgs.tooltipFunc){\n\t\t\t\tthis.tooltipFunc = kwArgs.tooltipFunc;\n\t\t\t}\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all of the information tied to this plot.\n\t\t\t// returns: dojox.charting.plot2d.Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.series = [];\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\tsetAxis: function(axis){\n\t\t\t// summary:\n\t\t\t//\t\tSet an axis for this plot.\n\t\t\t// axis: dojox.charting.axis2d.Base\n\t\t\t//\t\tThe axis to set.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\tassignAxes: function(axes){\n\t\t\t// summary:\n\t\t\t//\t\tFrom an array of axes pick the ones that correspond to this plot and\n\t\t\t//\t\tassign them to the plot using setAxis method.\n\t\t\t// axes: Array\n\t\t\t//\t\tAn array of dojox/charting/axis2d/Base\n\t\t\t// tags:\n\t\t\t//\t\tprotected\n\t\t\tarr.forEach(this.axes, function(axis){\n\t\t\t\tif(this[axis]){\n\t\t\t\t\tthis.setAxis(axes[this[axis]]);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\t\taddSeries: function(run){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a data series to this plot.\n\t\t\t// run: dojox.charting.Series\n\t\t\t//\t\tThe series to be added.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.series.push(run);\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\treturn common.collectSimpleStats(this.series, lang.hitch(this, \"isNullValue\"));\n\t\t},\n\t\tcalculateAxes: function(dim){\n\t\t\t// summary:\n\t\t\t//\t\tStub function for running the axis calculations (deprecated).\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.initializeScalers(dim, this.getSeriesStats());\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\tinitializeScalers: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDoes nothing.\n\t\t\treturn this;\n\t\t},\n\t\tisDataDirty: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns whether or not any of this plot's data series need to be rendered.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tFlag indicating if any of this plot's series are invalid and need rendering.\n\t\t\treturn arr.some(this.series, function(item){ return item.dirty; });\t//\tBoolean\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender the plot on the chart.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\n\t\t},\n\t\trenderLabel: function(group, x, y, label, theme, block, align){\n\t\t\tvar elem = ac.createText[this.opt.htmlLabels && gfx.renderer != \"vml\" ? \"html\" : \"gfx\"]\n\t\t\t\t(this.chart, group, x, y, align?align:\"middle\", label, theme.series.font, theme.series.fontColor);\n\t\t\t// if the label is inside we need to avoid catching events on it this would prevent action on\n\t\t\t// chart elements\n\t\t\tif(block){\n\t\t\t\t// TODO this won't work in IE neither in VML nor in HTML\n\t\t\t\t// a solution would be to catch the event on the label and refire it to the element\n\t\t\t\t// possibly using elementFromPoint or having it already available\n\t\t\t\tif(this.opt.htmlLabels && gfx.renderer != \"vml\"){\n\t\t\t\t\t// we have HTML labels, let's use pointEvents on the HTML node\n\t\t\t\t\telem.style.pointerEvents = \"none\";\n\t\t\t\t}else if(elem.rawNode){\n\t\t\t\t\t// we have SVG labels, let's use pointerEvents on the SVG or VML node\n\t\t\t\t\telem.rawNode.style.pointerEvents = \"none\";\n\t\t\t\t}\n\t\t\t\t// else we have Canvas, we need do nothing, as Canvas text won't catch events\n\t\t\t}\n\t\t\tif(this.opt.htmlLabels && gfx.renderer != \"vml\"){\n\t\t\t\tthis.htmlElements.push(elem);\n\t\t\t}\n\n\t\t\treturn elem;\n\t\t},\n\t\tgetRequiredColors: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet how many data series we have, so we know how many colors to use.\n\t\t\t// returns: Number\n\t\t\t//\t\tThe number of colors needed.\n\t\t\treturn this.series.length;\t//\tNumber\n\t\t},\n\t\t_getLabel: function(number){\n\t\t\treturn common.getLabel(number, this.opt.fixed, this.opt.precision);\n\t\t}\n\t});\n\tif(has(\"dojo-bidi\")){\n\t\tBase.extend({\n\t\t\t_checkOrientation: function(group, dim, offsets){\n\t\t\t\tthis.chart.applyMirroring(this.group, dim, offsets);\n\t\t\t}\t\t\n\t\t});\n\t}\n\treturn Base;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Base.js\n// module id = 251\n// module chunks = 0","define([\n\t\"dojo/_base/lang\",\n\t\"dojox/lang/functional\",\n\t\"./common\"\n], function(lang, df, common){\n\t\n\tvar commonStacked = lang.getObject(\"dojox.charting.plot2d.commonStacked\", true);\n\treturn lang.mixin(commonStacked, {\n\t\tcollectStats: function(series, isNullValue){\n\t\t\tvar stats = lang.delegate(common.defaultStats);\n\t\t\tfor(var i = 0; i < series.length; ++i){\n\t\t\t\tvar run = series[i];\n\t\t\t\tfor(var j = 0; j < run.data.length; j++){\n\t\t\t\t\tvar x, y;\n\t\t\t\t\tif(run.data[j] !== null){\n\t\t\t\t\t\tif(typeof run.data[j] == \"number\" || !run.data[j].hasOwnProperty(\"x\")){\n\t\t\t\t\t\t\ty = commonStacked.getIndexValue(series, i, j, isNullValue)[0];\n\t\t\t\t\t\t\tx = j+1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tx = run.data[j].x;\n\t\t\t\t\t\t\tif(x !== null){\n\t\t\t\t\t\t\t\ty = commonStacked.getValue(series, i, x, isNullValue)[0];\n\t\t\t\t\t\t\t\ty = y != null && y.y ? y.y:null; \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\n\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stats;\n\t\t},\n\t\t\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\t// collect references to non-empty sets\n\t\t\tvar sets = df.filter(values, \"x\"), n = sets.length;\n\t\t\tif(!n){\n\t\t\t\t// nothing to do at all\n\t\t\t\treturn values;\n\t\t\t}\n\n\t\t\t// stack values\n\t\t\tvar previousSet = {};\n\t\t\tfor(var i = 0; i < n; ++i){\n\t\t\t\tvar extractedSet = sets[i];\n\t\t\t\tfor(var j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\textractedSet[j] = (extractedSet[j] || 0) + (previousSet[j] || 0);\n\t\t\t\t}\n\t\t\t\tpreviousSet = extractedSet;\n\t\t\t}\n\n\t\t\t// transform to pixels\n\t\t\tfor(i = 0; i < n; ++i){\n\t\t\t\textractedSet = sets[i];\n\t\t\t\tfor(j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\textractedSet[j] = this.isNullValue(extractedSet[j]) ? 0 :\n\t\t\t\t\t\ttransform(extractedSet[j]) - baseline;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// correct the minimal width\n\t\t\tif(this.opt.minWidth){\n\t\t\t\tvar minWidth = this.opt.minWidth;\n\n\t\t\t\t// unstack\n\t\t\t\tfor(i = n - 1; i; --i){\n\t\t\t\t\textractedSet = sets[i];\n\t\t\t\t\tpreviousSet  = sets[i - 1];\n\t\t\t\t\tfor(j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\t\textractedSet[j] = extractedSet[j] - previousSet[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// now let's go over all values and correct them, if needed\n\t\t\t\tvar min = extractedSet.min, max = extractedSet.max;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\n\t\t\t\t\t// find a total length of stack\n\t\t\t\t\tvar sum = 0, counter = 0;\n\t\t\t\t\tfor(i = 0; i < n; ++i){\n\t\t\t\t\t\tvar value = sets[i][j];\n\t\t\t\t\t\tif(value > 0){\n\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t++counter;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(sum <= counter * minWidth){\n\t\t\t\t\t\t// the corner case: all values are very small\n\t\t\t\t\t\tfor(i = 0; i < n; ++i){\n\t\t\t\t\t\t\tvalue = sets[i][j];\n\t\t\t\t\t\t\tif(value > 0){\n\t\t\t\t\t\t\t\tsets[i][j] = minWidth;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\t// next stack\n\t\t\t\t\t}\n\n\t\t\t\t\t// distributing overflow up\n\t\t\t\t\tvar overflow = 0;\n\t\t\t\t\tfor(i = 0; i < n; ++i){\n\t\t\t\t\t\textractedSet = sets[i];\n\t\t\t\t\t\tvalue = extractedSet[j];\n\t\t\t\t\t\tif(value > 0){\n\t\t\t\t\t\t\tif(value < minWidth){\n\t\t\t\t\t\t\t\toverflow += minWidth - value;\n\t\t\t\t\t\t\t\textractedSet[j] = minWidth;\n\t\t\t\t\t\t\t}else if(overflow > 0){\n\t\t\t\t\t\t\t\t// calculate available space\n\t\t\t\t\t\t\t\tvar available = extractedSet[j] - minWidth;\n\t\t\t\t\t\t\t\tif(available >= overflow){\n\t\t\t\t\t\t\t\t\textractedSet[j] -= overflow;\n\t\t\t\t\t\t\t\t\toverflow = 0;\n\t\t\t\t\t\t\t\t}else if(available > 0){\n\t\t\t\t\t\t\t\t\textractedSet[j] = minWidth;\n\t\t\t\t\t\t\t\t\toverflow -= available;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// distributing overflow down, if any\n\t\t\t\t\tif(overflow > 0){\n\t\t\t\t\t\tfor(i = n - 1; i >= 0; --i){\n\t\t\t\t\t\t\textractedSet = sets[i];\n\t\t\t\t\t\t\tvalue = extractedSet[j];\n\t\t\t\t\t\t\tif(value > 0){\n\t\t\t\t\t\t\t\t// calculate available space\n\t\t\t\t\t\t\t\tavailable = extractedSet[j] - minWidth;\n\t\t\t\t\t\t\t\tif(available >= overflow){\n\t\t\t\t\t\t\t\t\textractedSet[j] -= overflow;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}else if(available > 0){\n\t\t\t\t\t\t\t\t\textractedSet[j] = minWidth;\n\t\t\t\t\t\t\t\t\toverflow -= available;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// stack\n\t\t\t\tfor(i = 1; i < n; ++i){\n\t\t\t\t\textractedSet = sets[i];\n\t\t\t\t\tpreviousSet  = sets[i - 1];\n\t\t\t\t\tfor(j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\t\textractedSet[j] = extractedSet[j] + previousSet[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn values;\n\t\t},\n\n\t\tgetIndexValue: function(series, i, index, isNullValue){\n\t\t\tvar value = 0, v, j;\n\t\t\tfor(j = 0; j <= i; ++j){\n\t\t\t\tv = series[j].data[index];\n\t\t\t\tif(!isNullValue(v)){\n\t\t\t\t\tif(isNaN(v)){ v = v.y || 0; }\n\t\t\t\t\tvalue += v;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t},\n\n\t\tgetValue: function(series, i, x, isNullValue){\n\t\t\tvar value = null, j, z;\n\t\t\tfor(j = 0; j <= i; ++j){\n\t\t\t\tfor(z = 0; z < series[j].data.length; z++){\n\t\t\t\t\tv = series[j].data[z];\n\t\t\t\t\tif(!isNullValue(v)){\n\t\t\t\t\t\tif(v.x == x){\n\t\t\t\t\t\t\tif(!value){\n\t\t\t\t\t\t\t\tvalue = {x: x};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(v.y != null){\n\t\t\t\t\t\t\t\tif(value.y == null){\n\t\t\t\t\t\t\t\t\tvalue.y = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue.y += v.y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}else if(v.x > x){break;}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t},\n\t\t\n\t\tgetIndexValue: function(series, i, index, isNullValue){\n\t\t\tvar value = 0, v, j, pvalue;\n\t\t\tfor(j = 0; j <= i; ++j){\n\t\t\t\tif(series[j].hidden){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tpvalue = value;\n\t\t\t\tv = series[j].data[index];\n\t\t\t\tif(!isNullValue(v)){\n\t\t\t\t\tif(isNaN(v)){ v = v.y || 0; }\n\t\t\t\t\tvalue += v;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [value , pvalue];\n\t\t},\n\t\t\n\t\tgetValue: function(series, i, x, isNullValue){\n\t\t\tvar value = null, j, z, v, pvalue;\n\t\t\tfor(j = 0; j <= i; ++j){\n\t\t\t\tif(series[j].hidden){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor(z = 0; z < series[j].data.length; z++){\n\t\t\t\t\tpvalue = value;\n\t\t\t\t\tv = series[j].data[z];\n\t\t\t\t\tif(!isNullValue(v)){\n\t\t\t\t\t\tif(v.x == x){\n\t\t\t\t\t\t\tif(!value){\n\t\t\t\t\t\t\t\tvalue = {x: x};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(v.y != null){\n\t\t\t\t\t\t\t\tif(value.y == null){\n\t\t\t\t\t\t\t\t\tvalue.y = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue.y += v.y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}else if(v.x > x){break;}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [value, pvalue];\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/commonStacked.js\n// module id = 252\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/has\", \"./CartesianBase\", \"./_PlotEvents\", \"./common\",\n\t\t\"dojox/lang/functional\", \"dojox/lang/functional/reversed\", \"dojox/lang/utils\", \"dojox/gfx/fx\"],\n\tfunction(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\tvar alwaysFalse = function(){ return false; };\n\n\treturn declare(\"dojox.charting.plot2d.Columns\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tThe plot object representing a column chart (vertical bars).\n\t\tdefaultParams: {\n\t\t\tgap:\t0,\t\t// gap between columns in pixels\n\t\t\tanimate: null,  // animate bars into place\n\t\t\tenableCache: false\n\t\t},\n\t\toptionalParams: {\n\t\t\tminBarSize:\t1,\t// minimal column width in pixels\n\t\t\tmaxBarSize:\t1,\t// maximal column width in pixels\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:     {},\n\t\t\tstyleFunc:  null,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a columns chart.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\n\t\t},\n\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = dc.collectSimpleStats(this.series, lang.hitch(this, \"isNullValue\"));\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\tcreateRect: function(run, creator, params){\n\t\t\tvar rect;\n\t\t\tif(this.opt.enableCache && run._rectFreePool.length > 0){\n\t\t\t\trect = run._rectFreePool.pop();\n\t\t\t\trect.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(rect);\n\t\t\t}else{\n\t\t\t\trect = creator.createRect(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\trun._rectUsePool.push(rect);\n\t\t\t}\n\t\t\treturn rect;\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Columns\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tbaseline = Math.max(this._vScaler.bounds.lower,\n\t\t\t\t\tthis._vAxis ? this._vAxis.naturalBaseline : 0),\n\t\t\t\tbaselineHeight = vt(baseline),\n\t\t\t\tevents = this.events(),\n\t\t\t\tbar = this.getBarProperties();\n\n\t\t\tvar z = this.series.length;\n\t\t\tarr.forEach(this.series, function(serie){if(serie.hidden){z--;}});\n\n\t\t\t// Collect and calculate  all values\n\t\t\tvar extractedValues = this.extractValues(this._hScaler);\n\t\t\textractedValues = this.rearrangeValues(extractedValues, vt, baselineHeight);\n\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(this.opt.enableCache){\n\t\t\t\t\trun._rectFreePool = (run._rectFreePool?run._rectFreePool:[]).concat(run._rectUsePool?run._rectUsePool:[]);\n\t\t\t\t\trun._rectUsePool = [];\n\t\t\t\t}\n\t\t\t\tvar theme = t.next(\"column\", [this.opt, run]),\n\t\t\t\t\teventSeries = new Array(run.data.length);\n\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tz--;\n\n\t\t\t\ts = run.group;\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t});\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\n\t\t\t\t// data point to save time\n\t\t\t\tvar min = indexed?Math.max(0, Math.floor(this._hScaler.bounds.from - 1)):0;\n\t\t\t\tvar max = indexed?Math.min(run.data.length, Math.ceil(this._hScaler.bounds.to)):run.data.length;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\t\t\t\t\tvar value = run.data[j];\n\t\t\t\t\tif(!this.isNullValue(value)){\n\t\t\t\t\t\tvar val = this.getValue(value, j, i, indexed),\n\t\t\t\t\t\t\tvv = vt(val.y),\n\t\t\t\t\t\t\th = extractedValues[i][j],\n\t\t\t\t\t\t\tfinalTheme,\n\t\t\t\t\t\t\tsshape;\n\n\t\t\t\t\t\tif(this.opt.styleFunc || typeof value != \"number\"){\n\t\t\t\t\t\t\tvar tMixin = typeof value != \"number\" ? [value] : [];\n\t\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(value));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfinalTheme = t.addMixin(theme, \"column\", tMixin, true);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tfinalTheme = t.post(theme, \"column\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(bar.width >= 1){\n\t\t\t\t\t\t\tvar rect = {\n\t\t\t\t\t\t\t\tx: offsets.l + ht(val.x + 0.5) + bar.gap + bar.thickness * z,\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - baselineHeight - Math.max(h, 0),\n\t\t\t\t\t\t\t\twidth: bar.width,\n\t\t\t\t\t\t\t\theight: Math.abs(h)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif(finalTheme.series.shadow){\n\t\t\t\t\t\t\t\tvar srect = lang.clone(rect);\n\t\t\t\t\t\t\t\tsrect.x += finalTheme.series.shadow.dx;\n\t\t\t\t\t\t\t\tsrect.y += finalTheme.series.shadow.dy;\n\t\t\t\t\t\t\t\tsshape = this.createRect(run, s, srect).setFill(finalTheme.series.shadow.color).setStroke(finalTheme.series.shadow);\n\t\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\t\tthis._animateColumn(sshape, dim.height - offsets.b + baselineHeight, h);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\n\t\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\n\t\t\t\t\t\t\tvar shape = this.createRect(run, s, rect).setFill(specialFill).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tthis.overrideShape(shape, {index: j, value: val});\n\t\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\n\t\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trun.dyn.fill   = shape.getFill();\n\t\t\t\t\t\t\trun.dyn.stroke = shape.getStroke();\n\t\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"column\",\n\t\t\t\t\t\t\t\t\tindex:   j,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:   shape,\n\t\t\t\t\t\t\t\t\tshadow:  sshape,\n\t\t\t\t\t\t\t\t\tcx:      val.x + 0.5,\n\t\t\t\t\t\t\t\t\tcy:      val.y,\n\t\t\t\t\t\t\t\t\tx:\t     indexed?j:run.data[j].x,\n\t\t\t\t\t\t\t\t\ty:\t \t indexed?run.data[j]:run.data[j].y\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[j] = o;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if val.py is here, this means we are stacking and we need to subtract previous\n\t\t\t\t\t\t\t// value to get the high in which we will lay out the label\n\t\t\t\t\t\t\tif(!isNaN(val.py) && val.py > baseline){\n\t\t\t\t\t\t\t\trect.height = h - vt(val.py);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.createLabel(s, value, rect, finalTheme);\n\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\tthis._animateColumn(shape, dim.height - offsets.b - baselineHeight, h);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Columns\n\t\t},\n\t\tgetValue: function(value, j, seriesIndex, indexed){\n\t\t\tvar y,x;\n\t\t\tif(indexed){\n\t\t\t\tif(typeof value == \"number\"){\n\t\t\t\t\ty = value;\n\t\t\t\t}else{\n\t\t\t\t\ty = value.y;\n\t\t\t\t}\n\t\t\t\tx = j;\n\t\t\t}else{\n\t\t\t\ty = value.y;\n\t\t\t\tx = value.x - 1;\n\t\t\t}\n\t\t\treturn { x: x, y: y };\n\t\t},\n\t\textractValues: function(scaler){\n\t\t\tvar extracted = [];\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\n\t\t\t\t// data point to save time\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t\t}),\n\t\t\t\t\tmin = indexed ? Math.max(0, Math.floor(scaler.bounds.from - 1)) : 0,\n\t\t\t\t\tmax = indexed ? Math.min(run.data.length, Math.ceil(scaler.bounds.to)) : run.data.length,\n\t\t\t\t\textractedSet = extracted[i] = [];\n\t\t\t\textractedSet.min = min;\n\t\t\t\textractedSet.max = max;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\t\t\t\t\tvar value = run.data[j];\n\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 :\n\t\t\t\t\t\t(typeof value == \"number\" ? value : value.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn extracted;\n\t\t},\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\t// transform to pixels\n\t\t\tfor(var i = 0, n = values.length; i < n; ++i){\n\t\t\t\tvar extractedSet = values[i];\n\t\t\t\tif(extractedSet){\n\t\t\t\t\tfor(var j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\t\tvar value = extractedSet[j];\n\t\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 : transform(value) - baseline;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn values;\n\t\t},\n\n\t\tisNullValue: function(value){\n\t\t\tif(value === null || typeof value == \"undefined\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar h = this._hAxis ? this._hAxis.isNullValue : alwaysFalse,\n\t\t\t\tv = this._vAxis ? this._vAxis.isNullValue : alwaysFalse;\n\t\t\tif(typeof value == \"number\"){\n\t\t\t\treturn v(0.5) || h(value);\n\t\t\t}\n\t\t\treturn v(isNaN(value.x) ? 0.5 : value.x + 0.5) || value.y === null || h(value.y);\n\t\t},\n\t\tgetBarProperties: function(){\n\t\t\tvar f = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\n\t\t\treturn {gap: f.gap, width: f.size, thickness: 0};\n\t\t},\n\t\t_animateColumn: function(shape, voffset, vsize){\n\t\t\tif(vsize===0){\n\t\t\t\tvsize = 1;\n\t\t\t}\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Columns.js\n// module id = 253\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/has\", \"./CartesianBase\", \"./_PlotEvents\", \"./common\",\n\t\"dojox/gfx/fx\", \"dojox/lang/utils\", \"dojox/lang/functional\", \"dojox/lang/functional/reversed\"], \n\tfunction(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, fx, du, df, dfr){\n\t\t\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__BarCtorArgs\", dojox.charting.plot2d.__DefaultCtorArgs, {\n\t\t// summary:\n\t\t//\t\tAdditional keyword arguments for bar charts.\n\t\n\t\t// minBarSize: Number?\n\t\t//\t\tThe minimum size for a bar in pixels.  Default is 1.\n\t\tminBarSize: 1,\n\t\n\t\t// maxBarSize: Number?\n\t\t//\t\tThe maximum size for a bar in pixels.  Default is 1.\n\t\tmaxBarSize: 1,\n\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use for any series on the plot.\n\t\tstroke:\t\t{},\n\n\t\t// outline: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke used to outline any series on the plot.\n\t\toutline:\t{},\n\n\t\t// shadow: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use to draw any shadows for a series on a plot.\n\t\tshadow:\t\t{},\n\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tAny fill to be used for elements on the plot.\n\t\tfill:\t\t{},\n\n\t\t// filter: dojox.gfx.Filter?\n\t \t//\t\tAn SVG filter to be used for elements on the plot. gfx SVG renderer must be used and dojox/gfx/svgext must\n\t \t//\t\tbe required for this to work.\n\t \tfilter:\t\t{},\n\n\t\t// styleFunc: Function?\n\t\t//\t\tA function that returns a styling object for the a given data item.\n\t\tstyleFunc:\tnull,\n\n\t\t// font: String?\n\t\t//\t\tA font definition to be used for labels and other text-based elements on the plot.\n\t\tfont:\t\t\"\",\n\n\t\t// fontColor: String|dojo.Color?\n\t\t//\t\tThe color to be used for any text-based elements on the plot.\n\t\tfontColor:\t\"\",\n\t\t\n\t\t// enableCache: Boolean?\n\t\t//\t\tWhether the bars rect are cached from one rendering to another. This improves the rendering performance of\n\t\t//\t\tsuccessive rendering but penalize the first rendering.  Default false.\n\t\tenableCache: false\n\t});\n\t=====*/\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\t\n\tvar alwaysFalse = function(){ return false; }\n\n\treturn declare(\"dojox.charting.plot2d.Bars\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tThe plot object representing a bar chart (horizontal bars).\n\t\tdefaultParams: {\n\t\t\tgap:\t0,\t\t// gap between columns in pixels\n\t\t\tanimate: null,   // animate bars into place\n\t\t\tenableCache: false\n\t\t},\n\t\toptionalParams: {\n\t\t\tminBarSize:\t1,\t// minimal bar width in pixels\n\t\t\tmaxBarSize:\t1,\t// maximal bar width in pixels\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:\t    {},\n\t\t\tstyleFunc:  null,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a bar chart.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\n\t\t},\n\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = dc.collectSimpleStats(this.series, lang.hitch(this, \"isNullValue\")), t;\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\tt = stats.hmin, stats.hmin = stats.vmin, stats.vmin = t;\n\t\t\tt = stats.hmax, stats.hmax = stats.vmax, stats.vmax = t;\n\t\t\treturn stats; // Object\n\t\t},\n\t\t\n\t\tcreateRect: function(run, creator, params){\n\t\t\tvar rect;\n\t\t\tif(this.opt.enableCache && run._rectFreePool.length > 0){\n\t\t\t\trect = run._rectFreePool.pop();\n\t\t\t\trect.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(rect);\n\t\t\t}else{\n\t\t\t\trect = creator.createRect(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\trun._rectUsePool.push(rect);\n\t\t\t}\n\t\t\treturn rect;\n\t\t},\n\n\t\tcreateLabel: function(group, value, bbox, theme){\n\t\t\tif(this.opt.labels && this.opt.labelStyle == \"outside\"){\n\t\t\t\tvar y = bbox.y + bbox.height / 2;\n\t\t\t\tvar x = bbox.x + bbox.width + this.opt.labelOffset;\n\t\t\t\tthis.renderLabel(group, x, y, this._getLabel(isNaN(value.y)?value:value.y), theme, \"start\");\n          \t}else{\n\t\t\t\tthis.inherited(arguments);\n\t\t\t}\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Bars\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets); // dojox/charting/plot2d/Bars\n\t\t\t}\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tthis.resetEvents();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tbaseline = Math.max(this._hScaler.bounds.lower,\n\t\t\t\t\tthis._hAxis ? this._hAxis.naturalBaseline : 0),\t\t\t\t\n\t\t\t\tbaselineWidth = ht(baseline),\n\t\t\t\tevents = this.events();\n\t\t\tvar bar = this.getBarProperties();\n\n\t\t\tvar actualLength = this.series.length;\n\t\t\tarr.forEach(this.series, function(serie){if(serie.hidden){actualLength--;}});\n\t\t\tvar z = actualLength;\n\t\t\t\n\t\t\t// Collect and calculate all values\n\t\t\tvar extractedValues = this.extractValues(this._vScaler);\n\t\t\textractedValues = this.rearrangeValues(extractedValues, ht, baselineWidth);\n\t\t\t\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(this.opt.enableCache){\n\t\t\t\t\trun._rectFreePool = (run._rectFreePool?run._rectFreePool:[]).concat(run._rectUsePool?run._rectUsePool:[]);\n\t\t\t\t\trun._rectUsePool = [];\n\t\t\t\t}\n\t\t\t\tvar theme = t.next(\"bar\", [this.opt, run]);\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\trun.dyn.stroke = theme.series.stroke;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tz--;\n\n\t\t\t\tvar\teventSeries = new Array(run.data.length);\n\t\t\t\ts = run.group;\t\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t});\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\n\t\t\t\t// data point to save time\n\t\t\t\tvar min = indexed?Math.max(0, Math.floor(this._vScaler.bounds.from - 1)):0;\n\t\t\t\tvar max = indexed?Math.min(run.data.length, Math.ceil(this._vScaler.bounds.to)):run.data.length;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\t\t\t\t\tvar value = run.data[j];\n\t\t\t\t\tif(!this.isNullValue(value)){\n\t\t\t\t\t\tvar val = this.getValue(value, j, i, indexed),\n\t\t\t\t\t\t\tw = extractedValues[i][j], finalTheme, sshape;\n\t\t\t\t\t\tif(this.opt.styleFunc || typeof value != \"number\"){\n\t\t\t\t\t\t\tvar tMixin = typeof value != \"number\" ? [value] : [];\n\t\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(value));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfinalTheme = t.addMixin(theme, \"bar\", tMixin, true);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tfinalTheme = t.post(theme, \"bar\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(w && bar.height >= 1){\n\t\t\t\t\t\t\tvar rect = {\n\t\t\t\t\t\t\t\tx: offsets.l + baselineWidth + Math.min(w, 0),\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(val.x + 1.5) + bar.gap + bar.thickness * (actualLength - z - 1),\n\t\t\t\t\t\t\t\twidth: Math.abs(w),\n\t\t\t\t\t\t\t\theight: bar.height\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif(finalTheme.series.shadow){\n\t\t\t\t\t\t\t\tvar srect = lang.clone(rect);\n\t\t\t\t\t\t\t\tsrect.x += finalTheme.series.shadow.dx;\n\t\t\t\t\t\t\t\tsrect.y += finalTheme.series.shadow.dy;\n\t\t\t\t\t\t\t\tsshape = this.createRect(run, s, srect).setFill(finalTheme.series.shadow.color).setStroke(finalTheme.series.shadow);\n\t\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\t\tthis._animateBar(sshape, offsets.l + baselineWidth, -w);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\n\t\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\n\t\t\t\t\t\t\tvar shape = this.createRect(run, s, rect).setFill(specialFill).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\n\t\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t\trun.dyn.fill   = shape.getFill();\n\t\t\t\t\t\t\trun.dyn.stroke = shape.getStroke();\n\t\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"bar\",\n\t\t\t\t\t\t\t\t\tindex:   j,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:   shape,\n\t\t\t\t\t\t\t\t\tshadow:\t sshape,\n\t\t\t\t\t\t\t\t\tcx:      val.y,\n\t\t\t\t\t\t\t\t\tcy:      val.x + 1.5,\n\t\t\t\t\t\t\t\t\tx:\t     indexed?j:run.data[j].x,\n\t\t\t\t\t\t\t\t\ty:\t \t indexed?run.data[j]:run.data[j].y\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[j] = o;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!isNaN(val.py) && val.py > baseline){\n\t\t\t\t\t\t\t\trect.x += ht(val.py);\n\t\t\t\t\t\t\t\trect.width -= ht(val.py);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.createLabel(s, value, rect, finalTheme);\n\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\tthis._animateBar(shape, offsets.l + baselineWidth, -Math.abs(w));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Bars\n\t\t},\n\t\tgetValue: function(value, j, seriesIndex, indexed){\n\t\t\tvar y, x;\n\t\t\tif(indexed){\n\t\t\t\tif(typeof value == \"number\"){\n\t\t\t\t\ty = value;\n\t\t\t\t}else{\n\t\t\t\t\ty = value.y;\n\t\t\t\t}\n\t\t\t\tx = j;\n\t\t\t}else{\n\t\t\t\ty = value.y;\n\t\t\t\tx = value.x -1;\n\t\t\t}\n\t\t\treturn {y:y, x:x};\n\t\t},\n\t\textractValues: function(scaler){\n\t\t\tvar extracted = [];\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\n\t\t\t\t// data point to save time\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\n\t\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\n\t\t\t\t\t}),\n\t\t\t\t\tmin = indexed ? Math.max(0, Math.floor(scaler.bounds.from - 1)) : 0,\n\t\t\t\t\tmax = indexed ? Math.min(run.data.length, Math.ceil(scaler.bounds.to)) : run.data.length,\n\t\t\t\t\textractedSet = extracted[i] = [];\n\t\t\t\textractedSet.min = min;\n\t\t\t\textractedSet.max = max;\n\t\t\t\tfor(var j = min; j < max; ++j){\n\t\t\t\t\tvar value = run.data[j];\n\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 :\n\t\t\t\t\t\t(typeof value == \"number\" ? value : value.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn extracted;\n\t\t},\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\t// transform to pixels\n\t\t\tfor(var i = 0, n = values.length; i < n; ++i){\n\t\t\t\tvar extractedSet = values[i];\n\t\t\t\tif(extractedSet){\n\t\t\t\t\tfor(var j = extractedSet.min, k = extractedSet.max; j < k; ++j){\n\t\t\t\t\t\tvar value = extractedSet[j];\n\t\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 : transform(value) - baseline;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn values;\n\t\t},\n\t\tisNullValue: function(value){\n\t\t\tif(value === null || typeof value == \"undefined\"){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar h = this._hAxis ? this._hAxis.isNullValue : alwaysFalse,\n\t\t\t\tv = this._vAxis ? this._vAxis.isNullValue : alwaysFalse;\n\t\t\tif(typeof value == \"number\"){\n\t\t\t\treturn v(0.5) || h(value);\n\t\t\t}\n\t\t\treturn v(isNaN(value.x) ? 0.5 : value.x + 0.5) || value.y === null || h(value.y);\n\t\t},\t\t\n\t\tgetBarProperties: function(){\n\t\t\tvar f = dc.calculateBarSize(this._vScaler.bounds.scale, this.opt);\n\t\t\treturn {gap: f.gap, height: f.size, thickness: 0};\n\t\t},\n\t\t_animateBar: function(shape, hoffset, hsize){\n\t\t\tif(hsize==0){\n\t\t\t\thsize = 1;\n\t\t\t}\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [hoffset - (hoffset/hsize), 0], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [1/hsize, 1], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Bars.js\n// module id = 254\n// module chunks = 0","define([\"./_base\", \"dojo/_base/lang\",\"dojo/_base/declare\", \"./matrix\", \"./shape\"],\n\tfunction(g, lang, declare, matrix, shapeLib){\n\n\t// module:\n\t//\t\tdojox/gfx/path\n\n\tvar Path = declare(\"dojox.gfx.path.Path\", shapeLib.Shape, {\n\t\t// summary:\n\t\t//\t\ta generalized path shape\n\n\t\tconstructor: function(rawNode){\n\t\t\t// summary:\n\t\t\t//\t\ta path constructor\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM node to be used by this path object\n\t\t\tthis.shape = lang.clone(g.defaultPath);\n\t\t\tthis.segments = [];\n\t\t\tthis.tbbox = null;\n\t\t\tthis.absolute = true;\n\t\t\tthis.last = {};\n\t\t\tthis.rawNode = rawNode;\n\t\t\tthis.segmented = false;\n\t\t},\n\n\t\t// mode manipulations\n\t\tsetAbsoluteMode: function(mode){\n\t\t\t// summary:\n\t\t\t//\t\tsets an absolute or relative mode for path points\n\t\t\t// mode: Boolean\n\t\t\t//\t\ttrue/false or \"absolute\"/\"relative\" to specify the mode\n\t\t\tthis._confirmSegmented();\n\t\t\tthis.absolute = typeof mode == \"string\" ? (mode == \"absolute\") : mode;\n\t\t\treturn this; // self\n\t\t},\n\t\tgetAbsoluteMode: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns a current value of the absolute mode\n\t\t\tthis._confirmSegmented();\n\t\t\treturn this.absolute; // Boolean\n\t\t},\n\n\t\tgetBoundingBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the bounding box {x, y, width, height} or null\n\t\t\tthis._confirmSegmented();\n\t\t\treturn (this.bbox && (\"l\" in this.bbox)) ? {x: this.bbox.l, y: this.bbox.t, width: this.bbox.r - this.bbox.l, height: this.bbox.b - this.bbox.t} : null; // dojox/gfx.Rectangle\n\t\t},\n\n\t\t_getRealBBox: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns an array of four points or null\n\t\t\t//\t\tfour points represent four corners of the untransformed bounding box\n\t\t\tthis._confirmSegmented();\n\t\t\tif(this.tbbox){\n\t\t\t\treturn this.tbbox;\t// Array\n\t\t\t}\n\t\t\tvar bbox = this.bbox, matrix = this._getRealMatrix();\n\t\t\tthis.bbox = null;\n\t\t\tfor(var i = 0, len = this.segments.length; i < len; ++i){\n\t\t\t\tthis._updateWithSegment(this.segments[i], matrix);\n\t\t\t}\n\t\t\tvar t = this.bbox;\n\t\t\tthis.bbox = bbox;\n\t\t\tthis.tbbox = t ? [\n\t\t\t\t{x: t.l, y: t.t},\n\t\t\t\t{x: t.r, y: t.t},\n\t\t\t\t{x: t.r, y: t.b},\n\t\t\t\t{x: t.l, y: t.b}\n\t\t\t] : null;\n\t\t\treturn this.tbbox;\t// Array\n\t\t},\n\n\t\tgetLastPosition: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the last point in the path, or null\n\t\t\tthis._confirmSegmented();\n\t\t\treturn \"x\" in this.last ? this.last : null; // Object\n\t\t},\n\n\t\t_applyTransform: function(){\n\t\t\tthis.tbbox = null;\n\t\t\treturn this.inherited(arguments);\n\t\t},\n\n\t\t// segment interpretation\n\t\t_updateBBox: function(x, y, m){\n\t\t\t// summary:\n\t\t\t//\t\tupdates the bounding box of path with new point\n\t\t\t// x: Number\n\t\t\t//\t\tan x coordinate\n\t\t\t// y: Number\n\t\t\t//\t\ta y coordinate\n\n\t\t\tif(m){\n\t\t\t\tvar t = matrix.multiplyPoint(m, x, y);\n\t\t\t\tx = t.x;\n\t\t\t\ty = t.y;\n\t\t\t}\n\n\t\t\t// we use {l, b, r, t} representation of a bbox\n\t\t\tif(this.bbox && (\"l\" in this.bbox)){\n\t\t\t\tif(this.bbox.l > x) this.bbox.l = x;\n\t\t\t\tif(this.bbox.r < x) this.bbox.r = x;\n\t\t\t\tif(this.bbox.t > y) this.bbox.t = y;\n\t\t\t\tif(this.bbox.b < y) this.bbox.b = y;\n\t\t\t}else{\n\t\t\t\tthis.bbox = {l: x, b: y, r: x, t: y};\n\t\t\t}\n\t\t},\n\t\t_updateWithSegment: function(segment, matrix){\n\t\t\t// summary:\n\t\t\t//\t\tupdates the bounding box of path with new segment\n\t\t\t// segment: Object\n\t\t\t//\t\ta segment\n\t\t\tvar n = segment.args, l = n.length, i;\n\t\t\t// update internal variables: bbox, absolute, last\n\t\t\tswitch(segment.action){\n\t\t\t\tcase \"M\":\n\t\t\t\tcase \"L\":\n\t\t\t\tcase \"C\":\n\t\t\t\tcase \"S\":\n\t\t\t\tcase \"Q\":\n\t\t\t\tcase \"T\":\n\t\t\t\t\tfor(i = 0; i < l; i += 2){\n\t\t\t\t\t\tthis._updateBBox(n[i], n[i + 1], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.last.x = n[l - 2];\n\t\t\t\t\tthis.last.y = n[l - 1];\n\t\t\t\t\tthis.absolute = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"H\":\n\t\t\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\t\t\tthis._updateBBox(n[i], this.last.y, matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.last.x = n[l - 1];\n\t\t\t\t\tthis.absolute = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"V\":\n\t\t\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\t\t\tthis._updateBBox(this.last.x, n[i], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.last.y = n[l - 1];\n\t\t\t\t\tthis.absolute = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"m\":\n\t\t\t\t\tvar start = 0;\n\t\t\t\t\tif(!(\"x\" in this.last)){\n\t\t\t\t\t\tthis._updateBBox(this.last.x = n[0], this.last.y = n[1], matrix);\n\t\t\t\t\t\tstart = 2;\n\t\t\t\t\t}\n\t\t\t\t\tfor(i = start; i < l; i += 2){\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y += n[i + 1], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"l\":\n\t\t\t\tcase \"t\":\n\t\t\t\t\tfor(i = 0; i < l; i += 2){\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y += n[i + 1], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"h\":\n\t\t\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y, matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\t\t\tthis._updateBBox(this.last.x, this.last.y += n[i], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\tfor(i = 0; i < l; i += 6){\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i], this.last.y + n[i + 1], matrix);\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i + 2], this.last.y + n[i + 3], matrix);\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 4], this.last.y += n[i + 5], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"s\":\n\t\t\t\tcase \"q\":\n\t\t\t\t\tfor(i = 0; i < l; i += 4){\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i], this.last.y + n[i + 1], matrix);\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 2], this.last.y += n[i + 3], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"A\":\n\t\t\t\t\tfor(i = 0; i < l; i += 7){\n\t\t\t\t\t\tthis._updateBBox(n[i + 5], n[i + 6], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.last.x = n[l - 2];\n\t\t\t\t\tthis.last.y = n[l - 1];\n\t\t\t\t\tthis.absolute = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"a\":\n\t\t\t\t\tfor(i = 0; i < l; i += 7){\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 5], this.last.y += n[i + 6], matrix);\n\t\t\t\t\t}\n\t\t\t\t\tthis.absolute = false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// add an SVG path segment\n\t\t\tvar path = [segment.action];\n\t\t\tfor(i = 0; i < l; ++i){\n\t\t\t\tpath.push(g.formatNumber(n[i], true));\n\t\t\t}\n\t\t\tif(typeof this.shape.path == \"string\"){\n\t\t\t\tthis.shape.path += path.join(\"\");\n\t\t\t}else{\n\t\t\t\tfor(i = 0, l = path.length; i < l; ++i){\n\t\t\t\t\tthis.shape.path.push(path[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// a dictionary, which maps segment type codes to a number of their arguments\n\t\t_validSegments: {m: 2, l: 2, h: 1, v: 1, c: 6, s: 4, q: 4, t: 2, a: 7, z: 0},\n\n\t\t_pushSegment: function(action, args){\n\t\t\t// summary:\n\t\t\t//\t\tadds a segment\n\t\t\t// action: String\n\t\t\t//\t\tvalid SVG code for a segment's type\n\t\t\t// args: Array\n\t\t\t//\t\ta list of parameters for this segment\n\t\t\tthis.tbbox = null;\n\t\t\tvar group = this._validSegments[action.toLowerCase()], segment;\n\t\t\tif(typeof group == \"number\"){\n\t\t\t\tif(group){\n\t\t\t\t\tif(args.length >= group){\n\t\t\t\t\t\tsegment = {action: action, args: args.slice(0, args.length - args.length % group)};\n\t\t\t\t\t\tthis.segments.push(segment);\n\t\t\t\t\t\tthis._updateWithSegment(segment);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tsegment = {action: action, args: []};\n\t\t\t\t\tthis.segments.push(segment);\n\t\t\t\t\tthis._updateWithSegment(segment);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_collectArgs: function(array, args){\n\t\t\t// summary:\n\t\t\t//\t\tconverts an array of arguments to plain numeric values\n\t\t\t// array: Array\n\t\t\t//\t\tan output argument (array of numbers)\n\t\t\t// args: Array\n\t\t\t//\t\tan input argument (can be values of Boolean, Number, dojox/gfx.Point, or an embedded array of them)\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tvar t = args[i];\n\t\t\t\tif(typeof t == \"boolean\"){\n\t\t\t\t\tarray.push(t ? 1 : 0);\n\t\t\t\t}else if(typeof t == \"number\"){\n\t\t\t\t\tarray.push(t);\n\t\t\t\t}else if(t instanceof Array){\n\t\t\t\t\tthis._collectArgs(array, t);\n\t\t\t\t}else if(\"x\" in t && \"y\" in t){\n\t\t\t\t\tarray.push(t.x, t.y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// segments\n\t\tmoveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a move segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"M\" : \"m\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tlineTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a line segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"L\" : \"l\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\thLineTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a horizontal line segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"H\" : \"h\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tvLineTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a vertical line segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"V\" : \"v\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tcurveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a curve segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"C\" : \"c\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tsmoothCurveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a smooth curve segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"S\" : \"s\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tqCurveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a quadratic curve segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"Q\" : \"q\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tqSmoothCurveTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms a quadratic smooth curve segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"T\" : \"t\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tarcTo: function(){\n\t\t\t// summary:\n\t\t\t//\t\tforms an elliptic arc segment\n\t\t\tthis._confirmSegmented();\n\t\t\tvar args = [];\n\t\t\tthis._collectArgs(args, arguments);\n\t\t\tthis._pushSegment(this.absolute ? \"A\" : \"a\", args);\n\t\t\treturn this; // self\n\t\t},\n\t\tclosePath: function(){\n\t\t\t// summary:\n\t\t\t//\t\tcloses a path\n\t\t\tthis._confirmSegmented();\n\t\t\tthis._pushSegment(\"Z\", []);\n\t\t\treturn this; // self\n\t\t},\n\n\t\t_confirmSegmented: function() {\n\t\t\tif (!this.segmented) {\n\t\t\t\tvar path = this.shape.path;\n\t\t\t\t// switch to non-updating version of path building\n\t\t\t\tthis.shape.path = [];\n\t\t\t\tthis._setPath(path);\n\t\t\t\t// switch back to the string path\n\t\t\t\tthis.shape.path = this.shape.path.join(\"\");\n\t\t\t\t// become segmented\n\t\t\t\tthis.segmented = true;\n\t\t\t}\n\t\t},\n\n\t\t// setShape\n\t\t_setPath: function(path){\n\t\t\t// summary:\n\t\t\t//\t\tforms a path using an SVG path string\n\t\t\t// path: String\n\t\t\t//\t\tan SVG path string\n\t\t\tvar p = lang.isArray(path) ? path : path.match(g.pathSvgRegExp);\n\t\t\tthis.segments = [];\n\t\t\tthis.absolute = true;\n\t\t\tthis.bbox = {};\n\t\t\tthis.last = {};\n\t\t\tif(!p) return;\n\t\t\t// create segments\n\t\t\tvar action = \"\",\t// current action\n\t\t\t\targs = [],\t\t// current arguments\n\t\t\t\tl = p.length;\n\t\t\tfor(var i = 0; i < l; ++i){\n\t\t\t\tvar t = p[i], x = parseFloat(t);\n\t\t\t\tif(isNaN(x)){\n\t\t\t\t\tif(action){\n\t\t\t\t\t\tthis._pushSegment(action, args);\n\t\t\t\t\t}\n\t\t\t\t\targs = [];\n\t\t\t\t\taction = t;\n\t\t\t\t}else{\n\t\t\t\t\targs.push(x);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._pushSegment(action, args);\n\t\t},\n\t\tsetShape: function(newShape){\n\t\t\t// summary:\n\t\t\t//\t\tforms a path using a shape\n\t\t\t// newShape: Object\n\t\t\t//\t\tan SVG path string or a path object (see dojox/gfx.defaultPath)\n\t\t\tthis.inherited(arguments, [typeof newShape == \"string\" ? {path: newShape} : newShape]);\n\n\t\t\tthis.segmented = false;\n\t\t\tthis.segments = [];\n\t\t\tif(!g.lazyPathSegmentation){\n\t\t\t\tthis._confirmSegmented();\n\t\t\t}\n\t\t\treturn this; // self\n\t\t},\n\n\t\t// useful constant for descendants\n\t\t_2PI: Math.PI * 2\n\t});\n\n\tvar TextPath = declare(\"dojox.gfx.path.TextPath\", Path, {\n\t\t// summary:\n\t\t//\t\ta generalized TextPath shape\n\n\t\tconstructor: function(rawNode){\n\t\t\t// summary:\n\t\t\t//\t\ta TextPath shape constructor\n\t\t\t// rawNode: Node\n\t\t\t//\t\ta DOM node to be used by this TextPath object\n\t\t\tif(!(\"text\" in this)){\n\t\t\t\tthis.text = lang.clone(g.defaultTextPath);\n\t\t\t}\n\t\t\tif(!(\"fontStyle\" in this)){\n\t\t\t\tthis.fontStyle = lang.clone(g.defaultFont);\n\t\t\t}\n\t\t},\n\t\tgetText: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current text object or null\n\t\t\treturn this.text;\t// Object\n\t\t},\n\t\tsetText: function(newText){\n\t\t\t// summary:\n\t\t\t//\t\tsets a text to be drawn along the path\n\t\t\tthis.text = g.makeParameters(this.text,\n\t\t\t\ttypeof newText == \"string\" ? {text: newText} : newText);\n\t\t\tthis._setText();\n\t\t\treturn this;\t// self\n\t\t},\n\t\tgetFont: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns the current font object or null\n\t\t\treturn this.fontStyle;\t// Object\n\t\t},\n\t\tsetFont: function(newFont){\n\t\t\t// summary:\n\t\t\t//\t\tsets a font for text\n\t\t\tthis.fontStyle = typeof newFont == \"string\" ?\n\t\t\t\tg.splitFontString(newFont) :\n\t\t\t\tg.makeParameters(g.defaultFont, newFont);\n\t\t\tthis._setFont();\n\t\t\treturn this;\t// self\n\t\t}\n\t});\n\n\t/*=====\n\tg.Path = Path;\n\tg.TextPath = TextPath;\n\t=====*/\n\n\treturn g.path = {\n\t\t// summary:\n\t\t//\t\tThis module contains the core graphics Path API.\n\t\t//\t\tPath command format follows the W3C SVG 1.0 Path api.\n\n\t\tPath: Path,\n\t\tTextPath: TextPath\n\t};\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/gfx/path.js\n// module id = 260\n// module chunks = 0","define([\"dojo/_base/lang\"], function(lang){\n\n\tvar eq = function(/*Number*/ a, /*Number*/ b){\n\t\t// summary:\n\t\t//\t\tcompare two FP numbers for equality\n\t\treturn Math.abs(a - b) <= 1e-6 * (Math.abs(a) + Math.abs(b));\t// Boolean\n\t};\n\n\tvar common = lang.getObject(\"dojox.charting.scaler.common\", true);\n\n\tvar testedModules = {};\n\n\treturn lang.mixin(common, {\n\t\tdoIfLoaded: function(moduleName, ifloaded, ifnotloaded){\n\t\t\tif(testedModules[moduleName] === undefined){\n\t\t\t\ttry{\n\t\t\t\t\ttestedModules[moduleName] = require(moduleName);\n\t\t\t\t}catch(e){\n\t\t\t\t\ttestedModules[moduleName] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(testedModules[moduleName]){\n\t\t\t\treturn ifloaded(testedModules[moduleName]);\n\t\t\t}else{\n\t\t\t\treturn ifnotloaded();\n\t\t\t}\n\t\t},\n\t\tgetNumericLabel: function(/*Number*/ number, /*Number*/ precision, /*Object*/ kwArgs){\n\t\t\tvar def = \"\";\n\t\t\tcommon.doIfLoaded(\"dojo/number\", function(numberLib){\n\t\t\t\tdef = (kwArgs.fixed ? numberLib.format(number, {places : precision < 0 ? -precision : 0}) :\n\t\t\t\t\tnumberLib.format(number)) || \"\";\n\t\t\t}, function(){\n\t\t\t\tdef = kwArgs.fixed ? number.toFixed(precision < 0 ? -precision : 0) : number.toString();\n\t\t\t});\n\t\t\tif(kwArgs.labelFunc){\n\t\t\t\tvar r = kwArgs.labelFunc(def, number, precision);\n\t\t\t\tif(r){ return r; }\n\t\t\t\t// else fall through to the regular labels search\n\t\t\t}\n\t\t\tif(kwArgs.labels){\n\t\t\t\t// classic binary search\n\t\t\t\t// TODO: working only if the array is sorted per value should be better documented or sorted automatically\n\t\t\t\tvar l = kwArgs.labels, lo = 0, hi = l.length;\n\t\t\t\twhile(lo < hi){\n\t\t\t\t\tvar mid = Math.floor((lo + hi) / 2), val = l[mid].value;\n\t\t\t\t\tif(val < number){\n\t\t\t\t\t\tlo = mid + 1;\n\t\t\t\t\t}else{\n\t\t\t\t\t\thi = mid;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// lets take into account FP errors\n\t\t\t\tif(lo < l.length && eq(l[lo].value, number)){\n\t\t\t\t\treturn l[lo].text;\n\t\t\t\t}\n\t\t\t\t--lo;\n\t\t\t\tif(lo >= 0 && lo < l.length && eq(l[lo].value, number)){\n\t\t\t\t\treturn l[lo].text;\n\t\t\t\t}\n\t\t\t\tlo += 2;\n\t\t\t\tif(lo < l.length && eq(l[lo].value, number)){\n\t\t\t\t\treturn l[lo].text;\n\t\t\t\t}\n\t\t\t\t// otherwise we will produce a number\n\t\t\t}\n\t\t\treturn def;\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/scaler/common.js\n// module id = 261\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/array\",\"dojo/_base/declare\",\"dojo/_base/Color\", \"dojox/lang/utils\", \"dojox/gfx/gradutils\"],\n\tfunction(lang, arr, declare, Color, dlu, dgg){\n\t\n\tvar SimpleTheme = declare(\"dojox.charting.SimpleTheme\", null, {\n\t// summary:\n\t//\t\tA SimpleTheme or Theme is a pre-defined object, primarily JSON-based, that makes up the definitions to\n\t//\t\tstyle a chart.\n\t//\n\t// description:\n\t//\t\tWhile you can set up style definitions on a chart directly (usually through the various add methods\n\t//\t\ton a dojox.charting.Chart object), a Theme simplifies this manual setup by allowing you to\n\t//\t\tpre-define all of the various visual parameters of each element in a chart.\n\t//\n\t//\t\tMost of the properties of a Theme are straight-forward; if something is line-based (such as\n\t//\t\tan axis or the ticks on an axis), they will be defined using basic stroke parameters.  Likewise,\n\t//\t\tif an element is primarily block-based (such as the background of a chart), it will be primarily\n\t//\t\tfill-based.\n\t//\n\t//\t\tIn addition (for convenience), a Theme definition does not have to contain the entire JSON-based\n\t//\t\tstructure.  Each theme is built on top of a default theme (which serves as the basis for the theme\n\t//\t\t\"GreySkies\"), and is mixed into the default theme object.  This allows you to create a theme based,\n\t//\t\tsay, solely on colors for data series.\n\t//\n\t//\t\tDefining a new theme is relatively easy; see any of the themes in dojox.charting.themes for examples\n\t//\t\ton how to define your own.\n\t//\n\t//\t\tWhen you set a theme on a chart, the theme itself is deep-cloned.  This means that you cannot alter\n\t//\t\tthe theme itself after setting the theme value on a chart, and expect it to change your chart.  If you\n\t//\t\tare looking to make alterations to a theme for a chart, the suggestion would be to create your own\n\t//\t\ttheme, based on the one you want to use, that makes those alterations before it is applied to a chart.\n\t//\n\t//\t\tFinally, a Theme contains a number of functions to facilitate rendering operations on a chart--the main\n\t//\t\thelper of which is the ~next~ method, in which a chart asks for the information for the next data series\n\t//\t\tto be rendered.\n\t//\n\t//\t\tA note on colors:\n\t//\t\tA theme palette is usually comprised of 5 different color definitions, and\n\t//\t\tno more.  If you have a need to render a chart with more than 5 data elements, you can simply \"push\"\n\t//\t\tnew color definitions into the theme's .color array.  Make sure that you do that with the actual\n\t//\t\ttheme object from a Chart, and not in the theme itself (i.e. either do that before using .setTheme\n\t//\t\ton a chart).\n\t//\n\t// example:\n\t//\t\tThe default theme (and structure) looks like so:\n\t//\t|\t// all objects are structs used directly in dojox.gfx\n\t//\t|\tchart:{\n\t//\t|\t\tmargins: {l: 10, t: 10, r: 10, b: 10},\n\t//\t|\t\tstroke: null,\n\t//\t|\t\tfill: \"white\",\n\t//\t|\t\tpageStyle: null // suggested page style as an object suitable for dojo.style()\n\t//\t|\t},\n\t//\t|\tplotarea:{\n\t//\t|\t\tstroke: null,\n\t//\t|\t\tfill: \"white\"\n\t//\t|\t},\n\t//\t|\taxis:{\n\t//\t|\t\tstroke:\t{ // the axis itself\n\t//\t|\t\t\tcolor: \"#333\",\n\t//\t|\t\t\twidth: 1\n\t//\t|\t\t},\n\t//\t|\t\ttick: {\t// used as a foundation for all ticks\n\t//\t|\t\t\tcolor:     \"#666\",\n\t//\t|\t\t\tposition:  \"center\",\n\t//\t|\t\t\tfont:      \"normal normal normal 7pt Tahoma\",\t// labels on axis\n\t//\t|\t\t\tfontColor: \"#333\"\t\t\t\t\t\t\t\t// color of labels\n\t//\t|\t\t},\n\t//\t|\t\tmajorTick:\t{ // major ticks on axis, and used for major gridlines\n\t//\t|\t\t\twidth:  1,\n\t//\t|\t\t\tlength: 6\n\t//\t|\t\t},\n\t//\t|\t\tminorTick:\t{ // minor ticks on axis, and used for minor gridlines\n\t//\t|\t\t\twidth:  0.8,\n\t//\t|\t\t\tlength: 3\n\t//\t|\t\t},\n\t//\t|\t\tmicroTick:\t{ // minor ticks on axis, and used for minor gridlines\n\t//\t|\t\t\twidth:  0.5,\n\t//\t|\t\t\tlength: 1\n\t//\t|\t\t},\n\t//\t|\t\ttitle: {\n\t//\t|\t\t\tgap:  15,\n\t//\t|\t\t\tfont: \"normal normal normal 11pt Tahoma\",\t// title font\n\t//\t|\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t// title font color\n\t//\t|\t\t\torientation: \"axis\"\t\t\t\t\t\t// \"axis\": facing the axis, \"away\": facing away\n\t//\t|\t\t}\n\t//\t|\t},\n\t//\t|\tseries: {\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// line\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\n\t//\t|\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\n\t//\t|\t\t//filter:  dojox/gfx/filters.createFilter(),\n\t//\t|\t\tfilter: null,\t\t\t\t\t\t\t\t// no filter, to use a filter you must use gfx SVG render and require dojox/gfx/svgext\n\t//\t|\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill, if appropriate\n\t//\t|\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// if there's a label\n\t//\t|\t\tfontColor: \"#000\"\t\t\t\t\t\t\t// color of labels\n\t//\t|\t\tlabelWiring: {width: 1, color: \"#ccc\"},\t\t// connect marker and target data item(slice, column, bar...)\n\t//\t|\t},\n\t//\t|\tmarker: {\t// any markers on a series\n\t//\t|\t\tsymbol:  \"m-3,3 l3,-6 3,6 z\",\t\t\t\t// symbol\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// stroke\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\n\t//\t|\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill if needed\n\t//\t|\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// label\n\t//\t|\t\tfontColor: \"#000\"\n\t//\t|\t},\n\t//\t|\tgrid: {\t// grid, when not present axis tick strokes are used instead\n\t//\t|\t\tmajorLine: {\t// major grid line\n\t//\t|\t\t\tcolor:     \"#666\",\n\t//\t|\t\t\twidth:  1,\n\t//\t|\t\t\tlength: 6\n\t//\t|\t\t},\n\t//\t|\t\tminorLine: {\t// minor grid line\n\t//\t|\t\t\tcolor:     \"#666\",\n\t//\t|\t\t\twidth:  0.8,\n\t//\t|\t\t\tlength: 3\n\t//\t|\t\t},\n\t//\t|\t\tfill: \"grey\",  // every other stripe\n\t//\t|\t\talternateFill: \"grey\" // alternate stripe\n\t//\t|\t},\n\t//\t|\tindicator: {\n\t//\t|\t\tlineStroke:  {width: 1.5, color: \"#333\"},\t\t// line\n\t//\t|\t\tlineOutline: {width: 0.1, color: \"#ccc\"},\t\t// line outline\n\t//\t|\t\tlineShadow: null,\t\t\t\t\t\t\t\t// no line shadow\n\t//\t|\t\tlineFill: null,\t\t\t\t\t\t\t\t\t// fill between lines for dual indicators\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t\t// label background stroke\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t\t// label background outline\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t\t// no label background shadow\n\t//\t|\t\tfill:  \"#ccc\",\t\t\t\t\t\t\t\t\t// label background fill\n\t//\t|\t\tradius: 3,\t\t\t\t\t\t\t\t\t\t// radius of the label background\n\t//\t|\t\tfont:    \"normal normal normal 10pt Tahoma\",\t// label font\n\t//\t|\t\tfontColor: \"#000\"\t\t\t\t\t\t\t\t// label color\n\t//\t|\t\tmarkerFill:    \"#ccc\",\t\t\t\t\t\t\t// marker fill\n\t//\t|\t\tmarkerSymbol:  \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\t// marker symbol\n\t//\t|\t\tmarkerStroke:  {width: 1.5, color: \"#333\"},\t\t// marker stroke\n\t//\t|\t\tmarkerOutline: {width: 0.1, color: \"#ccc\"},\t\t// marker outline\n\t//\t|\t\tmarkerShadow: null,\t\t\t\t\t\t\t\t// no marker shadow\n\t//\t|\t}\n\t//\n\t// example:\n\t//\t\tDefining a new theme is pretty simple:\n\t//\t|\tvar Grasslands = new SimpleTheme({\n\t//\t|\t\tcolors: [ \"#70803a\", \"#dde574\", \"#788062\", \"#b1cc5d\", \"#eff2c2\" ]\n\t//\t|\t});\n\t//\t|\n\t//\t|\tmyChart.setTheme(Grasslands);\n\n\tshapeSpaces: {shape: 1, shapeX: 1, shapeY: 1},\n\n\tconstructor: function(kwArgs){\n\t\t// summary:\n\t\t//\t\tInitialize a theme using the keyword arguments.  Note that the arguments\n\t\t//\t\tlook like the example (above), and may include a few more parameters.\n\t\tkwArgs = kwArgs || {};\n\n\t\t// populate theme with defaults updating them if needed\n\t\tvar def = SimpleTheme.defaultTheme;\n\t\tarr.forEach([\"chart\", \"plotarea\", \"axis\", \"grid\", \"series\", \"marker\", \"indicator\"], function(name){\n\t\t\tthis[name] = lang.delegate(def[name], kwArgs[name]);\n\t\t}, this);\n\n\t\t// personalize theme\n\t\tif(kwArgs.seriesThemes && kwArgs.seriesThemes.length){\n\t\t\tthis.colors  = null;\n\t\t\tthis.seriesThemes = kwArgs.seriesThemes.slice(0);\n\t\t}else{\n\t\t\tthis.seriesThemes = null;\n\t\t\tthis.colors = (kwArgs.colors || SimpleTheme.defaultColors).slice(0);\n\t\t}\n\t\tthis.markerThemes = null;\n\t\tif(kwArgs.markerThemes && kwArgs.markerThemes.length){\n\t\t\tthis.markerThemes = kwArgs.markerThemes.slice(0);\n\t\t}\n\t\tthis.markers = kwArgs.markers ? lang.clone(kwArgs.markers) : lang.delegate(SimpleTheme.defaultMarkers);\n\n\t\t// set flags\n\t\tthis.noGradConv = kwArgs.noGradConv;\n\t\tthis.noRadialConv = kwArgs.noRadialConv;\n\t\tif(kwArgs.reverseFills){\n\t\t\tthis.reverseFills();\n\t\t}\n\n\t\t//\tprivate housekeeping\n\t\tthis._current = 0;\n\t\tthis._buildMarkerArray();\n\t},\n\n\tclone: function(){\n\t\t// summary:\n\t\t//\t\tClone the current theme.\n\t\t// returns: dojox.charting.SimpleTheme\n\t\t//\t\tThe cloned theme; any alterations made will not affect the original.\n\t\tvar theme = new this.constructor({\n\t\t\t// theme components\n\t\t\tchart: this.chart,\n\t\t\tplotarea: this.plotarea,\n\t\t\taxis: this.axis,\n\t\t\tgrid: this.grid,\n\t\t\tseries: this.series,\n\t\t\tmarker: this.marker,\n\t\t\t// individual arrays\n\t\t\tcolors: this.colors,\n\t\t\tmarkers: this.markers,\n\t\t\tindicator: this.indicator,\n\t\t\tseriesThemes: this.seriesThemes,\n\t\t\tmarkerThemes: this.markerThemes,\n\t\t\t// flags\n\t\t\tnoGradConv: this.noGradConv,\n\t\t\tnoRadialConv: this.noRadialConv\n\t\t});\n\t\t// copy custom methods\n\t\tarr.forEach(\n\t\t\t[\"clone\", \"clear\", \"next\", \"skip\", \"addMixin\", \"post\", \"getTick\"],\n\t\t\tfunction(name){\n\t\t\t\tif(this.hasOwnProperty(name)){\n\t\t\t\t\ttheme[name] = this[name];\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis\n\t\t);\n\t\treturn theme;\t//\tdojox.charting.SimpleTheme\n\t},\n\n\tclear: function(){\n\t\t// summary:\n\t\t//\t\tClear and reset the internal pointer to start fresh.\n\t\tthis._current = 0;\n\t},\n\n\tnext: function(elementType, mixin, doPost){\n\t\t// summary:\n\t\t//\t\tGet the next color or series theme.\n\t\t// elementType: String?\n\t\t//\t\tAn optional element type (for use with series themes)\n\t\t// mixin: Object?\n\t\t//\t\tAn optional object to mix into the theme.\n\t\t// doPost: Boolean?\n\t\t//\t\tA flag to post-process the results.\n\t\t// returns: Object\n\t\t//\t\tAn object of the structure { series, marker, symbol }\n\t\tvar merge = dlu.merge, series, marker;\n\t\tif(this.colors){\n\t\t\tseries = lang.delegate(this.series);\n\t\t\tmarker = lang.delegate(this.marker);\n\t\t\tvar color = new Color(this.colors[this._current % this.colors.length]), old;\n\t\t\t// modify the stroke\n\t\t\tif(series.stroke && series.stroke.color){\n\t\t\t\tseries.stroke = lang.delegate(series.stroke);\n\t\t\t\told = new Color(series.stroke.color);\n\t\t\t\tseries.stroke.color = new Color(color);\n\t\t\t\tseries.stroke.color.a = old.a;\n\t\t\t}else{\n\t\t\t\tseries.stroke = {color: color};\n\t\t\t}\n\t\t\tif(marker.stroke && marker.stroke.color){\n\t\t\t\tmarker.stroke = lang.delegate(marker.stroke);\n\t\t\t\told = new Color(marker.stroke.color);\n\t\t\t\tmarker.stroke.color = new Color(color);\n\t\t\t\tmarker.stroke.color.a = old.a;\n\t\t\t}else{\n\t\t\t\tmarker.stroke = {color: color};\n\t\t\t}\n\t\t\t// modify the fill\n\t\t\tif(!series.fill || series.fill.type){\n\t\t\t\tseries.fill = color;\n\t\t\t}else{\n\t\t\t\told = new Color(series.fill);\n\t\t\t\tseries.fill = new Color(color);\n\t\t\t\tseries.fill.a = old.a;\n\t\t\t}\n\t\t\tif(!marker.fill || marker.fill.type){\n\t\t\t\tmarker.fill = color;\n\t\t\t}else{\n\t\t\t\told = new Color(marker.fill);\n\t\t\t\tmarker.fill = new Color(color);\n\t\t\t\tmarker.fill.a = old.a;\n\t\t\t}\n\t\t}else{\n\t\t\tseries = this.seriesThemes ?\n\t\t\t\tmerge(this.series, this.seriesThemes[this._current % this.seriesThemes.length]) :\n\t\t\t\tthis.series;\n\t\t\tmarker = this.markerThemes ?\n\t\t\t\tmerge(this.marker, this.markerThemes[this._current % this.markerThemes.length]) :\n\t\t\t\tseries;\n\t\t}\n\n\t\tvar symbol = marker && marker.symbol || this._markers[this._current % this._markers.length];\n\n\t\tvar theme = {series: series, marker: marker, symbol: symbol};\n\t\t\n\t\t// advance the counter\n\t\t++this._current;\n\n\t\tif(mixin){\n\t\t\ttheme = this.addMixin(theme, elementType, mixin);\n\t\t}\n\t\tif(doPost){\n\t\t\ttheme = this.post(theme, elementType);\n\t\t}\n\n\t\treturn theme;\t//\tObject\n\t},\n\n\tskip: function(){\n\t\t// summary:\n\t\t//\t\tSkip the next internal color.\n\t\t++this._current;\n\t},\n\n\taddMixin: function(theme, elementType, mixin, doPost){\n\t\t// summary:\n\t\t//\t\tAdd a mixin object to the passed theme and process.\n\t\t// theme: dojox/charting/SimpleTheme\n\t\t//\t\tThe theme to mixin to.\n\t\t// elementType: String\n\t\t//\t\tThe type of element in question. Can be \"line\", \"bar\" or \"circle\"\n\t\t// mixin: Object|Array\n\t\t//\t\tThe object or objects to mix into the theme.\n\t\t// doPost: Boolean\n\t\t//\t\tIf true, run the new theme through the post-processor.\n\t\t// returns: dojox/charting/SimpleTheme\n\t\t//\t\tThe new theme.\n\t\tif(lang.isArray(mixin)){\n\t\t\tarr.forEach(mixin, function(m){\n\t\t\t\ttheme = this.addMixin(theme, elementType, m);\n\t\t\t}, this);\n\t\t}else{\n\t\t\tvar t = {};\n\t\t\tif(\"color\" in mixin){\n\t\t\t\tif(elementType == \"line\" || elementType == \"area\"){\n\t\t\t\t\tlang.setObject(\"series.stroke.color\", mixin.color, t);\n\t\t\t\t\tlang.setObject(\"marker.stroke.color\", mixin.color, t);\n\t\t\t\t}else{\n\t\t\t\t\tlang.setObject(\"series.fill\", mixin.color, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tarr.forEach([\"stroke\", \"outline\", \"shadow\", \"fill\", \"filter\", \"font\", \"fontColor\", \"labelWiring\"], function(name){\n\t\t\t\tvar markerName = \"marker\" + name.charAt(0).toUpperCase() + name.substr(1),\n\t\t\t\t\tb = markerName in mixin;\n\t\t\t\tif(name in mixin){\n\t\t\t\t\tlang.setObject(\"series.\" + name, mixin[name], t);\n\t\t\t\t\tif(!b){\n\t\t\t\t\t\tlang.setObject(\"marker.\" + name, mixin[name], t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(b){\n\t\t\t\t\tlang.setObject(\"marker.\" + name, mixin[markerName], t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(\"marker\" in mixin){\n\t\t\t\tt.symbol = mixin.marker;\n\t\t\t\tt.symbol = mixin.marker;\n\t\t\t}\n\t\t\ttheme = dlu.merge(theme, t);\n\t\t}\n\t\tif(doPost){\n\t\t\ttheme = this.post(theme, elementType);\n\t\t}\n\t\treturn theme;\t//\tdojox/charting/SimpleTheme\n\t},\n\n\tpost: function(theme, elementType){\n\t\t// summary:\n\t\t//\t\tProcess any post-shape fills.\n\t\t// theme: dojox/charting/SimpleTheme\n\t\t//\t\tThe theme to post process with.\n\t\t// elementType: String\n\t\t//\t\tThe type of element being filled.  Can be \"bar\" or \"circle\".\n\t\t// returns: dojox/charting/SimpleTheme\n\t\t//\t\tThe post-processed theme.\n\t\tvar fill = theme.series.fill, t;\n\t\tif(!this.noGradConv && this.shapeSpaces[fill.space] && fill.type == \"linear\"){\n\t\t\tif(elementType == \"bar\"){\n\t\t\t\t// transpose start and end points\n\t\t\t\tt = {\n\t\t\t\t\tx1: fill.y1,\n\t\t\t\t\ty1: fill.x1,\n\t\t\t\t\tx2: fill.y2,\n\t\t\t\t\ty2: fill.x2\n\t\t\t\t};\n\t\t\t}else if(!this.noRadialConv && fill.space == \"shape\" && (elementType == \"slice\" || elementType == \"circle\")){\n\t\t\t\t// switch to radial\n\t\t\t\tt = {\n\t\t\t\t\ttype: \"radial\",\n\t\t\t\t\tcx: 0,\n\t\t\t\t\tcy: 0,\n\t\t\t\t\tr:  100\n\t\t\t\t};\n\t\t\t}\n\t\t\tif(t){\n\t\t\t\treturn dlu.merge(theme, {series: {fill: t}});\n\t\t\t}\n\t\t}\n\t\treturn theme;\t//\tdojox/charting/SimpleTheme\n\t},\n\n\tgetTick: function(name, mixin){\n\t\t// summary:\n\t\t//\t\tCalculates and merges tick parameters.\n\t\t// name: String\n\t\t//\t\tTick name, can be \"major\", \"minor\", or \"micro\".\n\t\t// mixin: Object?\n\t\t//\t\tOptional object to mix in to the tick.\n\t\tvar tick = this.axis.tick, tickName = name + \"Tick\",\n\t\t\tmerge = dlu.merge;\n\t\tif(tick){\n\t\t\tif(this.axis[tickName]){\n\t\t\t\ttick = merge(tick, this.axis[tickName]);\n\t\t\t}\n\t\t}else{\n\t\t\ttick = this.axis[tickName];\n\t\t}\n\t\tif(mixin){\n\t\t\tif(tick){\n\t\t\t\tif(mixin[tickName]){\n\t\t\t\t\ttick = merge(tick, mixin[tickName]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\ttick = mixin[tickName];\n\t\t\t}\n\t\t}\n\t\treturn tick;\t//\tObject\n\t},\n\n\tinspectObjects: function(f){\n\t\tarr.forEach([\"chart\", \"plotarea\", \"axis\", \"grid\", \"series\", \"marker\", \"indicator\"], function(name){\n\t\t\tf(this[name]);\n\t\t}, this);\n\t\tif(this.seriesThemes){\n\t\t\tarr.forEach(this.seriesThemes, f);\n\t\t}\n\t\tif(this.markerThemes){\n\t\t\tarr.forEach(this.markerThemes, f);\n\t\t}\n\t},\n\n\treverseFills: function(){\n\t\tthis.inspectObjects(function(o){\n\t\t\tif(o && o.fill){\n\t\t\t\to.fill = dgg.reverse(o.fill);\n\t\t\t}\n\t\t});\n\t},\n\n\taddMarker:function(/*String*/ name, /*String*/ segment){\n\t\t// summary:\n\t\t//\t\tAdd a custom marker to this theme.\n\t\t// example:\n\t\t//\t|\tmyTheme.addMarker(\"Ellipse\", foo);\n\t\tthis.markers[name] = segment;\n\t\tthis._buildMarkerArray();\n\t},\n\n\tsetMarkers:function(/*Object*/ obj){\n\t\t// summary:\n\t\t//\t\tSet all the markers of this theme at once.  obj should be a\n\t\t//\t\tdictionary of keys and path segments.\n\t\t//\n\t\t// example:\n\t\t//\t|\tmyTheme.setMarkers({ \"CIRCLE\": foo });\n\t\tthis.markers = obj;\n\t\tthis._buildMarkerArray();\n\t},\n\n\t_buildMarkerArray: function(){\n\t\tthis._markers = [];\n\t\tfor(var p in this.markers){\n\t\t\tthis._markers.push(this.markers[p]);\n\t\t}\n\t}\n});\n\nlang.mixin(SimpleTheme, {\n\tdefaultMarkers: {\n\t\tCIRCLE:   \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\n\t\tSQUARE:   \"m-3,-3 l0,6 6,0 0,-6 z\",\n\t\tDIAMOND:  \"m0,-3 l3,3 -3,3 -3,-3 z\",\n\t\tCROSS:    \"m0,-3 l0,6 m-3,-3 l6,0\",\n\t\tX:        \"m-3,-3 l6,6 m0,-6 l-6,6\",\n\t\tTRIANGLE: \"m-3,3 l3,-6 3,6 z\",\n\t\tTRIANGLE_INVERTED: \"m-3,-3 l3,6 3,-6 z\"\n\t},\n\n\tdefaultColors:[\n\t\t// gray skies\n\t\t\"#54544c\", \"#858e94\", \"#6e767a\", \"#948585\", \"#474747\"\n\t],\n\n\tdefaultTheme: {\n\t\t// all objects are structs used directly in dojox.gfx\n\t\tchart:{\n\t\t\tstroke: null,\n\t\t\tfill: \"white\",\n\t\t\tpageStyle: null,\n\t\t\ttitleGap:\t\t20,\n\t\t\ttitlePos:\t\t\"top\",\n\t\t\ttitleFont:      \"normal normal bold 14pt Tahoma\",\t// chart title\n\t\t\ttitleFontColor: \"#333\",\n\t\t\ttitleAlign: \"middle\"\n\t\t},\n\t\tplotarea:{\n\t\t\tstroke: null,\n\t\t\tfill: \"white\"\n\t\t},\n\t\t// TODO: label rotation on axis\n\t\taxis:{\n\t\t\tstroke:\t{ // the axis itself\n\t\t\t\tcolor: \"#333\",\n\t\t\t\twidth: 1\n\t\t\t},\n\t\t\ttick: {\t// used as a foundation for all ticks\n\t\t\t\tcolor:     \"#666\",\n\t\t\t\tposition:  \"center\",\n\t\t\t\tfont:      \"normal normal normal 7pt Tahoma\",\t// labels on axis\n\t\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t\t// color of labels\n\t\t\t\tlabelGap:  4                                    // gap between a tick and its label in pixels\n\t\t\t},\n\t\t\tmajorTick:\t{ // major ticks on axis, and used for major gridlines\n\t\t\t\twidth:  1,\n\t\t\t\tlength: 6\n\t\t\t},\n\t\t\tminorTick:\t{ // minor ticks on axis, and used for minor gridlines\n\t\t\t\twidth:  0.8,\n\t\t\t\tlength: 3\n\t\t\t},\n\t\t\tmicroTick:\t{ // minor ticks on axis, and used for minor gridlines\n\t\t\t\twidth:  0.5,\n\t\t\t\tlength: 1\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\tgap:  15,\n\t\t\t\tfont: \"normal normal normal 11pt Tahoma\",\t// title font\n\t\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t// title font color\n\t\t\t\torientation: \"axis\"\t\t\t\t\t\t// \"axis\": facing the axis, \"away\": facing away\n\t\t\t}\n\t\t},\n\t\tseries: {\n\t\t\t// used as a \"main\" theme for series, sThemes augment it\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// line\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\n\t\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\n\t\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill, if appropriate\n\t\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// if there's a label\n\t\t\tfontColor: \"#000\",\t\t\t\t\t\t\t// color of labels\n\t\t\tlabelWiring: {width: 1, color: \"#ccc\"}\t\t// connect marker and target data item(slice, column, bar...)\n\t\t},\n\t\tmarker: {\t// any markers on a series\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// stroke\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\n\t\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\n\t\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill if needed\n\t\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// label\n\t\t\tfontColor: \"#000\"\n\t\t},\n\t\tindicator: {\n\t\t\tlineStroke:  {width: 1.5, color: \"#333\"},\t\t\n\t\t\tlineOutline: {width: 0.1, color: \"#ccc\"},\t\t\n\t\t\tlineShadow: null,\n\t\t\tlineFill: null,\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t\n\t\t\tfill : \"#ccc\",\n\t\t\tradius: 3,\n\t\t\tfont:    \"normal normal normal 10pt Tahoma\",\t\n\t\t\tfontColor: \"#000\",\t\t\t\t\t\t\t\n\t\t\tmarkerFill:    \"#ccc\",\t\t\t\t\t\t\t\n\t\t\tmarkerSymbol:  \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\t\t\t\n\t\t\tmarkerStroke:  {width: 1.5, color: \"#333\"},\t\t\n\t\t\tmarkerOutline: {width: 0.1, color: \"#ccc\"},\t\t\n\t\t\tmarkerShadow: null\t\t\t\t\t\t\t\t\n\t\t}\n\t}\n});\n\nreturn SimpleTheme;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/SimpleTheme.js\n// module id = 262\n// module chunks = 0","// Various generic utilities to deal with a linear gradient\n\ndefine([\"./_base\", \"dojo/_base/lang\", \"./matrix\", \"dojo/_base/Color\"], \n  function(g, lang, m, Color){\n  \n\tvar gradutils = g.gradutils = {};\n\n\tfunction findColor(o, c){\n\t\tif(o <= 0){\n\t\t\treturn c[0].color;\n\t\t}\n\t\tvar len = c.length;\n\t\tif(o >= 1){\n\t\t\treturn c[len - 1].color;\n\t\t}\n\t\t//TODO: use binary search\n\t\tfor(var i = 0; i < len; ++i){\n\t\t\tvar stop = c[i];\n\t\t\tif(stop.offset >= o){\n\t\t\t\tif(i){\n\t\t\t\t\tvar prev = c[i - 1];\n\t\t\t\t\treturn Color.blendColors(new Color(prev.color), new Color(stop.color),\n\t\t\t\t\t\t(o - prev.offset) / (stop.offset - prev.offset));\n\t\t\t\t}\n\t\t\t\treturn stop.color;\n\t\t\t}\n\t\t}\n\t\treturn c[len - 1].color;\n\t}\n\n\tgradutils.getColor = function(fill, pt){\n\t\t// summary:\n\t\t//\t\tsample a color from a gradient using a point\n\t\t// fill: Object\n\t\t//\t\tfill object\n\t\t// pt: dojox/gfx.Point\n\t\t//\t\tpoint where to sample a color\n\t\tvar o;\n\t\tif(fill){\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\t\tvar angle = Math.atan2(fill.y2 - fill.y1, fill.x2 - fill.x1),\n\t\t\t\t\t\trotation = m.rotate(-angle),\n\t\t\t\t\t\tprojection = m.project(fill.x2 - fill.x1, fill.y2 - fill.y1),\n\t\t\t\t\t\tp = m.multiplyPoint(projection, pt),\n\t\t\t\t\t\tpf1 = m.multiplyPoint(projection, fill.x1, fill.y1),\n\t\t\t\t\t\tpf2 = m.multiplyPoint(projection, fill.x2, fill.y2),\n\t\t\t\t\t\tscale = m.multiplyPoint(rotation, pf2.x - pf1.x, pf2.y - pf1.y).x;\n\t\t\t\t\to = m.multiplyPoint(rotation, p.x - pf1.x, p.y - pf1.y).x / scale;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"radial\":\n\t\t\t\t\tvar dx = pt.x - fill.cx, dy = pt.y - fill.cy;\n\t\t\t\t\to = Math.sqrt(dx * dx + dy * dy) / fill.r;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn findColor(o, fill.colors);\t// dojo/_base/Color\n\t\t}\n\t\t// simple color\n\t\treturn new Color(fill || [0, 0, 0, 0]);\t// dojo/_base/Color\n\t};\n\n\tgradutils.reverse = function(fill){\n\t\t// summary:\n\t\t//\t\treverses a gradient\n\t\t// fill: Object\n\t\t//\t\tfill object\n\t\tif(fill){\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\tcase \"radial\":\n\t\t\t\t\tfill = lang.delegate(fill);\n\t\t\t\t\tif(fill.colors){\n\t\t\t\t\t\tvar c = fill.colors, l = c.length, i = 0, stop,\n\t\t\t\t\t\t\tn = fill.colors = new Array(c.length);\n\t\t\t\t\t\tfor(; i < l; ++i){\n\t\t\t\t\t\t\tstop = c[i];\n\t\t\t\t\t\t\tn[i] = {\n\t\t\t\t\t\t\t\toffset: 1 - stop.offset,\n\t\t\t\t\t\t\t\tcolor:  stop.color\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn.sort(function(a, b){ return a.offset - b.offset; });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn fill;\t// Object\n\t};\n\n\treturn gradutils;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/gfx/gradutils.js\n// module id = 263\n// module chunks = 0","define([\"./kernel\", \"../dom\", \"../dom-style\", \"../dom-attr\", \"../dom-prop\", \"../dom-class\", \"../dom-construct\", \"../dom-geometry\"], function(dojo, dom, style, attr, prop, cls, ctr, geom){\r\n\t// module:\r\n\t//\t\tdojo/dom\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tThis module is a stub for the core dojo DOM API.\r\n\t};\r\n\t=====*/\r\n\r\n\t// mix-in dom\r\n\tdojo.byId = dom.byId;\r\n\tdojo.isDescendant = dom.isDescendant;\r\n\tdojo.setSelectable = dom.setSelectable;\r\n\r\n\t// mix-in dom-attr\r\n\tdojo.getAttr = attr.get;\r\n\tdojo.setAttr = attr.set;\r\n\tdojo.hasAttr = attr.has;\r\n\tdojo.removeAttr = attr.remove;\r\n\tdojo.getNodeProp = attr.getNodeProp;\r\n\r\n\tdojo.attr = function(node, name, value){\r\n\t\t// summary:\r\n\t\t//\t\tGets or sets an attribute on an HTML element.\r\n\t\t// description:\r\n\t\t//\t\tHandles normalized getting and setting of attributes on DOM\r\n\t\t//\t\tNodes. If 2 arguments are passed, and a the second argument is a\r\n\t\t//\t\tstring, acts as a getter.\r\n\t\t//\r\n\t\t//\t\tIf a third argument is passed, or if the second argument is a\r\n\t\t//\t\tmap of attributes, acts as a setter.\r\n\t\t//\r\n\t\t//\t\tWhen passing functions as values, note that they will not be\r\n\t\t//\t\tdirectly assigned to slots on the node, but rather the default\r\n\t\t//\t\tbehavior will be removed and the new behavior will be added\r\n\t\t//\t\tusing `dojo.connect()`, meaning that event handler properties\r\n\t\t//\t\twill be normalized and that some caveats with regards to\r\n\t\t//\t\tnon-standard behaviors for onsubmit apply. Namely that you\r\n\t\t//\t\tshould cancel form submission using `dojo.stopEvent()` on the\r\n\t\t//\t\tpassed event object instead of returning a boolean value from\r\n\t\t//\t\tthe handler itself.\r\n\t\t// node: DOMNode|String\r\n\t\t//\t\tid or reference to the element to get or set the attribute on\r\n\t\t// name: String|Object\r\n\t\t//\t\tthe name of the attribute to get or set.\r\n\t\t// value: String?\r\n\t\t//\t\tThe value to set for the attribute\r\n\t\t// returns:\r\n\t\t//\t\twhen used as a getter, the value of the requested attribute\r\n\t\t//\t\tor null if that attribute does not have a specified or\r\n\t\t//\t\tdefault value;\r\n\t\t//\r\n\t\t//\t\twhen used as a setter, the DOM node\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t// get the current value of the \"foo\" attribute on a node\r\n\t\t//\t|\tdojo.attr(dojo.byId(\"nodeId\"), \"foo\");\r\n\t\t//\t|\t// or we can just pass the id:\r\n\t\t//\t|\tdojo.attr(\"nodeId\", \"foo\");\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t// use attr() to set the tab index\r\n\t\t//\t|\tdojo.attr(\"nodeId\", \"tabIndex\", 3);\r\n\t\t//\t|\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tSet multiple values at once, including event handlers:\r\n\t\t//\t|\tdojo.attr(\"formId\", {\r\n\t\t//\t|\t\t\"foo\": \"bar\",\r\n\t\t//\t|\t\t\"tabIndex\": -1,\r\n\t\t//\t|\t\t\"method\": \"POST\",\r\n\t\t//\t|\t\t\"onsubmit\": function(e){\r\n\t\t//\t|\t\t\t// stop submitting the form. Note that the IE behavior\r\n\t\t//\t|\t\t\t// of returning true or false will have no effect here\r\n\t\t//\t|\t\t\t// since our handler is connect()ed to the built-in\r\n\t\t//\t|\t\t\t// onsubmit behavior and so we need to use\r\n\t\t//\t|\t\t\t// dojo.stopEvent() to ensure that the submission\r\n\t\t//\t|\t\t\t// doesn't proceed.\r\n\t\t//\t|\t\t\tdojo.stopEvent(e);\r\n\t\t//\t|\r\n\t\t//\t|\t\t\t// submit the form with Ajax\r\n\t\t//\t|\t\t\tdojo.xhrPost({ form: \"formId\" });\r\n\t\t//\t|\t\t}\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tStyle is s special case: Only set with an object hash of styles\r\n\t\t//\t|\tdojo.attr(\"someNode\",{\r\n\t\t//\t|\t\tid:\"bar\",\r\n\t\t//\t|\t\tstyle:{\r\n\t\t//\t|\t\t\twidth:\"200px\", height:\"100px\", color:\"#000\"\r\n\t\t//\t|\t\t}\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tAgain, only set style as an object hash of styles:\r\n\t\t//\t|\tvar obj = { color:\"#fff\", backgroundColor:\"#000\" };\r\n\t\t//\t|\tdojo.attr(\"someNode\", \"style\", obj);\r\n\t\t//\t|\r\n\t\t//\t|\t// though shorter to use `dojo.style()` in this case:\r\n\t\t//\t|\tdojo.style(\"someNode\", obj);\r\n\r\n\t\tif(arguments.length == 2){\r\n\t\t\treturn attr[typeof name == \"string\" ? \"get\" : \"set\"](node, name);\r\n\t\t}\r\n\t\treturn attr.set(node, name, value);\r\n\t};\r\n\r\n\t// mix-in dom-class\r\n\tdojo.hasClass = cls.contains;\r\n\tdojo.addClass = cls.add;\r\n\tdojo.removeClass = cls.remove;\r\n\tdojo.toggleClass = cls.toggle;\r\n\tdojo.replaceClass = cls.replace;\r\n\r\n\t// mix-in dom-construct\r\n\tdojo._toDom = dojo.toDom = ctr.toDom;\r\n\tdojo.place = ctr.place;\r\n\tdojo.create = ctr.create;\r\n\tdojo.empty = function(node){ ctr.empty(node); };\r\n\tdojo._destroyElement = dojo.destroy = function(node){ ctr.destroy(node); };\r\n\r\n\t// mix-in dom-geometry\r\n\tdojo._getPadExtents = dojo.getPadExtents = geom.getPadExtents;\r\n\tdojo._getBorderExtents = dojo.getBorderExtents = geom.getBorderExtents;\r\n\tdojo._getPadBorderExtents = dojo.getPadBorderExtents = geom.getPadBorderExtents;\r\n\tdojo._getMarginExtents = dojo.getMarginExtents = geom.getMarginExtents;\r\n\tdojo._getMarginSize = dojo.getMarginSize = geom.getMarginSize;\r\n\tdojo._getMarginBox = dojo.getMarginBox = geom.getMarginBox;\r\n\tdojo.setMarginBox = geom.setMarginBox;\r\n\tdojo._getContentBox = dojo.getContentBox = geom.getContentBox;\r\n\tdojo.setContentSize = geom.setContentSize;\r\n\tdojo._isBodyLtr = dojo.isBodyLtr = geom.isBodyLtr;\r\n\tdojo._docScroll = dojo.docScroll = geom.docScroll;\r\n\tdojo._getIeDocumentElementOffset = dojo.getIeDocumentElementOffset = geom.getIeDocumentElementOffset;\r\n\tdojo._fixIeBiDiScrollLeft = dojo.fixIeBiDiScrollLeft = geom.fixIeBiDiScrollLeft;\r\n\tdojo.position = geom.position;\r\n\r\n\tdojo.marginBox = function marginBox(/*DomNode|String*/node, /*Object?*/box){\r\n\t\t// summary:\r\n\t\t//\t\tGetter/setter for the margin-box of node.\r\n\t\t// description:\r\n\t\t//\t\tGetter/setter for the margin-box of node.\r\n\t\t//\t\tReturns an object in the expected format of box (regardless\r\n\t\t//\t\tif box is passed). The object might look like:\r\n\t\t//\t\t`{ l: 50, t: 200, w: 300: h: 150 }`\r\n\t\t//\t\tfor a node offset from its parent 50px to the left, 200px from\r\n\t\t//\t\tthe top with a margin width of 300px and a margin-height of\r\n\t\t//\t\t150px.\r\n\t\t// node:\r\n\t\t//\t\tid or reference to DOM Node to get/set box for\r\n\t\t// box:\r\n\t\t//\t\tIf passed, denotes that dojo.marginBox() should\r\n\t\t//\t\tupdate/set the margin box for node. Box is an object in the\r\n\t\t//\t\tabove format. All properties are optional if passed.\r\n\t\t// example:\r\n\t\t//\t\tRetrieve the margin box of a passed node\r\n\t\t//\t|\tvar box = dojo.marginBox(\"someNodeId\");\r\n\t\t//\t|\tconsole.dir(box);\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tSet a node's margin box to the size of another node\r\n\t\t//\t|\tvar box = dojo.marginBox(\"someNodeId\");\r\n\t\t//\t|\tdojo.marginBox(\"someOtherNode\", box);\r\n\t\treturn box ? geom.setMarginBox(node, box) : geom.getMarginBox(node); // Object\r\n\t};\r\n\r\n\tdojo.contentBox = function contentBox(/*DomNode|String*/node, /*Object?*/box){\r\n\t\t// summary:\r\n\t\t//\t\tGetter/setter for the content-box of node.\r\n\t\t// description:\r\n\t\t//\t\tReturns an object in the expected format of box (regardless if box is passed).\r\n\t\t//\t\tThe object might look like:\r\n\t\t//\t\t`{ l: 50, t: 200, w: 300: h: 150 }`\r\n\t\t//\t\tfor a node offset from its parent 50px to the left, 200px from\r\n\t\t//\t\tthe top with a content width of 300px and a content-height of\r\n\t\t//\t\t150px. Note that the content box may have a much larger border\r\n\t\t//\t\tor margin box, depending on the box model currently in use and\r\n\t\t//\t\tCSS values set/inherited for node.\r\n\t\t//\t\tWhile the getter will return top and left values, the\r\n\t\t//\t\tsetter only accepts setting the width and height.\r\n\t\t// node:\r\n\t\t//\t\tid or reference to DOM Node to get/set box for\r\n\t\t// box:\r\n\t\t//\t\tIf passed, denotes that dojo.contentBox() should\r\n\t\t//\t\tupdate/set the content box for node. Box is an object in the\r\n\t\t//\t\tabove format, but only w (width) and h (height) are supported.\r\n\t\t//\t\tAll properties are optional if passed.\r\n\t\treturn box ? geom.setContentSize(node, box) : geom.getContentBox(node); // Object\r\n\t};\r\n\r\n\tdojo.coords = function(/*DomNode|String*/node, /*Boolean?*/includeScroll){\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated: Use position() for border-box x/y/w/h\r\n\t\t//\t\tor marginBox() for margin-box w/h/l/t.\r\n\t\t//\r\n\t\t//\t\tReturns an object that measures margin-box (w)idth/(h)eight\r\n\t\t//\t\tand absolute position x/y of the border-box. Also returned\r\n\t\t//\t\tis computed (l)eft and (t)op values in pixels from the\r\n\t\t//\t\tnode's offsetParent as returned from marginBox().\r\n\t\t//\t\tReturn value will be in the form:\r\n\t\t//|\t\t\t{ l: 50, t: 200, w: 300: h: 150, x: 100, y: 300 }\r\n\t\t//\t\tDoes not act as a setter. If includeScroll is passed, the x and\r\n\t\t//\t\ty params are affected as one would expect in dojo.position().\r\n\t\tdojo.deprecated(\"dojo.coords()\", \"Use dojo.position() or dojo.marginBox().\");\r\n\t\tnode = dom.byId(node);\r\n\t\tvar s = style.getComputedStyle(node), mb = geom.getMarginBox(node, s);\r\n\t\tvar abs = geom.position(node, includeScroll);\r\n\t\tmb.x = abs.x;\r\n\t\tmb.y = abs.y;\r\n\t\treturn mb;\t// Object\r\n\t};\r\n\r\n\t// mix-in dom-prop\r\n\tdojo.getProp = prop.get;\r\n\tdojo.setProp = prop.set;\r\n\r\n\tdojo.prop = function(/*DomNode|String*/node, /*String|Object*/name, /*String?*/value){\r\n\t\t// summary:\r\n\t\t//\t\tGets or sets a property on an HTML element.\r\n\t\t// description:\r\n\t\t//\t\tHandles normalized getting and setting of properties on DOM\r\n\t\t//\t\tNodes. If 2 arguments are passed, and a the second argument is a\r\n\t\t//\t\tstring, acts as a getter.\r\n\t\t//\r\n\t\t//\t\tIf a third argument is passed, or if the second argument is a\r\n\t\t//\t\tmap of attributes, acts as a setter.\r\n\t\t//\r\n\t\t//\t\tWhen passing functions as values, note that they will not be\r\n\t\t//\t\tdirectly assigned to slots on the node, but rather the default\r\n\t\t//\t\tbehavior will be removed and the new behavior will be added\r\n\t\t//\t\tusing `dojo.connect()`, meaning that event handler properties\r\n\t\t//\t\twill be normalized and that some caveats with regards to\r\n\t\t//\t\tnon-standard behaviors for onsubmit apply. Namely that you\r\n\t\t//\t\tshould cancel form submission using `dojo.stopEvent()` on the\r\n\t\t//\t\tpassed event object instead of returning a boolean value from\r\n\t\t//\t\tthe handler itself.\r\n\t\t// node:\r\n\t\t//\t\tid or reference to the element to get or set the property on\r\n\t\t// name:\r\n\t\t//\t\tthe name of the property to get or set.\r\n\t\t// value:\r\n\t\t//\t\tThe value to set for the property\r\n\t\t// returns:\r\n\t\t//\t\twhen used as a getter, the value of the requested property\r\n\t\t//\t\tor null if that attribute does not have a specified or\r\n\t\t//\t\tdefault value;\r\n\t\t//\r\n\t\t//\t\twhen used as a setter, the DOM node\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t// get the current value of the \"foo\" property on a node\r\n\t\t//\t|\tdojo.prop(dojo.byId(\"nodeId\"), \"foo\");\r\n\t\t//\t|\t// or we can just pass the id:\r\n\t\t//\t|\tdojo.prop(\"nodeId\", \"foo\");\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t// use prop() to set the tab index\r\n\t\t//\t|\tdojo.prop(\"nodeId\", \"tabIndex\", 3);\r\n\t\t//\t|\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tSet multiple values at once, including event handlers:\r\n\t\t//\t|\tdojo.prop(\"formId\", {\r\n\t\t//\t|\t\t\"foo\": \"bar\",\r\n\t\t//\t|\t\t\"tabIndex\": -1,\r\n\t\t//\t|\t\t\"method\": \"POST\",\r\n\t\t//\t|\t\t\"onsubmit\": function(e){\r\n\t\t//\t|\t\t\t// stop submitting the form. Note that the IE behavior\r\n\t\t//\t|\t\t\t// of returning true or false will have no effect here\r\n\t\t//\t|\t\t\t// since our handler is connect()ed to the built-in\r\n\t\t//\t|\t\t\t// onsubmit behavior and so we need to use\r\n\t\t//\t|\t\t\t// dojo.stopEvent() to ensure that the submission\r\n\t\t//\t|\t\t\t// doesn't proceed.\r\n\t\t//\t|\t\t\tdojo.stopEvent(e);\r\n\t\t//\t|\r\n\t\t//\t|\t\t\t// submit the form with Ajax\r\n\t\t//\t|\t\t\tdojo.xhrPost({ form: \"formId\" });\r\n\t\t//\t|\t\t}\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tStyle is s special case: Only set with an object hash of styles\r\n\t\t//\t|\tdojo.prop(\"someNode\",{\r\n\t\t//\t|\t\tid:\"bar\",\r\n\t\t//\t|\t\tstyle:{\r\n\t\t//\t|\t\t\twidth:\"200px\", height:\"100px\", color:\"#000\"\r\n\t\t//\t|\t\t}\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tAgain, only set style as an object hash of styles:\r\n\t\t//\t|\tvar obj = { color:\"#fff\", backgroundColor:\"#000\" };\r\n\t\t//\t|\tdojo.prop(\"someNode\", \"style\", obj);\r\n\t\t//\t|\r\n\t\t//\t|\t// though shorter to use `dojo.style()` in this case:\r\n\t\t//\t|\tdojo.style(\"someNode\", obj);\r\n\r\n\t\tif(arguments.length == 2){\r\n\t\t\treturn prop[typeof name == \"string\" ? \"get\" : \"set\"](node, name);\r\n\t\t}\r\n\t\t// setter\r\n\t\treturn prop.set(node, name, value);\r\n\t};\r\n\r\n\t// mix-in dom-style\r\n\tdojo.getStyle = style.get;\r\n\tdojo.setStyle = style.set;\r\n\tdojo.getComputedStyle = style.getComputedStyle;\r\n\tdojo.__toPixelValue = dojo.toPixelValue = style.toPixelValue;\r\n\r\n\tdojo.style = function(node, name, value){\r\n\t\t// summary:\r\n\t\t//\t\tAccesses styles on a node. If 2 arguments are\r\n\t\t//\t\tpassed, acts as a getter. If 3 arguments are passed, acts\r\n\t\t//\t\tas a setter.\r\n\t\t// description:\r\n\t\t//\t\tGetting the style value uses the computed style for the node, so the value\r\n\t\t//\t\twill be a calculated value, not just the immediate node.style value.\r\n\t\t//\t\tAlso when getting values, use specific style names,\r\n\t\t//\t\tlike \"borderBottomWidth\" instead of \"border\" since compound values like\r\n\t\t//\t\t\"border\" are not necessarily reflected as expected.\r\n\t\t//\t\tIf you want to get node dimensions, use `dojo.marginBox()`,\r\n\t\t//\t\t`dojo.contentBox()` or `dojo.position()`.\r\n\t\t// node: DOMNode|String\r\n\t\t//\t\tid or reference to node to get/set style for\r\n\t\t// name: String|Object?\r\n\t\t//\t\tthe style property to set in DOM-accessor format\r\n\t\t//\t\t(\"borderWidth\", not \"border-width\") or an object with key/value\r\n\t\t//\t\tpairs suitable for setting each property.\r\n\t\t// value: String?\r\n\t\t//\t\tIf passed, sets value on the node for style, handling\r\n\t\t//\t\tcross-browser concerns.  When setting a pixel value,\r\n\t\t//\t\tbe sure to include \"px\" in the value. For instance, top: \"200px\".\r\n\t\t//\t\tOtherwise, in some cases, some browsers will not apply the style.\r\n\t\t// returns:\r\n\t\t//\t\twhen used as a getter, return the computed style of the node if passing in an ID or node,\r\n\t\t//\t\tor return the normalized, computed value for the property when passing in a node and a style property\r\n\t\t// example:\r\n\t\t//\t\tPassing only an ID or node returns the computed style object of\r\n\t\t//\t\tthe node:\r\n\t\t//\t|\tdojo.style(\"thinger\");\r\n\t\t// example:\r\n\t\t//\t\tPassing a node and a style property returns the current\r\n\t\t//\t\tnormalized, computed value for that property:\r\n\t\t//\t|\tdojo.style(\"thinger\", \"opacity\"); // 1 by default\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tPassing a node, a style property, and a value changes the\r\n\t\t//\t\tcurrent display of the node and returns the new computed value\r\n\t\t//\t|\tdojo.style(\"thinger\", \"opacity\", 0.5); // == 0.5\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tPassing a node, an object-style style property sets each of the values in turn and returns the computed style object of the node:\r\n\t\t//\t|\tdojo.style(\"thinger\", {\r\n\t\t//\t|\t\t\"opacity\": 0.5,\r\n\t\t//\t|\t\t\"border\": \"3px solid black\",\r\n\t\t//\t|\t\t\"height\": \"300px\"\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tWhen the CSS style property is hyphenated, the JavaScript property is camelCased.\r\n\t\t//\t\tfont-size becomes fontSize, and so on.\r\n\t\t//\t|\tdojo.style(\"thinger\",{\r\n\t\t//\t|\t\tfontSize:\"14pt\",\r\n\t\t//\t|\t\tletterSpacing:\"1.2em\"\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tdojo/NodeList implements .style() using the same syntax, omitting the \"node\" parameter, calling\r\n\t\t//\t\tdojo.style() on every element of the list. See: `dojo/query` and `dojo/NodeList`\r\n\t\t//\t|\tdojo.query(\".someClassName\").style(\"visibility\",\"hidden\");\r\n\t\t//\t|\t// or\r\n\t\t//\t|\tdojo.query(\"#baz > div\").style({\r\n\t\t//\t|\t\topacity:0.75,\r\n\t\t//\t|\t\tfontSize:\"13pt\"\r\n\t\t//\t|\t});\r\n\r\n\t\tswitch(arguments.length){\r\n\t\t\tcase 1:\r\n\t\t\t\treturn style.get(node);\r\n\t\t\tcase 2:\r\n\t\t\t\treturn style[typeof name == \"string\" ? \"get\" : \"set\"](node, name);\r\n\t\t}\r\n\t\t// setter\r\n\t\treturn style.set(node, name, value);\r\n\t};\r\n\r\n\treturn dojo;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojo/_base/html.js\n// module id = 264\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/Stateful\"], \n  function(lang,declare,Stateful) {\n\tlang.getObject(\"string\", true, dojox);\n\n\tvar BidiEngine = declare(\"dojox.string.BidiEngine\", Stateful, {\n\t\t// summary:\n\t\t//\t\tThis class provides a bidi transformation engine, i.e.\n\t\t//\t\tfunctions for reordering and shaping bidi text.\n\t\t// description:\n\t\t//\t\tBidi stands for support for languages with a bidirectional script. \n\t\t//\n\t\t//\t\tUsually Unicode Bidi Algorithm used by OS platform (and web browsers) is capable of properly \n\t\t//\t\ttransforming Bidi text and as a result it is adequately displayed on the screen. \n\t\t//\t\tHowever, in some situations, Unicode Bidi Algorithm is not invoked or is not properly applied.  \n\t\t//\t\tThis may occur in situation in which software responsible for rendering the text is not leveraging \n\t\t//\t\tUnicode Bidi Algorithm implemented by OS (e.g. GFX renderers).\n\t\t//\n\t\t//\t\tBidi engine provided in this class implements Unicode Bidi Algorithm as specified at\n\t\t//\t\thttp://www.unicode.org/reports/tr9/.\n\t\t//\n\t\t//\t\tFor more information on basic Bidi concepts please read\n\t\t//\t\t\"Bidirectional script support - A primer\" available from\n\t\t//\t\thttp://www.ibm.com/developerworks/websphere/library/techarticles/bidi/bidigen.html.\n\t\t//\n\t\t//\t\tAs of February 2011, Bidi engine has following limitations:\n\t\t//\n\t\t//\t\t1. No support for following numeric shaping options:\n\t\t//\t\t\t- H - Hindi,\n\t\t//\t\t\t- C - Contextual, \n\t\t//\t\t\t- N - Nominal.\n\t\t//\t\t2. No support for following shaping options:\n\t\t//\t\t\t- I - Initial shaping,\n\t\t//\t\t\t- M - Middle shaping,\n\t\t//\t\t\t- F - Final shaping,\n\t\t//\t\t\t- B - Isolated shaping.\n\t\t//\t\t3. No support for LRE/RLE/LRO/RLO/PDF (they are handled like neutrals).\n\t\t//\t\t4. No support for Windows compatibility.\n\t\t//\t\t5. No support for  insert/remove marks.\n\t\t//\t\t6. No support for code pages. \n\t\t//\t\t\t\n\t\t\n\t\t// Input Bidi layout in which inputText is passed to the function.\n\t\tinputFormat: \"ILYNN\",\n\t\t\n\t\t// Output Bidi layout to which inputText should be transformed.\n\t\toutputFormat: \"VLNNN\",\n\n\t\t// Array, containing positions of each character from the source text in the resulting text. \n\t\tsourceToTarget: [],\n\t\t\n\t\t// Array, containing positions of each character from the resulting text in the source text. \n\t\ttargetToSource: [],\n\t\t\n\t\t// Array, containing bidi level of each character from the source text\n\t\tlevels: [],\n\n\t\tbidiTransform: function (/*String*/text, /*String*/formatIn, /*String*/formatOut) {\n\t\t\t// summary:\n\t\t\t//\t\tCentral public API for Bidi engine. Transforms the text according to formatIn, formatOut \n\t\t\t//\t\tparameters. If formatIn or formatOut parametrs are not valid throws an exception.\n\t\t\t// inputText:\n\t\t\t//\t\tInput text subject to application of Bidi transformation.\n\t\t\t// formatIn:\n\t\t\t//\t\tInput Bidi layout in which inputText is passed to the function.\n\t\t\t// formatOut:\n\t\t\t//\t\tOutput Bidi layout to which inputText should be transformed.\n\t\t\t// description:\n\t\t\t//\t\tBoth formatIn and formatOut parameters are 5 letters long strings. \n\t\t\t//\t\tFor example - \"ILYNN\". Each letter is associated with specific attribute of Bidi layout. \n\t\t\t//\t\tPossible and default values for each one of the letters are provided below:\n\t\t\t//\n\t\t\t//\t\tFirst letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t1\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tOrdering Schema.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- I - Implicit (Logical).\n\t\t\t//\t\t\t- V - Visual.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tI\n\t\t\t//\n\t\t\t//\t\tSecond letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t2\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tOrientation.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- L - Left To Right.\n\t\t\t//\t\t\t- R - Right To Left.\n\t\t\t//\t\t\t- C - Contextual Left to Right.\n\t\t\t//\t\t\t- D - Contextual Right to Left.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tL\t\t\n\t\t\t//\n\t\t\t//\t\tThird letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t3\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tSymmetric Swapping.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- Y - Symmetric swapping is on.\n\t\t\t//\t\t\t- N - Symmetric swapping is off.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tY\t\t\n\t\t\t//\n\t\t\t//\t\tFourth letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t4\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tShaping.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- S - Text is shaped.\n\t\t\t//\t\t\t- N - Text is not shaped.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tN\t\t\t\t\n\t\t\t//\n\t\t\t//\t\tFifth letter:\n\t\t\t//\n\t\t\t//\t\t- Letter position/index:\n\t\t\t//\t\t\t5\n\t\t\t//\t\t- Letter meaning:\n\t\t\t//\t\t\tNumeric Shaping.\n\t\t\t//\t\t- Possible values:\n\t\t\t//\t\t\t- N - Nominal.\n\t\t\t//\t\t- Default value:\n\t\t\t//\t\t\tN\t\t\t\t\n\t\t\t//\n\t\t\t//\t\tThe output of this function is original text (passed via first argument) transformed from \n\t\t\t//\t\tinput Bidi layout (second argument) to output Bidi layout (last argument). \n\t\t\t//\n\t\t\t//\t\tSample call:\n\t\t\t//\t|\tmytext = bidiTransform(\"HELLO WORLD\", \"ILYNN\", \"VLYNN\");\n\t\t\t//\t\tIn this case, \"HELLO WORLD\" text is transformed from Logical - LTR to Visual - LTR Bidi layout \n\t\t\t//\t\twith default values for symmetric swapping (Yes), shaping (Not shaped) and numeric shaping \n\t\t\t//\t\t(Nominal).\n\t\t\t// returns: String\n\t\t\t//\t\tOriginal text transformed from input Bidi layout (second argument)\n\t\t\t//\t\tto output Bidi layout (last argument).\n\t\t\t//\t\tThrows an exception if the bidi layout strings are not valid.\n\t\t\t// tags:\n\t\t\t//\t\tpublic\n\n\t\t\tthis.sourceToTarget = [];\n\t\t\tthis.targetToSource = [];\n\t\t\tif (!text) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tinitMaps(this.sourceToTarget, this.targetToSource, text.length);\n\t\t\tif (!this.checkParameters(formatIn, formatOut)) {\n\t\t\t\treturn text;\n\t\t\t}\n\t\t\t\n\t\t\tformatIn = this.inputFormat;\n\t\t\tformatOut = this.outputFormat;\n\t\t\tvar result = text;\n\t\t\tvar bdx = BDX;\n\t\t\tvar orientIn = getOrientation(formatIn.charAt(1)),\n\t\t\t\torientOut = getOrientation(formatOut.charAt(1)),\n\t\t\t\tosIn = (formatIn.charAt(0) === \"I\") ? \"L\" : formatIn.charAt(0),\n\t\t\t\tosOut = (formatOut.charAt(0) === \"I\") ? \"L\" : formatOut.charAt(0),\n\t\t\t\tinFormat = osIn + orientIn,\n\t\t\t\toutFormat = osOut + orientOut,\n\t\t\t\tswap = formatIn.charAt(2) + formatOut.charAt(2);\n\t\n\t\t\tbdx.defInFormat = inFormat;\n\t\t\tbdx.defOutFormat = outFormat;\n\t\t\tbdx.defSwap = swap;\n\n\t\t\tvar stage1Text = doBidiReorder(text, inFormat, outFormat, swap, bdx),\n\t\t\t\tisRtl = false;\n\n\t\t\tif (formatOut.charAt(1) === \"R\") {\n\t\t\t\tisRtl = true;\n\t\t\t} else if (formatOut.charAt(1) === \"C\" || formatOut.charAt(1) === \"D\") {\n\t\t\t\tisRtl = this.checkContextual(stage1Text);\n\t\t\t}\n\t\t\t\n\t\t\tthis.sourceToTarget = stMap;\n\t\t\tthis.targetToSource = reverseMap(this.sourceToTarget);\n\t\t\ttsMap = this.targetToSource;\n\t\t\t\n\t\t\tif (formatIn.charAt(3) === formatOut.charAt(3)) {\n\t\t\t\tresult = stage1Text;\n\t\t\t} else if (formatOut.charAt(3) === \"S\") {\n\t\t\t\tresult = shape(isRtl, stage1Text, true);\n\t\t\t} else {  //formatOut.charAt(3) === \"N\"\n\t\t\t\tresult = deshape(stage1Text, isRtl, true);\n\t\t\t}\n\t\t\tthis.sourceToTarget = stMap;\n\t\t\tthis.targetToSource = tsMap;\n\t\t\tthis.levels = lvMap;\n\t\t\treturn result;\n\t\t},\n\n\t\t_inputFormatSetter: function (format) {\n\t\t\tif (!validFormat.test(format)) {\n\t\t\t\tthrow new Error(\"dojox/string/BidiEngine: the bidi layout string is wrong!\");\n\t\t\t}\n\t\t\tthis.inputFormat = format;\n\t\t},\n\n\t\t_outputFormatSetter: function (format) {\n\t\t\tif (!validFormat.test(format)) {\n\t\t\t\tthrow new Error(\"dojox/string/BidiEngine: the bidi layout string is wrong!\");\n\t\t\t}\n\t\t\tthis.outputFormat = format;\n\t\t},\n\n\t\tcheckParameters: function (/*String*/formatIn, /*String*/formatOut) {\n\t\t\t// summary:\n\t\t\t//\t\tChecks layout parameters.\n\t\t\t// formatIn:\n\t\t\t//\t\tInput Bidi layout in which inputText is passed to the function.\n\t\t\t// formatOut:\n\t\t\t//\t\tOutput Bidi layout to which inputText should be transformed.\t\t\t\n\t\t\t// description:\n\t\t\t//\t\tChecks, that layout parameters are different and contain allowed values.\n\t\t\t//\t\tAllowed values for format string are:\n\t\t\t//\t\t\t- 1st letter: I, V\n\t\t\t//\t\t\t- 2nd letter: L, R, C, D\n\t\t\t//\t\t\t- 3rd letter: Y, N\n\t\t\t//\t\t\t- 4th letter: S, N\n\t\t\t//\t\t\t- 5th letter: N\n\t\t\t// returns: /*Boolean*/\n\t\t\t//\t\ttrue - if layout parameters are valid.\n\t\t\t//\t\tfalse - otherwise. \n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\t\n\t\t\tif (!formatIn) {\n\t\t\t\tformatIn = this.inputFormat;\n\t\t\t} else {\n\t\t\t\tthis.set(\"inputFormat\", formatIn);\n\t\t\t}\n\t\t\tif (!formatOut) {\n\t\t\t\tformatOut = this.outputFormat;\n\t\t\t} else {\n\t\t\t\tthis.set(\"outputFormat\", formatOut);\n\t\t\t}\n\t\t\tif (formatIn === formatOut) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\tcheckContextual: function (/*String*/text) {\n\t\t\t// summary:\n\t\t\t//\t\tDetermine the base direction of a bidi text according\n\t\t\t//\t\tto its first strong directional character.\n\t\t\t// text: \n\t\t\t//\t\tThe text to check.\n\t\t\t// returns: /*String*/\n\t\t\t//\t\t\"ltr\" or \"rtl\" according to the first strong character.\n\t\t\t//\t\tIf there is no strong character, returns the value of the\n\t\t\t//\t\tdocument dir property.\n\t\t\t// tags:\n\t\t\t//\t\tpublic\t\t\n\t\t\tvar dir = firstStrongDir(text);\n\t\t\tif (dir !== \"ltr\" && dir !== \"rtl\") {\n\t\t\t\ttry {\n\t\t\t\t\tdir = document.dir.toLowerCase();\n\t\t\t\t} catch (e) {\n\t\t\t\t}\n\t\t\t\tif (dir !== \"ltr\" && dir !== \"rtl\") {\n\t\t\t\t\tdir = \"ltr\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dir;\n\t\t},\n\n\t\thasBidiChar: function (/*String*/text) {\n\t\t\t// summary:\n\t\t\t//\t\tReturn true if text contains RTL directed character.\n\t\t\t// text:\n\t\t\t//\t\tThe source string.\n\t\t\t// description:\n\t\t\t//\t\tSearches for RTL directed character. \n\t\t\t//\t\tReturns true if found, else returns false.\n\t\t\t// returns: /*Boolean*/\n\t\t\t//\t\ttrue - if text has a RTL directed character.\n\t\t\t//\t\tfalse - otherwise. \n\t\t\t// tags:\n\t\t\t//\t\tpublic\n\t\n\t\t    return bidiChars.test(text);\n\t\t}\n\t});\n\n\tfunction doBidiReorder(/*String*/text, /*String*/inFormat,\n\t\t\t\t/*String*/outFormat, /*String*/swap, /*Object*/bdx) {\n\t\t// summary:\n\t\t//\t\tReorder the source text according to the bidi attributes\n\t\t//\t\tof source and result.\n\t\t// text:\n\t\t//\t\tThe text to reorder.\n\t\t// inFormat:\n\t\t//\t\tOrdering scheme and base direction of the source text.\n\t\t//\t\tCan be \"LLTR\", \"LRTL\", \"LCLR\", \"LCRL\", \"VLTR\", \"VRTL\",\n\t\t//\t\t\"VCLR\", \"VCRL\".\n\t\t//\t\tThe first letter is \"L\" for logical ordering scheme,\n\t\t//\t\t\"V\" for visual ordering scheme.\n\t\t//\t\tThe other letters specify the base direction.\n\t\t//\t\t\"CLR\" means contextual direction defaulting to LTR if\n\t\t//\t\tthere is no strong letter.\n\t\t//\t\t\"CRL\" means contextual direction defaulting to RTL if\n\t\t//\t\tthere is no strong letter.\n\t\t//\t\tThe initial value is \"LLTR\", if none, the initial value is used.\n\t\t// outFormat:\n\t\t//\t\tRequired ordering scheme and base direction of the\n\t\t//\t\tresult. Has the same format as inFormat.\n\t\t//\t\tIf none, the initial value \"VLTR\" is used.\n\t\t// swap:\n\t\t//\t\tSymmetric swapping attributes of source and result.\n\t\t//\t\tThe allowed values can be \"YN\", \"NY\", \"YY\" and \"NN\".\n\t\t//\t\tThe first letter reflects the symmetric swapping attribute\n\t\t//\t\tof the source, the second letter that of the result.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\n\t\t// returns:\n\t\t//\t\tText reordered according to source and result attributes.\n\t\t\n\t\tvar params = prepareReorderingParameters(text, {inFormat: inFormat, outFormat: outFormat, swap: swap}, bdx);\n\t\tif (params.inFormat === params.outFormat) {\n\t\t\treturn text;\n\t\t}\n\t\tinFormat = params.inFormat;\n\t\toutFormat = params.outFormat;\n\t\tswap = params.swap;\n\t\tvar inOrdering = inFormat.substring(0, 1),\n\t\tinOrientation = inFormat.substring(1, 4),\n\t\toutOrdering = outFormat.substring(0, 1),\n\t\toutOrientation = outFormat.substring(1, 4);\n\t\tbdx.inFormat = inFormat;\n\t\tbdx.outFormat = outFormat;\n\t\tbdx.swap = swap;\n\t\tif ((inOrdering === \"L\") && (outFormat === \"VLTR\")) { //core cases\n\t\t\t//cases: LLTR->VLTR, LRTL->VLTR\n\t\t\tif (inOrientation === \"LTR\") {\n\t\t\t\tbdx.dir = LTR;\n\t\t\t\treturn doReorder(text, bdx);\n\t\t\t}\n\t\t\tif (inOrientation === \"RTL\") {\n\t\t\t\tbdx.dir = RTL;\n\t\t\t\treturn doReorder(text, bdx);\n\t\t\t}\n\t\t}\n\t\tif ((inOrdering === \"V\") && (outOrdering === \"V\")) {\n\t\t\t//inOrientation != outOrientation\n\t\t\t//cases: VRTL->VLTR, VLTR->VRTL\n\t\t\tbdx.dir = inOrientation === \"RTL\"? RTL : LTR;\n\t\t\treturn invertStr(text, bdx);\n\t\t}\n\t\tif ((inOrdering === \"L\") && (outFormat === \"VRTL\")) {\n\t\t\t//cases: LLTR->VRTL, LRTL->VRTL\n\t\t\tif (inOrientation === \"LTR\") {\n\t\t\t\tbdx.dir = LTR;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t} else {\n\t\t\t\t//inOrientation == RTL\n\t\t\t\tbdx.dir = RTL;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t}\n\t\t\treturn invertStr(text);\n\t\t}\n\t\tif ((inFormat === \"VLTR\") && (outFormat === \"LLTR\")) {\n\t\t\t//case: VLTR->LLTR\n\t\t\tbdx.dir = LTR;\n\t\t\treturn doReorder(text, bdx);\n\t\t}\n\t\tif ((inOrdering === \"V\") && (outOrdering === \"L\") && (inOrientation !== outOrientation)) {\n\t\t\t//cases: VLTR->LRTL, VRTL->LLTR\n\t\t\ttext = invertStr(text);\n\t\t\treturn (inOrientation === \"RTL\") ? doBidiReorder(text, \"LLTR\", \"VLTR\", swap, bdx) :\n\t\t\t\t\t\t\t\t\t\t\t\tdoBidiReorder(text, \"LRTL\", \"VRTL\", swap, bdx);\n\t\t}\n\t\tif ((inFormat === \"VRTL\") && (outFormat === \"LRTL\")) {\n\t\t\t//case VRTL->LRTL\n\t\t\treturn doBidiReorder(text, \"LRTL\", \"VRTL\", swap, bdx);\n\t\t}\n\t\tif ((inOrdering === \"L\") && (outOrdering === \"L\")) {\n\t\t\t//inOrientation != outOrientation\n\t\t\t//cases: LRTL->LLTR, LLTR->LRTL\n\t\t\tvar saveSwap = bdx.swap;\n\t\t\tbdx.swap = saveSwap.substr(0, 1) + \"N\";\n\t\t\tif (inOrientation === \"RTL\") {\n\t\t\t\t//LRTL->LLTR\n\t\t\t\tbdx.dir = RTL;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t\tbdx.swap = \"N\" + saveSwap.substr(1, 2);\n\t\t\t\tbdx.dir = LTR;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t} else { //LLTR->LRTL\n\t\t\t\tbdx.dir = LTR;\n\t\t\t\ttext = doReorder(text, bdx);\n\t\t\t\tbdx.swap = \"N\" + saveSwap.substr(1, 2);\n\t\t\t\ttext = doBidiReorder(text, \"VLTR\", \"LRTL\", bdx.swap, bdx);\n\t\t\t}\n\t\t\treturn text;\n\t\t}\n\t}\n\t\n\tfunction prepareReorderingParameters(/*String*/text, /*Object*/params, /*Object*/bdx) {\n\t\t// summary:\n\t\t//\t\tPrepare reordering parameters\n\t\t// text:\n\t\t//\t\tThe text to reorder.\n\t\t// params:\n\t\t//      Object, containing reordering parameters: \n\t\t//         - inFormat: Ordering scheme and base direction of the source text.\n\t\t//         - outFormat: Required ordering scheme and base direction of the result.\n\t\t//         - swap: Symmetric swapping attributes of source and result.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\t\t\n\t\t// tags:\n\t\t//\t\tprivate\n\t\t\n\t\tif (params.inFormat === undefined) {\n\t\t\tparams.inFormat = bdx.defInFormat;\n\t\t}\n\t\tif (params.outFormat === undefined) {\n\t\t\tparams.outFormat = bdx.defOutFormat;\n\t\t}\n\t\tif (params.swap === undefined) {\n\t\t\tparams.swap = bdx.defSwap;\n\t\t}\n\t\tif (params.inFormat === params.outFormat) {\n\t\t\treturn params;\n\t\t}\n\t\tvar dir, inOrdering = params.inFormat.substring(0, 1),\n\t\tinOrientation = params.inFormat.substring(1, 4),\n\t\toutOrdering = params.outFormat.substring(0, 1),\n\t\toutOrientation = params.outFormat.substring(1, 4);\n\t\tif (inOrientation.charAt(0) === \"C\") {\n\t\t\tdir = firstStrongDir(text);\n\t\t\tif (dir === \"ltr\" || dir === \"rtl\") {\n\t\t\t\tinOrientation = dir.toUpperCase();\n\t\t\t} else {\n\t\t\t\tinOrientation = params.inFormat.charAt(2) === \"L\" ? \"LTR\" : \"RTL\";\n\t\t\t}\n\t\t\tparams.inFormat = inOrdering + inOrientation;\n\t\t}\n\t\tif (outOrientation.charAt(0) === \"C\") {\n\t\t\tdir = firstStrongDir(text);\n\t\t\tif (dir === \"rtl\") {\n\t\t\t\toutOrientation = \"RTL\";\n\t\t\t} else if (dir === \"ltr\") {\n\t\t\t\tdir = lastStrongDir(text);\n\t\t\t\toutOrientation = dir.toUpperCase();\n\t\t\t} else {\n\t\t\t\toutOrientation = params.outFormat.charAt(2) === \"L\" ? \"LTR\" : \"RTL\";\n\t\t\t}\n\t\t\tparams.outFormat = outOrdering + outOrientation;\n\t\t}\n\t\treturn params;\n\t}\n\n\tfunction shape(/*boolean*/rtl, /*String*/text, /*boolean*/compress) {\n\t\t// summary:\n\t\t//\t\tShape the source text.\n\t\t// rtl:\n\t\t//\t\tFlag indicating if the text is in RTL direction (logical\n\t\t//\t\tdirection for Arabic words).\n\t\t// text:\n\t\t//\t\tThe text to shape.\n\t\t// compress:\n\t\t//\t\tA flag indicates to insert extra space after the lam alef compression\n\t\t//\t\tto preserve the buffer size or not insert an extra space which will lead\n\t\t//\t\tto decrease the buffer size. This option can be:\n\t\t//\n\t\t//\t\t- true (default) to not insert extra space after compressing Lam+Alef into one character Lamalef\n\t\t//\t\t- false to insert an extra space after compressed Lamalef to preserve the buffer size\n\t\t// returns:\n\t\t//\t\ttext shaped.\n\t\t// tags:\n\t\t//\t\tprivate.\n\t\t\n\t\tif (text.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (rtl === undefined) {\n\t\t\trtl = true;\n\t\t}\n\t\tif (compress === undefined) {\n\t\t\tcompress = true;\n\t\t}\n\t\ttext = String(text);\n\t\t\n\t\tvar str06 = text.split(\"\"),\n\t\t\tIx = 0,\n\t\t\tstep = +1,\n\t\t\tnIEnd = str06.length;\n\t\tif (!rtl) {\n\t\t\tIx = str06.length - 1;\n\t\t\tstep = -1;\n\t\t\tnIEnd = 1;\n\t\t}\n\t\tvar compressArray = doShape(str06, Ix, step, nIEnd, compress);\n\t\tvar outBuf = \"\";\n\t\tfor (var idx = 0; idx < str06.length; idx++) {\n\t\t\tif (!(compress && indexOf(compressArray, compressArray.length, idx) > -1)) {\n\t\t\t\toutBuf += str06[idx];\n\t\t\t} else {\n\t\t\t\tupdateMap(tsMap, idx, !rtl, -1);\n\t\t\t\tstMap.splice(idx, 1);\n\t\t\t}\n\t\t}\n\t\treturn outBuf;\n\t}\n\t\n\tfunction doShape(str06, Ix, step, nIEnd, compress) {\n\t\t// summary:\n\t\t//\t\tShape the source text.\n\t\t// str06:\n\t\t//\t\tArray containing source text\n\t\t// Ix:\n\t\t//\t\tIndex of the first handled element\n\t\t// step:\n\t\t//\t\tdirection of the process\n\t\t// nIEnd:\n\t\t//\t\tIndex of the last handled element\n\t\t// compress:\n\t\t//\t\tA flag indicates to insert extra space after the lam alef compression\n\t\t//\t\tto preserve the buffer size or not insert an extra space which will lead\n\t\t//\t\tto decrease the buffer size.\t\t\n\t\t// returns:\n\t\t//\t\tArray, contained shaped text.\n\t\t// tags:\n\t\t//\t\tprivate.\n\t\t\n\t\tvar previousCursive = 0, compressArray = [], compressArrayIndx = 0;\n\t\tfor (var index = Ix; index * step < nIEnd; index = index + step) {\n\t\t\tif (isArabicAlefbet(str06[index]) || isArabicDiacritics(str06[index])) {\n\t\t\t\t// Arabic letter Lam\n\t\t\t\tif (str06[index] === \"\\u0644\" && isNextAlef(str06, (index + step), step, nIEnd)) {\n\t\t\t\t\tstr06[index] = (previousCursive === 0) ?\n\t\t\t\t\t\t\tgetLamAlefFE(str06[index + step], LamAlefInialTableFE) :\n\t\t\t\t\t\t\tgetLamAlefFE(str06[index + step], LamAlefMedialTableFE);\n\t\t\t\t\tindex += step;\n\t\t\t\t\tsetAlefToSpace(str06, index, step, nIEnd);\n\t\t\t\t\tif (compress) {\n\t\t\t\t\t\tcompressArray[compressArrayIndx] = index;\n\t\t\t\t\t\tcompressArrayIndx++;\n\t\t\t\t\t}\n\t\t\t\t\tpreviousCursive = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar currentChr = str06[index];\n\t\t\t\tif (previousCursive === 1) {\n\t\t\t\t\t// if next is Arabic\n\t\t\t\t\t// Character is in medial form\n\t\t\t\t\t// else character is in final form\n\t\t\t\t\tstr06[index] = (isNextArabic(str06, (index + step), step, nIEnd)) ?\n\t\t\t\t\t\tgetMedialFormCharacterFE(str06[index]) : getFormCharacterFE(str06[index], FinalForm);\n\t\t\t\t} else {\n\t\t\t\t\tif (isNextArabic(str06, (index + step), step, nIEnd) === true) {\n\t\t\t\t\t\t//character is in Initial form\n\t\t\t\t\t\tstr06[index] = getFormCharacterFE(str06[index], InitialForm);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr06[index] = getFormCharacterFE(str06[index], IsolatedForm);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//exam if the current character is cursive\n\t\t\t\tif (!isArabicDiacritics(currentChr)) {\n\t\t\t\t\tpreviousCursive = 1;\n\t\t\t\t}\n\t\t\t\tif (isStandAlonCharacter(currentChr) === true) {\n\t\t\t\t\tpreviousCursive = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpreviousCursive = 0;\n\t\t\t}\n\t\t}\n\t\treturn compressArray;\n\t}\n\t\n\tfunction firstStrongDir(/*String*/text) {\n\t\t// summary:\n\t\t//\t\tReturn the first strong character direction\n\t\t// text:\n\t\t//\t\tThe source string.\n\t\t// description:\n\t\t//\t\tSearches for first \"strong\" character. \n\t\t//\t\tReturns if strong character was found with the direction defined by this \n\t\t//\t\tcharacter, if no strong character was found returns an empty string.\n\t\t// returns: String\n\t\t//\t\t\"ltr\" - if the first strong character is Latin.\n\t\t//\t\t\"rtl\" - if the first strong character is RTL directed character.\n\t\t//\t\t\"\" - if the strong character wasn't found.\n\t\t// tags:\n\t\t//\t\tprivate\n\t\n\t\tvar fdc = /[A-Za-z\\u05d0-\\u065f\\u066a-\\u06ef\\u06fa-\\u07ff\\ufb1d-\\ufdff\\ufe70-\\ufefc]/.exec(text);\n\t\t// if found return the direction that defined by the character\n\t\treturn fdc ? (fdc[0] <= \"z\" ? \"ltr\" : \"rtl\") : \"\";\n\t}\n\t\n\tfunction lastStrongDir(text) {\n\t\t// summary:\n\t\t//\t\tReturn the last strong character direction\n\t\t// text:\n\t\t//\t\tThe source string.\n\t\t// description:\n\t\t//\t\tSearches for first (from the end) \"strong\" character. \n\t\t//\t\tReturns if strong character was found with the direction defined by this \n\t\t//\t\tcharacter, if no strong character was found returns an empty string.\n\t\t// tags:\n\t\t//\t\tprivate\t\t\n\t\tvar chars = text.split(\"\");\n\t\tchars.reverse();\n\t\treturn firstStrongDir(chars.join(\"\"));\n\t}\n\t\n\tfunction deshape(/*String*/text, /*boolean*/rtl, /*boolean*/consumeNextSpace) {\n\t\t// summary:\n\t\t//\t\tdeshape the source text.\n\t\t// text:\n\t\t//\t\tthe text to be deshape.\n\t\t// rtl:\n\t\t//\t\tflag indicating if the text is in RTL direction (logical\n\t\t//\t\tdirection for Arabic words).\n\t\t// consumeNextSpace:\n\t\t//\t\tflag indicating whether to consume the space next to the \n\t\t//\t\tthe lam alef if there is a space followed the Lamalef character to preserve the buffer size. \n\t\t//\t\tIn case there is no space next to the lam alef the buffer size will be increased due to the\n\t\t//\t\texpansion of the lam alef one character into lam+alef two characters\n\t\t// returns:\n\t\t//\t\ttext deshaped.\n\t\tif (text.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (consumeNextSpace === undefined) {\n\t\t\tconsumeNextSpace = true;\n\t\t}\n\t\tif (rtl === undefined) {\n\t\t\trtl = true;\n\t\t}\n\t\ttext = String(text);\n\t\n\t\tvar outBuf = \"\", strFE = [];\n\t\tstrFE = text.split(\"\");\n\t\tfor (var i = 0; i < text.length; i++) {\n\t\t\tvar increase = false;\n\t\t\tif (strFE[i] >= \"\\uFE70\" && strFE[i] < \"\\uFEFF\") {\n\t\t\t\tvar chNum = text.charCodeAt(i);\n\t\t\t\tif (strFE[i] >= \"\\uFEF5\" && strFE[i] <= \"\\uFEFC\") {\n\t\t\t\t\t//expand the LamAlef\n\t\t\t\t\tif (rtl) {\n\t\t\t\t\t\t//Lam + Alef\n\t\t\t\t\t\tif (i > 0 && consumeNextSpace && strFE[i - 1] === \" \") {\n\t\t\t\t\t\t\toutBuf = outBuf.substring(0, outBuf.length - 1) + \"\\u0644\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toutBuf += \"\\u0644\";\n\t\t\t\t\t\t\tincrease = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toutBuf += AlefTable[(chNum - 65269) / 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutBuf += AlefTable[(chNum - 65269) / 2];\n\t\t\t\t\t\toutBuf += \"\\u0644\";\n\t\t\t\t\t\tif (i + 1 < text.length && consumeNextSpace && strFE[i + 1] === \" \") {\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tincrease = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (increase) {\n\t\t\t\t\t\tupdateMap(tsMap, i, true, 1);\n\t\t\t\t\t\tstMap.splice(i, 0, stMap[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutBuf += FETo06Table[chNum - 65136];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutBuf += strFE[i];\n\t\t\t}\n\t\t}\n\t\treturn outBuf;\n\t}\n\t\n\tfunction doReorder(str, bdx) {\n\t\t// summary:\n\t\t//\t\tHelper to the doBidiReorder. Manages the UBA.\n\t\t// str:\n\t\t//\t\tthe string to reorder.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\t\t\n\t\t// returns:\n\t\t//\t\ttext reordered according to source and result attributes.\n\t\t// tags: \n\t\t//\t\tprivate\t\n\t\tvar chars = str.split(\"\"), levels = [];\n\t\n\t\tcomputeLevels(chars, levels, bdx);\n\t\tswapChars(chars, levels, bdx);\n\t\tinvertLevel(2, chars, levels, bdx);\n\t\tinvertLevel(1, chars, levels, bdx);\n\t\tlvMap = levels;\n\t\treturn chars.join(\"\");\n\t}\n\n\tfunction computeLevels(chars, levels, bdx) {\n\t\tvar len = chars.length,\n\t\t\timpTab = bdx.dir ? impTabRtl : impTabLtr,\n\t\t\tprevState = null, newClass = null, newLevel = null, newState = 0,\n\t\t\taction = null, cond = null, condPos = -1, i = null, ix = null,\n\t\t\ttypes = [],\n\t\t\tclasses = [];\n\t\tbdx.hiLevel = bdx.dir;\n\t\tbdx.lastArabic = false;\n\t\tbdx.hasUbatAl = false;\n\t\tbdx.hasUbatB = false;\n\t\tbdx.hasUbatS = false;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\ttypes[i] = getCharacterType(chars[i]);\n\t\t}\n\t\tfor (ix = 0; ix < len; ix++) {\n\t\t\tprevState = newState;\n\t\t\tclasses[ix] = newClass = getCharClass(chars, types, classes, ix, bdx);\n\t\t\tnewState = impTab[prevState][newClass];\n\t\t\taction = newState & 0xF0;\n\t\t\tnewState &= 0x0F;\n\t\t\tlevels[ix] = newLevel = impTab[newState][ITIL];\n\t\t\tif (action > 0) {\n\t\t\t\tif (action === 0x10) {\t// set conditional run to level 1\n\t\t\t\t\tfor (i = condPos; i < ix; i++) {\n\t\t\t\t\t\tlevels[i] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tcondPos = -1;\n\t\t\t\t} else {\t// 0x20 confirm the conditional run\n\t\t\t\t\tcondPos = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcond = impTab[newState][ITCOND];\n\t\t\tif (cond) {\n\t\t\t\tif (condPos === -1) {\n\t\t\t\t\tcondPos = ix;\n\t\t\t\t}\n\t\t\t} else {\t// unconditional level\n\t\t\t\tif (condPos > -1) {\n\t\t\t\t\tfor (i = condPos; i < ix; i++) {\n\t\t\t\t\t\tlevels[i] = newLevel;\n\t\t\t\t\t}\n\t\t\t\t\tcondPos = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (types[ix] === UBAT_B) {\n\t\t\t\tlevels[ix] = 0;\n\t\t\t}\n\t\t\tbdx.hiLevel |= newLevel;\n\t\t}\n\t\tif (bdx.hasUbatS) {\n\t\t\thandleUbatS(types, levels, len, bdx);\n\t\t}\n\t}\n\t\n\tfunction handleUbatS(types, levels, len, bdx) {\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tif (types[i] === UBAT_S) {\n\t\t\t\tlevels[i] = bdx.dir;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (types[j] === UBAT_WS) {\n\t\t\t\t\t\tlevels[j] = bdx.dir;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction swapChars(chars, levels, bdx) {\n\t\t// summary:\n\t\t//\t\tSwap characters with symmetrical mirroring as all kinds of parenthesis.\n\t\t//\t\t(When needed).\n\t\t// chars:\n\t\t//\t\tThe source string as Array of characters.\n\t\t// levels:\n\t\t//\t\tAn array (like hash) of flags for each character in the source string,\n\t\t//\t\tthat defines if swapping should be applied on the following character.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\n\t\t// tags:\n\t\t//\t\tprivate\t\n\t\n\t\tif (bdx.hiLevel === 0 || bdx.swap.substr(0, 1) === bdx.swap.substr(1, 2)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (var i = 0; i < chars.length; i++) {\n\t\t\tif (levels[i] === 1) {\n\t\t\t\tchars[i] = getMirror(chars[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getCharacterType(ch) {\n\t\t// summary:\n\t\t//\t\tReturn the type of the character.\n\t\t// ch:\n\t\t//\t\tThe character to be checked.\n\t\n\t\t// description:\n\t\t//\t\tCheck the type of the character according to MasterTable,\n\t\t//\t\ttype = LTR, RTL, neutral,Arabic-Indic digit etc.\n\t\t// tags:\n\t\t//\t\tprivate\t\t\t\n\t\tvar uc = ch.charCodeAt(0),\n\t\t\thi = MasterTable[uc >> 8];\n\t\treturn (hi < TBBASE) ? hi : UnicodeTable[hi - TBBASE][uc & 0xFF];\n\t}\n\t\n\tfunction invertStr(str, bdx) {\n\t\t// summary:\n\t\t//\t\tReturn the reversed string.\n\t\t// str:\n\t\t//\t\tThe string to be reversed.\n\t\t// description:\n\t\t//\t\tReverse the string str.\n\t\t// tags:\n\t\t//\t\tprivate\t\t\t\t\t\n\t\tvar chars = str.split(\"\");\n\t\tif (bdx) {\n\t\t\tvar levels = [];\n\t\t\tcomputeLevels(chars, levels, bdx);\n\t\t\tlvMap = levels;\n\t\t}\n\t\tchars.reverse();\n\t\tstMap.reverse();\n\t\treturn chars.join(\"\");\n\t}\n\t\n\tfunction indexOf(cArray, cLength, idx) {\n\t\tfor (var i = 0; i < cLength; i++) {\n\t\t\tif (cArray[i] === idx) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t\n\tfunction isArabicAlefbet(c) {\n\t\tfor (var i = 0; i < ArabicAlefBetIntervalsBegine.length; i++) {\n\t\t\tif (c >= ArabicAlefBetIntervalsBegine[i] && c <= ArabicAlefBetIntervalsEnd[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction isNextArabic(str06, index, step, nIEnd) {\n\t\twhile (((index) * step) < nIEnd && isArabicDiacritics(str06[index])) {\n\t\t\tindex += step;\n\t\t}\n\t\tif (((index) * step) < nIEnd && isArabicAlefbet(str06[index])) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction isNextAlef(str06, index, step, nIEnd) {\n\t\twhile (((index) * step) < nIEnd && isArabicDiacritics(str06[index])) {\n\t\t\tindex += step;\n\t\t}\n\t\tvar c = \" \";\n\t\tif (((index) * step) < nIEnd) {\n\t\t\tc = str06[index];\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < AlefTable.length; i++) {\n\t\t\tif (AlefTable[i] === c) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction invertLevel(lev, chars, levels, bdx) {\n\t\tif (bdx.hiLevel < lev) {\n\t\t\treturn;\n\t\t}\n\t\tif (lev === 1 && bdx.dir === RTL && !bdx.hasUbatB) {\n\t\t\tchars.reverse();\n\t\t\tstMap.reverse();\n\t\t\treturn;\n\t\t}\n\t\tvar len = chars.length, start = 0, end, lo, hi, tmp;\n\t\twhile (start < len) {\n\t\t\tif (levels[start] >= lev) {\n\t\t\t\tend = start + 1;\n\t\t\t\twhile (end < len && levels[end] >= lev) {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t\tfor (lo = start, hi = end - 1 ; lo < hi; lo++, hi--) {\n\t\t\t\t\ttmp = chars[lo];\n\t\t\t\t\tchars[lo] = chars[hi];\n\t\t\t\t\tchars[hi] = tmp;\n\t\t\t\t\ttmp = stMap[lo];\n\t\t\t\t\tstMap[lo] = stMap[hi];\n\t\t\t\t\tstMap[hi] = tmp;\n\t\t\t\t}\n\t\t\t\tstart = end;\n\t\t\t}\n\t\t\tstart++;\n\t\t}\n\t}\n\t\n\tfunction getCharClass(chars, types, classes, ix, bdx) {\n\t\t// summary:\n\t\t//\t\tReturn the class if ix character in chars.\n\t\t// chars:\n\t\t//\t\tThe source string as Array of characters.\n\t\t// types:\n\t\t//\t\tArray of types, for each character in chars.\n\t\t// classes:\n\t\t//\t\tArray of classes that already been solved. \n\t\t// ix:\n\t\t//\t\tthe index of checked character.\n\t\t// bdx: Object\n\t\t//\t\tUsed for intermediate data storage\t\t\n\t\t// tags:\n\t\t//\t\tprivate\t\t\t\t\n\t\tvar cType = types[ix],\n\t\t\tresults = {\n\t\t\t\tUBAT_L : function () { bdx.lastArabic = false; return UBAT_L; },\n\t\t\t\tUBAT_R : function () { bdx.lastArabic = false; return UBAT_R; },\n\t\t\t\tUBAT_ON : function () { return UBAT_ON; },\n\t\t\t\tUBAT_AN : function () { return UBAT_AN; },\n\t\t\t\tUBAT_EN : function () { return bdx.lastArabic ? UBAT_AN : UBAT_EN; },\n\t\t\t\tUBAT_AL : function () { bdx.lastArabic = true; bdx.hasUbatAl = true; return UBAT_R; },\n\t\t\t\tUBAT_WS : function () { return UBAT_ON; },\n\t\t\t\tUBAT_CS : function () {\n\t\t\t\t\t\t\t\t\t\tvar wType, nType;\n\t\t\t\t\t\t\t\t\t\tif (ix < 1 || (ix + 1) >= types.length ||\n\t\t\t\t\t\t\t\t\t\t\t((wType = classes[ix - 1]) !== UBAT_EN && wType !== UBAT_AN) ||\n\t\t\t\t\t\t\t\t\t\t\t((nType = types[ix + 1]) !== UBAT_EN && nType !== UBAT_AN)) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (bdx.lastArabic) {\n\t\t\t\t\t\t\t\t\t\t\tnType = UBAT_AN;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn nType === wType ? nType : UBAT_ON;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\tUBAT_ES : function () {\n\t\t\t\t\t\t\t\t\t\tvar wType = ix > 0 ? classes[ix - 1] : UBAT_B;\n\t\t\t\t\t\t\t\t\t\tif (wType === UBAT_EN && (ix + 1) < types.length && types[ix + 1] === UBAT_EN) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_EN;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\tUBAT_ET : function () {\n\t\t\t\t\t\t\t\t\t\tif (ix > 0 && classes[ix - 1] === UBAT_EN) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_EN;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (bdx.lastArabic) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvar i = ix + 1,\n\t\t\t\t\t\t\t\t\t\t\tlen = types.length;\n\t\t\t\t\t\t\t\t\t\twhile (i < len && types[i] === UBAT_ET) {\n\t\t\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (i < len && types[i] === UBAT_EN) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_EN;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\tUBAT_NSM : function () {\n\t\t\t\t\t\t\t\t\t\tif (bdx.inFormat === \"VLTR\") {\t// visual to implicit transformation\n\t\t\t\t\t\t\t\t\t\t\tvar len = types.length,\n\t\t\t\t\t\t\t\t\t\t\t\ti = ix + 1;\n\t\t\t\t\t\t\t\t\t\t\twhile (i < len && types[i] === UBAT_NSM) {\n\t\t\t\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (i < len) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar c = chars[ix],\n\t\t\t\t\t\t\t\t\t\t\t\t\trtlCandidate = (c >= 0x0591 && c <= 0x08FF) || c === 0xFB1E,\n\t\t\t\t\t\t\t\t\t\t\t\t\twType = types[i];\n\t\t\t\t\t\t\t\t\t\t\t\tif (rtlCandidate && (wType === UBAT_R || wType === UBAT_AL)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn UBAT_R;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (ix < 1 || types[ix - 1] === UBAT_B) {\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn classes[ix - 1];\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\tUBAT_B : function () { bdx.lastArabic = true; bdx.hasUbatB = true; return bdx.dir; },\n\t\t\t\tUBAT_S : function () { bdx.hasUbatS = true; return UBAT_ON; },\n\t\t\t\tUBAT_LRE : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_RLE : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_LRO : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_RLO : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_PDF : function () { bdx.lastArabic = false; return UBAT_ON; },\n\t\t\t\tUBAT_BN : function () { return UBAT_ON; }\n\t\t\t};\n\t\treturn results[TYPES_NAMES[cType]]();\n\t}\n\n\tfunction getMirror(c) {\n\t\t// summary:\n\t\t//\t\tCalculates the mirrored character of c\n\t\t// c:\n\t\t//\t\tThe character to be mirrored.\n\t\t// tags:\n\t\t//\t\tprivate\t\t\t\t\t\n\t\tvar mid, low = 0, high = SwapTable.length - 1;\n\t\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor((low + high) / 2);\n\t\t\tif (c < SwapTable[mid][0]) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (c > SwapTable[mid][0]) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\treturn SwapTable[mid][1];\n\t\t\t}\n\t\t}\n\t\treturn c;\n\t}\n\t\n\tfunction isStandAlonCharacter(c) {\n\t\tfor (var i = 0; i < StandAlonForm.length; i++) {\n\t\t\tif (StandAlonForm[i] === c) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction getMedialFormCharacterFE(c) {\n\t\tfor (var i = 0; i < BaseForm.length; i++) {\n\t\t\tif (c === BaseForm[i]) {\n\t\t\t\treturn MedialForm[i];\n\t\t\t}\n\t\t}\n\t\treturn c;\n\t}\n\t\n\tfunction getFormCharacterFE(/*char*/ c, /*char[]*/formArr) {\n\t\tfor (var i = 0; i < BaseForm.length; i++) {\n\t\t\tif (c === BaseForm[i]) {\n\t\t\t\treturn formArr[i];\n\t\t\t}\n\t\t}\n\t\treturn c;\n\t}\n\t\n\tfunction isArabicDiacritics(c) {\n\t\treturn\t(c >= \"\\u064b\" && c <= \"\\u0655\") ? true : false;\n\t}\n\t\n\tfunction getOrientation(/*Char*/ oc) {\n\t\tif (oc === \"L\") {\n\t\t\treturn \"LTR\";\n\t\t}\n\t\tif (oc === \"R\") {\n\t\t\treturn \"RTL\";\n\t\t}\n\t\tif (oc === \"C\") {\n\t\t\treturn \"CLR\";\n\t\t}\n\t\tif (oc === \"D\") {\n\t\t\treturn \"CRL\";\n\t\t}\n\t}\n\t\n\tfunction setAlefToSpace(str06, index, step, nIEnd) {\n\t\twhile (((index) * step) < nIEnd && isArabicDiacritics(str06[index])) {\n\t\t\tindex += step;\n\t\t}\n\t\tif (((index) * step) < nIEnd) {\n\t\t\tstr06[index] = \" \";\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction getLamAlefFE(alef06, LamAlefForm) {\n\t\tfor (var i = 0; i < AlefTable.length; i++) {\n\t\t\tif (alef06 === AlefTable[i]) {\n\t\t\t\treturn LamAlefForm[i];\n\t\t\t}\n\t\t}\n\t\treturn alef06;\n\t}\n\n\tfunction initMaps(map1, map2, length) {\n\t\tstMap = [];\n\t\tlvMap = [];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tmap1[i] = i;\n\t\t\tmap2[i] = i;\n\t\t\tstMap[i] = i;\n\t\t}\n\t}\n\n\tfunction reverseMap(sourceMap) {\n\t\tvar map = new Array(sourceMap.length);\n\t\tfor (var i = 0; i < sourceMap.length; i++) {\n\t\t\tmap[sourceMap[i]] = i;\n\t\t}\n\t\treturn map;\n\t}\n\n\tfunction updateMap(map, value, isGreater, update) {\n\t\tfor (var i = 0; i < map.length; i++) {\n\t\t\tif (map[i] > value || (!isGreater && map[i] === value)) {\n\t\t\t\tmap[i] += update;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar stMap = [];\n\tvar tsMap = [];\n\tvar lvMap = [];\n\t\t\n\tvar\tBDX = {\n\t\t\tdir: 0,\n\t\t\tdefInFormat: \"LLTR\",\n\t\t\tdefoutFormat: \"VLTR\",\n\t\t\tdefSwap: \"YN\",\n\t\t\tinFormat: \"LLTR\",\n\t\t\toutFormat: \"VLTR\",\n\t\t\tswap: \"YN\",\n\t\t\thiLevel: 0,\n\t\t\tlastArabic: false,\n\t\t\thasUbatAl: false,\n\t\t\thasBlockSep: false,\n\t\t\thasSegSep: false\n\t\t};\n\t\n\tvar ITIL = 5;\n\t\n\tvar ITCOND = 6;\n\t\n\tvar LTR = 0;\n\t\n\tvar RTL = 1;\n\n\tvar validFormat = /^[(I|V)][(L|R|C|D)][(Y|N)][(S|N)][N]$/;\n\n\tvar bidiChars = /[\\u0591-\\u06ff\\ufb1d-\\ufefc]/;\n\n\t/****************************************************************************/\n\t/* Array in which directional characters are replaced by their symmetric.\t*/\n\t/****************************************************************************/\n\tvar SwapTable = [\n\t\t[ \"\\u0028\", \"\\u0029\" ],\t/* Round brackets\t\t\t\t\t*/\n\t\t[ \"\\u0029\", \"\\u0028\" ],\n\t\t[ \"\\u003C\", \"\\u003E\" ],\t/* Less than/greater than\t\t\t*/\n\t\t[ \"\\u003E\", \"\\u003C\" ],\n\t\t[ \"\\u005B\", \"\\u005D\" ],\t/* Square brackets\t\t\t\t\t*/\n\t\t[ \"\\u005D\", \"\\u005B\" ],\n\t\t[ \"\\u007B\", \"\\u007D\" ],\t/* Curly brackets\t\t\t\t\t*/\n\t\t[ \"\\u007D\", \"\\u007B\" ],\n\t\t[ \"\\u00AB\", \"\\u00BB\" ],\t/* Double angle quotation marks\t\t*/\n\t\t[ \"\\u00BB\", \"\\u00AB\" ],\n\t\t[ \"\\u2039\", \"\\u203A\" ],\t/* single angle quotation mark\t\t*/\n\t\t[ \"\\u203A\", \"\\u2039\" ],\n\t\t[ \"\\u207D\", \"\\u207E\" ],\t/* Superscript parentheses\t\t\t*/\n\t\t[ \"\\u207E\", \"\\u207D\" ],\n\t\t[ \"\\u208D\", \"\\u208E\" ],\t/* Subscript parentheses\t\t\t*/\n\t\t[ \"\\u208E\", \"\\u208D\" ],\n\t\t[ \"\\u2264\", \"\\u2265\" ],\t/* Less/greater than or equal\t\t*/\n\t\t[ \"\\u2265\", \"\\u2264\" ],\n\t\t[ \"\\u2329\", \"\\u232A\" ],\t/* Angle brackets\t\t\t\t\t*/\n\t\t[ \"\\u232A\", \"\\u2329\" ],\n\t\t[ \"\\uFE59\", \"\\uFE5A\" ],\t/* Small round brackets\t\t\t\t*/\n\t\t[ \"\\uFE5A\", \"\\uFE59\" ],\n\t\t[ \"\\uFE5B\", \"\\uFE5C\" ],\t/* Small curly brackets\t\t\t\t*/\n\t\t[ \"\\uFE5C\", \"\\uFE5B\" ],\n\t\t[ \"\\uFE5D\", \"\\uFE5E\" ],\t/* Small tortoise shell brackets\t*/\n\t\t[ \"\\uFE5E\", \"\\uFE5D\" ],\n\t\t[ \"\\uFE64\", \"\\uFE65\" ],\t/* Small less than/greater than\t\t*/\n\t\t[ \"\\uFE65\", \"\\uFE64\" ]\n\t];\n\tvar AlefTable = [\"\\u0622\", \"\\u0623\", \"\\u0625\", \"\\u0627\"];\n\t\n\tvar LamAlefInialTableFE = [\"\\ufef5\", \"\\ufef7\", \"\\ufef9\", \"\\ufefb\"];\n\t\n\tvar LamAlefMedialTableFE = [\"\\ufef6\", \"\\ufef8\", \"\\ufefa\", \"\\ufefc\"];\n\t/**\n\t * Arabic Characters in the base form\n\t */\n\tvar BaseForm = [\"\\u0627\", \"\\u0628\", \"\\u062A\", \"\\u062B\", \"\\u062C\", \"\\u062D\", \"\\u062E\", \"\\u062F\", \"\\u0630\", \"\\u0631\",\n                    \"\\u0632\", \"\\u0633\", \"\\u0634\", \"\\u0635\", \"\\u0636\", \"\\u0637\", \"\\u0638\", \"\\u0639\", \"\\u063A\", \"\\u0641\",\n                    \"\\u0642\", \"\\u0643\", \"\\u0644\", \"\\u0645\", \"\\u0646\", \"\\u0647\", \"\\u0648\", \"\\u064A\", \"\\u0625\", \"\\u0623\",\n                    \"\\u0622\", \"\\u0629\", \"\\u0649\", \"\\u0644\", \"\\u0645\", \"\\u0646\", \"\\u0647\", \"\\u0648\", \"\\u064A\", \"\\u0625\",\n                    \"\\u0623\", \"\\u0622\", \"\\u0629\", \"\\u0649\", \"\\u06CC\", \"\\u0626\", \"\\u0624\", \"\\u064B\", \"\\u064C\", \"\\u064D\",\n                    \"\\u064E\", \"\\u064F\", \"\\u0650\", \"\\u0651\", \"\\u0652\", \"\\u0621\"];\n\t\n\t/**\n\t * Arabic shaped characters in Isolated form\n\t */\n\tvar IsolatedForm = [\"\\uFE8D\", \"\\uFE8F\", \"\\uFE95\", \"\\uFE99\", \"\\uFE9D\", \"\\uFEA1\", \"\\uFEA5\", \"\\uFEA9\", \"\\uFEAB\",\n                        \"\\uFEAD\", \"\\uFEAF\", \"\\uFEB1\", \"\\uFEB5\", \"\\uFEB9\", \"\\uFEBD\", \"\\uFEC1\", \"\\uFEC5\", \"\\uFEC9\",\n                        \"\\uFECD\", \"\\uFED1\", \"\\uFED5\", \"\\uFED9\", \"\\uFEDD\", \"\\uFEE1\", \"\\uFEE5\", \"\\uFEE9\", \"\\uFEED\",\n                        \"\\uFEF1\", \"\\uFE87\", \"\\uFE83\", \"\\uFE81\", \"\\uFE93\", \"\\uFEEF\", \"\\uFBFC\", \"\\uFE89\", \"\\uFE85\",\n                        \"\\uFE70\", \"\\uFE72\", \"\\uFE74\", \"\\uFE76\", \"\\uFE78\", \"\\uFE7A\", \"\\uFE7C\", \"\\uFE7E\", \"\\uFE80\"];\n\t\n\t/**\n\t * Arabic shaped characters in Final form\n\t */\n\tvar FinalForm = [\"\\uFE8E\", \"\\uFE90\", \"\\uFE96\", \"\\uFE9A\", \"\\uFE9E\", \"\\uFEA2\", \"\\uFEA6\", \"\\uFEAA\", \"\\uFEAC\", \"\\uFEAE\",\n                     \"\\uFEB0\", \"\\uFEB2\", \"\\uFEB6\", \"\\uFEBA\", \"\\uFEBE\", \"\\uFEC2\", \"\\uFEC6\", \"\\uFECA\", \"\\uFECE\", \"\\uFED2\",\n                     \"\\uFED6\", \"\\uFEDA\", \"\\uFEDE\", \"\\uFEE2\", \"\\uFEE6\", \"\\uFEEA\", \"\\uFEEE\", \"\\uFEF2\", \"\\uFE88\", \"\\uFE84\",\n                     \"\\uFE82\", \"\\uFE94\", \"\\uFEF0\", \"\\uFBFD\", \"\\uFE8A\", \"\\uFE86\", \"\\uFE70\", \"\\uFE72\", \"\\uFE74\", \"\\uFE76\",\n                     \"\\uFE78\", \"\\uFE7A\", \"\\uFE7C\", \"\\uFE7E\", \"\\uFE80\"];\n\t\n\t/**\n\t * Arabic shaped characters in Media form\n\t */\n\tvar MedialForm = [\"\\uFE8E\", \"\\uFE92\", \"\\uFE98\", \"\\uFE9C\", \"\\uFEA0\", \"\\uFEA4\", \"\\uFEA8\", \"\\uFEAA\", \"\\uFEAC\",\n                      \"\\uFEAE\", \"\\uFEB0\", \"\\uFEB4\", \"\\uFEB8\", \"\\uFEBC\", \"\\uFEC0\", \"\\uFEC4\", \"\\uFEC8\", \"\\uFECC\",\n                      \"\\uFED0\", \"\\uFED4\", \"\\uFED8\", \"\\uFEDC\", \"\\uFEE0\", \"\\uFEE4\", \"\\uFEE8\", \"\\uFEEC\", \"\\uFEEE\",\n                      \"\\uFEF4\", \"\\uFE88\", \"\\uFE84\", \"\\uFE82\", \"\\uFE94\", \"\\uFEF0\", \"\\uFBFF\", \"\\uFE8C\", \"\\uFE86\",\n                      \"\\uFE71\", \"\\uFE72\", \"\\uFE74\", \"\\uFE77\", \"\\uFE79\", \"\\uFE7B\", \"\\uFE7D\", \"\\uFE7F\", \"\\uFE80\"];\n\t\n\t/**\n\t * Arabic shaped characters in Initial form\n\t */\n\tvar InitialForm = [\"\\uFE8D\", \"\\uFE91\", \"\\uFE97\", \"\\uFE9B\", \"\\uFE9F\", \"\\uFEA3\", \"\\uFEA7\", \"\\uFEA9\", \"\\uFEAB\",\n                       \"\\uFEAD\", \"\\uFEAF\", \"\\uFEB3\", \"\\uFEB7\", \"\\uFEBB\", \"\\uFEBF\", \"\\uFEC3\", \"\\uFEC7\", \"\\uFECB\",\n                       \"\\uFECF\", \"\\uFED3\", \"\\uFED7\", \"\\uFEDB\", \"\\uFEDF\", \"\\uFEE3\", \"\\uFEE7\", \"\\uFEEB\", \"\\uFEED\",\n                       \"\\uFEF3\", \"\\uFE87\", \"\\uFE83\", \"\\uFE81\", \"\\uFE93\", \"\\uFEEF\", \"\\uFBFE\", \"\\uFE8B\", \"\\uFE85\",\n                       \"\\uFE70\", \"\\uFE72\", \"\\uFE74\", \"\\uFE76\", \"\\uFE78\", \"\\uFE7A\", \"\\uFE7C\", \"\\uFE7E\", \"\\uFE80\"];\n\t\n\t/**\n\t * Arabic characters that couldn't join to the next character\n\t */\n\tvar StandAlonForm = [\"\\u0621\", \"\\u0627\", \"\\u062F\", \"\\u0630\", \"\\u0631\", \"\\u0632\", \"\\u0648\", \"\\u0622\", \"\\u0629\",\n                         \"\\u0626\", \"\\u0624\", \"\\u0625\", \"\\u0675\", \"\\u0623\"];\n\t\n\tvar FETo06Table = [\"\\u064B\", \"\\u064B\", \"\\u064C\", \"\\u061F\", \"\\u064D\", \"\\u061F\", \"\\u064E\", \"\\u064E\", \"\\u064F\",\n                       \"\\u064F\", \"\\u0650\", \"\\u0650\", \"\\u0651\", \"\\u0651\", \"\\u0652\", \"\\u0652\", \"\\u0621\", \"\\u0622\",\n                       \"\\u0622\", \"\\u0623\", \"\\u0623\", \"\\u0624\", \"\\u0624\", \"\\u0625\", \"\\u0625\", \"\\u0626\", \"\\u0626\",\n                       \"\\u0626\", \"\\u0626\", \"\\u0627\", \"\\u0627\", \"\\u0628\", \"\\u0628\", \"\\u0628\", \"\\u0628\", \"\\u0629\",\n                       \"\\u0629\", \"\\u062A\", \"\\u062A\", \"\\u062A\", \"\\u062A\", \"\\u062B\", \"\\u062B\", \"\\u062B\", \"\\u062B\",\n                       \"\\u062C\", \"\\u062C\", \"\\u062C\", \"\\u062c\", \"\\u062D\", \"\\u062D\", \"\\u062D\", \"\\u062D\", \"\\u062E\",\n                       \"\\u062E\", \"\\u062E\", \"\\u062E\", \"\\u062F\", \"\\u062F\", \"\\u0630\", \"\\u0630\", \"\\u0631\", \"\\u0631\",\n                       \"\\u0632\", \"\\u0632\", \"\\u0633\", \"\\u0633\", \"\\u0633\", \"\\u0633\", \"\\u0634\", \"\\u0634\", \"\\u0634\",\n                       \"\\u0634\", \"\\u0635\", \"\\u0635\", \"\\u0635\", \"\\u0635\", \"\\u0636\", \"\\u0636\", \"\\u0636\", \"\\u0636\",\n                       \"\\u0637\", \"\\u0637\", \"\\u0637\", \"\\u0637\", \"\\u0638\", \"\\u0638\", \"\\u0638\", \"\\u0638\", \"\\u0639\",\n                       \"\\u0639\", \"\\u0639\", \"\\u0639\", \"\\u063A\", \"\\u063A\", \"\\u063A\", \"\\u063A\", \"\\u0641\", \"\\u0641\",\n                       \"\\u0641\", \"\\u0641\", \"\\u0642\", \"\\u0642\", \"\\u0642\", \"\\u0642\", \"\\u0643\", \"\\u0643\", \"\\u0643\",\n                       \"\\u0643\", \"\\u0644\", \"\\u0644\", \"\\u0644\", \"\\u0644\", \"\\u0645\", \"\\u0645\", \"\\u0645\", \"\\u0645\",\n                       \"\\u0646\", \"\\u0646\", \"\\u0646\", \"\\u0646\", \"\\u0647\", \"\\u0647\", \"\\u0647\", \"\\u0647\", \"\\u0648\",\n                       \"\\u0648\", \"\\u0649\", \"\\u0649\", \"\\u064A\", \"\\u064A\", \"\\u064A\", \"\\u064A\", \"\\uFEF5\", \"\\uFEF6\",\n                       \"\\uFEF7\", \"\\uFEF8\", \"\\uFEF9\", \"\\uFEFA\", \"\\uFEFB\", \"\\uFEFC\", \"\\u061F\", \"\\u061F\", \"\\u061F\"];\n\n\tvar ArabicAlefBetIntervalsBegine = [\"\\u0621\", \"\\u0641\"];\n\t\n\tvar ArabicAlefBetIntervalsEnd = [\"\\u063A\", \"\\u064a\"];\n\t\n\tvar\timpTabLtr = [\n\t/*\t\tL,\t\tR,\t\tEN,\t\tAN,\t\tN,\t\tIL,\t\tCond */\n\t\t[\t0,\t\t3,\t\t0,\t\t1,\t\t0,\t\t0,\t\t0\t], /* 0 LTR text\t*/\n\t\t[\t0,\t\t3,\t\t0,\t\t1,\t\t2,\t\t2,\t\t0\t], /* 1 LTR+AN\t\t*/\n\t\t[\t0,\t\t3,\t\t0,\t\t0x11,\t2,\t\t0,\t\t1\t], /* 2 LTR+AN+N\t*/\n\t\t[\t0,\t\t3,\t\t5,\t\t5,\t\t4,\t\t1,\t\t0\t], /* 3 RTL text\t*/\n\t\t[\t0,\t\t3,\t\t0x15,\t0x15,\t4,\t\t0,\t\t1\t], /* 4 RTL cont\t*/\n\t\t[\t0,\t\t3,\t\t5,\t\t5,\t\t4,\t\t2,\t\t0\t]  /* 5 RTL+EN/AN\t*/\n\t];\n\tvar impTabRtl = [\n\t/*\t\tL,\t\tR,\t\tEN,\t\tAN,\t\tN,\t\tIL,\t\tCond */\n\t\t[\t2,\t\t0,\t\t1,\t\t1,\t\t0,\t\t1,\t\t0\t], /* 0 RTL text\t*/\n\t\t[\t2,\t\t0,\t\t1,\t\t1,\t\t0,\t\t2,\t\t0\t], /* 1 RTL+EN/AN\t*/\n\t\t[\t2,\t\t0,\t\t2,\t\t1,\t\t3,\t\t2,\t\t0\t], /* 2 LTR text\t*/\n\t\t[\t2,\t\t0,\t\t2,\t\t0x21,\t3,\t\t1,\t\t1\t]  /* 3 LTR+cont\t*/\n\t];\n\t\n\tvar UBAT_L\t= 0; /* left to right\t\t\t\t*/\n\tvar UBAT_R\t= 1; /* right to left\t\t\t\t*/\n\tvar UBAT_EN = 2; /* European digit\t\t\t\t*/\n\tvar UBAT_AN = 3; /* Arabic-Indic digit\t\t\t*/\n\tvar UBAT_ON = 4; /* neutral\t\t\t\t\t\t*/\n\tvar UBAT_B\t= 5; /* block separator\t\t\t\t*/\n\tvar UBAT_S\t= 6; /* segment separator\t\t\t*/\n\tvar UBAT_AL = 7; /* Arabic Letter\t\t\t\t*/\n\tvar UBAT_WS = 8; /* white space\t\t\t\t\t*/\n\tvar UBAT_CS = 9; /* common digit separator\t\t*/\n\tvar UBAT_ES = 10; /* European digit separator\t*/\n\tvar UBAT_ET = 11; /* European digit terminator\t*/\n\tvar UBAT_NSM = 12; /* Non Spacing Mark\t\t\t*/\n\tvar UBAT_LRE = 13; /* LRE\t\t\t\t\t\t*/\n\tvar UBAT_RLE = 14; /* RLE\t\t\t\t\t\t*/\n\tvar UBAT_PDF = 15; /* PDF\t\t\t\t\t\t*/\n\tvar UBAT_LRO = 16; /* LRO\t\t\t\t\t\t*/\n\tvar UBAT_RLO = 17; /* RLO\t\t\t\t\t\t*/\n\tvar UBAT_BN\t= 18; /* Boundary Neutral\t\t\t*/\n\n\tvar TYPES_NAMES = [ \"UBAT_L\", \"UBAT_R\", \"UBAT_EN\", \"UBAT_AN\", \"UBAT_ON\", \"UBAT_B\", \"UBAT_S\", \"UBAT_AL\", \"UBAT_WS\",\n\t\t\t\t\t\t\"UBAT_CS\", \"UBAT_ES\", \"UBAT_ET\", \"UBAT_NSM\", \"UBAT_LRE\", \"UBAT_RLE\", \"UBAT_PDF\", \"UBAT_LRO\",\n\t\t\t\t\t\t\"UBAT_RLO\", \"UBAT_BN\" ];\n\tvar TBBASE = 100;\n\t\n\tvar TB00 = TBBASE + 0;\n\tvar TB05 = TBBASE + 1;\n\tvar TB06 = TBBASE + 2;\n\tvar TB07 = TBBASE + 3;\n\tvar TB20 = TBBASE + 4;\n\tvar TBFB = TBBASE + 5;\n\tvar TBFE = TBBASE + 6;\n\tvar TBFF = TBBASE + 7;\n\t\n\tvar L\t= UBAT_L;\n\tvar R\t= UBAT_R;\n\tvar EN\t= UBAT_EN;\n\tvar AN\t= UBAT_AN;\n\tvar ON\t= UBAT_ON;\n\tvar B\t= UBAT_B;\n\tvar S\t= UBAT_S;\n\tvar AL\t= UBAT_AL;\n\tvar WS\t= UBAT_WS;\n\tvar CS\t= UBAT_CS;\n\tvar ES\t= UBAT_ES;\n\tvar ET\t= UBAT_ET;\n\tvar NSM\t= UBAT_NSM;\n\tvar LRE\t= UBAT_LRE;\n\tvar RLE\t= UBAT_RLE;\n\tvar PDF\t= UBAT_PDF;\n\tvar LRO\t= UBAT_LRO;\n\tvar RLO\t= UBAT_RLO;\n\tvar BN\t= UBAT_BN;\n\t\n\tvar MasterTable = [\n /*******************************************************************************************************/\n /*     0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F     */\n /*******************************************************************************************************/\n /*0-*/ TB00, L,    L,    L,    L,    TB05, TB06, TB07, R,    L,    L,    L,    L,    L,    L,    L,\n /*1-*/ L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,\n /*2-*/ TB20, ON,   ON,   ON,   L,    ON,   L,    ON,   L,    ON,   ON,   ON,   L,    L,    ON,   ON,\n /*3-*/ L,    L,    L,    L,    L,    ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*4-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,    L,    ON,\n /*5-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*6-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*7-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*8-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*9-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,\n /*A-*/ L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    ON,   ON,   ON,\n /*B-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*C-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*D-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,    L,    ON,   ON,   L,    L,    ON,   ON,   L,\n /*E-*/ L,    ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\n /*F-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,    L,    L,    TBFB, AL,   AL,   TBFE, TBFF\n\t];\n\n\tvar UnicodeTable = [\n        [ /*\tTable 00: Unicode 00xx */\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  S,   B,   S,   WS,  B,   BN,  BN,\n    /*1-*/  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  B,   B,   B,   S,\n    /*2-*/  WS,  ON,  ON,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ES,  CS,  ES,  CS,  CS,\n    /*3-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  CS,  ON,  ON,  ON,  ON,  ON,\n    /*4-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*5-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,\n    /*6-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*7-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  BN,\n    /*8-*/  BN,  BN,  BN,  BN,  BN,  B,   BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,\n    /*9-*/  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,\n    /*A-*/  CS,  ON,  ET,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  L,   ON,  ON,  BN,  ON,  ON,\n    /*B-*/  ET,  ET,  EN,  EN,  ON,  L,   ON,  ON,  ON,  EN,  L,   ON,  ON,  ON,  ON,  ON,\n    /*C-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*D-*/  L,   L,   L,   L,   L,   L,   L,   ON,  L,   L,   L,   L,   L,   L,   L,   L,\n    /*E-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*F-*/  L,   L,   L,   L,   L,   L,   L,   ON,  L,   L,   L,   L,   L,   L,   L,   L\n\t\t],\n\t\t[ /*\tTable 01: Unicode 05xx */\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*1-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*2-*/  L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*3-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*4-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*5-*/  L,   L,   L,   L,   L,   L,   L,   ON,  ON,  L,   L,   L,   L,   L,   L,   L,\n    /*6-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*7-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*8-*/  L,   L,   L,   L,   L,   L,   L,   L,   ON,  L,   ON,  ON,  ON,  ON,  ON,  ON,\n    /*9-*/  ON,  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*A-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*B-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, R,   NSM,\n    /*C-*/  R,   NSM, NSM, R,   NSM, NSM, R,   NSM, ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*D-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\n    /*E-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   ON,  ON,  ON,  ON,  ON,\n    /*F-*/  R,   R,   R,   R,   R,   ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON\n\t\t],\n\t\t[ /*\tTable 02: Unicode 06xx */\n    /****************************************************************************************/\n\t/*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n\t/****************************************************************************************/\n    /*0-*/  AN,  AN,  AN,  AN,  ON,  ON,  ON,  ON,  AL,  ET,  ET,  AL,  CS,  AL,  ON,  ON,\n    /*1-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, AL,  ON,  ON,  AL,  AL,\n    /*2-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*3-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*4-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  NSM, NSM, NSM, NSM, NSM,\n    /*5-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*6-*/  AN,  AN,  AN,  AN,  AN,  AN,  AN,  AN,  AN,  AN,  ET,  AN,  AN,  AL,  AL,  AL,\n    /*7-*/  NSM, AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*B-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*C-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*D-*/  AL,  AL,  AL,  AL,  AL,  AL,  NSM, NSM, NSM, NSM, NSM, NSM, NSM, AN,  ON,  NSM,\n    /*E-*/  NSM, NSM, NSM, NSM, NSM, AL,  AL,  NSM, NSM, ON,  NSM, NSM, NSM, NSM, AL,  AL,\n    /*F-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  AL,  AL,  AL,  AL,  AL,  AL\n\t\t],\n\t\t[\t/*\tTable\t03:\tUnicode\t07xx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  ON,  AL,\n    /*1-*/  AL,  NSM, AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*2-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*3-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*4-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, ON,  ON,  AL,  AL,  AL,\n    /*5-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*6-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*7-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*B-*/  NSM, AL,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*C-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\n    /*D-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\n    /*E-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   NSM, NSM, NSM, NSM, NSM,\n    /*F-*/  NSM, NSM, NSM, NSM, R,   R,   ON,  ON,  ON,  ON,  R,   ON,  ON,  ON,  ON,  ON\n\t\t],\n\t\t[\t/*\tTable\t04:\tUnicode\t20xx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  BN,  BN,  BN,  L,   R,\n    /*1-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*2-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  WS,  B,   LRE, RLE, PDF, LRO, RLO, CS,\n    /*3-*/  ET,  ET,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*4-*/  ON,  ON,  ON,  ON,  CS,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*5-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  WS,\n    /*6-*/  BN,  BN,  BN,  BN,  BN,  ON,  ON,  ON,  ON,  ON,  BN,  BN,  BN,  BN,  BN,  BN,\n    /*7-*/  EN,  L,   ON,  ON,  EN,  EN,  EN,  EN,  EN,  EN,  ES,  ES,  ON,  ON,  ON,  L,\n    /*8-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  ES,  ES,  ON,  ON,  ON,  ON,\n    /*9-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,\n    /*A-*/  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,\n    /*B-*/  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*C-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*D-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*E-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*F-*/  NSM, ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON\n\t\t],\n\t\t[\t/*\tTable\t05:\tUnicode\tFBxx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*1-*/  ON,  ON,  ON,  L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,  R,   NSM, R,\n    /*2-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   ES,  R,   R,   R,   R,   R,   R,\n    /*3-*/  R,   R,   R,   R,   R,   R,   R,   ON,  R,   R,   R,   R,   R,   ON,  R,   ON,\n    /*4-*/  R,   R,   ON,  R,   R,   ON,  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\n    /*5-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*6-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*7-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*B-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*C-*/  AL,  AL,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*D-*/  ON,  ON,  ON,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*E-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*F-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL\n\t\t],\n\t\t[\t/*\tTable\t06:\tUnicode\tFExx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\n    /*1-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*2-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*3-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*4-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*5-*/  CS,  ON,  CS,  ON,  ON,  CS,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ET,\n    /*6-*/  ON,  ON,  ES,  ES,  ON,  ON,  ON,  ON,  ON,  ET,  ET,  ON,  ON,  ON,  ON,  ON,\n    /*7-*/  AL,  AL,  AL,  AL,  AL,  ON,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*B-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*C-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*D-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*E-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\n    /*F-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  ON,  ON,  BN\n\t\t],\n\t\t[\t/*\tTable\t07:\tUnicode\tFFxx\t*/\n    /****************************************************************************************/\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\n    /****************************************************************************************/\n    /*0-*/  ON,  ON,  ON,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ES,  CS,  ES,  CS,  CS,\n    /*1-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  CS,  ON,  ON,  ON,  ON,  ON,\n    /*2-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*3-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,\n    /*4-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*5-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,\n    /*6-*/  ON,  ON,  ON,  ON,  ON,  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*7-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*8-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*9-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*A-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\n    /*B-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,\n    /*C-*/  ON,  ON,  L,   L,   L,   L,   L,   L,   ON,  ON,  L,   L,   L,   L,   L,   L,\n    /*D-*/  ON,  ON,  L,   L,   L,   L,   L,   L,   ON,  ON,  L,   L,   L,   ON,  ON,  ON,\n    /*E-*/  ET,  ET,  ON,  ON,  ON,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\n    /*F-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON\n\t\t]\n\t];\n\n\treturn BidiEngine;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/string/BidiEngine.js\n// module id = 265\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"./Base\", \"../scaler/linear\",\n\t\"dojox/lang/utils\"],\n\tfunction(lang, declare, Base, lin, du){\n\n/*=====\n\tvar __InvisibleAxisCtorArgs = {\n\t\t// summary:\n\t\t//\t\tOptional arguments used in the definition of an invisible axis.\n\t\t// vertical: Boolean?\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\n\t\t// fixUpper: String?\n\t\t//\t\tAlign the greatest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\n\t\t// fixLower: String?\n\t\t//\t\tAlign the smallest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\n\t\t// natural: Boolean?\n\t\t//\t\tEnsure tick marks are made on \"natural\" numbers. Defaults to false.\n\t\t// leftBottom: Boolean?\n\t\t//\t\tThe position of a vertical axis; if true, will be placed against the left-bottom corner of the chart.  Defaults to true.\n\t\t// includeZero: Boolean?\n\t\t//\t\tInclude 0 on the axis rendering.  Default is false.\n\t\t// fixed: Boolean?\n\t\t//\t\tForce all axis labels to be fixed numbers.  Default is true.\n\t\t// min: Number?\n\t\t//\t\tThe smallest value on an axis. Default is 0.\n\t\t// max: Number?\n\t\t//\t\tThe largest value on an axis. Default is 1.\n\t\t// from: Number?\n\t\t//\t\tForce the chart to render data visible from this value. Default is 0.\n\t\t// to: Number?\n\t\t//\t\tForce the chart to render data visible to this value. Default is 1.\n\t\t// majorTickStep: Number?\n\t\t//\t\tThe amount to skip before a major tick is drawn. When not set the major ticks step is computed from\n\t\t//\t\tthe data range.\n\t\t// minorTickStep: Number?\n\t\t//\t\tThe amount to skip before a minor tick is drawn. When not set the minor ticks step is computed from\n\t\t//\t\tthe data range.\n\t\t// microTickStep: Number?\n\t\t//\t\tThe amount to skip before a micro tick is drawn. When not set the micro ticks step is computed from\n\t};\n=====*/\n\n\treturn declare(\"dojox.charting.axis2d.Invisible\", Base, {\n\t\t// summary:\n\t\t//\t\tA axis object used in dojox.charting.  You can use that axis if you want the axis to be invisible.\n\t\t//\t\tSee dojox.charting.Chart.addAxis for details.\n\t\t//\n\t\t// defaultParams: Object\n\t\t//\t\tThe default parameters used to define any axis.\n\t\t// optionalParams: Object\n\t\t//\t\tAny optional parameters needed to define an axis.\n\n\t\t/*\n\t\t// TODO: the documentation tools need these to be pre-defined in order to pick them up\n\t\t//\tcorrectly, but the code here is partially predicated on whether or not the properties\n\t\t//\tactually exist.  For now, we will leave these undocumented but in the code for later. -- TRT\n\n\t\t// opt: Object\n\t\t//\t\tThe actual options used to define this axis, created at initialization.\n\t\t// scaler: Object\n\t\t//\t\tThe calculated helper object to tell charts how to draw an axis and any data.\n\t\t// ticks: Object\n\t\t//\t\tThe calculated tick object that helps a chart draw the scaling on an axis.\n\t\t// dirty: Boolean\n\t\t//\t\tThe state of the axis (whether it needs to be redrawn or not)\n\t\t// scale: Number\n\t\t//\t\tThe current scale of the axis.\n\t\t// offset: Number\n\t\t//\t\tThe current offset of the axis.\n\n\t\topt: null,\n\t\tscaler: null,\n\t\tticks: null,\n\t\tdirty: true,\n\t\tscale: 1,\n\t\toffset: 0,\n\t\t*/\n\t\tdefaultParams: {\n\t\t\tvertical:    false,\t\t// true for vertical axis\n\t\t\tfixUpper:    \"none\",\t// align the upper on ticks: \"major\", \"minor\", \"micro\", \"none\"\n\t\t\tfixLower:    \"none\",\t// align the lower on ticks: \"major\", \"minor\", \"micro\", \"none\"\n\t\t\tnatural:     false,\t\t// all tick marks should be made on natural numbers\n\t\t\tleftBottom:  true,\t\t// position of the axis, used with \"vertical\"\n\t\t\tincludeZero: false,\t\t// 0 should be included\n\t\t\tfixed:       true\t\t// all labels are fixed numbers\n\t\t},\n\t\toptionalParams: {\n\t\t\tmin:\t\t\t0,\t// minimal value on this axis\n\t\t\tmax:\t\t\t1,\t// maximal value on this axis\n\t\t\tfrom:\t\t\t0,\t// visible from this value\n\t\t\tto:\t\t\t\t1,\t// visible to this value\n\t\t\tmajorTickStep:\t4,\t// major tick step\n\t\t\tminorTickStep:\t2,\t// minor tick step\n\t\t\tmicroTickStep:\t1\t// micro tick step\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for an invisible axis.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart the axis belongs to.\n\t\t\t// kwArgs: __InvisibleAxisCtorArgs?\n\t\t\t//\t\tAny optional keyword arguments to be used to define this axis.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n            du.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t},\n\t\tdependOnData: function(){\n\t\t\t// summary:\n\t\t\t//\t\tFind out whether or not the axis options depend on the data in the axis.\n\t\t\treturn !(\"min\" in this.opt) || !(\"max\" in this.opt);\t//\tBoolean\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all calculated properties on this axis;\n\t\t\t// returns: dojox/charting/axis2d/Invisible\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\tdelete this.scaler;\n\t\t\tdelete this.ticks;\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Invisible\n\t\t},\n\t\tinitialized: function(){\n\t\t\t// summary:\n\t\t\t//\t\tFinds out if this axis has been initialized or not.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tWhether a scaler has been calculated and if the axis is not dirty.\n\t\t\treturn \"scaler\" in this && !(this.dirty && this.dependOnData());\n\t\t},\n\t\tsetWindow: function(scale, offset){\n\t\t\t// summary:\n\t\t\t//\t\tSet the drawing \"window\" for the axis.\n\t\t\t// scale: Number\n\t\t\t//\t\tThe new scale for the axis.\n\t\t\t// offset: Number\n\t\t\t//\t\tThe new offset for the axis.\n\t\t\t// returns: dojox/charting/axis2d/Invisible\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\tthis.scale  = scale;\n\t\t\tthis.offset = offset;\n\t\t\treturn this.clear();\t//\tdojox/charting/axis2d/Invisible\n\t\t},\n\t\tgetWindowScale: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the current windowing scale of the axis.\n\t\t\treturn \"scale\" in this ? this.scale : 1;\t//\tNumber\n\t\t},\n\t\tgetWindowOffset: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the current windowing offset for the axis.\n\t\t\treturn \"offset\" in this ? this.offset : 0;\t//\tNumber\n\t\t},\n\t\tcalculate: function(min, max, span, scalerType){\n\t\t\t// summary:\n\t\t\t//\t\tPerform all calculations needed to render this axis.\n\t\t\t// min: Number\n\t\t\t//\t\tThe smallest value represented on this axis.\n\t\t\t// max: Number\n\t\t\t//\t\tThe largest value represented on this axis.\n\t\t\t// span: Number\n\t\t\t//\t\tThe span in pixels over which axis calculations are made.\n\t\t\t// scalerType: Object\n\t\t\t//\t\tAn optional scaler type object.\n\t\t\t// returns: dojox/charting/axis2d/Invisible\n\t\t\t//\t\tThe reference to the axis for functional chaining.\n\t\t\tif(this.initialized()){\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tvar o = this.opt;\n\t\t\t// we used to have a 4th function parameter to reach labels but\n\t\t\t// nobody was calling it with 4 parameters.\n\t\t\tthis.labels = o.labels;\n\t\t\tthis.scaler = (scalerType || lin).buildScaler(min, max, span, o);\n\t\t\t// store the absolute major tick start, this will be useful when dropping a label every n labels\n\t\t\t// TODO: if o.lower then it does not work\n\t\t\tvar tsb = this.scaler.bounds;\n\t\t\tif(\"scale\" in this){\n\t\t\t\t// calculate new range\n\t\t\t\to.from = tsb.lower + this.offset;\n\t\t\t\to.to   = (tsb.upper - tsb.lower) / this.scale + o.from;\n\t\t\t\t// make sure that bounds are correct\n\t\t\t\tif( !isFinite(o.from) ||\n\t\t\t\t\tisNaN(o.from) ||\n\t\t\t\t\t!isFinite(o.to) ||\n\t\t\t\t\tisNaN(o.to) ||\n\t\t\t\t\to.to - o.from >= tsb.upper - tsb.lower\n\t\t\t\t){\n\t\t\t\t\t// any error --- remove from/to bounds\n\t\t\t\t\tdelete o.from;\n\t\t\t\t\tdelete o.to;\n\t\t\t\t\tdelete this.scale;\n\t\t\t\t\tdelete this.offset;\n\t\t\t\t}else{\n\t\t\t\t\t// shift the window, if we are out of bounds\n\t\t\t\t\tif(o.from < tsb.lower){\n\t\t\t\t\t\to.to += tsb.lower - o.from;\n\t\t\t\t\t\to.from = tsb.lower;\n\t\t\t\t\t}else if(o.to > tsb.upper){\n\t\t\t\t\t\to.from += tsb.upper - o.to;\n\t\t\t\t\t\to.to = tsb.upper;\n\t\t\t\t\t}\n\t\t\t\t\t// update the offset\n\t\t\t\t\tthis.offset = o.from - tsb.lower;\n\t\t\t\t}\n\t\t\t\t// re-calculate the scaler\n\t\t\t\tthis.scaler = (scalerType || lin).buildScaler(min, max, span, o);\n\t\t\t\ttsb = this.scaler.bounds;\n\t\t\t\t// cleanup\n\t\t\t\tif(this.scale == 1 && this.offset == 0){\n\t\t\t\t\tdelete this.scale;\n\t\t\t\t\tdelete this.offset;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Invisible\n\t\t},\n\t\tgetScaler: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the pre-calculated scaler object.\n\t\t\treturn this.scaler;\t//\tObject\n\t\t},\n\t\tgetTicks: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the pre-calculated ticks object.\n\t\t\treturn this.ticks;\t//\tObject\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/axis2d/Invisible.js\n// module id = 266\n// module chunks = 0","define([\"dojo/_base/lang\", \"./common\"], \n\tfunction(lang, common){\n\tvar linear = lang.getObject(\"dojox.charting.scaler.linear\", true);\n\t\n\tvar deltaLimit = 3,\t// pixels\n\t\tgetLabel = common.getNumericLabel;\n\n\t\tfunction findString(/*String*/ val, /*Array*/ text){\n\t\t\tval = val.toLowerCase();\n\t\t\tfor(var i = text.length - 1; i >= 0; --i){\n\t\t\t\tif(val === text[i]){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\n\tvar calcTicks = function(min, max, kwArgs, majorTick, minorTick, microTick, span){\n\t\tkwArgs = lang.delegate(kwArgs);\n\t\tif(!majorTick){\n\t\t\tif(kwArgs.fixUpper == \"major\"){ kwArgs.fixUpper = \"minor\"; }\n\t\t\tif(kwArgs.fixLower == \"major\"){ kwArgs.fixLower = \"minor\"; }\n\t\t}\n\t\tif(!minorTick){\n\t\t\tif(kwArgs.fixUpper == \"minor\"){ kwArgs.fixUpper = \"micro\"; }\n\t\t\tif(kwArgs.fixLower == \"minor\"){ kwArgs.fixLower = \"micro\"; }\n\t\t}\n\t\tif(!microTick){\n\t\t\tif(kwArgs.fixUpper == \"micro\"){ kwArgs.fixUpper = \"none\"; }\n\t\t\tif(kwArgs.fixLower == \"micro\"){ kwArgs.fixLower = \"none\"; }\n\t\t}\n\t\tvar lowerBound = findString(kwArgs.fixLower, [\"major\"]) ?\n\t\t\t\tMath.floor(kwArgs.min / majorTick) * majorTick :\n\t\t\t\t\tfindString(kwArgs.fixLower, [\"minor\"]) ?\n\t\t\t\t\t\tMath.floor(kwArgs.min / minorTick) * minorTick :\n\t\t\t\t\t\t\tfindString(kwArgs.fixLower, [\"micro\"]) ?\n\t\t\t\t\t\t\t\tMath.floor(kwArgs.min / microTick) * microTick : kwArgs.min,\n\t\t\tupperBound = findString(kwArgs.fixUpper, [\"major\"]) ?\n\t\t\t\tMath.ceil(kwArgs.max / majorTick) * majorTick :\n\t\t\t\t\tfindString(kwArgs.fixUpper, [\"minor\"]) ?\n\t\t\t\t\t\tMath.ceil(kwArgs.max / minorTick) * minorTick :\n\t\t\t\t\t\t\tfindString(kwArgs.fixUpper, [\"micro\"]) ?\n\t\t\t\t\t\t\t\tMath.ceil(kwArgs.max / microTick) * microTick : kwArgs.max;\n\t\t\t\t\t\t\t\t\n\t\tif(kwArgs.useMin){ min = lowerBound; }\n\t\tif(kwArgs.useMax){ max = upperBound; }\n\t\t\n\t\tvar majorStart = (!majorTick || kwArgs.useMin && findString(kwArgs.fixLower, [\"major\"])) ?\n\t\t\t\tmin : Math.ceil(min / majorTick) * majorTick,\n\t\t\tminorStart = (!minorTick || kwArgs.useMin && findString(kwArgs.fixLower, [\"major\", \"minor\"])) ?\n\t\t\t\tmin : Math.ceil(min / minorTick) * minorTick,\n\t\t\tmicroStart = (! microTick || kwArgs.useMin && findString(kwArgs.fixLower, [\"major\", \"minor\", \"micro\"])) ?\n\t\t\t\tmin : Math.ceil(min / microTick) * microTick,\n\t\t\tmajorCount = !majorTick ? 0 : (kwArgs.useMax && findString(kwArgs.fixUpper, [\"major\"]) ?\n\t\t\t\tMath.round((max - majorStart) / majorTick) :\n\t\t\t\tMath.floor((max - majorStart) / majorTick)) + 1,\n\t\t\tminorCount = !minorTick ? 0 : (kwArgs.useMax && findString(kwArgs.fixUpper, [\"major\", \"minor\"]) ?\n\t\t\t\tMath.round((max - minorStart) / minorTick) :\n\t\t\t\tMath.floor((max - minorStart) / minorTick)) + 1,\n\t\t\tmicroCount = !microTick ? 0 : (kwArgs.useMax && findString(kwArgs.fixUpper, [\"major\", \"minor\", \"micro\"]) ?\n\t\t\t\tMath.round((max - microStart) / microTick) :\n\t\t\t\tMath.floor((max - microStart) / microTick)) + 1,\n\t\t\tminorPerMajor  = minorTick ? Math.round(majorTick / minorTick) : 0,\n\t\t\tmicroPerMinor  = microTick ? Math.round(minorTick / microTick) : 0,\n\t\t\tmajorPrecision = majorTick ? Math.floor(Math.log(majorTick) / Math.LN10) : 0,\n\t\t\tminorPrecision = minorTick ? Math.floor(Math.log(minorTick) / Math.LN10) : 0,\n\t\t\tscale = span / (max - min);\n\t\tif(!isFinite(scale)){ scale = 1; }\n\t\t\n\t\treturn {\n\t\t\tbounds: {\n\t\t\t\tlower:\tlowerBound,\n\t\t\t\tupper:\tupperBound,\n\t\t\t\tfrom:\tmin,\n\t\t\t\tto:\t\tmax,\n\t\t\t\tscale:\tscale,\n\t\t\t\tspan:\tspan\n\t\t\t},\n\t\t\tmajor: {\n\t\t\t\ttick:\tmajorTick,\n\t\t\t\tstart:\tmajorStart,\n\t\t\t\tcount:\tmajorCount,\n\t\t\t\tprec:\tmajorPrecision\n\t\t\t},\n\t\t\tminor: {\n\t\t\t\ttick:\tminorTick,\n\t\t\t\tstart:\tminorStart,\n\t\t\t\tcount:\tminorCount,\n\t\t\t\tprec:\tminorPrecision\n\t\t\t},\n\t\t\tmicro: {\n\t\t\t\ttick:\tmicroTick,\n\t\t\t\tstart:\tmicroStart,\n\t\t\t\tcount:\tmicroCount,\n\t\t\t\tprec:\t0\n\t\t\t},\n\t\t\tminorPerMajor:\tminorPerMajor,\n\t\t\tmicroPerMinor:\tmicroPerMinor,\n\t\t\tscaler:\t\t\tlinear\n\t\t};\n\t};\n\t\n\treturn lang.mixin(linear, {\n\t\tbuildScaler: function(/*Number*/ min, /*Number*/ max, /*Number*/ span, /*Object*/ kwArgs, /*Number?*/ delta, /*Number?*/ minorDelta){\n\t\t\tvar h = {fixUpper: \"none\", fixLower: \"none\", natural: false};\n\t\t\tif(kwArgs){\n\t\t\t\tif(\"fixUpper\" in kwArgs){ h.fixUpper = String(kwArgs.fixUpper); }\n\t\t\t\tif(\"fixLower\" in kwArgs){ h.fixLower = String(kwArgs.fixLower); }\n\t\t\t\tif(\"natural\"  in kwArgs){ h.natural  = Boolean(kwArgs.natural); }\n\t\t\t}\n\t\t\tminorDelta = !minorDelta || minorDelta < deltaLimit ? deltaLimit : minorDelta;\n\t\t\t\n\t\t\t// update bounds\n\t\t\tif(\"min\" in kwArgs){ min = kwArgs.min; }\n\t\t\tif(\"max\" in kwArgs){ max = kwArgs.max; }\n\t\t\tif(kwArgs.includeZero){\n\t\t\t\tif(min > 0){ min = 0; }\n\t\t\t\tif(max < 0){ max = 0; }\n\t\t\t}\n\t\t\th.min = min;\n\t\t\th.useMin = true;\n\t\t\th.max = max;\n\t\t\th.useMax = true;\n\t\t\t\n\t\t\tif(\"from\" in kwArgs){\n\t\t\t\tmin = kwArgs.from;\n\t\t\t\th.useMin = false;\n\t\t\t}\n\t\t\tif(\"to\" in kwArgs){\n\t\t\t\tmax = kwArgs.to;\n\t\t\t\th.useMax = false;\n\t\t\t}\n\t\t\t\n\t\t\t// check for erroneous condition\n\t\t\tif(max <= min){\n\t\t\t\treturn calcTicks(min, max, h, 0, 0, 0, span);\t// Object\n\t\t\t}\n\t\t\tif(!delta){\n\t\t\t\tdelta = max - min;\n\t\t\t}\n\t\t\tvar mag = Math.floor(Math.log(delta) / Math.LN10),\n\t\t\t\tmajor = kwArgs && (\"majorTickStep\" in kwArgs) ? kwArgs.majorTickStep : Math.pow(10, mag),\n\t\t\t\tminor = 0, micro = 0, ticks;\n\t\t\t\t\n\t\t\t// calculate minor ticks\n\t\t\tif(kwArgs && (\"minorTickStep\" in kwArgs)){\n\t\t\t\tminor = kwArgs.minorTickStep;\n\t\t\t}else{\n\t\t\t\tdo{\n\t\t\t\t\tminor = major / 10;\n\t\t\t\t\tif(!h.natural || minor > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, 0, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.minor.tick > minorDelta){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tminor = major / 5;\n\t\t\t\t\tif(!h.natural || minor > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, 0, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.minor.tick > minorDelta){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tminor = major / 2;\n\t\t\t\t\tif(!h.natural || minor > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, 0, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.minor.tick > minorDelta){ break; }\n\t\t\t\t\t}\n\t\t\t\t\treturn calcTicks(min, max, h, major, 0, 0, span);\t// Object\n\t\t\t\t}while(false);\n\t\t\t}\n\t\n\t\t\t// calculate micro ticks\n\t\t\tif(kwArgs && (\"microTickStep\" in kwArgs)){\n\t\t\t\tmicro = kwArgs.microTickStep;\n\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\n\t\t\t}else{\n\t\t\t\tdo{\n\t\t\t\t\tmicro = minor / 10;\n\t\t\t\t\tif(!h.natural || micro > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.micro.tick > deltaLimit){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tmicro = minor / 5;\n\t\t\t\t\tif(!h.natural || micro > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.micro.tick > deltaLimit){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tmicro = minor / 2;\n\t\t\t\t\tif(!h.natural || micro > 0.9){\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.micro.tick > deltaLimit){ break; }\n\t\t\t\t\t}\n\t\t\t\t\tmicro = 0;\n\t\t\t\t}while(false);\n\t\t\t}\n\t\n\t\t\treturn micro ? ticks : calcTicks(min, max, h, major, minor, 0, span);\t// Object\n\t\t},\n\t\tbuildTicks: function(/*Object*/ scaler, /*Object*/ kwArgs){\n\t\t\tvar step, next, tick,\n\t\t\t\tnextMajor = scaler.major.start,\n\t\t\t\tnextMinor = scaler.minor.start,\n\t\t\t\tnextMicro = scaler.micro.start;\n\t\t\tif(kwArgs.microTicks && scaler.micro.tick){\n\t\t\t\tstep = scaler.micro.tick, next = nextMicro;\n\t\t\t}else if(kwArgs.minorTicks && scaler.minor.tick){\n\t\t\t\tstep = scaler.minor.tick, next = nextMinor;\n\t\t\t}else if(scaler.major.tick){\n\t\t\t\tstep = scaler.major.tick, next = nextMajor;\n\t\t\t}else{\n\t\t\t\t// no ticks\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// make sure that we have finite bounds\n\t\t\tvar revScale = 1 / scaler.bounds.scale;\n\t\t\tif(scaler.bounds.to <= scaler.bounds.from || isNaN(revScale) || !isFinite(revScale) ||\n\t\t\t\t\tstep <= 0 || isNaN(step) || !isFinite(step)){\n\t\t\t\t// no ticks\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// loop over all ticks\n\t\t\tvar majorTicks = [], minorTicks = [], microTicks = [];\n\t\t\twhile(next <= scaler.bounds.to + revScale){\n\t\t\t\tif(Math.abs(nextMajor - next) < step / 2){\n\t\t\t\t\t// major tick\n\t\t\t\t\ttick = {value: nextMajor};\n\t\t\t\t\tif(kwArgs.majorLabels){\n\t\t\t\t\t\ttick.label = getLabel(nextMajor, scaler.major.prec, kwArgs);\n\t\t\t\t\t}\n\t\t\t\t\tmajorTicks.push(tick);\n\t\t\t\t\tnextMajor += scaler.major.tick;\n\t\t\t\t\tnextMinor += scaler.minor.tick;\n\t\t\t\t\tnextMicro += scaler.micro.tick;\n\t\t\t\t}else if(Math.abs(nextMinor - next) < step / 2){\n\t\t\t\t\t// minor tick\n\t\t\t\t\tif(kwArgs.minorTicks){\n\t\t\t\t\t\ttick = {value: nextMinor};\n\t\t\t\t\t\tif(kwArgs.minorLabels && (scaler.minMinorStep <= scaler.minor.tick * scaler.bounds.scale)){\n\t\t\t\t\t\t\ttick.label = getLabel(nextMinor, scaler.minor.prec, kwArgs);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminorTicks.push(tick);\n\t\t\t\t\t}\n\t\t\t\t\tnextMinor += scaler.minor.tick;\n\t\t\t\t\tnextMicro += scaler.micro.tick;\n\t\t\t\t}else{\n\t\t\t\t\t// micro tick\n\t\t\t\t\tif(kwArgs.microTicks){\n\t\t\t\t\t\tmicroTicks.push({value: nextMicro});\n\t\t\t\t\t}\n\t\t\t\t\tnextMicro += scaler.micro.tick;\n\t\t\t\t}\n\t\t\t\tnext += step;\n\t\t\t}\n\t\t\treturn {major: majorTicks, minor: minorTicks, micro: microTicks};\t// Object\n\t\t},\n\t\tgetTransformerFromModel: function(/*Object*/ scaler){\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\n\t\t\treturn function(x){ return (x - offset) * scale; };\t// Function\n\t\t},\n\t\tgetTransformerFromPlot: function(/*Object*/ scaler){\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\n\t\t\treturn function(x){ return x / scale + offset; };\t// Function\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/scaler/linear.js\n// module id = 267\n// module chunks = 0","define([\"dojo/_base/declare\", \"./Stacked\"], function(declare, Stacked){\n\n\treturn declare(\"dojox.charting.plot2d.StackedAreas\", Stacked, {\n\t\t// summary:\n\t\t//\t\tA convenience object to set up a stacked area plot.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tForce our Stacked plotter to include both lines and areas.\n\t\t\tthis.opt.lines = true;\n\t\t\tthis.opt.areas = true;\n\t\t}\n\t});\n});\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/StackedAreas.js\n// module id = 288\n// module chunks = 0","define([\"./_base\", \"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/_base/window\", \"dojo/dom-geometry\",\n\t\t\"dojo/dom\", \"./shape\", \"./path\", \"./arc\", \"./matrix\", \"./decompose\", \"./bezierutils\"],\nfunction(g, lang, arr, declare, win, domGeom, dom, gs, pathLib, ga, m, decompose, bezierUtils ){\n\tvar canvas = g.canvas = {\n\t\t// summary:\n\t\t//\t\tThis the graphics rendering bridge for W3C Canvas compliant browsers.\n\t\t//\t\tSince Canvas is an immediate mode graphics api, with no object graph or\n\t\t//\t\teventing capabilities, use of this module alone will only add in drawing support.\n\t\t//\t\tThe additional module, canvasWithEvents extends this module with additional support\n\t\t//\t\tfor handling events on Canvas.  By default, the support for events is now included\n\t\t//\t\thowever, if only drawing capabilities are needed, canvas event module can be disabled\n\t\t//\t\tusing the dojoConfig option, canvasEvents:true|false.\n\t\t//\t\tThe id of the Canvas renderer is 'canvas'.  This id can be used when switch Dojo's\n\t\t//\t\tgraphics context between renderer implementations.  See dojox/gfx/_base.switchRenderer\n\t\t//\t\tAPI.\n\t};\n\tvar pattrnbuffer = null,\n\t\tmp = m.multiplyPoint,\n\t\tpi = Math.PI,\n\t\ttwoPI = 2 * pi,\n\t\thalfPI = pi /2,\n\t\textend = lang.extend;\n\n\tif(win.global.CanvasRenderingContext2D){\n\t\tvar ctx2d = win.doc.createElement(\"canvas\").getContext(\"2d\");\n\t\tvar hasNativeDash = typeof ctx2d.setLineDash == \"function\";\n\t\tvar hasFillText = typeof ctx2d.fillText == \"function\";\n\t}\n\n\tvar dasharray = {\n\t\tsolid:\t\t\t\t\"none\",\n\t\tshortdash:\t\t\t[4, 1],\n\t\tshortdot:\t\t\t[1, 1],\n\t\tshortdashdot:\t\t[4, 1, 1, 1],\n\t\tshortdashdotdot:\t[4, 1, 1, 1, 1, 1],\n\t\tdot:\t\t\t\t[1, 3],\n\t\tdash:\t\t\t\t[4, 3],\n\t\tlongdash:\t\t\t[8, 3],\n\t\tdashdot:\t\t\t[4, 3, 1, 3],\n\t\tlongdashdot:\t\t[8, 3, 1, 3],\n\t\tlongdashdotdot:\t\t[8, 3, 1, 3, 1, 3]\n\t};\n\n\tfunction drawDashedArc(/*CanvasRenderingContext2D*/ctx, /*Number[]*/dash,  /*int*/cx,  /*int*/cy,  /*int*/r, /*Number*/sa, /*Number*/ea, /*Boolean*/ccw, /*Boolean?*/apply, prevResidue){\n\t\tvar residue, angle, l = dash.length, i= 0;\n\t\t// if there's a previous dash residue from the previous arc, start with it.\n\t\tif(prevResidue){\n\t\t\tangle = prevResidue.l/r;\n\t\t\ti = prevResidue.i;\n\t\t}else{\n\t\t\tangle = dash[0]/r;\n\t\t}\n\t\twhile(sa < ea){\n\t\t\t// if the dash segment length is longer than what remains to stroke, keep it for next arc. (aka residue)\n\t\t\tif(sa+angle > ea){\n\t\t\t\tresidue = {l: (sa+angle-ea)*r, i: i};\n\t\t\t\tangle = ea-sa;\n\t\t\t}\n\t\t\tif(!(i%2)){\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(cx, cy, r, sa, sa+angle, ccw);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t}\n\t\t\tsa += angle;\n\t\t\t++i;\n\t\t\tangle = dash[i%l]/r;\n\t\t}\n\t\treturn residue;\n\t}\n\n\tfunction splitToDashedBezier(/*Number[]*/points, /*Number[]*/dashArray, /*Number[]*/newPoints, /*Object*/prevResidue){\n\t\tvar residue = 0, t = 0, dash, i = 0;\n\t\tif(prevResidue){\n\t\t\tdash = prevResidue.l;\n\t\t\ti = prevResidue.i;\n\t\t}else{\n\t\t\tdash = dashArray[0];\n\t\t}\n\t\twhile(t<1){\n\t\t\t// get the 't' corresponding to the given dash value.\n\t\t\tt = bezierUtils.tAtLength(points, dash);\n\t\t\tif(t==1){\n\t\t\t\tvar rl = bezierUtils.computeLength(points);\n\t\t\t\tresidue = {l: dash-rl, i: i};\n\t\t\t}\n\t\t\t// split bezier at t: left part is the \"dash\" curve, right part is the remaining bezier points\n\t\t\tvar curves = bezierUtils.splitBezierAtT(points, t);\n\t\t\tif(!(i%2)){\n\t\t\t\t// only keep the \"dash\" curve\n\t\t\t\tnewPoints.push(curves[0]);\n\t\t\t}\n\t\t\tpoints = curves[1];\n\t\t\t++i;\n\t\t\tdash = dashArray[i%dashArray.length];\n\t\t}\n\t\treturn residue;\n\t}\n\n\tfunction toDashedCurveTo(/*Array||CanvasRenderingContext2D*/ctx, /*shape.Path*/shape, /*Number[]*/points, /*Object*/prevResidue){\n\t\t// summary:\n\t\t//\t\tBuilds a set of bezier (cubic || quadratic)curveTo' canvas instructions that represents a dashed stroke of the specified bezier geometry.\n\n\t\tvar pts = [shape.last.x, shape.last.y].concat(points),\n\t\t\tquadratic = points.length === 4, ctx2d = !(ctx instanceof Array),\n\t\t\tapi = quadratic ? \"quadraticCurveTo\" : \"bezierCurveTo\",\n\t\t\tcurves = [];\n\t\tvar residue = splitToDashedBezier(pts, shape.canvasDash, curves, prevResidue);\n\t\tfor(var c=0; c<curves.length;++c){\n\t\t\tvar curve = curves[c];\n\t\t\tif(ctx2d){\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\t\tctx[api].apply(ctx, curve.slice(2));\n\t\t\t}else{\n\t\t\t\tctx.push(\"moveTo\", [curve[0], curve[1]]);\n\t\t\t\tctx.push(api, curve.slice(2));\n\t\t\t}\n\t\t}\n\t\treturn residue;\n\t}\n\n\tfunction toDashedLineTo(/*Array||CanvasRenderingContext2D*/ctx, /*shape.Shape*/shape, /*int*/x1, /*int*/y1, /*int*/x2, /*int*/y2, /*Object*/prevResidue){\n\t\t// summary:\n\t\t//\t\tBuilds a set of moveTo/lineTo' canvas instructions that represents a dashed stroke of the specified line geometry.\n\n\t\tvar residue = 0, r = 0, dal = 0, tlength = bezierUtils.distance(x1, y1, x2, y2), i = 0, dash = shape.canvasDash,\n\t\t\tprevx = x1, prevy = y1, x, y, ctx2d = !(ctx instanceof Array);\n\t\tif(prevResidue){\n\t\t\tdal=prevResidue.l;\n\t\t\ti = prevResidue.i;\n\t\t}else{\n\t\t\tdal += dash[0];\n\t\t}\n\t\twhile(Math.abs(1-r)>0.01){\n\t\t\tif(dal>tlength){\n\t\t\t\tresidue = {l:dal-tlength,i:i};\n\t\t\t\tdal=tlength;\n\t\t\t}\n\t\t\tr = dal/tlength;\n\t\t\tx = x1 + (x2-x1)*r;\n\t\t\ty = y1 + (y2-y1)*r;\n\t\t\tif(!(i++%2)){\n\t\t\t\tif(ctx2d){\n\t\t\t\t\tctx.moveTo(prevx, prevy);\n\t\t\t\t\tctx.lineTo(x, y);\n\t\t\t\t}else{\n\t\t\t\t\tctx.push(\"moveTo\", [prevx, prevy]);\n\t\t\t\t\tctx.push(\"lineTo\", [x, y]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevx = x;\n\t\t\tprevy = y;\n\t\t\tdal += dash[i%dash.length];\n\t\t}\n\t\treturn residue;\n\t}\n\n\tcanvas.Shape = declare(\"dojox.gfx.canvas.Shape\", gs.Shape, {\n\t\t_render: function(/* Object */ ctx){\n\t\t\t// summary:\n\t\t\t//\t\trender the shape\n\t\t\tctx.save();\n\t\t\tthis._renderTransform(ctx);\n\t\t\tthis._renderClip(ctx);\n\t\t\tthis._renderShape(ctx);\n\t\t\tthis._renderFill(ctx, true);\n\t\t\tthis._renderStroke(ctx, true);\n\t\t\tctx.restore();\n\t\t},\n\t\t_renderClip: function(ctx){\n\t\t\tif (this.canvasClip){\n\t\t\t\tthis.canvasClip.render(ctx);\n\t\t\t\tctx.clip();\n\t\t\t}\n\t\t},\n\t\t_renderTransform: function(/* Object */ ctx){\n\t\t\tif(\"canvasTransform\" in this){\n\t\t\t\tvar t = this.canvasTransform;\n\t\t\t\tctx.translate(t.dx, t.dy);\n\t\t\t\tctx.rotate(t.angle2);\n\t\t\t\tctx.scale(t.sx, t.sy);\n\t\t\t\tctx.rotate(t.angle1);\n\t\t\t\t// The future implementation when vendors catch up with the spec:\n\t\t\t\t// var t = this.matrix;\n\t\t\t\t// ctx.transform(t.xx, t.yx, t.xy, t.yy, t.dx, t.dy);\n\t\t\t}\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\t// nothing\n\t\t},\n\t\t_renderFill: function(/* Object */ ctx, /* Boolean */ apply){\n\t\t\tif(\"canvasFill\" in this){\n\t\t\t\tvar fs = this.fillStyle;\n\t\t\t\tif(\"canvasFillImage\" in this){\n\t\t\t\t\tvar w = fs.width, h = fs.height,\n\t\t\t\t\t\tiw = this.canvasFillImage.width, ih = this.canvasFillImage.height,\n\t\t\t\t\t\t// let's match the svg default behavior wrt. aspect ratio: xMidYMid meet\n\t\t\t\t\t\tsx = w == iw ? 1 : w / iw,\n\t\t\t\t\t\tsy = h == ih ? 1 : h / ih,\n\t\t\t\t\t\ts = Math.min(sx,sy), //meet->math.min , slice->math.max\n\t\t\t\t\t\tdx = (w - s * iw)/2,\n\t\t\t\t\t\tdy = (h - s * ih)/2;\n\t\t\t\t\t// the buffer used to scaled the image\n\t\t\t\t\tpattrnbuffer.width = w; pattrnbuffer.height = h;\n\t\t\t\t\tvar copyctx = pattrnbuffer.getContext(\"2d\");\n\t\t\t\t\tcopyctx.clearRect(0, 0, w, h);\n\t\t\t\t\tcopyctx.drawImage(this.canvasFillImage, 0, 0, iw, ih, dx, dy, s*iw, s*ih);\n\t\t\t\t\tthis.canvasFill = ctx.createPattern(pattrnbuffer, \"repeat\");\n\t\t\t\t\tdelete this.canvasFillImage;\n\t\t\t\t}\n\t\t\t\tctx.fillStyle = this.canvasFill;\n\t\t\t\tif(apply){\n\t\t\t\t\t// offset the pattern\n\t\t\t\t\tif (fs.type===\"pattern\" && (fs.x !== 0 || fs.y !== 0)) {\n\t\t\t\t\t\tctx.translate(fs.x,fs.y);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tctx.fillStyle = \"rgba(0,0,0,0.0)\";\n\t\t\t}\n\t\t},\n\t\t_renderStroke: function(/* Object */ ctx, /* Boolean */ apply){\n\t\t\tvar s = this.strokeStyle;\n\t\t\tif(s){\n\t\t\t\tctx.strokeStyle = s.color.toString();\n\t\t\t\tctx.lineWidth = s.width;\n\t\t\t\tctx.lineCap = s.cap;\n\t\t\t\tif(typeof s.join == \"number\"){\n\t\t\t\t\tctx.lineJoin = \"miter\";\n\t\t\t\t\tctx.miterLimit = s.join;\n\t\t\t\t}else{\n\t\t\t\t\tctx.lineJoin = s.join;\n\t\t\t\t}\n\t\t\t\tif(this.canvasDash){\n\t\t\t\t\tif(hasNativeDash){\n\t\t\t\t\t\tctx.setLineDash(this.canvasDash);\n\t\t\t\t\t\tif(apply){ ctx.stroke(); }\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis._renderDashedStroke(ctx, apply);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tif(apply){ ctx.stroke(); }\n\t\t\t\t}\n\t\t\t}else if(!apply){\n\t\t\t\tctx.strokeStyle = \"rgba(0,0,0,0.0)\";\n\t\t\t}\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){},\n\n\t\t// events are not implemented\n\t\tgetEventSource: function(){ return null; },\n\t\ton:\t\t\t\tfunction(){},\n\t\tconnect:\t\tfunction(){},\n\t\tdisconnect:\t\tfunction(){},\n\n\t\tcanvasClip:null,\n\t\tsetClip: function(/*Object*/clip){\n\t\t\tthis.inherited(arguments);\n\t\t\tvar clipType = clip ? \"width\" in clip ? \"rect\" :\n\t\t\t\t\t\t\t\"cx\" in clip ? \"ellipse\" :\n\t\t\t\t\t\t\t\"points\" in clip ? \"polyline\" : \"d\" in clip ? \"path\" : null : null;\n\t\t\tif(clip && !clipType){\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis.canvasClip = clip ? makeClip(clipType, clip) : null;\n\t\t\tif(this.parent){this.parent._makeDirty();}\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tvar makeClip = function(clipType, geometry){\n\t\tswitch(clipType){\n\t\t\tcase \"ellipse\":\n\t\t\t\treturn {\n\t\t\t\t\tcanvasEllipse: makeEllipse({shape:geometry}),\n\t\t\t\t\trender: function(ctx){return canvas.Ellipse.prototype._renderShape.call(this, ctx);}\n\t\t\t\t};\n\t\t\tcase \"rect\":\n\t\t\t\treturn {\n\t\t\t\t\tshape: lang.delegate(geometry,{r:0}),\n\t\t\t\t\trender: function(ctx){return canvas.Rect.prototype._renderShape.call(this, ctx);}\n\t\t\t\t};\n\t\t\tcase \"path\":\n\t\t\t\treturn {\n\t\t\t\t\tcanvasPath: makeClipPath(geometry),\n\t\t\t\t\trender: function(ctx){this.canvasPath._renderShape(ctx);}\n\t\t\t\t};\n\t\t\tcase \"polyline\":\n\t\t\t\treturn {\n\t\t\t\t\tcanvasPolyline: geometry.points,\n\t\t\t\t\trender: function(ctx){return canvas.Polyline.prototype._renderShape.call(this, ctx);}\n\t\t\t\t};\n\t\t}\n\t\treturn null;\n\t};\n\n\tvar makeClipPath = function(geo){\n\t\tvar p = new dojox.gfx.canvas.Path();\n\t\tp.canvasPath = [];\n\t\tp._setPath(geo.d);\n\t\treturn p;\n\t};\n\n\tvar modifyMethod = function(shape, method, extra){\n\t\tvar old = shape.prototype[method];\n\t\tshape.prototype[method] = extra ?\n\t\t\tfunction(){\n\t\t\t\tif(this.parent){this.parent._makeDirty();}\n\t\t\t\told.apply(this, arguments);\n\t\t\t\textra.call(this);\n\t\t\t\treturn this;\n\t\t\t} :\n\t\t\tfunction(){\n\t\t\t\tif(this.parent){this.parent._makeDirty();}\n\t\t\t\treturn old.apply(this, arguments);\n\t\t\t};\n\t};\n\n\tmodifyMethod(canvas.Shape, \"setTransform\",\n\t\tfunction(){\n\t\t\t// prepare Canvas-specific structures\n\t\t\tif(this.matrix){\n\t\t\t\tthis.canvasTransform = g.decompose(this.matrix);\n\t\t\t}else{\n\t\t\t\tdelete this.canvasTransform;\n\t\t\t}\n\t\t});\n\n\tmodifyMethod(canvas.Shape, \"setFill\",\n\t\tfunction(){\n\t\t\t// prepare Canvas-specific structures\n\t\t\tvar fs = this.fillStyle, f;\n\t\t\tif(fs){\n\t\t\t\tif(typeof(fs) == \"object\" && \"type\" in fs){\n\t\t\t\t\tvar ctx = this.surface.rawNode.getContext(\"2d\");\n\t\t\t\t\tswitch(fs.type){\n\t\t\t\t\t\tcase \"linear\":\n\t\t\t\t\t\tcase \"radial\":\n\t\t\t\t\t\t\tf = fs.type == \"linear\" ?\n\t\t\t\t\t\t\t\tctx.createLinearGradient(fs.x1, fs.y1, fs.x2, fs.y2) :\n\t\t\t\t\t\t\t\tctx.createRadialGradient(fs.cx, fs.cy, 0, fs.cx, fs.cy, fs.r);\n\t\t\t\t\t\t\tarr.forEach(fs.colors, function(step){\n\t\t\t\t\t\t\t\tf.addColorStop(step.offset, g.normalizeColor(step.color).toString());\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"pattern\":\n\t\t\t\t\t\t\tif (!pattrnbuffer) {\n\t\t\t\t\t\t\t\tpattrnbuffer = document.createElement(\"canvas\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// no need to scale the image since the canvas.createPattern uses\n\t\t\t\t\t\t\t// the original image data and not the scaled ones (see spec.)\n\t\t\t\t\t\t\t// the scaling needs to be done at rendering time in a context buffer\n\t\t\t\t\t\t\tvar img =new Image();\n\t\t\t\t\t\t\tthis.surface.downloadImage(img, fs.src);\n\t\t\t\t\t\t\tthis.canvasFillImage = img;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t// Set fill color using CSS RGBA func style\n\t\t\t\t\tf = fs.toString();\n\t\t\t\t}\n\t\t\t\tthis.canvasFill = f;\n\t\t\t}else{\n\t\t\t\tdelete this.canvasFill;\n\t\t\t}\n\t\t});\n\n\tmodifyMethod(canvas.Shape, \"setStroke\",\n\t\tfunction(){\n\t\t\tvar st = this.strokeStyle;\n\t\t\tif(st){\n\t\t\t\tvar da = this.strokeStyle.style.toLowerCase();\n\t\t\t\tif(da in dasharray){\n\t\t\t\t\tda = dasharray[da];\n\t\t\t\t}\n\t\t\t\tif(da instanceof Array){\n\t\t\t\t\tda = da.slice();\n\t\t\t\t\tthis.canvasDash = da;\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor(i = 0; i < da.length; ++i){\n\t\t\t\t\t\tda[i] *= st.width;\n\t\t\t\t\t}\n\t\t\t\t\tif(st.cap != \"butt\"){\n\t\t\t\t\t\tfor(i = 0; i < da.length; i += 2){\n\t\t\t\t\t\t\tda[i] -= st.width;\n\t\t\t\t\t\t\tif(da[i] < 1){ da[i] = 1; }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor(i = 1; i < da.length; i += 2){\n\t\t\t\t\t\t\tda[i] += st.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tdelete this.canvasDash;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tdelete this.canvasDash;\n\t\t\t}\n\t\t\tthis._needsDash = !hasNativeDash && !!this.canvasDash;\n\t\t});\n\n\tmodifyMethod(canvas.Shape, \"setShape\");\n\n\tcanvas.Group = declare(\"dojox.gfx.canvas.Group\", canvas.Shape, {\n\t\t// summary:\n\t\t//\t\ta group shape (Canvas), which can be used\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\n\t\tconstructor: function(){\n\t\t\tgs.Container._init.call(this);\n\t\t},\n\t\t_render: function(/* Object */ ctx){\n\t\t\t// summary:\n\t\t\t//\t\trender the group\n\t\t\tctx.save();\n\t\t\tthis._renderTransform(ctx);\n\t\t\tthis._renderClip(ctx);\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tthis.children[i]._render(ctx);\n\t\t\t}\n\t\t\tctx.restore();\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReleases all internal resources owned by this shape. Once this method has been called,\n\t\t\t//\t\tthe instance is considered disposed and should not be used anymore.\n\n\t\t\t// don't call canvas impl to avoid makeDirty'\n\t\t\tgs.Container.clear.call(this, true);\n\t\t\t// avoid this.inherited\n\t\t\tcanvas.Shape.prototype.destroy.apply(this, arguments);\n\t\t}\n\t});\n\n\n\n\tcanvas.Rect = declare(\"dojox.gfx.canvas.Rect\", [canvas.Shape, gs.Rect], {\n\t\t// summary:\n\t\t//\t\ta rectangle shape (Canvas)\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape, r = Math.min(s.r, s.height / 2, s.width / 2),\n\t\t\t\txl = s.x, xr = xl + s.width, yt = s.y, yb = yt + s.height,\n\t\t\t\txl2 = xl + r, xr2 = xr - r, yt2 = yt + r, yb2 = yb - r;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(xl2, yt);\n\t\t\tif(r){\n\t\t\t\tctx.arc(xr2, yt2, r, -halfPI, 0, false);\n\t\t\t\tctx.arc(xr2, yb2, r, 0, halfPI, false);\n\t\t\t\tctx.arc(xl2, yb2, r, halfPI, pi, false);\n\t\t\t\tctx.arc(xl2, yt2, r, pi, pi + halfPI, false);\n\t\t\t}else{\n\t\t\t\tctx.lineTo(xr2, yt);\n\t\t\t\tctx.lineTo(xr, yb2);\n\t\t\t\tctx.lineTo(xl2, yb);\n\t\t\t\tctx.lineTo(xl, yt2);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar s = this.shape, residue, r = Math.min(s.r, s.height / 2, s.width / 2),\n\t\t\t\txl = s.x, xr = xl + s.width, yt = s.y, yb = yt + s.height,\n\t\t\t\txl2 = xl + r, xr2 = xr - r, yt2 = yt + r, yb2 = yb - r;\n\t\t\tif(r){\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xl2, yt, xr2, yt);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\tresidue = drawDashedArc(ctx, this.canvasDash, xr2, yt2, r, -halfPI, 0, false, apply, residue);\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xr, yt2, xr, yb2, residue);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\tresidue = drawDashedArc(ctx, this.canvasDash, xr2, yb2, r, 0, halfPI, false, apply, residue);\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xr2, yb, xl2, yb, residue);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\tresidue = drawDashedArc(ctx, this.canvasDash, xl2, yb2, r, halfPI, pi, false, apply, residue);\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xl, yb2, xl, yt2,residue);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\tdrawDashedArc(ctx, this.canvasDash, xl2, yt2, r, pi, pi + halfPI, false, apply, residue);\n\t\t\t}else{\n\t\t\t\tctx.beginPath();\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xl2, yt, xr2, yt);\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xr2, yt, xr, yb2, residue);\n\t\t\t\tresidue = toDashedLineTo(ctx, this, xr, yb2, xl2, yb, residue);\n\t\t\t\ttoDashedLineTo(ctx, this, xl2, yb, xl, yt2, residue);\n\t\t\t\tif(apply) ctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n\n\tvar bezierCircle = [];\n\t(function(){\n\t\tvar u = ga.curvePI4;\n\t\tbezierCircle.push(u.s, u.c1, u.c2, u.e);\n\t\tfor(var a = 45; a < 360; a += 45){\n\t\t\tvar r = m.rotateg(a);\n\t\t\tbezierCircle.push(mp(r, u.c1), mp(r, u.c2), mp(r, u.e));\n\t\t}\n\t})();\n\n\tvar makeEllipse = function(shape){\n\t\t// prepare Canvas-specific structures\n\t\tvar t, c1, c2, r = [], s = shape.shape,\n\t\t\tM = m.normalize([m.translate(s.cx, s.cy), m.scale(s.rx, s.ry)]);\n\t\tt = mp(M, bezierCircle[0]);\n\t\tr.push([t.x, t.y]);\n\t\tfor(var i = 1; i < bezierCircle.length; i += 3){\n\t\t\tc1 = mp(M, bezierCircle[i]);\n\t\t\tc2 = mp(M, bezierCircle[i + 1]);\n\t\t\tt  = mp(M, bezierCircle[i + 2]);\n\t\t\tr.push([c1.x, c1.y, c2.x, c2.y, t.x, t.y]);\n\t\t}\n\t\tif(shape._needsDash){\n\t\t\tvar points = [], p1 = r[0];\n\t\t\tfor(i = 1; i < r.length; ++i){\n\t\t\t\tvar curves = [];\n\t\t\t\tsplitToDashedBezier(p1.concat(r[i]), shape.canvasDash, curves);\n\t\t\t\tp1 = [r[i][4],r[i][5]];\n\t\t\t\tpoints.push(curves);\n\t\t\t}\n\t\t\tshape._dashedPoints = points;\n\t\t}\n\t\treturn r;\n\t};\n\n\tcanvas.Ellipse = declare(\"dojox.gfx.canvas.Ellipse\", [canvas.Shape, gs.Ellipse], {\n\t\t// summary:\n\t\t//\t\tan ellipse shape (Canvas)\n\t\tsetShape: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tthis.canvasEllipse = makeEllipse(this);\n\t\t\treturn this;\n\t\t},\n\t\tsetStroke: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tif(!hasNativeDash){\n\t\t\t\tthis.canvasEllipse = makeEllipse(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar r = this.canvasEllipse, i;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo.apply(ctx, r[0]);\n\t\t\tfor(i = 1; i < r.length; ++i){\n\t\t\t\tctx.bezierCurveTo.apply(ctx, r[i]);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar r = this._dashedPoints;\n\t\t\tctx.beginPath();\n\t\t\tfor(var i = 0; i < r.length; ++i){\n\t\t\t\tvar curves = r[i];\n\t\t\t\tfor(var j=0;j<curves.length;++j){\n\t\t\t\t\tvar curve = curves[j];\n\t\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\t\t\tctx.bezierCurveTo(curve[2],curve[3],curve[4],curve[5],curve[6],curve[7]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(apply) ctx.stroke();\n\t\t}\n\t});\n\n\tcanvas.Circle = declare(\"dojox.gfx.canvas.Circle\", [canvas.Shape, gs.Circle], {\n\t\t// summary:\n\t\t//\t\ta circle shape (Canvas)\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape;\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(s.cx, s.cy, s.r, 0, twoPI, 1);\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar s = this.shape;\n\t\t\tvar startAngle = 0, angle, l = this.canvasDash.length; i=0;\n\t\t\twhile(startAngle < twoPI){\n\t\t\t\tangle = this.canvasDash[i%l]/s.r;\n\t\t\t\tif(!(i%2)){\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.arc(s.cx, s.cy, s.r, startAngle, startAngle+angle, 0);\n\t\t\t\t\tif(apply) ctx.stroke();\n\t\t\t\t}\n\t\t\t\tstartAngle+=angle;\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t});\n\n\tcanvas.Line = declare(\"dojox.gfx.canvas.Line\", [canvas.Shape, gs.Line], {\n\t\t// summary:\n\t\t//\t\ta line shape (Canvas)\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(s.x1, s.y1);\n\t\t\tctx.lineTo(s.x2, s.y2);\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar s = this.shape;\n\t\t\tctx.beginPath();\n\t\t\ttoDashedLineTo(ctx, this, s.x1, s.y1, s.x2, s.y2);\n\t\t\tif(apply) ctx.stroke();\n\t\t}\n\t});\n\n\tcanvas.Polyline = declare(\"dojox.gfx.canvas.Polyline\", [canvas.Shape, gs.Polyline], {\n\t\t// summary:\n\t\t//\t\ta polyline/polygon shape (Canvas)\n\t\tsetShape: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tvar p = this.shape.points, f = p[0], r, c, i;\n\t\t\tthis.bbox = null;\n\t\t\t// normalize this.shape.points as array of points: [{x,y}, {x,y}, ...]\n\t\t\tthis._normalizePoints();\n\t\t\t// after _normalizePoints, if shape.points was [x1,y1,x2,y2,..], shape.points references a new array\n\t\t\t// and p references the original points array\n\t\t\t// prepare Canvas-specific structures, if needed\n\t\t\tif(p.length){\n\t\t\t\tif(typeof f == \"number\"){ // already in the canvas format [x1,y1,x2,y2,...]\n\t\t\t\t\tr = p;\n\t\t\t\t}else{ // convert into canvas-specific format\n\t\t\t\t\tr = [];\n\t\t\t\t\tfor(i=0; i < p.length; ++i){\n\t\t\t\t\t\tc = p[i];\n\t\t\t\t\t\tr.push(c.x, c.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tr = [];\n\t\t\t}\n\t\t\tthis.canvasPolyline = r;\n\t\t\treturn this;\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar p = this.canvasPolyline;\n\t\t\tif(p.length){\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(p[0], p[1]);\n\t\t\t\tfor(var i = 2; i < p.length; i += 2){\n\t\t\t\t\tctx.lineTo(p[i], p[i + 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_renderDashedStroke: function(ctx, apply){\n\t\t\tvar p = this.canvasPolyline, residue = 0;\n\t\t\tctx.beginPath();\n\t\t\tfor(var i = 0; i < p.length; i += 2){\n\t\t\t\tresidue = toDashedLineTo(ctx, this, p[i], p[i + 1], p[i + 2], p[i + 3], residue);\n\t\t\t}\n\t\t\tif(apply) ctx.stroke();\n\t\t}\n\t});\n\n\tcanvas.Image = declare(\"dojox.gfx.canvas.Image\", [canvas.Shape, gs.Image], {\n\t\t// summary:\n\t\t//\t\tan image shape (Canvas)\n\t\tsetShape: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\t// prepare Canvas-specific structures\n\t\t\tvar img = new Image();\n\t\t\tthis.surface.downloadImage(img, this.shape.src);\n\t\t\tthis.canvasImage = img;\n\t\t\treturn this;\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape;\n\t\t\tctx.drawImage(this.canvasImage, s.x, s.y, s.width, s.height);\n\t\t}\n\t});\n\n\tcanvas.Text = declare(\"dojox.gfx.canvas.Text\", [canvas.Shape, gs.Text], {\n\t\t_setFont:function(){\n\t\t\tif(this.fontStyle){\n\t\t\t\tthis.canvasFont = g.makeFontString(this.fontStyle);\n\t\t\t}else{\n\t\t\t\tdelete this.canvasFont;\n\t\t\t}\n\t\t},\n\n\t\tgetTextWidth: function(){\n\t\t\t// summary:\n\t\t\t//\t\tget the text width in pixels\n\t\t\tvar s = this.shape, w = 0, ctx;\n\t\t\tif(s.text){\n\t\t\t\tctx = this.surface.rawNode.getContext(\"2d\");\n\t\t\t\tctx.save();\n\t\t\t\tthis._renderTransform(ctx);\n\t\t\t\tthis._renderFill(ctx, false);\n\t\t\t\tthis._renderStroke(ctx, false);\n\t\t\t\tif (this.canvasFont)\n\t\t\t\t\tctx.font = this.canvasFont;\n\t\t\t\tw = ctx.measureText(s.text).width;\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t\treturn w;\n\t\t},\n\n\t\t// override to apply first fill and stroke (\n\t\t// the base implementation is for path-based shape that needs to first define the path then to fill/stroke it.\n\t\t// Here, we need the fillstyle or strokestyle to be set before calling fillText/strokeText.\n\t\t_render: function(/* Object */ctx){\n\t\t\t// summary:\n\t\t\t//\t\trender the shape\n\t\t\t// ctx: Object\n\t\t\t//\t\tthe drawing context.\n\t\t\tctx.save();\n\t\t\tthis._renderTransform(ctx);\n\t\t\tthis._renderFill(ctx, false);\n\t\t\tthis._renderStroke(ctx, false);\n\t\t\tthis._renderShape(ctx);\n\t\t\tctx.restore();\n\t\t},\n\n\t\t_renderShape: function(ctx){\n\t\t\t// summary:\n\t\t\t//\t\ta text shape (Canvas)\n\t\t\t// ctx: Object\n\t\t\t//\t\tthe drawing context.\n\t\t\tvar ta, s = this.shape;\n\t\t\tif(!s.text){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// text align\n\t\t\tta = s.align === 'middle' ? 'center' : s.align;\n\t\t\tctx.textAlign = ta;\n\t\t\tif(this.canvasFont){\n\t\t\t\tctx.font = this.canvasFont;\n\t\t\t}\n\t\t\tif(this.canvasFill){\n\t\t\t\tctx.fillText(s.text, s.x, s.y);\n\t\t\t}\n\t\t\tif(this.strokeStyle){\n\t\t\t\tctx.beginPath(); // fix bug in FF3.6. Fixed in FF4b8\n\t\t\t\tctx.strokeText(s.text, s.x, s.y);\n\t\t\t\tctx.closePath();\n\t\t\t}\n\t\t}\n\t});\n\tmodifyMethod(canvas.Text, \"setFont\");\n\n\tif(!hasFillText){\n\t\tcanvas.Text.extend({\n\t\t\tgetTextWidth: function(){\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\tgetBoundingBox: function(){\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t_renderShape: function(){\n\t\t\t}\n\t\t});\n\t}\n\n\tvar pathRenderers = {\n\t\t\tM: \"_moveToA\", m: \"_moveToR\",\n\t\t\tL: \"_lineToA\", l: \"_lineToR\",\n\t\t\tH: \"_hLineToA\", h: \"_hLineToR\",\n\t\t\tV: \"_vLineToA\", v: \"_vLineToR\",\n\t\t\tC: \"_curveToA\", c: \"_curveToR\",\n\t\t\tS: \"_smoothCurveToA\", s: \"_smoothCurveToR\",\n\t\t\tQ: \"_qCurveToA\", q: \"_qCurveToR\",\n\t\t\tT: \"_qSmoothCurveToA\", t: \"_qSmoothCurveToR\",\n\t\t\tA: \"_arcTo\", a: \"_arcTo\",\n\t\t\tZ: \"_closePath\", z: \"_closePath\"\n\t\t};\n\n\n\tcanvas.Path = declare(\"dojox.gfx.canvas.Path\", [canvas.Shape, pathLib.Path], {\n\t\t// summary:\n\t\t//\t\ta path shape (Canvas)\n\t\tconstructor: function(){\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\tsetShape: function(){\n\t\t\tthis.canvasPath = [];\n\t\t\tthis._dashedPath= [];\n\t\t\treturn this.inherited(arguments);\n\t\t},\n\t\tsetStroke:function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tif(!hasNativeDash){\n\t\t\t\tthis.segmented = false;\n\t\t\t\tthis._confirmSegmented();\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t_setPath: function(){\n\t\t\tthis._dashResidue = null;\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\t_updateWithSegment: function(segment){\n\t\t\tvar last = lang.clone(this.last);\n\t\t\tthis[pathRenderers[segment.action]](this.canvasPath, segment.action, segment.args, this._needsDash ? this._dashedPath : null);\n\t\t\tthis.last = last;\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar r = this.canvasPath;\n\t\t\tctx.beginPath();\n\t\t\tfor(var i = 0; i < r.length; i += 2){\n\t\t\t\tctx[r[i]].apply(ctx, r[i + 1]);\n\t\t\t}\n\t\t},\n\t\t_renderDashedStroke: hasNativeDash ? function(){} : function(ctx, apply){\n\t\t\tvar r = this._dashedPath;\n\t\t\tctx.beginPath();\n\t\t\tfor(var i = 0; i < r.length; i += 2){\n\t\t\t\tctx[r[i]].apply(ctx, r[i + 1]);\n\t\t\t}\n\t\t\tif(apply) ctx.stroke();\n\t\t},\n\t\t_moveToA: function(result, action, args, doDash){\n\t\t\tresult.push(\"moveTo\", [args[0], args[1]]);\n\t\t\tif(doDash) doDash.push(\"moveTo\", [args[0], args[1]]);\n\t\t\tfor(var i = 2; i < args.length; i += 2){\n\t\t\t\tresult.push(\"lineTo\", [args[i], args[i + 1]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, args[i - 2], args[i - 1], args[i], args[i + 1], this._dashResidue);\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_moveToR: function(result, action, args, doDash){\n\t\t\tvar pts;\n\t\t\tif(\"x\" in this.last){\n\t\t\t\tpts = [this.last.x += args[0], this.last.y += args[1]];\n\t\t\t\tresult.push(\"moveTo\", pts);\n\t\t\t\tif(doDash) doDash.push(\"moveTo\", pts);\n\t\t\t}else{\n\t\t\t\tpts = [this.last.x = args[0], this.last.y = args[1]];\n\t\t\t\tresult.push(\"moveTo\", pts);\n\t\t\t\tif(doDash) doDash.push(\"moveTo\", pts);\n\t\t\t}\n\t\t\tfor(var i = 2; i < args.length; i += 2){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x += args[i], this.last.y += args[i + 1]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_lineToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 2){\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, this.last.x, this.last.y, args[i], args[i + 1], this._dashResidue);\n\t\t\t\tresult.push(\"lineTo\", [args[i], args[i + 1]]);\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_lineToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 2){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x += args[i], this.last.y += args[i + 1]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_hLineToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tresult.push(\"lineTo\", [args[i], this.last.y]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], args[i], this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 1];\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_hLineToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x += args[i], this.last.y]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_vLineToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x, args[i]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, args[i], this._dashResidue);\n\t\t\t}\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_vLineToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\t\tresult.push(\"lineTo\", [this.last.x, this.last.y += args[i]]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, doDash[doDash.length - 1][0], doDash[doDash.length - 1][1], this.last.x, this.last.y, this._dashResidue);\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_curveToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 6){\n\t\t\t\tresult.push(\"bezierCurveTo\", args.slice(i, i + 6));\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length-1], this._dashResidue);\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl.x = args[args.length - 4];\n\t\t\tthis.lastControl.y = args[args.length - 3];\n\t\t\tthis.lastControl.type = \"C\";\n\t\t},\n\t\t_curveToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 6){\n\t\t\t\tresult.push(\"bezierCurveTo\", [\n\t\t\t\t\tthis.last.x + args[i],\n\t\t\t\t\tthis.last.y + args[i + 1],\n\t\t\t\t\tthis.lastControl.x = this.last.x + args[i + 2],\n\t\t\t\t\tthis.lastControl.y = this.last.y + args[i + 3],\n\t\t\t\t\tthis.last.x + args[i + 4],\n\t\t\t\t\tthis.last.y + args[i + 5]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length-1], this._dashResidue);\n\t\t\t\tthis.last.x += args[i + 4];\n\t\t\t\tthis.last.y += args[i + 5];\n\t\t\t}\n\t\t\tthis.lastControl.type = \"C\";\n\t\t},\n\t\t_smoothCurveToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 4){\n\t\t\t\tvar valid = this.lastControl.type == \"C\";\n\t\t\t\tresult.push(\"bezierCurveTo\", [\n\t\t\t\t\tvalid ? 2 * this.last.x - this.lastControl.x : this.last.x,\n\t\t\t\t\tvalid ? 2 * this.last.y - this.lastControl.y : this.last.y,\n\t\t\t\t\targs[i],\n\t\t\t\t\targs[i + 1],\n\t\t\t\t\targs[i + 2],\n\t\t\t\t\targs[i + 3]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length-1], this._dashResidue);\n\t\t\t\tthis.lastControl.x = args[i];\n\t\t\t\tthis.lastControl.y = args[i + 1];\n\t\t\t\tthis.lastControl.type = \"C\";\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t},\n\t\t_smoothCurveToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 4){\n\t\t\t\tvar valid = this.lastControl.type == \"C\";\n\t\t\t\tresult.push(\"bezierCurveTo\", [\n\t\t\t\t\tvalid ? 2 * this.last.x - this.lastControl.x : this.last.x,\n\t\t\t\t\tvalid ? 2 * this.last.y - this.lastControl.y : this.last.y,\n\t\t\t\t\tthis.last.x + args[i],\n\t\t\t\t\tthis.last.y + args[i + 1],\n\t\t\t\t\tthis.last.x + args[i + 2],\n\t\t\t\t\tthis.last.y + args[i + 3]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length-1], this._dashResidue);\n\t\t\t\tthis.lastControl.x = this.last.x + args[i];\n\t\t\t\tthis.lastControl.y = this.last.y + args[i + 1];\n\t\t\t\tthis.lastControl.type = \"C\";\n\t\t\t\tthis.last.x += args[i + 2];\n\t\t\t\tthis.last.y += args[i + 3];\n\t\t\t}\n\t\t},\n\t\t_qCurveToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 4){\n\t\t\t\tresult.push(\"quadraticCurveTo\", args.slice(i, i + 4));\n\t\t\t}\n\t\t\tif(doDash)\n\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length - 1], this._dashResidue);\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t\tthis.lastControl.x = args[args.length - 4];\n\t\t\tthis.lastControl.y = args[args.length - 3];\n\t\t\tthis.lastControl.type = \"Q\";\n\t\t},\n\t\t_qCurveToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 4){\n\t\t\t\tresult.push(\"quadraticCurveTo\", [\n\t\t\t\t\tthis.lastControl.x = this.last.x + args[i],\n\t\t\t\t\tthis.lastControl.y = this.last.y + args[i + 1],\n\t\t\t\t\tthis.last.x + args[i + 2],\n\t\t\t\t\tthis.last.y + args[i + 3]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length - 1], this._dashResidue);\n\t\t\t\tthis.last.x += args[i + 2];\n\t\t\t\tthis.last.y += args[i + 3];\n\t\t\t}\n\t\t\tthis.lastControl.type = \"Q\";\n\t\t},\n\t\t_qSmoothCurveToA: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 2){\n\t\t\t\tvar valid = this.lastControl.type == \"Q\";\n\t\t\t\tresult.push(\"quadraticCurveTo\", [\n\t\t\t\t\tthis.lastControl.x = valid ? 2 * this.last.x - this.lastControl.x : this.last.x,\n\t\t\t\t\tthis.lastControl.y = valid ? 2 * this.last.y - this.lastControl.y : this.last.y,\n\t\t\t\t\targs[i],\n\t\t\t\t\targs[i + 1]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length - 1], this._dashResidue);\n\t\t\t\tthis.lastControl.type = \"Q\";\n\t\t\t}\n\t\t\tthis.last.x = args[args.length - 2];\n\t\t\tthis.last.y = args[args.length - 1];\n\t\t},\n\t\t_qSmoothCurveToR: function(result, action, args, doDash){\n\t\t\tfor(var i = 0; i < args.length; i += 2){\n\t\t\t\tvar valid = this.lastControl.type == \"Q\";\n\t\t\t\tresult.push(\"quadraticCurveTo\", [\n\t\t\t\t\tthis.lastControl.x = valid ? 2 * this.last.x - this.lastControl.x : this.last.x,\n\t\t\t\t\tthis.lastControl.y = valid ? 2 * this.last.y - this.lastControl.y : this.last.y,\n\t\t\t\t\tthis.last.x + args[i],\n\t\t\t\t\tthis.last.y + args[i + 1]\n\t\t\t\t]);\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, result[result.length - 1], this._dashResidue);\n\t\t\t\tthis.lastControl.type = \"Q\";\n\t\t\t\tthis.last.x += args[i];\n\t\t\t\tthis.last.y += args[i + 1];\n\t\t\t}\n\t\t},\n\t\t_arcTo: function(result, action, args, doDash){\n\t\t\tvar relative = action == \"a\";\n\t\t\tfor(var i = 0; i < args.length; i += 7){\n\t\t\t\tvar x1 = args[i + 5], y1 = args[i + 6];\n\t\t\t\tif(relative){\n\t\t\t\t\tx1 += this.last.x;\n\t\t\t\t\ty1 += this.last.y;\n\t\t\t\t}\n\t\t\t\tvar arcs = ga.arcAsBezier(\n\t\t\t\t\tthis.last, args[i], args[i + 1], args[i + 2],\n\t\t\t\t\targs[i + 3] ? 1 : 0, args[i + 4] ? 1 : 0,\n\t\t\t\t\tx1, y1\n\t\t\t\t);\n\t\t\t\tarr.forEach(arcs, function(p){\n\t\t\t\t\tresult.push(\"bezierCurveTo\", p);\n\t\t\t\t});\n\t\t\t\tif(doDash)\n\t\t\t\t\tthis._dashResidue = toDashedCurveTo(doDash, this, p, this._dashResidue);\n\t\t\t\tthis.last.x = x1;\n\t\t\t\tthis.last.y = y1;\n\t\t\t}\n\t\t\tthis.lastControl = {};\n\t\t},\n\t\t_closePath: function(result, action, args, doDash){\n\t\t\tresult.push(\"closePath\", []);\n\t\t\tif(doDash)\n\t\t\t\tthis._dashResidue = toDashedLineTo(doDash, this, this.last.x, this.last.y, doDash[1][0], doDash[1][1], this._dashResidue);\n\t\t\tthis.lastControl = {};\n\t\t}\n\t});\n\tarr.forEach([\"moveTo\", \"lineTo\", \"hLineTo\", \"vLineTo\", \"curveTo\",\n\t\t\"smoothCurveTo\", \"qCurveTo\", \"qSmoothCurveTo\", \"arcTo\", \"closePath\"],\n\t\tfunction(method){ modifyMethod(canvas.Path, method); }\n\t);\n\n\tcanvas.TextPath = declare(\"dojox.gfx.canvas.TextPath\", [canvas.Shape, pathLib.TextPath], {\n\t\t// summary:\n\t\t//\t\ta text shape (Canvas)\n\t\t_renderShape: function(/* Object */ ctx){\n\t\t\tvar s = this.shape;\n\t\t\t// nothing for the moment\n\t\t},\n\t\t_setText: function(){\n\t\t\t// not implemented\n\t\t},\n\t\t_setFont: function(){\n\t\t\t// not implemented\n\t\t}\n\t});\n\n\tcanvas.Surface = declare(\"dojox.gfx.canvas.Surface\", gs.Surface, {\n\t\t// summary:\n\t\t//\t\ta surface object to be used for drawings (Canvas)\n\t\tconstructor: function(){\n\t\t\tgs.Container._init.call(this);\n\t\t\tthis.pendingImageCount = 0;\n\t\t\tthis.makeDirty();\n\t\t},\n\t\tdestroy: function(){\n\t\t\tgs.Container.clear.call(this, true); // avoid makeDirty() from canvas.Container.clear impl.\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\tsetDimensions: function(width, height){\n\t\t\t// summary:\n\t\t\t//\t\tsets the width and height of the rawNode\n\t\t\t// width: String\n\t\t\t//\t\twidth of surface, e.g., \"100px\"\n\t\t\t// height: String\n\t\t\t//\t\theight of surface, e.g., \"100px\"\n\t\t\tthis.width  = g.normalizedLength(width);\t// in pixels\n\t\t\tthis.height = g.normalizedLength(height);\t// in pixels\n\t\t\tif(!this.rawNode) return this;\n\t\t\tvar dirty = false;\n\t\t\tif (this.rawNode.width != this.width){\n\t\t\t\tthis.rawNode.width = this.width;\n\t\t\t\tdirty = true;\n\t\t\t}\n\t\t\tif (this.rawNode.height != this.height){\n\t\t\t\tthis.rawNode.height = this.height;\n\t\t\t\tdirty = true;\n\t\t\t}\n\t\t\tif (dirty)\n\t\t\t\tthis.makeDirty();\n\t\t\treturn this;\t// self\n\t\t},\n\t\tgetDimensions: function(){\n\t\t\t// summary:\n\t\t\t//\t\treturns an object with properties \"width\" and \"height\"\n\t\t\treturn this.rawNode ? {width:  this.rawNode.width, height: this.rawNode.height} : null;\t// Object\n\t\t},\n\t\t_render: function(force){\n\t\t\t// summary:\n\t\t\t//\t\trender the all shapes\n\t\t\tif(!this.rawNode || (!force && this.pendingImageCount)){ return; }\n\t\t\tvar ctx = this.rawNode.getContext(\"2d\");\n\t\t\tctx.clearRect(0, 0, this.rawNode.width, this.rawNode.height);\n\t\t\tthis.render(ctx);\n\t\t\tif(\"pendingRender\" in this){\n\t\t\t\tclearTimeout(this.pendingRender);\n\t\t\t\tdelete this.pendingRender;\n\t\t\t}\n\t\t},\n\t\trender: function(ctx){\n\t\t\t// summary:\n\t\t\t//\t\tRenders the gfx scene.\n\t\t\t// description:\n\t\t\t//\t\tthis method is called to render the gfx scene to the specified context.\n\t\t\t//\t\tThis method should not be invoked directly but should be used instead\n\t\t\t//\t\tas an extension point on which user can connect to with aspect.before/aspect.after\n\t\t\t//\t\tto implement pre- or post- image processing jobs on the drawing surface.\n\t\t\t// ctx: CanvasRenderingContext2D\n\t\t\t//\t\tThe surface Canvas rendering context.\n\t\t\tctx.save();\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\t\tthis.children[i]._render(ctx);\n\t\t\t}\n\t\t\tctx.restore();\n\t\t},\n\t\tmakeDirty: function(){\n\t\t\t// summary:\n\t\t\t//\t\tinternal method, which is called when we may need to redraw\n\t\t\tif(!this.pendingImagesCount && !(\"pendingRender\" in this) && !this._batch){\n\t\t\t\tthis.pendingRender = setTimeout(lang.hitch(this, this._render), 0);\n\t\t\t}\n\t\t},\n\t\tdownloadImage: function(img, url){\n\t\t\t// summary:\n\t\t\t//\t\tinternal method, which starts an image download and renders, when it is ready\n\t\t\t// img: Image\n\t\t\t//\t\tthe image object\n\t\t\t// url: String\n\t\t\t//\t\tthe url of the image\n\t\t\tvar handler = lang.hitch(this, this.onImageLoad);\n\t\t\tif(!this.pendingImageCount++ && \"pendingRender\" in this){\n\t\t\t\tclearTimeout(this.pendingRender);\n\t\t\t\tdelete this.pendingRender;\n\t\t\t}\n\t\t\timg.onload  = handler;\n\t\t\timg.onerror = handler;\n\t\t\timg.onabort = handler;\n\t\t\timg.src = url;\n\t\t},\n\t\tonImageLoad: function(){\n\t\t\tif(!--this.pendingImageCount){\n\t\t\t\tthis.onImagesLoaded();\n\t\t\t\tthis._render();\n\t\t\t}\n\t\t},\n\t\tonImagesLoaded: function(){\n\t\t\t// summary:\n\t\t\t//\t\tAn extension point called when all pending images downloads have been completed.\n\t\t\t// description:\n\t\t\t//\t\tThis method is invoked when all pending images downloads have been completed, just before\n\t\t\t//\t\tthe gfx scene is redrawn. User can connect to this method to get notified when a\n\t\t\t//\t\tgfx scene containing images is fully resolved.\n\t\t},\n\n\t\t// events are not implemented\n\t\tgetEventSource: function(){ return null; },\n\t\tconnect:\t\tfunction(){},\n\t\tdisconnect:\t\tfunction(){},\n\t\ton:\t\t\t\tfunction(){}\n\t});\n\n\tcanvas.createSurface = function(parentNode, width, height){\n\t\t// summary:\n\t\t//\t\tcreates a surface (Canvas)\n\t\t// parentNode: Node\n\t\t//\t\ta parent node\n\t\t// width: String\n\t\t//\t\twidth of surface, e.g., \"100px\"\n\t\t// height: String\n\t\t//\t\theight of surface, e.g., \"100px\"\n\n\t\tif(!width && !height){\n\t\t\tvar pos = domGeom.position(parentNode);\n\t\t\twidth  = width  || pos.w;\n\t\t\theight = height || pos.h;\n\t\t}\n\t\tif(typeof width == \"number\"){\n\t\t\twidth = width + \"px\";\n\t\t}\n\t\tif(typeof height == \"number\"){\n\t\t\theight = height + \"px\";\n\t\t}\n\n\t\tvar s = new canvas.Surface(),\n\t\t\tp = dom.byId(parentNode),\n\t\t\tc = p.ownerDocument.createElement(\"canvas\");\n\n\t\tc.width  = g.normalizedLength(width);\t// in pixels\n\t\tc.height = g.normalizedLength(height);\t// in pixels\n\n\t\tp.appendChild(c);\n\t\ts.rawNode = c;\n\t\ts._parent = p;\n\t\ts.surface = s;\n\t\treturn s;\t// dojox/gfx.Surface\n\t};\n\n\t// Extenders\n\n\tvar C = gs.Container, Container = {\n\t\topenBatch: function() {\n\t\t\t// summary:\n\t\t\t//\t\tstarts a new batch, subsequent new child shapes will be held in\n\t\t\t//\t\tthe batch instead of appending to the container directly.\n\t\t\t// description:\n\t\t\t//\t\tBecause the canvas renderer has no DOM hierarchy, the canvas implementation differs\n\t\t\t//\t\tsuch that it suspends the repaint requests for this container until the current batch is closed by a call to closeBatch().\n\t\t\t++this._batch;\n\t\t\treturn this;\n\t\t},\n\t\tcloseBatch: function() {\n\t\t\t// summary:\n\t\t\t//\t\tsubmits the current batch.\n\t\t\t// description:\n\t\t\t//\t\tOn canvas, this method flushes the pending redraws queue.\n\t\t\tthis._batch = this._batch > 0 ? --this._batch : 0;\n\t\t\tthis._makeDirty();\n\t\t\treturn this;\n\t\t},\n\t\t_makeDirty: function(){\n\t\t\tif(!this._batch){\n\t\t\t\tthis.surface.makeDirty();\n\t\t\t}\n\t\t},\n\t\tadd: function(shape){\n\t\t\tthis._makeDirty();\n\t\t\treturn C.add.apply(this, arguments);\n\t\t},\n\t\tremove: function(shape, silently){\n\t\t\tthis._makeDirty();\n\t\t\treturn C.remove.apply(this, arguments);\n\t\t},\n\t\tclear: function(){\n\t\t\tthis._makeDirty();\n\t\t\treturn C.clear.apply(this, arguments);\n\t\t},\n\t\tgetBoundingBox: C.getBoundingBox,\n\t\t_moveChildToFront: function(shape){\n\t\t\tthis._makeDirty();\n\t\t\treturn C._moveChildToFront.apply(this, arguments);\n\t\t},\n\t\t_moveChildToBack: function(shape){\n\t\t\tthis._makeDirty();\n\t\t\treturn C._moveChildToBack.apply(this, arguments);\n\t\t}\n\t};\n\n\tvar Creator = {\n\t\t// summary:\n\t\t//\t\tCanvas shape creators\n\t\tcreateObject: function(shapeType, rawShape) {\n\t\t\t// summary:\n\t\t\t//\t\tcreates an instance of the passed shapeType class\n\t\t\t// shapeType: Function\n\t\t\t//\t\ta class constructor to create an instance of\n\t\t\t// rawShape: Object\n\t\t\t//\t\tproperties to be passed in to the classes \"setShape\" method\n\t\t\t// overrideSize: Boolean\n\t\t\t//\t\tset the size explicitly, if true\n\t\t\tvar shape = new shapeType();\n\t\t\tshape.surface = this.surface;\n\t\t\tshape.setShape(rawShape);\n\t\t\tthis.add(shape);\n\t\t\treturn shape;\t// dojox/gfx/shape.Shape\n\t\t}\n\t};\n\n\textend(canvas.Group, Container);\n\textend(canvas.Group, gs.Creator);\n\textend(canvas.Group, Creator);\n\n\textend(canvas.Surface, Container);\n\textend(canvas.Surface, gs.Creator);\n\textend(canvas.Surface, Creator);\n\n\t// no event support -> nothing to fix.\n\tcanvas.fixTarget = function(event, gfxElement){\n\t\t// tags:\n\t\t//\t\tprivate\n\t\treturn true;\n\t};\n\n\treturn canvas;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/gfx/canvas.js\n// module id = 289\n// module chunks = 0","define([\"./_base\", \"dojo/_base/lang\", \"./matrix\"], \n  function(g, lang, m){\n\tvar twoPI = 2 * Math.PI, pi4 = Math.PI / 4, pi8 = Math.PI / 8,\n\t\tpi48 = pi4 + pi8, curvePI4 = unitArcAsBezier(pi8);\n\n\tfunction unitArcAsBezier(alpha){\n\t\t// summary:\n\t\t//\t\treturn a start point, 1st and 2nd control points, and an end point of\n\t\t//\t\ta an arc, which is reflected on the x axis\n\t\t// alpha: Number\n\t\t//\t\tangle in radians, the arc will be 2 * angle size\n\t\tvar cosa  = Math.cos(alpha), sina  = Math.sin(alpha),\n\t\t\tp2 = {x: cosa + (4 / 3) * (1 - cosa), y: sina - (4 / 3) * cosa * (1 - cosa) / sina};\n\t\treturn {\t// Object\n\t\t\ts:  {x: cosa, y: -sina},\n\t\t\tc1: {x: p2.x, y: -p2.y},\n\t\t\tc2: p2,\n\t\t\te:  {x: cosa, y: sina}\n\t\t};\n\t}\n\n\tvar arc = g.arc = {\n\t\t// summary:\n\t\t//\t\tThis module contains the core graphics Arc functions.\n\t\t\n\t\tunitArcAsBezier: unitArcAsBezier,\n\t\t/*===== \n\t\tunitArcAsBezier: function(alpha) {\n\t\t\t// summary:\n\t\t\t//\t\treturn a start point, 1st and 2nd control points, and an end point of\n\t\t\t//\t\ta an arc, which is reflected on the x axis\n\t\t\t// alpha: Number\n\t\t\t//\t\tangle in radians, the arc will be 2 * angle size\n\t\t},\n\t\t=====*/\n\n\t\t// curvePI4: Object\n\t\t//\t\tan object with properties of an arc around a unit circle from 0 to pi/4\n\t\tcurvePI4: curvePI4,\n\n\t\tarcAsBezier: function(last, rx, ry, xRotg, large, sweep, x, y){\n\t\t\t// summary:\n\t\t\t//\t\tcalculates an arc as a series of Bezier curves\n\t\t\t//\t\tgiven the last point and a standard set of SVG arc parameters,\n\t\t\t//\t\tit returns an array of arrays of parameters to form a series of\n\t\t\t//\t\tabsolute Bezier curves.\n\t\t\t// last: Object\n\t\t\t//\t\ta point-like object as a start of the arc\n\t\t\t// rx: Number\n\t\t\t//\t\ta horizontal radius for the virtual ellipse\n\t\t\t// ry: Number\n\t\t\t//\t\ta vertical radius for the virtual ellipse\n\t\t\t// xRotg: Number\n\t\t\t//\t\ta rotation of an x axis of the virtual ellipse in degrees\n\t\t\t// large: Boolean\n\t\t\t//\t\twhich part of the ellipse will be used (the larger arc if true)\n\t\t\t// sweep: Boolean\n\t\t\t//\t\tdirection of the arc (CW if true)\n\t\t\t// x: Number\n\t\t\t//\t\tthe x coordinate of the end point of the arc\n\t\t\t// y: Number\n\t\t\t//\t\tthe y coordinate of the end point of the arc\n\n\t\t\t// calculate parameters\n\t\t\tlarge = Boolean(large);\n\t\t\tsweep = Boolean(sweep);\n\t\t\tvar xRot = m._degToRad(xRotg),\n\t\t\t\trx2 = rx * rx, ry2 = ry * ry,\n\t\t\t\tpa = m.multiplyPoint(\n\t\t\t\t\tm.rotate(-xRot),\n\t\t\t\t\t{x: (last.x - x) / 2, y: (last.y - y) / 2}\n\t\t\t\t),\n\t\t\t\tpax2 = pa.x * pa.x, pay2 = pa.y * pa.y,\n\t\t\t\tc1 = Math.sqrt((rx2 * ry2 - rx2 * pay2 - ry2 * pax2) / (rx2 * pay2 + ry2 * pax2));\n\t\t\tif(isNaN(c1)){ c1 = 0; }\n\t\t\tvar\tca = {\n\t\t\t\t\tx:  c1 * rx * pa.y / ry,\n\t\t\t\t\ty: -c1 * ry * pa.x / rx\n\t\t\t\t};\n\t\t\tif(large == sweep){\n\t\t\t\tca = {x: -ca.x, y: -ca.y};\n\t\t\t}\n\t\t\t// the center\n\t\t\tvar c = m.multiplyPoint(\n\t\t\t\t[\n\t\t\t\t\tm.translate(\n\t\t\t\t\t\t(last.x + x) / 2,\n\t\t\t\t\t\t(last.y + y) / 2\n\t\t\t\t\t),\n\t\t\t\t\tm.rotate(xRot)\n\t\t\t\t],\n\t\t\t\tca\n\t\t\t);\n\t\t\t// calculate the elliptic transformation\n\t\t\tvar elliptic_transform = m.normalize([\n\t\t\t\tm.translate(c.x, c.y),\n\t\t\t\tm.rotate(xRot),\n\t\t\t\tm.scale(rx, ry)\n\t\t\t]);\n\t\t\t// start, end, and size of our arc\n\t\t\tvar inversed = m.invert(elliptic_transform),\n\t\t\t\tsp = m.multiplyPoint(inversed, last),\n\t\t\t\tep = m.multiplyPoint(inversed, x, y),\n\t\t\t\tstartAngle = Math.atan2(sp.y, sp.x),\n\t\t\t\tendAngle   = Math.atan2(ep.y, ep.x),\n\t\t\t\ttheta = startAngle - endAngle;\t// size of our arc in radians\n\t\t\tif(sweep){ theta = -theta; }\n\t\t\tif(theta < 0){\n\t\t\t\ttheta += twoPI;\n\t\t\t}else if(theta > twoPI){\n\t\t\t\ttheta -= twoPI;\n\t\t\t}\n\n\t\t\t// draw curve chunks\n\t\t\tvar alpha = pi8, curve = curvePI4, step  = sweep ? alpha : -alpha,\n\t\t\t\tresult = [];\n\t\t\tfor(var angle = theta; angle > 0; angle -= pi4){\n\t\t\t\tif(angle < pi48){\n\t\t\t\t\talpha = angle / 2;\n\t\t\t\t\tcurve = unitArcAsBezier(alpha);\n\t\t\t\t\tstep  = sweep ? alpha : -alpha;\n\t\t\t\t\tangle = 0;\t// stop the loop\n\t\t\t\t}\n\t\t\t\tvar c2, e, M = m.normalize([elliptic_transform, m.rotate(startAngle + step)]);\n\t\t\t\tif(sweep){\n\t\t\t\t\tc1 = m.multiplyPoint(M, curve.c1);\n\t\t\t\t\tc2 = m.multiplyPoint(M, curve.c2);\n\t\t\t\t\te  = m.multiplyPoint(M, curve.e );\n\t\t\t\t}else{\n\t\t\t\t\tc1 = m.multiplyPoint(M, curve.c2);\n\t\t\t\t\tc2 = m.multiplyPoint(M, curve.c1);\n\t\t\t\t\te  = m.multiplyPoint(M, curve.s );\n\t\t\t\t}\n\t\t\t\t// draw the curve\n\t\t\t\tresult.push([c1.x, c1.y, c2.x, c2.y, e.x, e.y]);\n\t\t\t\tstartAngle += 2 * step;\n\t\t\t}\n\t\t\treturn result;\t// Array\n\t\t}\n\t};\n\t\n\treturn arc;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/gfx/arc.js\n// module id = 290\n// module chunks = 0","define([\"./_base\", \"dojo/_base/lang\", \"./matrix\"], \n  function (g, lang, m){\n\tfunction eq(/* Number */ a, /* Number */ b){\n\t\t// summary:\n\t\t//\t\tcompare two FP numbers for equality\n\t\treturn Math.abs(a - b) <= 1e-6 * (Math.abs(a) + Math.abs(b));\t// Boolean\n\t}\n\n\tfunction calcFromValues(/* Number */ r1, /* Number */ m1, /* Number */ r2, /* Number */ m2){\n\t\t// summary:\n\t\t//\t\tuses two close FP ration and their original magnitudes to approximate the result\n\t\tif(!isFinite(r1)){\n\t\t\treturn r2;\t// Number\n\t\t}else if(!isFinite(r2)){\n\t\t\treturn r1;\t// Number\n\t\t}\n\t\tm1 = Math.abs(m1); m2 = Math.abs(m2);\n\t\treturn (m1 * r1 + m2 * r2) / (m1 + m2);\t// Number\n\t}\n\n\tfunction transpose(matrix){\n\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta 2D matrix-like object\n\t\tvar M = new m.Matrix2D(matrix);\n\t\treturn lang.mixin(M, {dx: 0, dy: 0, xy: M.yx, yx: M.xy});\t// dojox/gfx/matrix.Matrix2D\n\t}\n\n\tfunction scaleSign(/* dojox/gfx/matrix.Matrix2D */ matrix){\n\t\treturn (matrix.xx * matrix.yy < 0 || matrix.xy * matrix.yx > 0) ? -1 : 1;\t// Number\n\t}\n\n\tfunction eigenvalueDecomposition(matrix){\n\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta 2D matrix-like object\n\t\tvar M = m.normalize(matrix),\n\t\t\tb = -M.xx - M.yy,\n\t\t\tc = M.xx * M.yy - M.xy * M.yx,\n\t\t\td = Math.sqrt(b * b - 4 * c),\n\t\t\tl1 = -(b + (b < 0 ? -d : d)) / 2,\n\t\t\tl2 = c / l1,\n\t\t\tvx1 = M.xy / (l1 - M.xx), vy1 = 1,\n\t\t\tvx2 = M.xy / (l2 - M.xx), vy2 = 1;\n\t\tif(eq(l1, l2)){\n\t\t\tvx1 = 1, vy1 = 0, vx2 = 0, vy2 = 1;\n\t\t}\n\t\tif(!isFinite(vx1)){\n\t\t\tvx1 = 1, vy1 = (l1 - M.xx) / M.xy;\n\t\t\tif(!isFinite(vy1)){\n\t\t\t\tvx1 = (l1 - M.yy) / M.yx, vy1 = 1;\n\t\t\t\tif(!isFinite(vx1)){\n\t\t\t\t\tvx1 = 1, vy1 = M.yx / (l1 - M.yy);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!isFinite(vx2)){\n\t\t\tvx2 = 1, vy2 = (l2 - M.xx) / M.xy;\n\t\t\tif(!isFinite(vy2)){\n\t\t\t\tvx2 = (l2 - M.yy) / M.yx, vy2 = 1;\n\t\t\t\tif(!isFinite(vx2)){\n\t\t\t\t\tvx2 = 1, vy2 = M.yx / (l2 - M.yy);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar d1 = Math.sqrt(vx1 * vx1 + vy1 * vy1),\n\t\t\td2 = Math.sqrt(vx2 * vx2 + vy2 * vy2);\n\t\tif(!isFinite(vx1 /= d1)){ vx1 = 0; }\n\t\tif(!isFinite(vy1 /= d1)){ vy1 = 0; }\n\t\tif(!isFinite(vx2 /= d2)){ vx2 = 0; }\n\t\tif(!isFinite(vy2 /= d2)){ vy2 = 0; }\n\t\treturn {\t// Object\n\t\t\tvalue1: l1,\n\t\t\tvalue2: l2,\n\t\t\tvector1: {x: vx1, y: vy1},\n\t\t\tvector2: {x: vx2, y: vy2}\n\t\t};\n\t}\n\n\tfunction decomposeSR(/* dojox/gfx/matrix.Matrix2D */ M, /* Object */ result){\n\t\t// summary:\n\t\t//\t\tdecomposes a matrix into [scale, rotate]; no checks are done.\n\t\tvar sign = scaleSign(M),\n\t\t\ta = result.angle1 = (Math.atan2(M.yx, M.yy) + Math.atan2(-sign * M.xy, sign * M.xx)) / 2,\n\t\t\tcos = Math.cos(a), sin = Math.sin(a);\n\t\tresult.sx = calcFromValues(M.xx / cos, cos, -M.xy / sin, sin);\n\t\tresult.sy = calcFromValues(M.yy / cos, cos,  M.yx / sin, sin);\n\t\treturn result;\t// Object\n\t}\n\n\tfunction decomposeRS(/* dojox/gfx/matrix.Matrix2D */ M, /* Object */ result){\n\t\t// summary:\n\t\t//\t\tdecomposes a matrix into [rotate, scale]; no checks are done\n\t\tvar sign = scaleSign(M),\n\t\t\ta = result.angle2 = (Math.atan2(sign * M.yx, sign * M.xx) + Math.atan2(-M.xy, M.yy)) / 2,\n\t\t\tcos = Math.cos(a), sin = Math.sin(a);\n\t\tresult.sx = calcFromValues(M.xx / cos, cos,  M.yx / sin, sin);\n\t\tresult.sy = calcFromValues(M.yy / cos, cos, -M.xy / sin, sin);\n\t\treturn result;\t// Object\n\t}\n\n\treturn g.decompose = function(matrix){\n\t\t// summary:\n\t\t//\t\tDecompose a 2D matrix into translation, scaling, and rotation components.\n\t\t// description:\n\t\t//\t\tThis function decompose a matrix into four logical components:\n\t\t//\t\ttranslation, rotation, scaling, and one more rotation using SVD.\n\t\t//\t\tThe components should be applied in following order:\n\t\t//\t| [translate, rotate(angle2), scale, rotate(angle1)]\n\t\t// matrix: dojox/gfx/matrix.Matrix2D\n\t\t//\t\ta 2D matrix-like object\n\t\tvar M = m.normalize(matrix),\n\t\t\tresult = {dx: M.dx, dy: M.dy, sx: 1, sy: 1, angle1: 0, angle2: 0};\n\t\t// detect case: [scale]\n\t\tif(eq(M.xy, 0) && eq(M.yx, 0)){\n\t\t\treturn lang.mixin(result, {sx: M.xx, sy: M.yy});\t// Object\n\t\t}\n\t\t// detect case: [scale, rotate]\n\t\tif(eq(M.xx * M.yx, -M.xy * M.yy)){\n\t\t\treturn decomposeSR(M, result);\t// Object\n\t\t}\n\t\t// detect case: [rotate, scale]\n\t\tif(eq(M.xx * M.xy, -M.yx * M.yy)){\n\t\t\treturn decomposeRS(M, result);\t// Object\n\t\t}\n\t\t// do SVD\n\t\tvar\tMT = transpose(M),\n\t\t\tu  = eigenvalueDecomposition([M, MT]),\n\t\t\tv  = eigenvalueDecomposition([MT, M]),\n\t\t\tU  = new m.Matrix2D({xx: u.vector1.x, xy: u.vector2.x, yx: u.vector1.y, yy: u.vector2.y}),\n\t\t\tVT = new m.Matrix2D({xx: v.vector1.x, xy: v.vector1.y, yx: v.vector2.x, yy: v.vector2.y}),\n\t\t\tS = new m.Matrix2D([m.invert(U), M, m.invert(VT)]);\n\t\tdecomposeSR(VT, result);\n\t\tS.xx *= result.sx;\n\t\tS.yy *= result.sy;\n\t\tdecomposeRS(U, result);\n\t\tS.xx *= result.sx;\n\t\tS.yy *= result.sy;\n\t\treturn lang.mixin(result, {sx: S.xx, sy: S.yy});\t// Object\n\t};\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/gfx/decompose.js\n// module id = 291\n// module chunks = 0","define([\n\t\"./_base\"\n], function(gfx){\n\n\tvar bu = gfx.bezierutils = {},\n\t\terror = 0.1;\n\n\tvar tAtLength = bu.tAtLength = function(points, length){\n\t\t// summary:\n\t\t//\t\tReturns the t corresponding to the given length for the specified bezier curve.\n\t\t// points: Number[]\n\t\t//\t\tThe bezier points. Should be [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y] for a cubic\n\t\t//\t\tbezier curve or [p1x, p1y, cx, cy, p2x, p2y] for a quadratic bezier curve.\n\t\t// length: Number\n\t\t//\t\tThe length.\n\t\tvar t = 0,\n\t\t\tquadratic = points.length == 6,\n\t\t\tcurrentLen = 0,\n\t\t\tsplitCount = 0,\n\t\t\tsplitFunc = quadratic ? splitQBezierAtT : splitBezierAtT;\n\t\tvar _compute = function(p, error){\n\t\t\t// control points polygon length\n\t\t\tvar pLen = 0;\n\t\t\tfor(var i = 0; i < p.length-2; i+=2)\n\t\t\t\tpLen += distance(p[i],p[i+1],p[i+2],p[i+3]);\n\t\t\t// chord length\n\t\t\tvar chord = quadratic ?\n\t\t\t\tdistance(points[0],points[1],points[4],points[5]) :\n\t\t\t\tdistance(points[0],points[1],points[6],points[7]);\n\t\t\t// if needs more approx. or if currentLen is greater than the target length,\n\t\t\t// split the curve one more time\n\t\t\tif(pLen - chord > error || currentLen + pLen > length + error){\n\t\t\t\t++splitCount;\n\t\t\t\tvar newbezier = splitFunc(p, .5);\n\t\t\t\t// check 1st subpath\n\t\t\t\t_compute(newbezier[0], error);\n\t\t\t\t// the 1st subcurve was the good one, we stop\n\t\t\t\tif(Math.abs(currentLen - length) <= error){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// need to continue with the 2nde subcurve\n\t\t\t\t_compute(newbezier[1], error);\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tcurrentLen += pLen;\n\t\t\tt += 1.0 / (1 << splitCount);\n\t\t};\n\t\tif(length)\n\t\t\t_compute(points, 0.5);\n\t\treturn t;\n\t};\n\n\tvar computeLength = bu.computeLength = function(/*Array*/points){\n\t\t// summary:\n\t\t//\t\tReturns the length of the given bezier curve.\n\t\t// points: Number[]\n\t\t//\t\tThe bezier points. Should be [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y] for a cubic\n\t\t//\t\tbezier curve or [p1x, p1y, cx, cy, p2x, p2y] for a quadratic bezier curve.\n\n\t\tvar quadratic = points.length == 6, pLen=0;\n\t\t// control points polygon length\n\t\tfor(var i = 0; i < points.length-2; i+=2)\n\t\t\tpLen += distance(points[i],points[i+1],points[i+2],points[i+3]);\n\t\t// chord length\n\t\tvar chord = quadratic ?\n\t\t\tdistance(points[0],points[1],points[4],points[5]) :\n\t\t\tdistance(points[0],points[1],points[6],points[7]);\n\t\t// split polygons until the polygon and the chord are \"the same\"\n\t\tif(pLen-chord>error){\n\t\t\tvar newBeziers = quadratic ? splitQBezierAtT(points,.5) : splitCBezierAtT(points,.5);\n\t\t\tvar length = computeLength(newBeziers[0], quadratic);\n\t\t\tlength += computeLength(newBeziers[1], quadratic);\n\t\t\treturn length;\n\t\t}\n\t\t// pLen is close enough, done.\n\t\treturn pLen;\n\t};\n\n\tvar distance = bu.distance = function(x1, y1, x2, y2){\n\t\t// summary:\n\t\t//\t\tReturns the distance between the specified points.\n\t\treturn Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n\t};\n\n\tvar splitQBezierAtT = function(points, t){\n\t\t// summary:\n\t\t//\t\tSplit a quadratic bezier curve into 2 sub-quadratic beziers at the specified t.\n\n\t\t// de Casteljau\n\t\tvar r = 1-t,\n\t\t\tr2 = r*r,\n\t\t\tt2 = t*t,\n\t\t\tp1x = points[0],\n\t\t\tp1y = points[1],\n\t\t\tcx = points[2],\n\t\t\tcy = points[3],\n\t\t\tp2x = points[4],\n\t\t\tp2y = points[5],\n\n\t\t\tax = r*p1x + t*cx,\n\t\t\tay = r*p1y + t*cy,\n\t\t\tbx = r*cx + t*p2x,\n\t\t\tby = r*cy + t*p2y,\n\t\t\tpx = r2*p1x + 2*r*t*cx + t2*p2x,\n\t\t\tpy = r2*p1y + 2*r*t*cy + t2*p2y;\n\n\t\treturn [\n\t\t\t[\n\t\t\t\tp1x, p1y,\n\t\t\t\tax, ay,\n\t\t\t\tpx, py\n\t\t\t],\n\t\t\t[\n\t\t\t\tpx, py,\n\t\t\t\tbx, by,\n\t\t\t\tp2x, p2y\n\t\t\t]\n\t\t];\n\t};\n\n\tvar splitCBezierAtT = function(points, t){\n\t\t// summary:\n\t\t//\t\tSplit a cubic bezier curve into 2 sub-cubic beziers at the specified t.\n\n\t\t// de Casteljau\n\t\tvar r = 1-t,\n\t\t\tr2 = r*r,\n\t\t\tr3 = r2*r,\n\t\t\tt2 = t*t,\n\t\t\tt3 = t2*t,\n\t\t\tp1x = points[0],\n\t\t\tp1y = points[1],\n\t\t\tc1x = points[2],\n\t\t\tc1y = points[3],\n\t\t\tc2x = points[4],\n\t\t\tc2y = points[5],\n\t\t\tp2x = points[6],\n\t\t\tp2y = points[7],\n\n\t\t\tax = r*p1x + t*c1x,\n\t\t\tay = r*p1y + t*c1y,\n\t\t\tcx = r*c2x + t*p2x,\n\t\t\tcy = r*c2y + t*p2y,\n\t\t\tmx = r2*p1x + 2*r*t*c1x + t2*c2x,\n\t\t\tmy = r2*p1y + 2*r*t*c1y + t2*c2y,\n\t\t\tnx = r2*c1x + 2*r*t*c2x + t2*p2x,\n\t\t\tny = r2*c1y + 2*r*t*c2y + t2*p2y,\n\t\t\tpx = r3*p1x + 3*r2*t*c1x + 3*r*t2*c2x+t3*p2x,\n\t\t\tpy = r3*p1y + 3*r2*t*c1y + 3*r*t2*c2y+t3*p2y;\n\n\t\treturn [\n\t\t\t[\n\t\t\t\tp1x, p1y,\n\t\t\t\tax, ay,\n\t\t\t\tmx, my,\n\t\t\t\tpx, py\n\t\t\t],\n\t\t\t[\n\t\t\t\tpx, py,\n\t\t\t\tnx, ny,\n\t\t\t\tcx, cy,\n\t\t\t\tp2x, p2y\n\t\t\t]\n\t\t];\n\t};\n\n\tvar splitBezierAtT = bu.splitBezierAtT = function(points, t){\n\t\treturn points.length == 6 ? splitQBezierAtT(points, t) : splitCBezierAtT(points, t);\n\t};\n\treturn bu;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/gfx/bezierutils.js\n// module id = 292\n// module chunks = 0","define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"dojo/_base/array\", \"./lambda\"],\n\tfunction(kernel, lang, arr, df){\n\n// This module adds high-level functions and related constructs:\n//\t- array-processing functions similar to standard JS functions\n\n// Notes:\n//\t- this module provides JS standard methods similar to high-level functions in dojo/_base/array.js:\n//\t\tforEach, map, filter, every, some\n\n// Defined methods:\n//\t- take any valid lambda argument as the functional argument\n//\t- operate on dense arrays\n//\t- take a string as the array argument\n//\t- take an iterator objects as the array argument\n\n\tvar empty = {};\n\n\tlang.mixin(df, {\n\t\t// JS 1.6 standard array functions, which can take a lambda as a parameter.\n\t\t// Consider using dojo._base.array functions, if you don't need the lambda support.\n\t\tfilter: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a new array with all elements that pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t = [], v, i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\n\t\t\t\t\tv = a[i];\n\t\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\n\t\t\t\t}\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext();){\n\t\t\t\t\tv = a.next();\n\t\t\t\t\tif(f.call(o, v, i++, a)){ t.push(v); }\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tv = a[i];\n\t\t\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\t// Array\n\t\t},\n\t\tforEach: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\texecutes a provided function once per array element.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; f.call(o, a[i], i, a), ++i);\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext(); f.call(o, a.next(), i++, a));\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tf.call(o, a[i], i, a);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn o;\t// Object\n\t\t},\n\t\tmap: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates a new array with the results of calling\n\t\t\t//\t\ta provided function on every element in this array.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t, n, i;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tt = new Array(n = a.length);\n\t\t\t\tfor(i = 0; i < n; t[i] = f.call(o, a[i], i, a), ++i);\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tt = [];\n\t\t\t\tfor(i = 0; a.hasNext(); t.push(f.call(o, a.next(), i++, a)));\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tt = [];\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tt.push(f.call(o, a[i], i, a));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\t// Array\n\t\t},\n\t\tevery: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\ttests whether all elements in the array pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\n\t\t\t\t\tif(!f.call(o, a[i], i, a)){\n\t\t\t\t\t\treturn false;\t// Boolean\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext();){\n\t\t\t\t\tif(!f.call(o, a.next(), i++, a)){\n\t\t\t\t\t\treturn false;\t// Boolean\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tif(!f.call(o, a[i], i, a)){\n\t\t\t\t\t\t\treturn false;\t// Boolean\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\t// Boolean\n\t\t},\n\t\tsome: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\ttests whether some element in the array passes the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\n\t\t\t\t\tif(f.call(o, a[i], i, a)){\n\t\t\t\t\t\treturn true;\t// Boolean\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext();){\n\t\t\t\t\tif(f.call(o, a.next(), i++, a)){\n\t\t\t\t\t\treturn true;\t// Boolean\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tif(f.call(o, a[i], i, a)){\n\t\t\t\t\t\t\treturn true;\t// Boolean\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\t// Boolean\n\t\t}\n\t});\n\t\n\treturn df;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/lang/functional/array.js\n// module id = 293\n// module chunks = 0","define([\"dojo/_base/kernel\", \"dojo/_base/lang\", \"./lambda\"], function(kernel, lang, df){\n\n// This module adds high-level functions and related constructs:\n//\t- object/dictionary helpers\n\n// Defined methods:\n//\t- take any valid lambda argument as the functional argument\n//\t- skip all attributes that are present in the empty object\n//\t\t(IE and/or 3rd-party libraries).\n\n\tvar empty = {};\n\n\tlang.mixin(df, {\n\t\t// object helpers\n\t\tkeys: function(/*Object*/ obj){\n\t\t\t// summary:\n\t\t\t//\t\treturns an array of all keys in the object\n\t\t\tvar t = [];\n\t\t\tfor(var i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tt.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\tt; // Array\n\t\t},\n\t\tvalues: function(/*Object*/ obj){\n\t\t\t// summary:\n\t\t\t//\t\treturns an array of all values in the object\n\t\t\tvar t = [];\n\t\t\tfor(var i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tt.push(obj[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\tt; // Array\n\t\t},\n\t\tfilterIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates new object with all attributes that pass the test\n\t\t\t//\t\timplemented by the provided function.\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t = {}, v, i;\n\t\t\tfor(i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tv = obj[i];\n\t\t\t\t\tif(f.call(o, v, i, obj)){ t[i] = v; }\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\t// Object\n\t\t},\n\t\tforIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\titerates over all object attributes.\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tf.call(o, obj[i], i, obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn o;\t// Object\n\t\t},\n\t\tmapIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tcreates new object with the results of calling\n\t\t\t//\t\ta provided function on every attribute in this object.\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar t = {}, i;\n\t\t\tfor(i in obj){\n\t\t\t\tif(!(i in empty)){\n\t\t\t\t\tt[i] = f.call(o, obj[i], i, obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn t;\t// Object\n\t\t}\n\t});\n\t\n\treturn df;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/lang/functional/object.js\n// module id = 294\n// module chunks = 0","define([\"dojo/_base/lang\"], \n  function(lang){\n\tvar primitive = lang.getObject(\"dojox.charting.scaler.primitive\", true);\n\treturn lang.mixin(primitive, {\n\t\tbuildScaler: function(/*Number*/ min, /*Number*/ max, /*Number*/ span, /*Object*/ kwArgs){\n\t\t\tif(min == max){\n\t\t\t\t// artificially extend bounds\n\t\t\t\tmin -= 0.5;\n\t\t\t\tmax += 0.5;\n\t\t\t\t// now the line will be centered\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tbounds: {\n\t\t\t\t\tlower: min,\n\t\t\t\t\tupper: max,\n\t\t\t\t\tfrom:  min,\n\t\t\t\t\tto:    max,\n\t\t\t\t\tscale: span / (max - min),\n\t\t\t\t\tspan:  span\n\t\t\t\t},\n\t\t\t\tscaler: primitive\n\t\t\t};\n\t\t},\n\t\tbuildTicks: function(/*Object*/ scaler, /*Object*/ kwArgs){\n\t\t\treturn {major: [], minor: [], micro: []};\t// Object\n\t\t},\n\t\tgetTransformerFromModel: function(/*Object*/ scaler){\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\n\t\t\treturn function(x){ return (x - offset) * scale; };\t// Function\n\t\t},\n\t\tgetTransformerFromPlot: function(/*Object*/ scaler){\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\n\t\t\treturn function(x){ return x / scale + offset; };\t// Function\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/scaler/primitive.js\n// module id = 295\n// module chunks = 0","define([\"../main\", \"dojo/_base/lang\", \"dojo/_base/array\",\"dojo/_base/declare\", \"dojo/dom-style\",\n\t\"dojo/dom\", \"dojo/dom-geometry\", \"dojo/dom-construct\",\"dojo/_base/Color\", \"dojo/sniff\",\n\t\"./Element\", \"./SimpleTheme\", \"./Series\", \"./axis2d/common\", \"dojox/gfx/shape\",\n\t\"dojox/gfx\", \"dojo/has!dojo-bidi?./bidi/Chart\", \"dojox/lang/functional\", \"dojox/lang/functional/fold\", \"dojox/lang/functional/reversed\"],\n\tfunction(dojox, lang, arr, declare, domStyle,\n\t \t\t dom, domGeom, domConstruct, Color, has,\n\t \t\t Element, SimpleTheme, Series, common, shape,\n\t \t\t g, BidiChart, func){\n\t/*=====\n\tvar __ChartCtorArgs = {\n\t\t// summary:\n\t\t//\t\tThe keyword arguments that can be passed in a Chart constructor.\n\t\t// margins: Object?\n\t\t//\t\tOptional margins for the chart, in the form of { l, t, r, b}.\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tAn optional outline/stroke for the chart.\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tAn optional fill for the chart.\n\t\t// delayInMs: Number\n\t\t//\t\tDelay in ms for delayedRender(). Default: 200.\n\t};\n\t=====*/\n\n\t/*=====\n\tvar __SeriesCtorArgs = {\n\t\t// summary:\n\t\t//\t\tAn optional arguments object that can be used in the Series constructor.\n\t\t// plot: String?\n\t\t//\t\tThe plot (by name) that this series belongs to.\n\t};\n\t=====*/\n\n\t/*=====\n\tvar __BaseAxisCtorArgs = {\n\t\t// summary:\n\t\t//\t\tOptional arguments used in the definition of an invisible axis.\n\t\t// vertical: Boolean?\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\n\t\t// min: Number?\n\t\t//\t\tThe smallest value on an axis. Default is 0.\n\t\t// max: Number?\n\t\t//\t\tThe largest value on an axis. Default is 1.\n\t};\n\t=====*/\n\n\tvar dc = lang.getObject(\"charting\", true, dojox),\n\t\tclear = func.lambda(\"item.clear()\"),\n\t\tpurge = func.lambda(\"item.purgeGroup()\"),\n\t\tdestroy = func.lambda(\"item.destroy()\"),\n\t\tmakeClean = func.lambda(\"item.dirty = false\"),\n\t\tmakeDirty = func.lambda(\"item.dirty = true\"),\n\t\tgetName = func.lambda(\"item.name\"),\n\t\tdefaultMargins = {l: 10, t: 10, r: 10, b: 10};\n\n\tvar Chart = declare(has(\"dojo-bidi\")? \"dojox.charting.NonBidiChart\" : \"dojox.charting.Chart\", null, {\n\t\t// summary:\n\t\t//\t\tThe main chart object in dojox.charting.  This will create a two dimensional\n\t\t//\t\tchart based on dojox.gfx.\n\t\t//\n\t\t// description:\n\t\t//\t\tdojox.charting.Chart is the primary object used for any kind of charts.  It\n\t\t//\t\tis simple to create--just pass it a node reference, which is used as the\n\t\t//\t\tcontainer for the chart--and a set of optional keyword arguments and go.\n\t\t//\n\t\t//\t\tNote that like most of dojox.gfx, most of dojox.charting.Chart's methods are\n\t\t//\t\tdesigned to return a reference to the chart itself, to allow for functional\n\t\t//\t\tchaining.  This makes defining everything on a Chart very easy to do.\n\t\t//\n\t\t// example:\n\t\t//\t\tCreate an area chart, with smoothing.\n\t\t//\t|\trequire([\"dojox/charting/Chart\", \"dojox/charting/themes/Shrooms\", \"dojox/charting/plot2d/Areas\", ...],\n\t\t// \t|\t\tfunction(Chart, Shrooms, Areas, ...){\n\t\t//\t|\t\tnew Chart(node)\n\t\t//\t|\t\t\t.addPlot(\"default\", { type: Areas, tension: \"X\" })\n\t\t//\t|\t\t\t.setTheme(Shrooms)\n\t\t//\t|\t\t\t.addSeries(\"Series A\", [1, 2, 0.5, 1.5, 1, 2.8, 0.4])\n\t\t//\t|\t\t\t.addSeries(\"Series B\", [2.6, 1.8, 2, 1, 1.4, 0.7, 2])\n\t\t//\t|\t\t\t.addSeries(\"Series C\", [6.3, 1.8, 3, 0.5, 4.4, 2.7, 2])\n\t\t//\t|\t\t\t.render();\n\t\t//\t|\t});\n\t\t//\n\t\t// example:\n\t\t//\t\tThe form of data in a data series can take a number of forms: a simple array,\n\t\t//\t\tan array of objects {x,y}, or something custom (as determined by the plot).\n\t\t//\t\tHere's an example of a Candlestick chart, which expects an object of\n\t\t//\t\t{ open, high, low, close }.\n\t\t//\t|\trequire([\"dojox/charting/Chart\", \"dojox/charting/plot2d/Candlesticks\", ...],\n\t\t// \t|\t\tfunction(Chart, Candlesticks, ...){\n\t\t//\t|\t\tnew Chart(node)\n\t\t//\t|\t\t\t.addPlot(\"default\", {type: Candlesticks, gap: 1})\n\t\t//\t|\t\t\t.addAxis(\"x\", {fixLower: \"major\", fixUpper: \"major\", includeZero: true})\n\t\t//\t|\t\t\t.addAxis(\"y\", {vertical: true, fixLower: \"major\", fixUpper: \"major\", natural: true})\n\t\t//\t|\t\t\t.addSeries(\"Series A\", [\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 22, high: 26, low: 6, mid: 18 },\n\t\t//\t|\t\t\t\t\t{ open: 22, close: 18, high: 22, low: 11, mid: 21 },\n\t\t//\t|\t\t\t\t\t{ open: 18, close: 29, high: 32, low: 14, mid: 27 },\n\t\t//\t|\t\t\t\t\t{ open: 29, close: 24, high: 29, low: 13, mid: 27 },\n\t\t//\t|\t\t\t\t\t{ open: 24, close: 8, high: 24, low: 5 },\n\t\t//\t|\t\t\t\t\t{ open: 8, close: 16, high: 22, low: 2 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 12, high: 19, low: 7 },\n\t\t//\t|\t\t\t\t\t{ open: 12, close: 20, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 22, high: 26, low: 6, mid: 18 },\n\t\t//\t|\t\t\t\t\t{ open: 22, close: 18, high: 22, low: 11, mid: 21 },\n\t\t//\t|\t\t\t\t\t{ open: 18, close: 29, high: 32, low: 14, mid: 27 },\n\t\t//\t|\t\t\t\t\t{ open: 29, close: 24, high: 29, low: 13, mid: 27 },\n\t\t//\t|\t\t\t\t\t{ open: 24, close: 8, high: 24, low: 5 },\n\t\t//\t|\t\t\t\t\t{ open: 8, close: 16, high: 22, low: 2 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 12, high: 19, low: 7 },\n\t\t//\t|\t\t\t\t\t{ open: 12, close: 20, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 22, high: 26, low: 6 },\n\t\t//\t|\t\t\t\t\t{ open: 22, close: 18, high: 22, low: 11 },\n\t\t//\t|\t\t\t\t\t{ open: 18, close: 29, high: 32, low: 14 },\n\t\t//\t|\t\t\t\t\t{ open: 29, close: 24, high: 29, low: 13 },\n\t\t//\t|\t\t\t\t\t{ open: 24, close: 8, high: 24, low: 5 },\n\t\t//\t|\t\t\t\t\t{ open: 8, close: 16, high: 22, low: 2 },\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 12, high: 19, low: 7 },\n\t\t//\t|\t\t\t\t\t{ open: 12, close: 20, high: 22, low: 8 },\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 }\n\t\t//\t|\t\t\t\t],\n\t\t//\t|\t\t\t\t{ stroke: { color: \"green\" }, fill: \"lightgreen\" }\n\t\t//\t|\t\t\t)\n\t\t//\t|\t\t\t.render();\n\t\t//\t|\t});\n\t\t\n\t\t// theme: dojox/charting/SimpleTheme?\n\t\t//\t\tAn optional theme to use for styling the chart.\n\t\t// axes: dojox/charting/axis2d/Base{}?\n\t\t//\t\tA map of axes for use in plotting a chart.\n\t\t// stack: dojox/charting/plot2d/Base[]\n\t\t//\t\tA stack of plotters.\n\t\t// plots: dojox/charting/plot2d/Base{}\n\t\t//\t\tA map of plotter indices\n\t\t// series: dojox/charting/Series[]\n\t\t//\t\tThe stack of data runs used to create plots.\n\t\t// runs: dojox/charting/Series{}\n\t\t//\t\tA map of series indices\n\t\t// margins: Object?\n\t\t//\t\tThe margins around the chart. Default is { l:10, t:10, r:10, b:10 }.\n\t\t// stroke: dojox.gfx.Stroke?\n\t\t//\t\tThe outline of the chart (stroke in vector graphics terms).\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tThe color for the chart.\n\t\t// node: DOMNode\n\t\t//\t\tThe container node passed to the constructor.\n\t\t// surface: dojox/gfx/shape.Surface\n\t\t//\t\tThe main graphics surface upon which a chart is drawn.\n\t\t// dirty: Boolean\n\t\t//\t\tA boolean flag indicating whether or not the chart needs to be updated/re-rendered.\n\t\t// htmlLabels: Boolean\n\t\t//\t\tA boolean flag indicating whether or not it should try to use HTML-based labels for the title or not.\n\t\t//\t\tThe default is true.  The only caveat is IE and Opera browsers will always use GFX-based labels.\n\n\t\tconstructor: function(/* DOMNode */node, /* __ChartCtorArgs? */kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a new Chart.  Initializes all parameters used for a chart.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tThe newly created chart.\n\n\t\t\t// initialize parameters\n\t\t\tif(!kwArgs){ kwArgs = {}; }\n\t\t\tthis.margins = kwArgs.margins || defaultMargins;\n\t\t\tthis._customMargins = !!kwArgs.margins;\n\t\t\tthis.stroke    = kwArgs.stroke;\n\t\t\tthis.fill      = kwArgs.fill;\n\t\t\tthis.delayInMs = kwArgs.delayInMs || 200;\n\t\t\tthis.title     = kwArgs.title;\n\t\t\tthis.titleGap  = kwArgs.titleGap;\n\t\t\tthis.titlePos  = kwArgs.titlePos;\n\t\t\tthis.titleFont = kwArgs.titleFont;\n\t\t\tthis.titleFontColor = kwArgs.titleFontColor;\n\t\t\tthis.titleAlign = kwArgs.titleAlign; // This can be middle, left, right, or edge \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t // edge is left or right aligned with chart plot edge depending on bidi.\n\t\t\tthis.chartTitle = null;\n\t\t\tthis.htmlLabels = true;\n\t\t\tif(\"htmlLabels\" in kwArgs){\n\t\t\t\tthis.htmlLabels = kwArgs.htmlLabels;\n\t\t\t}\n\n\t\t\t// default initialization\n\t\t\tthis.theme = null;\n\t\t\tthis.axes = {};\t\t// map of axes\n\t\t\tthis.stack = [];\t// stack of plotters\n\t\t\tthis.plots = {};\t// map of plotter indices\n\t\t\tthis.series = [];\t// stack of data runs\n\t\t\tthis.runs = {};\t\t// map of data run indices\n\t\t\tthis.dirty = true;\n\n\t\t\t// create a surface\n\t\t\tthis.node = dom.byId(node);\n\t\t\tvar box = domGeom.getMarginBox(node);\n\t\t\tthis.surface = g.createSurface(this.node, box.w || 400, box.h || 300);\n\t\t\tif(this.surface.declaredClass.indexOf(\"vml\") == -1){\n\t\t\t\t// except if vml use native clipping\n\t\t\t\tthis._nativeClip = true;\n\t\t\t}\n\t\t},\n\t\tdestroy: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCleanup when a chart is to be destroyed.\n\t\t\t// returns: void\n\t\t\tarr.forEach(this.series, destroy);\n\t\t\tarr.forEach(this.stack,  destroy);\n\t\t\tfunc.forIn(this.axes, destroy);\n\t\t\tthis.surface.destroy();\n\t\t\tif(this.chartTitle && this.chartTitle.tagName){\n\t\t\t\t// destroy title if it is a DOM node\n\t\t\t\tdomConstruct.destroy(this.chartTitle);\n\t\t\t}\n\t\t},\n\t\tgetCoords: function(){\n\t\t\t// summary:\n\t\t\t//\t\tGet the coordinates and dimensions of the containing DOMNode, as\n\t\t\t//\t\treturned by dojo.coords.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe resulting coordinates of the chart.  See dojo.coords for details.\n\t\t\tvar node = this.node;\n\t\t\tvar s = domStyle.getComputedStyle(node), coords = domGeom.getMarginBox(node, s);\n\t\t\tvar abs = domGeom.position(node, true);\n\t\t\tcoords.x = abs.x;\n\t\t\tcoords.y = abs.y;\n\t\t\treturn coords;\t//\tObject\n\t\t},\n\t\tsetTheme: function(theme){\n\t\t\t// summary:\n\t\t\t//\t\tSet a theme of the chart.\n\t\t\t// theme: dojox/charting/SimpleTheme\n\t\t\t//\t\tThe theme to be used for visual rendering.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tthis.theme = theme.clone();\n\t\t\tif(!this._customMargins){\n\t\t\t\tthis.margins = this.theme.chart.margins || defaultMargins;\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\taddAxis: function(name, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tAdd an axis to the chart, for rendering.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the axis.\n\t\t\t// kwArgs: __BaseAxisCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object for use in defining details of an axis.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar axis, axisType = kwArgs && kwArgs.type || \"Default\";\n\t\t\tif(typeof axisType == \"string\"){\n\t\t\t\tif(!dc.axis2d || !dc.axis2d[axisType]){\n\t\t\t\t\tthrow Error(\"Can't find axis: \" + axisType + \" - Check \" + \"require() dependencies.\");\n\t\t\t\t}\n\t\t\t\taxis = new dc.axis2d[axisType](this, kwArgs);\n\t\t\t}else{\n\t\t\t\taxis = new axisType(this, kwArgs);\n\t\t\t}\n\t\t\taxis.name = name;\n\t\t\taxis.dirty = true;\n\t\t\tif(name in this.axes){\n\t\t\t\tthis.axes[name].destroy();\n\t\t\t}\n\t\t\tthis.axes[name] = axis;\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetAxis: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tGet the given axis, by name.\n\t\t\t// name: String\n\t\t\t//\t\tThe name the axis was defined by.\n\t\t\t// returns: dojox/charting/axis2d/Default\n\t\t\t//\t\tThe axis as stored in the chart's axis map.\n\t\t\treturn this.axes[name];\t//\tdojox/charting/axis2d/Default\n\t\t},\n\t\tremoveAxis: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tRemove the axis that was defined using name.\n\t\t\t// name: String\n\t\t\t//\t\tThe axis name, as defined in addAxis.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.axes){\n\t\t\t\t// destroy the axis\n\t\t\t\tthis.axes[name].destroy();\n\t\t\t\tdelete this.axes[name];\n\t\t\t\t// mark the chart as dirty\n\t\t\t\tthis.dirty = true;\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\taddPlot: function(name, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a new plot to the chart, defined by name and using the optional keyword arguments object.\n\t\t\t//\t\tNote that dojox.charting assumes the main plot to be called \"default\"; if you do not have\n\t\t\t//\t\ta plot called \"default\" and attempt to add data series to the chart without specifying the\n\t\t\t//\t\tplot to be rendered on, you WILL get errors.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the plot to be added to the chart.  If you only plan on using one plot, call it \"default\".\n\t\t\t// kwArgs: dojox.charting.plot2d.__PlotCtorArgs\n\t\t\t//\t\tAn object with optional parameters for the plot in question.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar plot, plotType = kwArgs && kwArgs.type || \"Default\";\n\t\t\tif(typeof plotType == \"string\"){\n\t\t\t\tif(!dc.plot2d || !dc.plot2d[plotType]){\n\t\t\t\t\tthrow Error(\"Can't find plot: \" + plotType + \" - didn't you forget to dojo\" + \".require() it?\");\n\t\t\t\t}\n\t\t\t\tplot = new dc.plot2d[plotType](this, kwArgs);\n\t\t\t}else{\n\t\t\t\tplot = new plotType(this, kwArgs);\n\t\t\t}\n\t\t\tplot.name = name;\n\t\t\tplot.dirty = true;\n\t\t\tif(name in this.plots){\n\t\t\t\tthis.stack[this.plots[name]].destroy();\n\t\t\t\tthis.stack[this.plots[name]] = plot;\n\t\t\t}else{\n\t\t\t\tthis.plots[name] = this.stack.length;\n\t\t\t\tthis.stack.push(plot);\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetPlot: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tGet the given plot, by name.\n\t\t\t// name: String\n\t\t\t//\t\tThe name the plot was defined by.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tThe plot.\n\t\t\treturn this.stack[this.plots[name]];\n\t\t},\n\t\tremovePlot: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tRemove the plot defined using name from the chart's plot stack.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the plot as defined using addPlot.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.plots){\n\t\t\t\t// get the index and remove the name\n\t\t\t\tvar index = this.plots[name];\n\t\t\t\tdelete this.plots[name];\n\t\t\t\t// destroy the plot\n\t\t\t\tthis.stack[index].destroy();\n\t\t\t\t// remove the plot from the stack\n\t\t\t\tthis.stack.splice(index, 1);\n\t\t\t\t// update indices to reflect the shift\n\t\t\t\tfunc.forIn(this.plots, function(idx, name, plots){\n\t\t\t\t\tif(idx > index){\n\t\t\t\t\t\tplots[name] = idx - 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// remove all related series\n\t\t\t\tvar ns = arr.filter(this.series, function(run){ return run.plot != name; });\n\t\t\t\tif(ns.length < this.series.length){\n\t\t\t\t\t// kill all removed series\n\t\t\t\t\tarr.forEach(this.series, function(run){\n\t\t\t\t\t\tif(run.plot == name){\n\t\t\t\t\t\t\trun.destroy();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t// rebuild all necessary data structures\n\t\t\t\t\tthis.runs = {};\n\t\t\t\t\tarr.forEach(ns, function(run, index){\n\t\t\t\t\t\tthis.runs[run.plot] = index;\n\t\t\t\t\t}, this);\n\t\t\t\t\tthis.series = ns;\n\t\t\t\t}\n\t\t\t\t// mark the chart as dirty\n\t\t\t\tthis.dirty = true;\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetPlotOrder: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns an array of plot names in the current order\n\t\t\t//\t\t(the top-most plot is the first).\n\t\t\t// returns: Array\n\t\t\treturn func.map(this.stack, getName); // Array\n\t\t},\n\t\tsetPlotOrder: function(newOrder){\n\t\t\t// summary:\n\t\t\t//\t\tSets new order of plots. newOrder cannot add or remove\n\t\t\t//\t\tplots. Wrong names, or dups are ignored.\n\t\t\t// newOrder: Array\n\t\t\t//\t\tArray of plot names compatible with getPlotOrder().\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar names = {},\n\t\t\t\torder = func.filter(newOrder, function(name){\n\t\t\t\t\tif(!(name in this.plots) || (name in names)){\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tnames[name] = 1;\n\t\t\t\t\treturn true;\n\t\t\t\t}, this);\n\t\t\tif(order.length < this.stack.length){\n\t\t\t\tfunc.forEach(this.stack, function(plot){\n\t\t\t\t\tvar name = plot.name;\n\t\t\t\t\tif(!(name in names)){\n\t\t\t\t\t\torder.push(name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar newStack = func.map(order, function(name){\n\t\t\t\t\treturn this.stack[this.plots[name]];\n\t\t\t\t}, this);\n\t\t\tfunc.forEach(newStack, function(plot, i){\n\t\t\t\tthis.plots[plot.name] = i;\n\t\t\t}, this);\n\t\t\tthis.stack = newStack;\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tmovePlotToFront: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tMoves a given plot to front.\n\t\t\t// name: String\n\t\t\t//\t\tPlot's name to move.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.plots){\n\t\t\t\tvar index = this.plots[name];\n\t\t\t\tif(index){\n\t\t\t\t\tvar newOrder = this.getPlotOrder();\n\t\t\t\t\tnewOrder.splice(index, 1);\n\t\t\t\t\tnewOrder.unshift(name);\n\t\t\t\t\treturn this.setPlotOrder(newOrder);\t//\tdojox/charting/Chart\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tmovePlotToBack: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tMoves a given plot to back.\n\t\t\t// name: String\n\t\t\t//\t\tPlot's name to move.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.plots){\n\t\t\t\tvar index = this.plots[name];\n\t\t\t\tif(index < this.stack.length - 1){\n\t\t\t\t\tvar newOrder = this.getPlotOrder();\n\t\t\t\t\tnewOrder.splice(index, 1);\n\t\t\t\t\tnewOrder.push(name);\n\t\t\t\t\treturn this.setPlotOrder(newOrder);\t//\tdojox/charting/Chart\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\taddSeries: function(name, data, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a data series to the chart for rendering.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the data series to be plotted.\n\t\t\t// data: Array|Object\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\n\t\t\t//\t\tdestroy(), and setSeriesObject().\n\t\t\t// kwArgs: __SeriesCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object that will be mixed into\n\t\t\t//\t\tthe resultant series object.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar run = new Series(this, data, kwArgs);\n\t\t\trun.name = name;\n\t\t\tif(name in this.runs){\n\t\t\t\tthis.series[this.runs[name]].destroy();\n\t\t\t\tthis.series[this.runs[name]] = run;\n\t\t\t}else{\n\t\t\t\tthis.runs[name] = this.series.length;\n\t\t\t\tthis.series.push(run);\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\t// fix min/max\n\t\t\tif(!(\"ymin\" in run) && \"min\" in run){ run.ymin = run.min; }\n\t\t\tif(!(\"ymax\" in run) && \"max\" in run){ run.ymax = run.max; }\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetSeries: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tGet the given series, by name.\n\t\t\t// name: String\n\t\t\t//\t\tThe name the series was defined by.\n\t\t\t// returns: dojox/charting/Series\n\t\t\t//\t\tThe series.\n\t\t\treturn this.series[this.runs[name]];\n\t\t},\n\t\tremoveSeries: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tRemove the series defined by name from the chart.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the series as defined by addSeries.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.runs){\n\t\t\t\t// get the index and remove the name\n\t\t\t\tvar index = this.runs[name];\n\t\t\t\tdelete this.runs[name];\n\t\t\t\t// destroy the run\n\t\t\t\tthis.series[index].destroy();\n\t\t\t\t// remove the run from the stack of series\n\t\t\t\tthis.series.splice(index, 1);\n\t\t\t\t// update indices to reflect the shift\n\t\t\t\tfunc.forIn(this.runs, function(idx, name, runs){\n\t\t\t\t\tif(idx > index){\n\t\t\t\t\t\truns[name] = idx - 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.dirty = true;\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tupdateSeries: function(name, data, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tUpdate the given series with a new set of data points.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the series as defined in addSeries.\n\t\t\t// data: Array|Object\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\n\t\t\t//\t\tdestroy(), and setSeriesObject().\n\t\t\t// offsets: Boolean?\n\t\t\t//\t\tIf true recomputes the offsets of the chart based on the new\n\t\t\t//\t\tdata. This is useful if the range of data is drastically changing\n\t\t\t//\t\tand offsets need to be recomputed.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.runs){\n\t\t\t\tvar run = this.series[this.runs[name]];\n\t\t\t\trun.update(data);\n\t\t\t\tif(offsets){\n\t\t\t\t\tthis.dirty = true;\n\t\t\t\t}else{\n\t\t\t\t\tthis._invalidateDependentPlots(run.plot, false);\n\t\t\t\t\tthis._invalidateDependentPlots(run.plot, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tgetSeriesOrder: function(plotName){\n\t\t\t// summary:\n\t\t\t//\t\tReturns an array of series names in the current order\n\t\t\t//\t\t(the top-most series is the first) within a plot.\n\t\t\t// plotName: String\n\t\t\t//\t\tPlot's name.\n\t\t\t// returns: Array\n\t\t\treturn func.map(func.filter(this.series, function(run){\n\t\t\t\t\treturn run.plot == plotName;\n\t\t\t\t}), getName);\n\t\t},\n\t\tsetSeriesOrder: function(newOrder){\n\t\t\t// summary:\n\t\t\t//\t\tSets new order of series within a plot. newOrder cannot add\n\t\t\t//\t\tor remove series. Wrong names, or dups are ignored.\n\t\t\t// newOrder: Array\n\t\t\t//\t\tArray of series names compatible with getPlotOrder(). All\n\t\t\t//\t\tseries should belong to the same plot.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar plotName, names = {},\n\t\t\t\torder = func.filter(newOrder, function(name){\n\t\t\t\t\tif(!(name in this.runs) || (name in names)){\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tvar run = this.series[this.runs[name]];\n\t\t\t\t\tif(plotName){\n\t\t\t\t\t\tif(run.plot != plotName){\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tplotName = run.plot;\n\t\t\t\t\t}\n\t\t\t\t\tnames[name] = 1;\n\t\t\t\t\treturn true;\n\t\t\t\t}, this);\n\t\t\tfunc.forEach(this.series, function(run){\n\t\t\t\tvar name = run.name;\n\t\t\t\tif(!(name in names) && run.plot == plotName){\n\t\t\t\t\torder.push(name);\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar newSeries = func.map(order, function(name){\n\t\t\t\t\treturn this.series[this.runs[name]];\n\t\t\t\t}, this);\n\t\t\tthis.series = newSeries.concat(func.filter(this.series, function(run){\n\t\t\t\treturn run.plot != plotName;\n\t\t\t}));\n\t\t\tfunc.forEach(this.series, function(run, i){\n\t\t\t\tthis.runs[run.name] = i;\n\t\t\t}, this);\n\t\t\tthis.dirty = true;\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tmoveSeriesToFront: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tMoves a given series to front of a plot.\n\t\t\t// name: String\n\t\t\t//\t\tSeries' name to move.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.runs){\n\t\t\t\tvar index = this.runs[name],\n\t\t\t\t\tnewOrder = this.getSeriesOrder(this.series[index].plot);\n\t\t\t\tif(name != newOrder[0]){\n\t\t\t\t\tnewOrder.splice(index, 1);\n\t\t\t\t\tnewOrder.unshift(name);\n\t\t\t\t\treturn this.setSeriesOrder(newOrder);\t//\tdojox/charting/Chart\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tmoveSeriesToBack: function(name){\n\t\t\t// summary:\n\t\t\t//\t\tMoves a given series to back of a plot.\n\t\t\t// name: String\n\t\t\t//\t\tSeries' name to move.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(name in this.runs){\n\t\t\t\tvar index = this.runs[name],\n\t\t\t\t\tnewOrder = this.getSeriesOrder(this.series[index].plot);\n\t\t\t\tif(name != newOrder[newOrder.length - 1]){\n\t\t\t\t\tnewOrder.splice(index, 1);\n\t\t\t\t\tnewOrder.push(name);\n\t\t\t\t\treturn this.setSeriesOrder(newOrder);\t//\tdojox/charting/Chart\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tresize: function(width, height){\n\t\t\t// summary:\n\t\t\t//\t\tResize the chart to the dimensions of width and height.\n\t\t\t// description:\n\t\t\t//\t\tResize the chart and its surface to the width and height dimensions.\n\t\t\t//\t\tIf a single argument of the form {w: value1, h: value2} is provided take that argument as the dimensions to use.\n\t\t\t//\t\tFinally if no argument is provided, resize the surface to the marginBox of the chart.\n\t\t\t// width: Number|Object?\n\t\t\t//\t\tThe new width of the chart or the box definition.\n\t\t\t// height: Number?\n\t\t\t//\t\tThe new height of the chart.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tswitch(arguments.length){\n\t\t\t\t// case 0, do not resize the div, just the surface\n\t\t\t\tcase 1:\n\t\t\t\t\t// argument, override node box\n\t\t\t\t\tdomGeom.setMarginBox(this.node, width);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\t// argument, override node box\n\t\t\t\t\tdomGeom.setMarginBox(this.node, {w: width, h: height});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// in all cases take back the computed box\n\t\t\tvar box = domGeom.getMarginBox(this.node);\n\t\t\tvar d = this.surface.getDimensions();\n\t\t\tif(d.width != box.w || d.height != box.h){\n\t\t\t\t// and set it on the surface\n\t\t\t\tthis.surface.setDimensions(box.w, box.h);\n\t\t\t\tthis.dirty = true;\n\t\t\t\treturn this.render();\t//\tdojox/charting/Chart\n\t\t\t}else{\n\t\t\t\treturn this;\n\t\t\t}\n\t\t},\n\t\tgetGeometry: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns a map of information about all axes in a chart and what they represent\n\t\t\t//\t\tin terms of scaling (see dojox.charting.axis2d.Default.getScaler).\n\t\t\t// returns: Object\n\t\t\t//\t\tAn map of geometry objects, a one-to-one mapping of axes.\n\t\t\tvar ret = {};\n\t\t\tfunc.forIn(this.axes, function(axis){\n\t\t\t\tif(axis.initialized()){\n\t\t\t\t\tret[axis.name] = {\n\t\t\t\t\t\tname:\t\taxis.name,\n\t\t\t\t\t\tvertical:\taxis.vertical,\n\t\t\t\t\t\tscaler:\t\taxis.scaler,\n\t\t\t\t\t\tticks:\t\taxis.ticks\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\t//\tObject\n\t\t},\n\t\tsetAxisWindow: function(name, scale, offset, zoom){\n\t\t\t// summary:\n\t\t\t//\t\tZooms an axis and all dependent plots. Can be used to zoom in 1D.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the axis as defined by addAxis.\n\t\t\t// scale: Number\n\t\t\t//\t\tThe scale on the target axis.\n\t\t\t// offset: Number\n\t\t\t//\t\tAny offest, as measured by axis tick\n\t\t\t// zoom: Boolean|Object?\n\t\t\t//\t\tThe chart zooming animation trigger.  This is null by default,\n\t\t\t//\t\te.g. {duration: 1200}, or just set true.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tvar axis = this.axes[name];\n\t\t\tif(axis){\n\t\t\t\taxis.setWindow(scale, offset);\n\t\t\t\tarr.forEach(this.stack,function(plot){\n\t\t\t\t\tif(plot.hAxis == name || plot.vAxis == name){\n\t\t\t\t\t\tplot.zoom = zoom;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tsetWindow: function(sx, sy, dx, dy, zoom){\n\t\t\t// summary:\n\t\t\t//\t\tZooms in or out any plots in two dimensions.\n\t\t\t// sx: Number\n\t\t\t//\t\tThe scale for the x axis.\n\t\t\t// sy: Number\n\t\t\t//\t\tThe scale for the y axis.\n\t\t\t// dx: Number\n\t\t\t//\t\tThe pixel offset on the x axis.\n\t\t\t// dy: Number\n\t\t\t//\t\tThe pixel offset on the y axis.\n\t\t\t// zoom: Boolean|Object?\n\t\t\t//\t\tThe chart zooming animation trigger.  This is null by default,\n\t\t\t//\t\te.g. {duration: 1200}, or just set true.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(!(\"plotArea\" in this)){\n\t\t\t\tthis.calculateGeometry();\n\t\t\t}\n\t\t\tfunc.forIn(this.axes, function(axis){\n\t\t\t\tvar scale, offset, bounds = axis.getScaler().bounds,\n\t\t\t\t\ts = bounds.span / (bounds.upper - bounds.lower);\n\t\t\t\tif(axis.vertical){\n\t\t\t\t\tscale  = sy;\n\t\t\t\t\toffset = dy / s / scale;\n\t\t\t\t}else{\n\t\t\t\t\tscale  = sx;\n\t\t\t\t\toffset = dx / s / scale;\n\t\t\t\t}\n\t\t\t\taxis.setWindow(scale, offset);\n\t\t\t});\n\t\t\tarr.forEach(this.stack, function(plot){ plot.zoom = zoom; });\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tzoomIn:\tfunction(name, range, delayed){\n\t\t\t// summary:\n\t\t\t//\t\tZoom the chart to a specific range on one axis.  This calls render()\n\t\t\t//\t\tdirectly as a convenience method.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the axis as defined by addAxis.\n\t\t\t// range: Array\n\t\t\t//\t\tThe end points of the zoom range, measured in axis ticks.\n\t\t\tvar axis = this.axes[name];\n\t\t\tif(axis){\n\t\t\t\tvar scale, offset, bounds = axis.getScaler().bounds;\n\t\t\t\tvar lower = Math.min(range[0],range[1]);\n\t\t\t\tvar upper = Math.max(range[0],range[1]);\n\t\t\t\tlower = range[0] < bounds.lower ? bounds.lower : lower;\n\t\t\t\tupper = range[1] > bounds.upper ? bounds.upper : upper;\n\t\t\t\tscale = (bounds.upper - bounds.lower) / (upper - lower);\n\t\t\t\toffset = lower - bounds.lower;\n\t\t\t\tthis.setAxisWindow(name, scale, offset);\n\t\t\t\tif(delayed){\n\t\t\t\t\tthis.delayedRender();\n\t\t\t\t}else{\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcalculateGeometry: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the geometry of the chart based on the defined axes of\n\t\t\t//\t\ta chart.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(this.dirty){\n\t\t\t\treturn this.fullGeometry();\n\t\t\t}\n\n\t\t\t// calculate geometry\n\t\t\tvar dirty = arr.filter(this.stack, function(plot){\n\t\t\t\t\treturn plot.dirty ||\n\t\t\t\t\t\t(plot.hAxis && this.axes[plot.hAxis].dirty) ||\n\t\t\t\t\t\t(plot.vAxis && this.axes[plot.vAxis].dirty);\n\t\t\t\t}, this);\n\t\t\tcalculateAxes(dirty, this.plotArea);\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tfullGeometry: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the full geometry of the chart.  This includes passing\n\t\t\t//\t\tover all major elements of a chart (plots, axes, series, container)\n\t\t\t//\t\tin order to ensure proper rendering.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tthis._makeDirty();\n\n\t\t\t// clear old values\n\t\t\tarr.forEach(this.stack, clear);\n\n\t\t\t// rebuild new connections, and add defaults\n\n\t\t\t// set up a theme\n\t\t\tif(!this.theme){\n\t\t\t\tthis.setTheme(new SimpleTheme());\n\t\t\t}\n\n\t\t\t// assign series\n\t\t\tarr.forEach(this.series, function(run){\n\t\t\t\tif(!(run.plot in this.plots)){\n\t\t\t\t\t// TODO remove auto-assignment\n\t\t\t\t\tif(!dc.plot2d || !dc.plot2d.Default){\n\t\t\t\t\t\tthrow Error(\"Can't find plot: Default - didn't you forget to dojo\" + \".require() it?\");\n\t\t\t\t\t}\n\t\t\t\t\tvar plot = new dc.plot2d.Default(this, {});\n\t\t\t\t\tplot.name = run.plot;\n\t\t\t\t\tthis.plots[run.plot] = this.stack.length;\n\t\t\t\t\tthis.stack.push(plot);\n\t\t\t\t}\n\t\t\t\tthis.stack[this.plots[run.plot]].addSeries(run);\n\t\t\t}, this);\n\t\t\t// assign axes\n\t\t\tarr.forEach(this.stack, function(plot){\n\t\t\t\tif(plot.assignAxes){\n\t\t\t\t\tplot.assignAxes(this.axes);\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\t// calculate geometry\n\n\t\t\t// 1st pass\n\t\t\tvar dim = this.dim = this.surface.getDimensions();\n\t\t\tdim.width  = g.normalizedLength(dim.width);\n\t\t\tdim.height = g.normalizedLength(dim.height);\n\t\t\tfunc.forIn(this.axes, clear);\n\t\t\tcalculateAxes(this.stack, dim);\n\n\t\t\t// assumption: we don't have stacked axes yet\n\t\t\tvar offsets = this.offsets = {l: 0, r: 0, t: 0, b: 0};\n\t\t\t// chart mirroring starts\n\t\t\tvar self = this;\n\t\t\tfunc.forIn(this.axes, function(axis){\n\t\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\t\tself._resetLeftBottom(axis);\n\t\t\t\t}\n\t\t\t\tfunc.forIn(axis.getOffsets(), function(o, i){ offsets[i] = Math.max(o, offsets[i]); });\n\t\t\t});\n\t\t\t// chart mirroring ends\n\t\t\t// add title area\n\t\t\tif(this.title){\n\t\t\t\tthis.titleGap = (this.titleGap==0) ? 0 : this.titleGap || this.theme.chart.titleGap || 20;\n\t\t\t\tthis.titlePos = this.titlePos || this.theme.chart.titlePos || \"top\";\n\t\t\t\tthis.titleFont = this.titleFont || this.theme.chart.titleFont;\n\t\t\t\tthis.titleFontColor = this.titleFontColor || this.theme.chart.titleFontColor || \"black\";\n\t\t\t\tthis.titleAlign = this.titleAlign || this.theme && this.theme.chart && this.theme.chart.titleAlign || \"middle\";\n\t\t\t\tvar tsize = g.normalizedLength(g.splitFontString(this.titleFont).size);\n\t\t\t\toffsets[this.titlePos == \"top\" ? \"t\" : \"b\"] += (tsize + this.titleGap);\n\t\t\t}\n\t\t\t// add margins\n\t\t\tfunc.forIn(this.margins, function(o, i){ offsets[i] += o; });\n\n\t\t\t// 2nd pass with realistic dimensions\n\t\t\tthis.plotArea = {\n\t\t\t\twidth: dim.width - offsets.l - offsets.r,\n\t\t\t\theight: dim.height - offsets.t - offsets.b\n\t\t\t};\n\t\t\tfunc.forIn(this.axes, clear);\n\t\t\tcalculateAxes(this.stack, this.plotArea);\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\trender: function(){\n\t\t\t// summary:\n\t\t\t//\t\tRender the chart according to the current information defined.  This should\n\t\t\t//\t\tbe the last call made when defining/creating a chart, or if data within the\n\t\t\t//\t\tchart has been changed.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\n\t\t\t// do we have a delayed renderer pending? If yes we need to clear it\n\t\t\tif(this._delayedRenderHandle){\n\t\t\t\tclearTimeout(this._delayedRenderHandle);\n\t\t\t\tthis._delayedRenderHandle = null;\n\t\t\t}\n\t\t\t\n\t\t\tif(this.theme){\n\t\t\t\tthis.theme.clear();\n\t\t\t}\n\n\t\t\tif(this.dirty){\n\t\t\t\treturn this.fullRender();\n\t\t\t}\n\n\t\t\tthis.calculateGeometry();\n\n\t\t\t// go over the stack backwards\n\t\t\tfunc.forEachRev(this.stack, function(plot){ plot.render(this.dim, this.offsets); }, this);\n\n\t\t\t// go over axes\n\t\t\tfunc.forIn(this.axes, function(axis){ axis.render(this.dim, this.offsets); }, this);\n\n\t\t\tthis._makeClean();\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tfullRender: function(){\n\t\t\t// summary:\n\t\t\t//\t\tForce a full rendering of the chart, including full resets on the chart itself.\n\t\t\t//\t\tYou should not call this method directly unless absolutely necessary.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\n\t\t\t// calculate geometry\n\t\t\tthis.fullGeometry();\n\t\t\tvar offsets = this.offsets, dim = this.dim;\n\t\t\tvar w = Math.max(0, dim.width  - offsets.l - offsets.r),\n\t\t\t\th = Math.max(0, dim.height - offsets.t - offsets.b);\n\n\t\t\t// get required colors\n\t\t\t//var requiredColors = func.foldl(this.stack, \"z + plot.getRequiredColors()\", 0);\n\t\t\t//this.theme.defineColors({num: requiredColors, cache: false});\n\n\t\t\t// clear old shapes\n\t\t\tarr.forEach(this.series, purge);\n\t\t\tfunc.forIn(this.axes, purge);\n\t\t\tarr.forEach(this.stack,  purge);\n\t\t\tvar children = this.surface.children;\n\t\t\t// starting with 1.9 the registry is optional and thus dispose is\n\t\t\tif(shape.dispose){\n\t\t\t\tfor(var i = 0; i < children.length;++i){\n\t\t\t\t\tshape.dispose(children[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.chartTitle && this.chartTitle.tagName){\n\t\t\t\t// destroy title if it is a DOM node\n\t\t\t    domConstruct.destroy(this.chartTitle);\n\t\t\t}\n\t\t\tthis.surface.clear();\n\t\t\tthis.chartTitle = null;\n\n\t\t\tthis._renderChartBackground(dim, offsets);\n\t\t\tif(this._nativeClip){\n\t\t\t\tthis._renderPlotBackground(dim, offsets, w, h);\n\t\t\t}else{\n\t\t\t\t// VML\n\t\t\t\tthis._renderPlotBackground(dim, offsets, w, h);\n\t\t\t}\n\n\t\t\t// go over the stack backwards\n\t\t\tfunc.foldr(this.stack, function(z, plot){ return plot.render(dim, offsets), 0; }, 0);\n\n\t\t\tif(!this._nativeClip){\n\t\t\t\t// VML, matting-clipping\n\t\t\t\tthis._renderChartBackground(dim, offsets);\n\t\t\t}\n\n\t\t\t//create title: Whether to make chart title as a widget which extends dojox.charting.Element?\n\t\t\tif(this.title){\n\t\t\t\tthis._renderTitle(dim, offsets);\n\t\t\t}\n\n\t\t\t// go over axes\n\t\t\tfunc.forIn(this.axes, function(axis){ axis.render(dim, offsets); });\n\n\t\t\tthis._makeClean();\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\t_renderTitle: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tInternal function to render the chart title.\n\t\t\t// dim:\n\t\t\t//\t\tThe dimension object of the chart\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tvar forceHtmlLabels = (g.renderer == \"canvas\") && this.htmlLabels,\n\t\t\t\tlabelType = forceHtmlLabels || !has(\"ie\") && !has(\"opera\") && this.htmlLabels ? \"html\" : \"gfx\",\n\t\t\t\ttsize = g.normalizedLength(g.splitFontString(this.titleFont).size),\n\t\t\t\ttBox = g._base._getTextBox(this.title,{ font: this.titleFont });\n\t\t\t\t\n\t\t\tvar titleAlign = this.titleAlign;\n\t\t\tvar isRtl = has(\"dojo-bidi\") && this.isRightToLeft();\n\t\t\tvar posX = dim.width/2; // Default is middle.\n\t\t\tif(titleAlign === \"edge\"){\n\t\t\t\ttitleAlign = \"left\";\n\t\t\t\tif(isRtl){\n\t\t\t\t\tposX = dim.width - (offsets.r + tBox.w);\n\t\t\t\t}else {\n\t\t\t\t\tposX = offsets.l;\n\t\t\t\t}\n\t\t\t}else if(titleAlign != \"middle\"){\n\t\t\t\tif(isRtl){\n\t\t\t\t\t// We're in BIDI mode, reverse the alignment.\n\t\t\t\t\ttitleAlign = titleAlign === \"left\" ? \"right\" : \"left\";\n\t\t\t\t}\n\t\t\t\tif(titleAlign === \"left\"){\n\t\t\t\t\tposX = this.margins.l;\n\t\t\t\t}else if(titleAlign === \"right\"){\n\t\t\t\t\ttitleAlign = \"left\";\n\t\t\t\t\tposX = dim.width - (this.margins.l + tBox.w);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.chartTitle = common.createText[labelType](\n\t\t\t\tthis,\n\t\t\t\tthis.surface,\n\t\t\t\tposX,\n\t\t\t\tthis.titlePos==\"top\" ? tsize + this.margins.t : dim.height - this.margins.b,\n\t\t\t\ttitleAlign,\n\t\t\t\tthis.title,\n\t\t\t\tthis.titleFont,\n\t\t\t\tthis.titleFontColor\n\t\t\t);\n\t\t},\n\t\t_renderChartBackground: function(dim, offsets){\n\t\t\tvar t = this.theme, rect;\n\t\t\t// chart background\n\t\t\tvar fill   = this.fill   !== undefined ? this.fill   : (t.chart && t.chart.fill);\n\t\t\tvar stroke = this.stroke !== undefined ? this.stroke : (t.chart && t.chart.stroke);\n\n\t\t\t// TRT: support for \"inherit\" as a named value in a theme.\n\t\t\tif(fill == \"inherit\"){\n\t\t\t\t//\tfind the background color of the nearest ancestor node, and use that explicitly.\n\t\t\t\tvar node = this.node;\n\t\t\t\tfill = new Color(domStyle.get(node, \"backgroundColor\"));\n\t\t\t\twhile(fill.a==0 && node!=document.documentElement){\n\t\t\t\t\tfill = new Color(domStyle.get(node, \"backgroundColor\"));\n\t\t\t\t\tnode = node.parentNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(fill){\n\t\t\t\tif(this._nativeClip){\n\t\t\t\t\tfill = Element.prototype._shapeFill(Element.prototype._plotFill(fill, dim),\n\t\t\t\t\t\t{ x:0, y: 0, width: dim.width + 1, height: dim.height + 1 });\n\t\t\t\t\tthis.surface.createRect({ width: dim.width + 1, height: dim.height + 1 }).setFill(fill);\n\t\t\t\t}else{\n\t\t\t\t\t// VML\n\t\t\t\t\tfill = Element.prototype._plotFill(fill, dim, offsets);\n\t\t\t\t\tif(offsets.l){\t// left\n\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\t\twidth:  offsets.l,\n\t\t\t\t\t\t\theight: dim.height + 1\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\n\t\t\t\t\t}\n\t\t\t\t\tif(offsets.r){\t// right\n\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\tx: dim.width - offsets.r,\n\t\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\t\twidth:  offsets.r + 1,\n\t\t\t\t\t\t\theight: dim.height + 2\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\n\t\t\t\t\t}\n\t\t\t\t\tif(offsets.t){\t// top\n\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\t\twidth:  dim.width + 1,\n\t\t\t\t\t\t\theight: offsets.t\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\n\t\t\t\t\t}\n\t\t\t\t\tif(offsets.b){\t// bottom\n\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\ty: dim.height - offsets.b,\n\t\t\t\t\t\t\twidth:  dim.width + 1,\n\t\t\t\t\t\t\theight: offsets.b + 2\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(stroke){\n\t\t\t\tthis.surface.createRect({\n\t\t\t\t\twidth:  dim.width - 1,\n\t\t\t\t\theight: dim.height - 1\n\t\t\t\t}).setStroke(stroke);\n\t\t\t}\n\t\t},\n\t\t_renderPlotBackground: function(dim, offsets, w, h){\n\t\t\tvar t = this.theme;\n\n\t\t\t// draw a plot background\n\t\t\tvar fill   = t.plotarea && t.plotarea.fill;\n\t\t\tvar stroke = t.plotarea && t.plotarea.stroke;\n\t\t\t// size might be neg if offsets are bigger that chart size this happens quite often at\n\t\t\t// initialization time if the chart widget is used in a BorderContainer\n\t\t\t// this will fail on IE/VML\n\t\t\tvar rect = {\n\t\t\t\tx: offsets.l - 1, y: offsets.t - 1,\n\t\t\t\twidth:  w + 2,\n\t\t\t\theight: h + 2\n\t\t\t};\n\t\t\tif(fill){\n\t\t\t\tfill = Element.prototype._shapeFill(Element.prototype._plotFill(fill, dim, offsets), rect);\n\t\t\t\tthis.surface.createRect(rect).setFill(fill);\n\t\t\t}\n\t\t\tif(stroke){\n\t\t\t\tthis.surface.createRect({\n\t\t\t\t\tx: offsets.l, y: offsets.t,\n\t\t\t\t\twidth:  w + 1,\n\t\t\t\t\theight: h + 1\n\t\t\t\t}).setStroke(stroke);\n\t\t\t}\n\t\t},\n\t\tdelayedRender: function(){\n\t\t\t// summary:\n\t\t\t//\t\tDelayed render, which is used to collect multiple updates\n\t\t\t//\t\twithin a delayInMs time window.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\n\t\t\tif(!this._delayedRenderHandle){\n\t\t\t\tthis._delayedRenderHandle = setTimeout(\n\t\t\t\t\tlang.hitch(this, function(){\n\t\t\t\t\t\tthis.render();\n\t\t\t\t\t}),\n\t\t\t\t\tthis.delayInMs\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\tconnectToPlot: function(name, object, method){\n\t\t\t// summary:\n\t\t\t//\t\tA convenience method to connect a function to a plot.\n\t\t\t// name: String\n\t\t\t//\t\tThe name of the plot as defined by addPlot.\n\t\t\t// object: Object\n\t\t\t//\t\tThe object to be connected.\n\t\t\t// method: Function\n\t\t\t//\t\tThe function to be executed.\n\t\t\t// returns: Array\n\t\t\t//\t\tA handle to the connection, as defined by dojo.connect (see dojo.connect).\n\t\t\treturn name in this.plots ? this.stack[this.plots[name]].connect(object, method) : null;\t//\tArray\n\t\t},\n\t\tfireEvent: function(seriesName, eventName, index){\n\t\t\t// summary:\n\t\t\t//\t\tFires a synthetic event for a series item.\n\t\t\t// seriesName: String\n\t\t\t//\t\tSeries name.\n\t\t\t// eventName: String\n\t\t\t//\t\tEvent name to simulate: onmouseover, onmouseout, onclick.\n\t\t\t// index: Number\n\t\t\t//\t\tValid data value index for the event.\n\t\t\t// returns: dojox/charting/Chart\n\t\t\t//\t\tA reference to the current chart for functional chaining.\n\t\t\tif(seriesName in this.runs){\n\t\t\t\tvar plotName = this.series[this.runs[seriesName]].plot;\n\t\t\t\tif(plotName in this.plots){\n\t\t\t\t\tvar plot = this.stack[this.plots[plotName]];\n\t\t\t\t\tif(plot){\n\t\t\t\t\t\tplot.fireEvent(seriesName, eventName, index);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/Chart\n\t\t},\n\t\t_makeClean: function(){\n\t\t\t// reset dirty flags\n\t\t\tarr.forEach(this.axes,   makeClean);\n\t\t\tarr.forEach(this.stack,  makeClean);\n\t\t\tarr.forEach(this.series, makeClean);\n\t\t\tthis.dirty = false;\n\t\t},\n\t\t_makeDirty: function(){\n\t\t\t// reset dirty flags\n\t\t\tarr.forEach(this.axes,   makeDirty);\n\t\t\tarr.forEach(this.stack,  makeDirty);\n\t\t\tarr.forEach(this.series, makeDirty);\n\t\t\tthis.dirty = true;\n\t\t},\n\t\t_invalidateDependentPlots: function(plotName, /* Boolean */ verticalAxis){\n\t\t\tif(plotName in this.plots){\n\t\t\t\tvar plot = this.stack[this.plots[plotName]], axis,\n\t\t\t\t\taxisName = verticalAxis ? \"vAxis\" : \"hAxis\";\n\t\t\t\tif(plot[axisName]){\n\t\t\t\t\taxis = this.axes[plot[axisName]];\n\t\t\t\t\tif(axis && axis.dependOnData()){\n\t\t\t\t\t\taxis.dirty = true;\n\t\t\t\t\t\t// find all plots and mark them dirty\n\t\t\t\t\t\tarr.forEach(this.stack, function(p){\n\t\t\t\t\t\t\tif(p[axisName] && p[axisName] == plot[axisName]){\n\t\t\t\t\t\t\t\tp.dirty = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tplot.dirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsetDir : function(dir){\n\t\t\treturn this; \n\t\t},\n\t\t_resetLeftBottom: function(axis){\n\t\t},\n\t\tformatTruncatedLabel: function(element, label, labelType){\t\t\t\n\t\t}\n\t});\n\n\tfunction hSection(stats){\n\t\treturn {min: stats.hmin, max: stats.hmax};\n\t}\n\n\tfunction vSection(stats){\n\t\treturn {min: stats.vmin, max: stats.vmax};\n\t}\n\n\tfunction hReplace(stats, h){\n\t\tstats.hmin = h.min;\n\t\tstats.hmax = h.max;\n\t}\n\n\tfunction vReplace(stats, v){\n\t\tstats.vmin = v.min;\n\t\tstats.vmax = v.max;\n\t}\n\n\tfunction combineStats(target, source){\n\t\tif(target && source){\n\t\t\ttarget.min = Math.min(target.min, source.min);\n\t\t\ttarget.max = Math.max(target.max, source.max);\n\t\t}\n\t\treturn target || source;\n\t}\n\n\tfunction calculateAxes(stack, plotArea){\n\t\tvar plots = {}, axes = {};\n\t\tarr.forEach(stack, function(plot){\n\t\t\tvar stats = plots[plot.name] = plot.getSeriesStats();\n\t\t\tif(plot.hAxis){\n\t\t\t\taxes[plot.hAxis] = combineStats(axes[plot.hAxis], hSection(stats));\n\t\t\t}\n\t\t\tif(plot.vAxis){\n\t\t\t\taxes[plot.vAxis] = combineStats(axes[plot.vAxis], vSection(stats));\n\t\t\t}\n\t\t});\n\t\tarr.forEach(stack, function(plot){\n\t\t\tvar stats = plots[plot.name];\n\t\t\tif(plot.hAxis){\n\t\t\t\thReplace(stats, axes[plot.hAxis]);\n\t\t\t}\n\t\t\tif(plot.vAxis){\n\t\t\t\tvReplace(stats, axes[plot.vAxis]);\n\t\t\t}\n\t\t\tplot.initializeScalers(plotArea, stats);\n\t\t});\n\t}\n\t\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.Chart\", [Chart, BidiChart]) : Chart;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/Chart.js\n// module id = 296\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"./Element\"], \n\tfunction(lang, declare, Element){ \n\t/*=====\n\tvar __SeriesCtorArgs = {\n\t\t// summary:\n\t\t//\t\tAn optional arguments object that can be used in the Series constructor.\n\t\t// plot: String?\n\t\t//\t\tThe plot (by name) that this series belongs to.\n\t};\n\t=====*/\n\treturn declare(\"dojox.charting.Series\", Element, {\n\t\t// summary:\n\t\t//\t\tAn object representing a series of data for plotting on a chart.\n\t\tconstructor: function(chart, data, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a new data series object for use within charting.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart that this series belongs to.\n\t\t\t// data: Array|Object\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\n\t\t\t//\t\tdestroy(), and setSeriesObject().\n\t\t\t// kwArgs: __SeriesCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to set details for this series.\n\t\t\tlang.mixin(this, kwArgs);\n\t\t\tif(typeof this.plot != \"string\"){ this.plot = \"default\"; }\n\t\t\tthis.update(data);\n\t\t},\n\t\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear the calculated additional parameters set on this series.\n\t\t\tthis.dyn = {};\n\t\t},\n\t\t\n\t\tupdate: function(data){\n\t\t\t// summary:\n\t\t\t//\t\tSet data and make this object dirty, so it can be redrawn.\n\t\t\t// data: Array|Object\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\n\t\t\t//\t\tdestroy(), and setSeriesObject().\n\t\t\tif(lang.isArray(data)){\n\t\t\t\tthis.data = data;\n\t\t\t}else{\n\t\t\t\tthis.source = data;\n\t\t\t\tthis.data = this.source.data;\n\t\t\t\tif(this.source.setSeriesObject){\n\t\t\t\t\tthis.source.setSeriesObject(this);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.dirty = true;\n\t\t\tthis.clear();\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/Series.js\n// module id = 297\n// module chunks = 0","define([\"dojox/main\", \"dojo/_base/declare\", \"dojo/_base/lang\", \"dojo/dom-style\", \"dojo/_base/array\", \"dojo/sniff\",\n\t\"dojo/dom\",\"dojo/dom-construct\",\n\t\"dojox/gfx\", \"dojox/gfx/_gfxBidiSupport\", \"../axis2d/common\", \"dojox/string/BidiEngine\",\n\t\"dojox/lang/functional\",\"dojo/dom-attr\",\"./_bidiutils\"],\n\tfunction(dojox, declare, lang, domStyle, arr, has, dom, domConstruct, g, gBidi, da, BidiEngine, df, domAttr,utils){\n\t// module:\n\t//\t\tdojox/charting/bidi/Chart\t\t\t\t\t\t\t\n\tvar bidiEngine = new BidiEngine();\n\tvar dc = lang.getObject(\"charting\", true, dojox);\n\tfunction validateTextDir(textDir){\n\t\treturn /^(ltr|rtl|auto)$/.test(textDir) ? textDir : null;\n\t};\n\t\n\treturn declare(null, {\n\t\t// textDir: String\n\t\t//\t\tBi-directional support,\tthe main variable which is responsible for the direction of the text.\n\t\t//\t\tThe text direction can be different than the GUI direction by using this parameter.\n\t\t//\t\tAllowed values:\n\t\t//\n\t\t//\t\t1. \"ltr\"\n\t\t//\t\t2. \"rtl\"\n\t\t//\t\t3. \"auto\" - contextual the direction of a text defined by first strong letter.\n\t\t//\n\t\t//\t\tBy default is as the page direction.\n\t\ttextDir:\"\",\n\t\t\n\t\t// dir: String\n\t\t//\t\tMirroring support,\tthe main variable which is responsible for the direction of the chart.\n\t\t//\n\t\t//\t\tAllowed values:\n\t\t//\t\t1. \"ltr\"\n\t\t//\t\t2. \"rtl\"\n\t\t//\n\t\t//\t\tBy default is ltr.\n\t\tdir: \"\",\n\t\tisMirrored: false,\n\t\t\n\t\tgetTextDir: function(text){\n\t\t\t// summary:\n\t\t\t//\t\tReturn direction of the text. \n\t\t\t// description:\n\t\t\t//\t\tIf textDir is ltr or rtl returns the value.\n\t\t\t//\t\tIf it's auto, calls to another function that responsible \n\t\t\t//\t\tfor checking the value, and defining the direction.\t\t\t\n\t\t\t// text:\n\t\t\t//\t\tUsed in case textDir is \"auto\", this case the direction is according to the first\n\t\t\t//\t\tstrong (directionally - which direction is strong defined) letter.\n\t\t\t// tags:\n\t\t\t//\t\tprotected.\n\t\t\tvar textDir = this.textDir == \"auto\" ? bidiEngine.checkContextual(text) : this.textDir;\n\t\t\t// providing default value\n\t\t\tif(!textDir){\n\t\t\t\ttextDir = domStyle.get(this.node, \"direction\");\n\t\t\t}\n\t\t\treturn textDir;\n\t\t},\n\n\t\tpostscript: function(node,args){\n\t\t\t// summary:\n\t\t\t//\t\tKicks off chart instantiation.\n\t\t\t// description:\n\t\t\t//\t\tUsed for setting the textDir of the chart. \n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\n\t\t\t// validate textDir\n\t\t\tvar textDir = args ? (args[\"textDir\"] ? validateTextDir(args[\"textDir\"]) : \"\") : \"\";\n\t\t\t// if textDir wasn't defined or was defined wrong, apply default value\n\t\t\ttextDir = textDir ? textDir : domStyle.get(this.node, \"direction\");\n\t\t\tthis.textDir = textDir;\n\n\t\t\tthis.surface.textDir = textDir;\n\t\t\t\n\t\t\t// two data structures, used for storing data for further enablement to change\n\t\t\t// textDir dynamically\n\t\t\tthis.htmlElementsRegistry = [];\n\t\t\tthis.truncatedLabelsRegistry = [];\n\t\t\t// chart mirroring starts\n\t\t\tvar chartDir = \"ltr\";\n\t\t\tif(domAttr.has(node, \"direction\")){\n\t\t\t\tchartDir = domAttr.get(node, \"direction\");\n\t\t\t}\n\t\t\tthis.setDir(args ? (args.dir ? args.dir: chartDir) : chartDir);\n\t\t\t// chart mirroring ends\n\t\t},\n\n\t\tsetTextDir: function(newTextDir, obj){\n\t\t\t// summary:\n\t\t\t//\t\tSetter for the textDir attribute.\n\t\t\t// description:\n\t\t\t//\t\tAllows dynamically set the textDir, goes over all the text-children and  \n\t\t\t//\t\tupdates their base text direction.\n\t\t\t// tags:\n\t\t\t//\t\tpublic\n\t\t\n\t\t\tif(newTextDir == this.textDir){\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tif(validateTextDir(newTextDir) != null){\n\t\t\t\tthis.textDir = newTextDir;\n\t\t\t\t\n\t\t\t\t// set automatically all the gfx objects that were created by this surface\n\t\t\t\t// (groups, text objects)\n\t\t\t\tthis.surface.setTextDir(newTextDir);\n\t\t\t\n\t\t\t\t// truncated labels that were created with gfx creator need to recalculate dir\n\t\t\t\t// for case like: \"111111A\" (A stands for bidi character) and the truncation\n\t\t\t\t// is \"111...\" If the textDir is auto, the display should be: \"...111\" but in gfx\n\t\t\t\t// case we will get \"111...\". Because this.surface.setTextDir will calculate the dir of truncated\n\t\t\t\t// label, which value is \"111...\" but th real is \"111111A\".\n\t\t\t\t// each time we created a gfx truncated label we stored it in the truncatedLabelsRegistry, so update now \n\t\t\t\t// the registry.\n\t\t\t\tif(this.truncatedLabelsRegistry && newTextDir == \"auto\"){\n\t\t\t\t\tarr.forEach(this.truncatedLabelsRegistry, function(elem){\n\t\t\t\t\t\tvar tDir = this.getTextDir(elem[\"label\"]);\n\t\t\t\t\t\tif(elem[\"element\"].textDir != tDir){\n\t\t\t\t\t\t\telem[\"element\"].setShape({textDir: tDir});\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// re-render axes with html labels. for recalculation of the labels\n\t\t\t\t// positions etc.\n\t\t\t\t// create array of keys for all the axis in chart \n\t\t\t\tvar axesKeyArr = df.keys(this.axes);\n\t\t\t\tif(axesKeyArr.length > 0){\n\t\t\t\t\t// iterate over the axes, and for each that have html labels render it.\n\t\t\t\t\tarr.forEach(axesKeyArr, function(key, index, arr){\n\t\t\t\t\t\t// get the axis \n\t\t\t\t\t\tvar axis = this.axes[key];\n\t\t\t\t\t\t// if the axis has html labels \n\t\t\t\t\t\tif(axis.htmlElements[0]){\n\t\t\t\t\t\t\taxis.dirty = true;\n\t\t\t\t\t\t\taxis.render(this.dim, this.offsets);\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t\t\n\t\t\t\t\t// recreate title\n\t\t\t\t\tif(this.title){\n\t\t\t\t\t\tthis._renderTitle(this.dim, this.offsets);\n\t\t\t\t\t}\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t// case of pies, spiders etc.\n\t\t\t\t\tarr.forEach(this.htmlElementsRegistry, function(elem, index, arr){\n\t\t\t\t\t\tvar tDir = newTextDir == \"auto\" ? this.getTextDir(elem[4]) : newTextDir;\n\t\t\t\t\t\tif(elem[0].children[0] && elem[0].children[0].dir != tDir){\n\t\t\t\t\t\t\tdomConstruct.destroy(elem[0].children[0]);\n\t\t\t\t\t\t\telem[0].children[0] = da.createText[\"html\"]\n\t\t\t\t\t\t\t\t\t(this, this.surface, elem[1], elem[2], elem[3], elem[4], elem[5], elem[6]).children[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\t\n\t\tsetDir : function(dir){\n\t\t\t// summary:\n\t\t\t//\t\tSetter for the dir attribute.\n\t\t\t// description:\n\t\t\t//\t\tAllows dynamically set the dri attribute, which will used to\n\t\t\t//\t\tupdates the chart rendering direction.\n\t\t\t//\tdir : the desired chart direction [rtl: for right to left ,ltr: for left to right]\n \n\t\t\tif(dir == \"rtl\" || dir == \"ltr\"){\n\t\t\t\tif(this.dir != dir){\n\t\t\t\t\tthis.isMirrored = true;\n\t\t\t\t\tthis.dirty = true;\n\t\t\t\t}\n\t\t\t\tthis.dir = dir;\n\t\t\t}\t\t\t\n\t\t\treturn this; \n\t\t},\n\t\t\n\t\tisRightToLeft: function(){\n\t\t\t// summary:\n\t\t\t//\t\tcheck the direction of the chart.\n\t\t\t// description:\n\t\t\t//\t\tcheck the dir attribute to determine the rendering direction\n\t\t\t//\t\tof the chart.\n\t\t\treturn this.dir == \"rtl\";\n        },\n        \n\t\tapplyMirroring: function(plot, dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tapply the mirroring operation to the current chart plots.\n\t\t\t//\n\t\t\tutils.reverseMatrix(plot, dim, offsets, this.dir == \"rtl\");\n\t\t\t//force the direction of the node to be ltr to properly render the axes and the plots labels.\n\t\t\tdomStyle.set(this.node, \"direction\", \"ltr\");\n\t\t\treturn this;\n\t\t},\n\n\t\tformatTruncatedLabel: function(element, label, labelType){\n\t\t\tthis.truncateBidi(element, label, labelType);\n\t\t},\n\n\t\ttruncateBidi: function(elem, label, labelType){\n\t\t\t// summary:\n\t\t\t//\t\tEnables bidi support for truncated labels.\n\t\t\t// description:\n\t\t\t//\t\tCan be two types of labels: html or gfx.\n\t\t\t//\n\t\t\t//\t\t####gfx labels:\n\t\t\t//\n\t\t\t//\t\tNeed to be stored in registry to be used when the textDir will be set dynamically.\n\t\t\t//\t\tAdditional work on truncated labels is needed for case as 111111A (A stands for \"bidi\" character rtl directioned).\n\t\t\t//\t\tlet's say in this case the truncation is \"111...\" If the textDir is auto, the display should be: \"...111\" but in gfx\n\t\t\t//\t\tcase we will get \"111...\". Because this.surface.setTextDir will calculate the dir of truncated\n\t\t\t//\t\tlabel, which value is \"111...\" but th real is \"111111A\".\n\t\t\t//\t\teach time we created a gfx truncated label we store it in the truncatedLabelsRegistry.\n\t\t\t//\n\t\t\t//\t\t####html labels:\n\t\t\t//\n\t\t\t//\t\tno need for repository (stored in another place). Here we only need to update the current dir according to textDir.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\n\t\t\tif(labelType == \"gfx\"){\n\t\t\t\t// store truncated gfx labels in the data structure.\n\t\t\t\tthis.truncatedLabelsRegistry.push({element: elem, label: label});\n\t\t\t\tif(this.textDir == \"auto\"){\n\t\t\t\t\telem.setShape({textDir: this.getTextDir(label)});\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(labelType == \"html\" && this.textDir == \"auto\"){\n\t\t\t\telem.children[0].dir = this.getTextDir(label);\n\t\t\t}\n\t\t},\n\t\t\n\t\trender: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tthis.isMirrored = false;\n\t\t\treturn this;\n\t\t},\n\t\t\n\t\t_resetLeftBottom: function(axis){\n\t\t\tif(axis.vertical && this.isMirrored){\n\t\t\t\taxis.opt.leftBottom = !axis.opt.leftBottom;\n\t\t\t}\n\t\t}\t\t\n\t});\n});\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/bidi/Chart.js\n// module id = 298\n// module chunks = 0","define([\"./_base\", \"dojo/_base/lang\",\"dojo/_base/sniff\", \"dojo/dom\", \"dojo/_base/html\", \"dojo/_base/array\",\n\t\t\"./utils\", \"./shape\", \"./path\", \"dojox/string/BidiEngine\"],\nfunction(g, lang, has, dom, html, arr, utils, shapeLib, pathLib, BidiEngine){\n\tlang.getObject(\"dojox.gfx._gfxBidiSupport\", true);\n\n\t/*=====\n\t// Prevent changes here from masking the definitions in _base.js from the doc parser\n\tvar origG = g;\n\tg = {};\n\t=====*/\n\n\tswitch (g.renderer){\n\t\tcase 'vml':\n\t\t\tg.isVml = true;\n\t\t\tbreak;\n\t\tcase 'svg':\n\t\t\tg.isSvg = true;\n\t\t\tif(g.svg.useSvgWeb){\n\t\t\t\tg.isSvgWeb = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'silverlight':\n\t\t\tg.isSilverlight = true;\n\t\t\tbreak;\n\t\tcase 'canvas':\n\t\tcase 'canvasWithEvents':\n\t\t\tg.isCanvas = true;\n\t\t\tbreak;\n\t}\n\n\tvar bidi_const = {\n\t\tLRM : '\\u200E',\n\t\tLRE : '\\u202A',\n\t\tPDF : '\\u202C',\n\t\tRLM : '\\u200f',\n\t\tRLE : '\\u202B'\n\t};\n\n\t/*===== g = origG; =====*/\n\n\t// the object that performs text transformations.\n\tvar bidiEngine = new BidiEngine();\n\n\tlang.extend(g.shape.Surface, {\n\t\t// textDir: String\n\t\t//\t\tWill be used as default for Text/TextPath/Group objects that created by this surface\n\t\t//\t\tand textDir wasn't directly specified for them, though the bidi support was loaded.\n\t\t//\t\tCan be set in two ways:\n\t\t//\n\t\t//\t\t1. When the surface is created and textDir value passed to it as fourth\n\t\t//\t\tparameter.\n\t\t//\t\t2. Using the setTextDir(String) function, when this function is used the value\n\t\t//\t\tof textDir propagates to all of it's children and the children of children (for Groups) etc.\n\t\ttextDir: \"\",\n\n\t\tsetTextDir: function(/*String*/newTextDir){\n\t\t\t// summary:\n\t\t\t//\t\tUsed for propagation and change of textDir.\n\t\t\t//\t\tnewTextDir will be forced as textDir for all of it's children (Group/Text/TextPath).\n\t\t\tsetTextDir(this, newTextDir);\n\t\t},\n\n\t\tgetTextDir: function(){\n\t\t\treturn this.textDir;\n\t\t}\n\t});\n\n\tlang.extend(g.Group, {                          \n\t\t// textDir: String\n\t\t//\t\tWill be used for inheritance, or as default for text objects\n\t\t//\t\tthat textDir wasn't directly specified for them but the bidi support was required.\n\t\ttextDir: \"\",\n\n\t\tsetTextDir: function(/*String*/newTextDir){\n\t\t\t// summary:\n\t\t\t//\t\tUsed for propagation and change of textDir.\n\t\t\t//\t\tnewTextDir will be forced as textDir for all of it's children (Group/Text/TextPath).\n\t\t\tsetTextDir(this, newTextDir);\n\t\t},\n\n\t\tgetTextDir: function(){\n\t\t\treturn this.textDir;\n\t\t}\t\n\t});\n\t\n\tlang.extend(g.Text, {  \n\t\t// summary:\n\t\t//\t\tOverrides some of dojox/gfx.Text properties, and adds some\n\t\t//\t\tfor bidi support.\n\t\t\n\t\t// textDir: String\n\t\t//\t\tUsed for displaying bidi scripts in right layout.\n\t\t//\t\tDefines the base direction of text that displayed, can have 3 values:\n\t\t//\n\t\t//\t\t1. \"ltr\" - base direction is left to right.\n\t\t//\t\t2. \"rtl\" - base direction is right to left.\n\t\t//\t\t3. \"auto\" - base direction is contextual (defined by first strong character).\n\t\ttextDir: \"\",\n\n\t\tformatText: function (/*String*/ text, /*String*/ textDir){\n\t\t\t// summary:\n\t\t\t//\t\tApplies the right transform on text, according to renderer.\n\t\t\t// text:\t\n\t\t\t//\t\tthe string for manipulation, by default return value.\n\t\t\t// textDir:\t\n\t\t\t//\t\tText direction.\n\t\t\t//\t\tCan be:\n\t\t\t//\n\t\t\t//\t\t1. \"ltr\" - for left to right layout.\n\t\t\t//\t\t2. \"rtl\" - for right to left layout\n\t\t\t//\t\t3. \"auto\" - for contextual layout: the first strong letter decides the direction.\n\t\t\t// description:\n\t\t\t//\t\tFinds the right transformation that should be applied on the text, according to renderer.\n\t\t\t//\t\tWas tested in:\n\t\t\t//\n\t\t\t//\t\tRenderers (browser for testing):\n\t\t\t//\n\t\t\t//\t\t- canvas (FF, Chrome, Safari),\n\t\t\t//\t\t- vml (IE),\n\t\t\t//\t\t- svg (FF, Chrome, Safari, Opera),\n\t\t\t//\t\t- silverlight (IE, Chrome, Safari, Opera),\n\t\t\t//\t\t- svgWeb(FF, Chrome, Safari, Opera, IE).\n\t\t\t//\n\t\t\t//\t\tBrowsers [browser version that was tested]:\n\t\t\t//\n\t\t\t//\t\t- IE [6,7,8], FF [3.6],\n\t\t\t//\t\t- Chrome (latest for March 2011),\n\t\t\t//\t\t- Safari [5.0.3],\n\t\t\t//\t\t- Opera [11.01].\n\n\t\t\tif(textDir && text && text.length > 1){\n\t\t\t\tvar sourceDir = \"ltr\", targetDir = textDir;\n\t\n\t\t\t\tif(targetDir == \"auto\"){\n\t\t\t\t\t//is auto by default\n\t\t\t\t\tif(g.isVml){\n\t\t\t\t\t\treturn text;\n\t\t\t\t\t}\n\t\t\t\t\ttargetDir = bidiEngine.checkContextual(text);\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isVml){\n\t\t\t\t\tsourceDir = bidiEngine.checkContextual(text);\n\t\t\t\t\tif(targetDir != sourceDir){\n\t\t\t\t\t\tif(targetDir == \"rtl\"){\n\t\t\t\t\t\t\treturn !bidiEngine.hasBidiChar(text) ? bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\") : bidi_const.RLM + bidi_const.RLM + text;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn bidi_const.LRM + text;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isSvgWeb){\n\t\t\t\t\tif(targetDir == \"rtl\"){\n\t\t\t\t\t\treturn bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\");\n\t\t\t\t\t}\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isSilverlight){\n\t\t\t\t\treturn (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRNNN\",\"VLYNN\") : bidiEngine.bidiTransform(text,\"ILNNN\",\"VLYNN\");\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isCanvas){\n\t\t\t\t\treturn (targetDir == \"rtl\") ? bidi_const.RLE + text + bidi_const.PDF : bidi_const.LRE + text + bidi_const.PDF;\n\t\t\t\t}\n\t\n\t\t\t\tif(g.isSvg){\n\t\t\t\t\tif(has(\"ff\") < 4){\n\t\t\t\t\t\treturn (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRYNN\",\"VLNNN\") : bidiEngine.bidiTransform(text,\"ILYNN\",\"VLNNN\");\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn bidi_const.LRM + (targetDir == \"rtl\" ? bidi_const.RLE : bidi_const.LRE) + text + bidi_const.PDF;\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\t\n\t\t\t}\n\t\t\treturn text;\n\t\t},\t\n\n\t\tbidiPreprocess: function(newShape){     \n\t\t\treturn newShape;\n\t\t}\n\t});\n\n\tlang.extend(g.TextPath, {\n\t\t// textDir: String\n\t\t//\t\tUsed for displaying bidi scripts in right layout.\n\t\t//\t\tDefines the base direction of text that displayed, can have 3 values:\n\t\t//\n\t\t//\t\t1. \"ltr\" - base direction is left to right.\n\t\t//\t\t2. \"rtl\" - base direction is right to left.\n\t\t//\t\t3. \"auto\" - base direction is contextual (defined by first strong character).\n\t\ttextDir: \"\",\n\n\t\tformatText: function (/*String*/text, /*String*/textDir){\n\t\t\t// summary:\n\t\t\t//\t\tApplies the right transform on text, according to renderer.\n\t\t\t// text:\n\t\t\t//\t\tthe string for manipulation, by default return value.\n\t\t\t// textDir:\n\t\t\t//\t\ttext direction direction.\n\t\t\t//\t\tCan be:\n\t\t\t//\n\t\t\t//\t\t1. \"ltr\" - for left to right layout.\n\t\t\t//\t\t2. \"rtl\" - for right to left layout\n\t\t\t//\t\t3. \"auto\" - for contextual layout: the first strong letter decides the direction.\n\t\t\t// description:\n\t\t\t//\t\tFinds the right transformation that should be applied on the text, according to renderer.\n\t\t\t//\t\tWas tested in:\n\t\t\t//\n\t\t\t//\t\tRenderers:\n\t\t\t//\t\tcanvas (FF, Chrome, Safari), vml (IE), svg (FF, Chrome, Safari, Opera), silverlight (IE8), svgWeb(FF, Chrome, Safari, Opera, IE).\n\t\t\t//\n\t\t\t//\t\tBrowsers:\n\t\t\t//\t\tIE [6,7,8], FF [3.6], Chrome (latest for February 2011), Safari [5.0.3], Opera [11.01].\n\n\t\t\tif(textDir && text && text.length > 1){\n\t\t\t\tvar sourceDir = \"ltr\", targetDir = textDir;\n\n\t\t\t\tif(targetDir == \"auto\"){\n\t\t\t\t\t//is auto by default\n\t\t\t\t\tif(g.isVml){\n\t\t\t\t\t\treturn text;\n\t\t\t\t\t}\n\t\t\t\t\ttargetDir = bidiEngine.checkContextual(text);\n\t\t\t\t}\n\n\t\t\t\tif(g.isVml){\n\t\t\t\t\tsourceDir = bidiEngine.checkContextual(text);\n\t\t\t\t\tif(targetDir != sourceDir){\n\t\t\t\t\t\tif(targetDir == \"rtl\"){\n\t\t\t\t\t\t\treturn !bidiEngine.hasBidiChar(text) ? bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\") : bidi_const.RLM + bidi_const.RLM + text;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn bidi_const.LRM + text;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\t\t\tif(g.isSvgWeb){\n\t\t\t\t\tif(targetDir == \"rtl\"){\n\t\t\t\t\t\treturn bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\");\n\t\t\t\t\t}\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\t\t\t//unlike the g.Text that is rendered in logical layout for Bidi scripts.\n\t\t\t\t//for g.TextPath in svg always visual -> bidi script is unreadable (except Opera and FF start from version 4)\n\t\t\t\tif(g.isSvg){\n\t\t\t\t\tif(has(\"opera\") || has(\"ff\") >= 4){\n\t\t\t\t\t\ttext = bidi_const.LRM + (targetDir == \"rtl\"? bidi_const.RLE : bidi_const.LRE) + text + bidi_const.PDF;\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttext = (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRYNN\",\"VLNNN\") : bidiEngine.bidiTransform(text,\"ILYNN\",\"VLNNN\");\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\t\n\t\t\t}\t\n\t\t\treturn text;\n\t\t},\n\t\tbidiPreprocess: function(newText){\n\t\t\tif(newText && (typeof newText == \"string\")){\n\t\t\t\tthis.origText = newText;\n\t\t\t\tnewText = this.formatText(newText,this.textDir);\n\t\t\t}\n\t\t\treturn newText;\n\t\t}\n\t});\t\n\t\t\n\tvar extendMethod = function(shape, method, before, after){\n\t\t// summary:\n\t\t//\t\tSome helper function. Used for extending methods of shape.\n\t\t// shape: Object\n\t\t//\t\tThe shape we overriding it's method.\n\t\t// method: String\n\t\t//\t\tThe method that is extended, the original method is called before or after\n\t\t//\t\tfunctions that passed to extendMethod.\n\t\t// before: function\n\t\t//\t\tIf defined this function will be executed before the original method.\n\t\t// after: function\n\t\t//\t\tIf defined this function will be executed after the original method.\n\t\tvar old = shape.prototype[method];\n\t\tshape.prototype[method] = \n\t\t\tfunction(){\n\t\t\t\tvar rBefore;\n\t\t\t\tif (before){\n\t\t\t\t\trBefore = before.apply(this, arguments);\n\t\t\t\t}\n\t\t\t\tvar r = old.call(this, rBefore);\n\t\t\t\tif (after){\n\t\t\t\t\tr = after.call(this, r, arguments);\n\t\t\t\t}\n\t\t\t\treturn r;\n\t\t\t};\n\t};\n\n\tvar bidiPreprocess = function(newText){\n\t\tif (newText){  \n\t\t\tif (newText.textDir){\n\t\t\t\tnewText.textDir = validateTextDir(newText.textDir);\n\t\t\t}\n\t\t\tif (newText.text && (newText.text instanceof Array)){\n\t\t\t\tnewText.text = newText.text.join(\",\");\n\t\t\t}\n\t\t}\n\t\tif(newText && (newText.text != undefined || newText.textDir) && (this.textDir != newText.textDir || newText.text != this.origText)){\n\t\t\t// store the original text. \n\t\t\tthis.origText = (newText.text != undefined) ? newText.text : this.origText;\n\t\t\tif(newText.textDir){\n\t\t\t\tthis.textDir = newText.textDir;\n\t\t\t}\n\t\t\tnewText.text = this.formatText(this.origText,this.textDir);\n\t\t}\n\t\treturn this.bidiPreprocess(newText);\n\n\t};\n\n\t// Instead of adding bidiPreprocess to all renders one by one\n\t// use the extendMethod, at first there's a need for bidi transformation \n\t// on text then call to original setShape.\n\textendMethod(g.Text,\"setShape\", bidiPreprocess, null);\n\textendMethod(g.TextPath,\"setText\", bidiPreprocess, null);\n\t\n\tvar restoreText = function(origObj){\n\t\tvar obj = lang.clone(origObj);\n\t\tif (obj && this.origText){\n\t\t\tobj.text = this.origText;\n\t\t}\n\t\treturn obj;\n\t};\n\n\t// Instead of adding restoreText to all renders one by one\n\t// use the extendMethod, at first get the shape by calling the original getShape,\n\t// than resrore original text (without the text transformations).\n\textendMethod(g.Text, \"getShape\", null, restoreText);\n\textendMethod(g.TextPath, \"getText\", null, restoreText);\n\n\tvar groupTextDir = function(group, args){\n\t\tvar textDir;\n\t\tif (args && args[0]){\n\t\t\ttextDir = validateTextDir(args[0]);\n\t\t}\n\t\tgroup.setTextDir(textDir ? textDir : this.textDir);\n\t\treturn group;\t// dojox/gfx.Group\n\t};\n\n\t// In creation of Group there's a need to update it's textDir,\n\t// so instead of doing it in renders one by one (vml vs others)\n\t// use the extendMethod, at first the original createGroup is applied, the\n\t// groupTextDir which is setts Group's textDir as it's father's or if was defined\n\t// by user by this value.\n\textendMethod(g.Surface, \"createGroup\", null, groupTextDir);\n\textendMethod(g.Group, \"createGroup\", null, groupTextDir);\n\n\tvar textDirPreprocess =  function(text){\n\t\t// inherit from surface / group  if textDir is defined there\n\t\tif(text){\n\t\t\tvar textDir = text.textDir ? validateTextDir(text.textDir) : this.textDir;\n\t\t\tif(textDir){\n\t\t\t\ttext.textDir = textDir;\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t};\n\n\t// In creation there's a need to some preprocess,\n\t// so instead of doing it in renders one by one (vml vs others)\n\t// use the extendMethod, at first the textDirPreprocess function handles the input\n\t// then the original createXXXXXX is applied.\n\textendMethod(g.Surface,\"createText\", textDirPreprocess, null);\n\textendMethod(g.Surface,\"createTextPath\", textDirPreprocess, null);\n\textendMethod(g.Group,\"createText\", textDirPreprocess, null);\n\textendMethod(g.Group,\"createTextPath\", textDirPreprocess, null);\n\n\t/*=====\n\t// don't mask definition of original createSurface() function from doc parser\n\tg = {};\n\t=====*/\n\n\tg.createSurface = function(parentNode, width, height, textDir) {\n\t\tvar s = g[g.renderer].createSurface(parentNode, width, height);\n\t\tvar tDir = validateTextDir(textDir);\n\t\t\n\t\tif(g.isSvgWeb){\n\t\t\ts.textDir = tDir ? tDir : html.style(dom.byId(parentNode),\"direction\");\n\t\t\treturn s;\n\t\t}\n\t\t// if textDir was defined use it, else get default value.\n\t\t//s.textDir = tDir ? tDir : html.style(s.rawNode,\"direction\");\n\t\tif(g.isVml || g.isSvg || g.isCanvas){\n\t\t\ts.textDir = tDir ? tDir : html.style(s.rawNode,\"direction\");\n\t\t}\n\t\tif(g.isSilverlight){\n\t\t\t// allow this once rawNode will be able for the silverlight\n\t\t\t//s.textDir = tDir ? tDir : dojo.style(s.rawNode,\"direction\");\n\t\t\ts.textDir = tDir ? tDir : html.style(s._nodes[1],\"direction\");\n\t\t}\n\t\t\n\t\treturn s;\n\t};\n\t/*===== g = origG; =====*/\n\n\t// some helper functions\n\t\n\tfunction setTextDir(/*Object*/ obj, /*String*/ newTextDir){\n\t\tvar tDir = validateTextDir(newTextDir);\n\t\tif (tDir){\n\t\t\tg.utils.forEach(obj,function(e){\n\t\t\t\tif(e instanceof g.Surface || e instanceof g.Group){\n\t\t\t\t\te.textDir = tDir;\n\t\t\t\t}\t\t\n\t\t\t\tif(e instanceof g.Text){\n\t\t\t\t\te.setShape({textDir: tDir});\n\t\t\t\t}\n\t\t\t\tif(e instanceof g.TextPath){\n\t\t\t\t\te.setText({textDir: tDir})\n\t\t\t\t}\n\t\t\t}, obj);\n\t\t}\n\t\treturn obj;\n\t}\n\n\tfunction validateTextDir(textDir){\n\t\tvar validValues = [\"ltr\",\"rtl\",\"auto\"]; \n\t\tif (textDir){\n\t\t\ttextDir = textDir.toLowerCase();\n\t\t\tif (arr.indexOf(validValues, textDir) < 0){\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn textDir;\n\t}\n\n\treturn g; // return gfx api augmented with bidi support\t\n});\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/gfx/_gfxBidiSupport.js\n// module id = 299\n// module chunks = 0","define([\"dojo/_base/kernel\",\"dojo/_base/lang\",\"./_base\", \"dojo/_base/html\",\"dojo/_base/array\", \"dojo/_base/window\", \"dojo/_base/json\", \n\t\"dojo/_base/Deferred\", \"dojo/_base/sniff\", \"require\",\"dojo/_base/config\"], \n  function(kernel, lang, g, html, arr, win, jsonLib, Deferred, has, require, config){\n\tvar gu = g.utils = {};\n\n\tlang.mixin(gu, {\n\t\tforEach: function(\n\t\t\t/*dojox/gfx/shape.Surface|dojox/gfx/shape.Shape*/ object,\n\t\t\t/*Function|String|Array*/ f, /*Object?*/ o\n\t\t){\n\t\t\t// summary:\n\t\t\t//\t\tTakes a shape or a surface and applies a function \"f\" to in the context of \"o\"\n\t\t\t//\t\t(or global, if missing). If \"shape\" was a surface or a group, it applies the same\n\t\t\t//\t\tfunction to all children recursively effectively visiting all shapes of the underlying scene graph.\n\t\t\t// object:\n\t\t\t//\t\tThe gfx container to iterate.\n\t\t\t// f:\n\t\t\t//\t\tThe function to apply.\n\t\t\t// o:\n\t\t\t//\t\tThe scope.\n\t\t\to = o || kernel.global;\n\t\t\tf.call(o, object);\n\t\t\tif(object instanceof g.Surface || object instanceof g.Group){\n\t\t\t\tarr.forEach(object.children, function(shape){\n\t\t\t\t\tgu.forEach(shape, f, o);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tserialize: function(object){\n\t\t\t// summary:\n\t\t\t//\t\tTakes a shape or a surface and returns an object, which describes underlying shapes.\n\t\t\t// object: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\n\t\t\t//\t\tThe container to serialize.\n\n\t\t\tvar t = {}, v, isSurface = object instanceof g.Surface;\n\t\t\tif(isSurface || object instanceof g.Group){\n\t\t\t\tt.children = arr.map(object.children, gu.serialize);\n\t\t\t\tif(isSurface){\n\t\t\t\t\treturn t.children;\t// Array\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tt.shape = object.getShape();\n\t\t\t}\n\t\t\tif(object.getTransform){\n\t\t\t\tv = object.getTransform();\n\t\t\t\tif(v){ t.transform = v; }\n\t\t\t}\n\t\t\tif(object.getStroke){\n\t\t\t\tv = object.getStroke();\n\t\t\t\tif(v){ t.stroke = v; }\n\t\t\t}\n\t\t\tif(object.getFill){\n\t\t\t\tv = object.getFill();\n\t\t\t\tif(v){ t.fill = v; }\n\t\t\t}\n\t\t\tif(object.getFont){\n\t\t\t\tv = object.getFont();\n\t\t\t\tif(v){ t.font = v; }\n\t\t\t}\n\t\t\treturn t;\t// Object\n\t\t},\n\n\t\ttoJson: function(object, prettyPrint){\n\t\t\t// summary:\n\t\t\t//\t\tWorks just like serialize() but returns a JSON string. If prettyPrint is true, the string is pretty-printed to make it more human-readable.\n\t\t\t// object: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\n\t\t\t//\t\tThe container to serialize.\n\t\t\t// prettyPrint: Boolean?\n\t\t\t//\t\tIndicates whether the output string should be formatted.\n\t\t\t// returns: String\n\t\t\t\n\t\t\treturn jsonLib.toJson(gu.serialize(object), prettyPrint);\t// String\n\t\t},\n\n\t\tdeserialize: function(parent, object){\n\t\t\t// summary:\n\t\t\t//\t\tTakes a surface or a shape and populates it with an object produced by serialize().\n\t\t\t// parent: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\n\t\t\t//\t\tThe destination container for the deserialized shapes.\n\t\t\t// object: dojox/gfx/shape.Shape|Array\n\t\t\t//\t\tThe shapes to deserialize.\n\n\t\t\tif(object instanceof Array){\n\t\t\t\treturn arr.map(object, lang.hitch(null, gu.deserialize, parent));\t// Array\n\t\t\t}\n\t\t\tvar shape = (\"shape\" in object) ? parent.createShape(object.shape) : parent.createGroup();\n\t\t\tif(\"transform\" in object){\n\t\t\t\tshape.setTransform(object.transform);\n\t\t\t}\n\t\t\tif(\"stroke\" in object){\n\t\t\t\tshape.setStroke(object.stroke);\n\t\t\t}\n\t\t\tif(\"fill\" in object){\n\t\t\t\tshape.setFill(object.fill);\n\t\t\t}\n\t\t\tif(\"font\" in object){\n\t\t\t\tshape.setFont(object.font);\n\t\t\t}\n\t\t\tif(\"children\" in object){\n\t\t\t\tarr.forEach(object.children, lang.hitch(null, gu.deserialize, shape));\n\t\t\t}\n\t\t\treturn shape;\t// dojox/gfx/shape.Shape\n\t\t},\n\n\t\tfromJson: function(parent, json){\n\t\t\t// summary:\n\t\t\t//\t\tWorks just like deserialize() but takes a JSON representation of the object.\n\t\t\t// parent: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\n\t\t\t//\t\tThe destination container for the deserialized shapes.\n\t\t\t// json: String\n\t\t\t//\t\tThe shapes to deserialize.\n\n\t\t\treturn gu.deserialize(parent, jsonLib.fromJson(json));\t// Array|dojox/gfx/shape.Shape\n\t\t},\n\n\t\ttoSvg: function(/*dojox/gfx/shape.Surface*/surface){\n\t\t\t// summary:\n\t\t\t//\t\tFunction to serialize a GFX surface to SVG text.\n\t\t\t// description:\n\t\t\t//\t\tFunction to serialize a GFX surface to SVG text.  The value of this output\n\t\t\t//\t\tis that there are numerous serverside parser libraries that can render\n\t\t\t//\t\tSVG into images in various formats.  This provides a way that GFX objects\n\t\t\t//\t\tcan be captured in a known format and sent serverside for serialization\n\t\t\t//\t\tinto an image.\n\t\t\t// surface:\n\t\t\t//\t\tThe GFX surface to serialize.\n\t\t\t// returns:\n\t\t\t//\t\tDeferred object that will be called when SVG serialization is complete.\n\t\t\n\t\t\t//Since the init and even surface creation can be async, we need to\n\t\t\t//return a deferred that will be called when content has serialized.\n\t\t\tvar deferred = new Deferred();\n\t\t\n\t\t\tif(g.renderer === \"svg\"){\n\t\t\t\t//If we're already in SVG mode, this is easy and quick.\n\t\t\t\ttry{\n\t\t\t\t\tvar svg = gu._cleanSvg(gu._innerXML(surface.rawNode));\n\t\t\t\t\tdeferred.callback(svg);\n\t\t\t\t}catch(e){\n\t\t\t\t\tdeferred.errback(e);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//Okay, now we have to get creative with hidden iframes and the like to\n\t\t\t\t//serialize SVG.\n\t\t\t\tif (!gu._initSvgSerializerDeferred) {\n\t\t\t\t\tgu._initSvgSerializer();\n\t\t\t\t}\n\t\t\t\tvar jsonForm = gu.toJson(surface);\n\t\t\t\tvar serializer = function(){\n\t\t\t\t\ttry{\n\t\t\t\t\t\tvar sDim = surface.getDimensions();\n\t\t\t\t\t\tvar width = sDim.width;\n\t\t\t\t\t\tvar\theight = sDim.height;\n\n\t\t\t\t\t\t//Create an attach point in the iframe for the contents.\n\t\t\t\t\t\tvar node = gu._gfxSvgProxy.document.createElement(\"div\");\n\t\t\t\t\t\tgu._gfxSvgProxy.document.body.appendChild(node);\n\t\t\t\t\t\t//Set the node scaling.\n\t\t\t\t\t\twin.withDoc(gu._gfxSvgProxy.document, function() {\n\t\t\t\t\t\t\thtml.style(node, \"width\", width);\n\t\t\t\t\t\t\thtml.style(node, \"height\", height);\n\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t//Create temp surface to render object to and render.\n\t\t\t\t\t\tvar ts = gu._gfxSvgProxy[dojox._scopeName].gfx.createSurface(node, width, height);\n\n\t\t\t\t\t\t//It's apparently possible that a suface creation is async, so we need to use\n\t\t\t\t\t\t//the whenLoaded function.  Probably not needed for SVG, but making it common\n\t\t\t\t\t\tvar draw = function(surface) {\n\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tgu._gfxSvgProxy[dojox._scopeName].gfx.utils.fromJson(surface, jsonForm);\n\n\t\t\t\t\t\t\t\t//Get contents and remove temp surface.\n\t\t\t\t\t\t\t\tvar svg = gu._cleanSvg(node.innerHTML);\n\t\t\t\t\t\t\t\tsurface.clear();\n\t\t\t\t\t\t\t\tsurface.destroy();\n\t\t\t\t\t\t\t\tgu._gfxSvgProxy.document.body.removeChild(node);\n\t\t\t\t\t\t\t\tdeferred.callback(svg);\n\t\t\t\t\t\t\t}catch(e){\n\t\t\t\t\t\t\t\tdeferred.errback(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tts.whenLoaded(null,draw);\n\t\t\t\t\t }catch (ex) {\n\t\t\t\t\t\tdeferred.errback(ex);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t//See if we can call it directly or pass it to the deferred to be\n\t\t\t\t//called on initialization.\n\t\t\t\tif(gu._initSvgSerializerDeferred.fired > 0){\n\t\t\t\t\tserializer();\n\t\t\t\t}else{\n\t\t\t\t\tgu._initSvgSerializerDeferred.addCallback(serializer);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn deferred; //dojo.Deferred that will be called when serialization finishes.\n\t\t},\n\n\t\t//iFrame document used for handling SVG serialization.\n\t\t_gfxSvgProxy: null,\n\n\t\t//Serializer loaded.\n\t\t_initSvgSerializerDeferred: null,\n\n\t\t_svgSerializerInitialized: function() {\n\t\t\t// summary:\n\t\t\t//\t\tInternal function to call when the serializer init completed.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tgu._initSvgSerializerDeferred.callback(true);\n\t\t},\n\n\t\t_initSvgSerializer: function(){\n\t\t\t// summary:\n\t\t\t//\t\tInternal function to initialize the hidden iframe where SVG rendering\n\t\t\t//\t\twill occur.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tif(!gu._initSvgSerializerDeferred){\n\t\t\t\tgu._initSvgSerializerDeferred = new Deferred();\n\t\t\t\tvar f = win.doc.createElement(\"iframe\");\n\t\t\t\thtml.style(f, {\n\t\t\t\t\tdisplay: \"none\",\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\twidth: \"1em\",\n\t\t\t\t\theight: \"1em\",\n\t\t\t\t\ttop: \"-10000px\"\n\t\t\t\t});\n\t\t\t\tvar intv;\n\t\t\t\tif(has(\"ie\")){\n\t\t\t\t\tf.onreadystatechange = function(){\n\t\t\t\t\t\tif(f.contentWindow.document.readyState == \"complete\"){\n\t\t\t\t\t\t\tf.onreadystatechange = function() {};\n\t\t\t\t\t\t\tintv = setInterval(function() {\n\t\t\t\t\t\t\t\tif(f.contentWindow[kernel.scopeMap[\"dojo\"][1]._scopeName] &&\n\t\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx &&\n\t\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils){\n\t\t\t\t\t\t\t\t\tclearInterval(intv);\n\t\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._gfxSvgProxy = f.contentWindow;\n\t\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._svgSerializerInitialized();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 50);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}else{\n\t\t\t\t\tf.onload = function(){\n\t\t\t\t\t\tf.onload = function() {};\n\t\t\t\t\t\tintv = setInterval(function() {\n\t\t\t\t\t\t\tif(f.contentWindow[kernel.scopeMap[\"dojo\"][1]._scopeName] &&\n\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx &&\n\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils){\n\t\t\t\t\t\t\t\tclearInterval(intv);\n\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._gfxSvgProxy = f.contentWindow;\n\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._svgSerializerInitialized();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 50);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t//We have to load the GFX SVG proxy frame.  Default is to use the one packaged in dojox.\n\t\t\t\tvar uri = (config[\"dojoxGfxSvgProxyFrameUrl\"]||require.toUrl(\"dojox/gfx/resources/gfxSvgProxyFrame.html\"));\n\t\t\t\tf.setAttribute(\"src\", uri.toString());\n\t\t\t\twin.body().appendChild(f);\n\t\t\t}\n\t\t},\n\n\t\t_innerXML: function(/*Node*/node){\n\t\t\t// summary:\n\t\t\t//\t\tImplementation of MS's innerXML function, borrowed from dojox.xml.parser.\n\t\t\t// node:\n\t\t\t//\t\tThe node from which to generate the XML text representation.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tif(node.innerXML){\n\t\t\t\treturn node.innerXML;\t//String\n\t\t\t}else if(node.xml){\n\t\t\t\treturn node.xml;\t\t//String\n\t\t\t}else if(typeof XMLSerializer != \"undefined\"){\n\t\t\t\treturn (new XMLSerializer()).serializeToString(node);\t//String\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\n\t\t_cleanSvg: function(svg) {\n\t\t\t// summary:\n\t\t\t//\t\tInternal function that cleans up artifacts in extracted SVG content.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\t\t\tif(svg){\n\t\t\t\t//Make sure the namespace is set.\n\t\t\t\tif(svg.indexOf(\"xmlns=\\\"http://www.w3.org/2000/svg\\\"\") == -1){\n\t\t\t\t\tsvg = svg.substring(4, svg.length);\n\t\t\t\t\tsvg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\" + svg;\n\t\t\t\t}\n\t\t\t\t//Same for xmlns:xlink (missing in Chrome and Safari)\n\t\t\t\tif(svg.indexOf(\"xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\") == -1){\n\t\t\t\t\tsvg = svg.substring(4, svg.length);\n\t\t\t\t\tsvg = \"<svg xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\" + svg;\n\t\t\t\t}\n\t\t\t\t//and add namespace to href attribute if not done yet \n\t\t\t\t//(FF 5+ adds xlink:href but not the xmlns def)\n\t\t\t\tif(svg.indexOf(\"xlink:href\") === -1){\n\t\t\t\t\tsvg = svg.replace(/href\\s*=/g, \"xlink:href=\");\n\t\t\t\t}\n\t\t\t\t// in IE, <image are serialized as <img>\n\t\t\t\tsvg = svg.replace(/<img\\b([^>]*)>/gi,\"<image $1 />\");\n\t\t\t\t//Do some other cleanup, like stripping out the\n\t\t\t\t//dojoGfx attributes and quoting ids.\n\t\t\t\tsvg = svg.replace(/\\bdojoGfx\\w*\\s*=\\s*(['\"])\\w*\\1/g, \"\");\n\t\t\t\tsvg = svg.replace(/\\b__gfxObject__\\s*=\\s*(['\"])\\w*\\1/g, \"\");\n\t\t\t\tsvg = svg.replace(/[=]([^\"']+?)(\\s|>)/g,'=\"$1\"$2');\n\t\t\t\t\n\t\t\t\t// Undefined strokes (IE 8 seralization weirdness) should be removed to  \n\t\t\t\t// allow default.  'undefined' is not a valid value. \n\t\t\t\tsvg = svg.replace(/\\bstroke-opacity\\w*\\s*=\\s*(['\"])undefined\\1/g, \"\"); \t\t\t\t\n\t\t\t}\n\t\t\treturn svg;  //Cleaned SVG text.\n\t\t}\n\t});\n\n\treturn gu;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/gfx/utils.js\n// module id = 300\n// module chunks = 0","  define ({\n\t\treverseMatrix: function(plot, dim, offsets, rtl){\n\t\t\t//summary:\n\t\t\t//\treverse the underlying matrix of the plots to perform the mirroring behavior.\n\t\t\t//plot:\n\t\t\t//  the plot which has the matrix to be reversed.\n\t\t\t//dim:\n\t\t\t//  the dimension (width,height) of the chart.\n\t\t\t//offsets:\n\t\t\t//  the offsets of the chart\n\t\t\tvar shift = offsets.l - offsets.r;\n\t\t\tvar xx = rtl? -1 : 1;\n\t\t\tvar xy = 0;\n\t\t\tvar yx = 0;\n\t\t\tvar yy = 1;\n\t\t\tvar dx = rtl? dim.width + shift : 0;\n\t\t\tvar dy = 0;\n\t\t\tif(plot.matrix){\n\t\t\t\txx = xx * Math.abs(plot.matrix.xx);\n\t\t\t\tyy = plot.matrix.yy;\n\t\t\t\txy = plot.matrix.xy;\n\t\t\t\tyx = plot.matrix.yx;\n\t\t\t\tdy = plot.matrix.xy;\n\t\t\t}\n\t\t\tplot.setTransform({xx: xx, xy: xy, yx: yx, yy: yy, dx: dx, dy: dy});\n \t}\n });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/bidi/_bidiutils.js\n// module id = 301\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/kernel\", \"./lambda\"],\n\tfunction(lang, arr, kernel, df){\n\n// This module adds high-level functions and related constructs:\n//\t- \"fold\" family of functions\n\n// Notes:\n//\t- missing high-level functions are provided with the compatible API:\n//\t\tfoldl, foldl1, foldr, foldr1\n//\t- missing JS standard functions are provided with the compatible API:\n//\t\treduce, reduceRight\n//\t- the fold's counterpart: unfold\n\n// Defined methods:\n//\t- take any valid lambda argument as the functional argument\n//\t- operate on dense arrays\n//\t- take a string as the array argument\n//\t- take an iterator objects as the array argument (only foldl, foldl1, and reduce)\n\n\tvar empty = {};\n\n\tlang.mixin(df, {\n\t\t// classic reduce-class functions\n\t\tfoldl: function(/*Array|String|Object*/ a, /*Function*/ f, /*Object*/ z, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\trepeatedly applies a binary function to an array from left\n\t\t\t//\t\tto right using a seed value as a starting point; returns the final\n\t\t\t//\t\tvalue.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tfor(i = 0, n = a.length; i < n; z = f.call(o, z, a[i], i, a), ++i);\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tfor(i = 0; a.hasNext(); z = f.call(o, z, a.next(), i++, a));\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tz = f.call(o, z, a[i], i, a);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn z;\t// Object\n\t\t},\n\t\tfoldl1: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\trepeatedly applies a binary function to an array from left\n\t\t\t//\t\tto right; returns the final value.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar z, i, n;\n\t\t\tif(lang.isArray(a)){\n\t\t\t\t// array\n\t\t\t\tz = a[0];\n\t\t\t\tfor(i = 1, n = a.length; i < n; z = f.call(o, z, a[i], i, a), ++i);\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\n\t\t\t\t// iterator\n\t\t\t\tif(a.hasNext()){\n\t\t\t\t\tz = a.next();\n\t\t\t\t\tfor(i = 1; a.hasNext(); z = f.call(o, z, a.next(), i++, a));\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t// object/dictionary\n\t\t\t\tvar first = true;\n\t\t\t\tfor(i in a){\n\t\t\t\t\tif(!(i in empty)){\n\t\t\t\t\t\tif(first){\n\t\t\t\t\t\t\tz = a[i];\n\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tz = f.call(o, z, a[i], i, a);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn z;\t// Object\n\t\t},\n\t\tfoldr: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object*/ z, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\trepeatedly applies a binary function to an array from right\n\t\t\t//\t\tto left using a seed value as a starting point; returns the final\n\t\t\t//\t\tvalue.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tfor(var i = a.length; i > 0; --i, z = f.call(o, z, a[i], i, a));\n\t\t\treturn z;\t// Object\n\t\t},\n\t\tfoldr1: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\trepeatedly applies a binary function to an array from right\n\t\t\t//\t\tto left; returns the final value.\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\n\t\t\to = o || kernel.global; f = df.lambda(f);\n\t\t\tvar n = a.length, z = a[n - 1], i = n - 1;\n\t\t\tfor(; i > 0; --i, z = f.call(o, z, a[i], i, a));\n\t\t\treturn z;\t// Object\n\t\t},\n\t\t// JS 1.8 standard array functions, which can take a lambda as a parameter.\n\t\treduce: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ z){\n\t\t\t// summary:\n\t\t\t//\t\tapply a function simultaneously against two values of the array\n\t\t\t//\t\t(from left-to-right) as to reduce it to a single value.\n\t\t\treturn arguments.length < 3 ? df.foldl1(a, f) : df.foldl(a, f, z);\t// Object\n\t\t},\n\t\treduceRight: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ z){\n\t\t\t// summary:\n\t\t\t//\t\tapply a function simultaneously against two values of the array\n\t\t\t//\t\t(from right-to-left) as to reduce it to a single value.\n\t\t\treturn arguments.length < 3 ? df.foldr1(a, f) : df.foldr(a, f, z);\t// Object\n\t\t},\n\t\t// the fold's counterpart: unfold\n\t\tunfold: function(/*Function|String|Array*/ pr, /*Function|String|Array*/ f,\n\t\t\t\t\t\t/*Function|String|Array*/ g, /*Object*/ z, /*Object?*/ o){\n\t\t\t// summary:\n\t\t\t//\t\tbuilds an array by unfolding a value\n\t\t\to = o || kernel.global; f = df.lambda(f); g = df.lambda(g); pr = df.lambda(pr);\n\t\t\tvar t = [];\n\t\t\tfor(; !pr.call(o, z); t.push(f.call(o, z)), z = g.call(o, z));\n\t\t\treturn t;\t// Array\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/lang/functional/fold.js\n// module id = 302\n// module chunks = 0","define([\"dojo/_base/declare\", \"../Element\"],\n\tfunction(declare, Element){\n\t/*=====\n\tvar __BaseAxisCtorArgs = {\n\t\t// summary:\n\t\t//\t\tOptional arguments used in the definition of an invisible axis.\n\t\t// vertical: Boolean?\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\n\t\t// min: Number?\n\t\t//\t\tThe smallest value on an axis. Default is 0.\n\t\t// max: Number?\n\t\t//\t\tThe largest value on an axis. Default is 1.\n\t};\n\t=====*/\n\treturn declare(\"dojox.charting.axis2d.Base\", Element, {\n\t\t// summary:\n\t\t//\t\tThe base class for any axis.  This is more of an interface/API\n\t\t//\t\tdefinition than anything else; see dojox.charting.axis2d.Default\n\t\t//\t\tfor more details.\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tReturn a new base axis.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this axis belongs to.\n\t\t\t// kwArgs: __BaseAxisCtorArgs?\n\t\t\t//\t\tAn optional arguments object to define the axis parameters.\n\t\t\tthis.vertical = kwArgs && kwArgs.vertical;\n\t\t\tthis.opt = {};\n\t\t\tthis.opt.min = kwArgs && kwArgs.min;\n\t\t\tthis.opt.max = kwArgs && kwArgs.max;\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tStub function for clearing the axis.\n\t\t\t// returns: dojox/charting/axis2d/Base\n\t\t\t//\t\tA reference to the axis for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Base\n\t\t},\n\t\tinitialized: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturn a flag as to whether or not this axis has been initialized.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tIf the axis is initialized or not.\n\t\t\treturn false;\t//\tBoolean\n\t\t},\n\t\tcalculate: function(min, max, span){\n\t\t\t// summary:\n\t\t\t//\t\tStub function to run the calculations needed for drawing this axis.\n\t\t\t// returns: dojox/charting/axis2d/Base\n\t\t\t//\t\tA reference to the axis for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Base\n\t\t},\n\t\tgetScaler: function(){\n\t\t\t// summary:\n\t\t\t//\t\tA stub function to return the scaler object created during calculate.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe scaler object (see dojox.charting.scaler.linear for more information)\n\t\t\treturn null;\t//\tObject\n\t\t},\n\t\tgetTicks: function(){\n\t\t\t// summary:\n\t\t\t//\t\tA stub function to return the object that helps define how ticks are rendered.\n\t\t\t// returns: Object\n\t\t\t//\t\tThe ticks object.\n\t\t\treturn null;\t//\tObject\n\t\t},\n\t\tgetOffsets: function(){\n\t\t\t// summary:\n\t\t\t//\t\tA stub function to return any offsets needed for axis and series rendering.\n\t\t\t// returns: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\treturn {l: 0, r: 0, t: 0, b: 0};\t//\tObject\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tStub function to render this axis.\n\t\t\t// returns: dojox/charting/axis2d/Base\n\t\t\t//\t\tA reference to the axis for functional chaining.\n\t\t\tthis.dirty = false;\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Base\n\t\t},\n\t\tisNullValue: function(value){\n\t\t\t// summary:\n\t\t\t//\t\tA stub function to determine a data value\n\t\t\t//\t\tthat should be ignored.\n\t\t\t// value: Number|Null|Object\n\t\t\t//\t\tA data value to be inspected.\n\t\t\t// returns: Boolean\n\t\t\t//\t\tIf the value makes sense for this axis or not.\n\t\t\treturn false;\n\t\t},\n\t\tnaturalBaseline: 0\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/axis2d/Base.js\n// module id = 303\n// module chunks = 0","define([\"dojo/_base/declare\", \"dojo/dom-style\"],\n\tfunction(declare, domStyle){\n\t// module:\n\t//\t\tdojox/charting/bidi/axis2d/Default\t\t\t\n\treturn declare(null, {\n\t\tlabelTooltip: function(elem, chart, label, truncatedLabel, font, elemType){\n\t\t\t// additional preprocessing of the labels, needed for rtl base text direction in LTR\n\t\t\t// GUI, or for ltr base text direction for RTL GUI.\n\n\t\t\tvar isChartDirectionRtl = (domStyle.get(chart.node,\"direction\") == \"rtl\");\n\t\t\tvar isBaseTextDirRtl = (chart.getTextDir(label) == \"rtl\");\n\n\t\t\tif(isBaseTextDirRtl && !isChartDirectionRtl){\n\t\t\t\tlabel = \"<span dir='rtl'>\" + label +\"</span>\";\n\t\t\t}\n\t\t\tif(!isBaseTextDirRtl && isChartDirectionRtl){\n\t\t\t\tlabel = \"<span dir='ltr'>\" + label +\"</span>\";\n\t\t\t}\n\t\t\tthis.inherited(arguments);\n\t\t},\n\t\t\n\t\t_isRtl: function(){\n\t\t\treturn this.chart.isRightToLeft();\n\t\t}\n\t});\n});\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/bidi/axis2d/Default.js\n// module id = 304\n// module chunks = 0","define([\"dojo/_base/declare\", \"./Default\"], function(declare, Default){\n\n\treturn declare(\"dojox.charting.plot2d.Lines\", Default, {\n\t\t// summary:\n\t\t//\t\tA convenience constructor to create a typical line chart.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tPreset our default plot to be line-based.\n\t\t\tthis.opt.lines = true;\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Lines.js\n// module id = 305\n// module chunks = 0","define([\"dojo/_base/declare\", \"./Default\"], \n  function(declare, Default){\n\n\treturn declare(\"dojox.charting.plot2d.Areas\", Default, {\n\t\t// summary:\n\t\t//\t\tRepresents an area chart.  See dojox/charting/plot2d/Default for details.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for an Area chart.\n\t\t\tthis.opt.lines = true;\n\t\t\tthis.opt.areas = true;\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Areas.js\n// module id = 306\n// module chunks = 0","define([\"dojo/_base/declare\", \"./Default\"], function(declare, Default){\n\n\treturn declare(\"dojox.charting.plot2d.Markers\", Default, {\n\t\t// summary:\n\t\t//\t\tA convenience plot to draw a line chart with markers.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tSet up the plot for lines and markers.\n\t\t\tthis.opt.markers = true;\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Markers.js\n// module id = 307\n// module chunks = 0","define([\"dojo/_base/declare\", \"./Default\"], function(declare, Default){\n\n\treturn declare(\"dojox.charting.plot2d.MarkersOnly\", Default, {\n\t\t// summary:\n\t\t//\t\tA convenience object to draw only markers (like a scatter but not quite).\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tSet up our default plot to only have markers and no lines.\n\t\t\tthis.opt.lines   = false;\n\t\t\tthis.opt.markers = true;\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/MarkersOnly.js\n// module id = 308\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/has\", \"./CartesianBase\", \"./_PlotEvents\", \"./common\",\n\t\"dojox/lang/functional\", \"dojox/lang/functional/reversed\", \"dojox/lang/utils\", \"dojox/gfx/fx\", \"dojox/gfx/gradutils\"],\n\tfunction(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx, gradutils){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\treturn declare(\"dojox.charting.plot2d.Scatter\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tA plot object representing a typical scatter chart.\n\t\tdefaultParams: {\n\t\t\tshadows: null,\t// draw shadows\n\t\t\tanimate: null\t// animate chart to place\n\t\t},\n\t\toptionalParams: {\n\t\t\t// theme component\n\t\t\tmarkerStroke:\t\t{},\n\t\t\tmarkerOutline:\t\t{},\n\t\t\tmarkerShadow:\t\t{},\n\t\t\tmarkerFill:\t\t\t{},\n\t\t\tmarkerFont:\t\t\t\"\",\n\t\t\tmarkerFontColor:\t\"\",\n\t\t\tstyleFunc:\t\t\tnull\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate the scatter plot.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define this plot's parameters.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Scatter\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme, events = this.events();\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(!run.data.length){\n\t\t\t\t\trun.dirty = false;\n\t\t\t\t\tt.skip();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar theme = t.next(\"marker\", [this.opt, run]), lpoly,\n\t\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler);\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.marker = theme.symbol;\n\t\t\t\t\trun.dyn.markerFill = theme.marker.fill;\n\t\t\t\t\trun.dyn.markerStroke = theme.marker.stroke;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ts = run.group;\n\t\t\t\tif(typeof run.data[0] == \"number\"){\n\t\t\t\t\tlpoly = arr.map(run.data, function(v, i){\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tx: ht(i + 1) + offsets.l,\n\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v)\n\t\t\t\t\t\t};\n\t\t\t\t\t}, this);\n\t\t\t\t}else{\n\t\t\t\t\tlpoly = arr.map(run.data, function(v, i){\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tx: ht(v.x) + offsets.l,\n\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v.y)\n\t\t\t\t\t\t};\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\n\t\t\t\tvar shadowMarkers  = new Array(lpoly.length),\n\t\t\t\t\tfrontMarkers   = new Array(lpoly.length),\n\t\t\t\t\toutlineMarkers = new Array(lpoly.length);\n\n\t\t\t\tarr.forEach(lpoly, function(c, i){\n\t\t\t\t\tvar value = run.data[i], finalTheme;\n\t\t\t\t\tif(this.opt.styleFunc || typeof value != \"number\"){\n\t\t\t\t\t\tvar tMixin = typeof value != \"number\" ? [value] : [];\n\t\t\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(value));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfinalTheme = t.addMixin(theme, \"marker\", tMixin, true);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfinalTheme = t.post(theme, \"marker\");\n\t\t\t\t\t}\n\t\t\t\t\tvar path = \"M\" + c.x + \" \" + c.y + \" \" + finalTheme.symbol;\n\t\t\t\t\tif(finalTheme.marker.shadow){\n\t\t\t\t\t\tshadowMarkers[i] = s.createPath(\"M\" + (c.x + finalTheme.marker.shadow.dx) + \" \" +\n\t\t\t\t\t\t\t(c.y + finalTheme.marker.shadow.dy) + \" \" + finalTheme.symbol).\n\t\t\t\t\t\t\tsetStroke(finalTheme.marker.shadow).setFill(finalTheme.marker.shadow.color);\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateScatter(shadowMarkers[i], dim.height - offsets.b);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(finalTheme.marker.outline){\n\t\t\t\t\t\tvar outline = dc.makeStroke(finalTheme.marker.outline);\n\t\t\t\t\t\toutline.width = 2 * outline.width + (finalTheme.marker.stroke && finalTheme.marker.stroke.width || 0);\n\t\t\t\t\t\toutlineMarkers[i] = s.createPath(path).setStroke(outline);\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateScatter(outlineMarkers[i], dim.height - offsets.b);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar stroke = dc.makeStroke(finalTheme.marker.stroke),\n\t\t\t\t\t\tfill = this._plotFill(finalTheme.marker.fill, dim, offsets);\n\t\t\t\t\tif(fill && (fill.type === \"linear\" || fill.type == \"radial\")){\n\t\t\t\t\t\tvar color = gradutils.getColor(fill, {x: c.x, y: c.y});\n\t\t\t\t\t\tif(stroke){\n\t\t\t\t\t\t\tstroke.color = color;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfrontMarkers[i] = s.createPath(path).setStroke(stroke).setFill(color);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfrontMarkers[i] = s.createPath(path).setStroke(stroke).setFill(fill);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.labels){\n\t\t\t\t\t\tvar markerBox = frontMarkers[i].getBoundingBox();\n\t\t\t\t\t\tthis.createLabel(s, value, markerBox, finalTheme);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\tthis._animateScatter(frontMarkers[i], dim.height - offsets.b);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t\tif(frontMarkers.length){\n\t\t\t\t\trun.dyn.marker = theme.symbol;\n\t\t\t\t\trun.dyn.markerStroke = frontMarkers[frontMarkers.length - 1].getStroke();\n\t\t\t\t\trun.dyn.markerFill   = frontMarkers[frontMarkers.length - 1].getFill();\n\t\t\t\t}\n\n\t\t\t\tif(events){\n\t\t\t\t\tvar eventSeries = new Array(frontMarkers.length);\n\t\t\t\t\tarr.forEach(frontMarkers, function(s, i){\n\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\telement: \"marker\",\n\t\t\t\t\t\t\tindex:   i,\n\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\tshape:   s,\n\t\t\t\t\t\t\toutline: outlineMarkers && outlineMarkers[i] || null,\n\t\t\t\t\t\t\tshadow:  shadowMarkers && shadowMarkers[i] || null,\n\t\t\t\t\t\t\tcx:      lpoly[i].x,\n\t\t\t\t\t\t\tcy:      lpoly[i].y\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif(typeof run.data[0] == \"number\"){\n\t\t\t\t\t\t\to.x = i + 1;\n\t\t\t\t\t\t\to.y = run.data[i];\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\to.x = run.data[i].x;\n\t\t\t\t\t\t\to.y = run.data[i].y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\teventSeries[i] = o;\n\t\t\t\t\t}, this);\n\t\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\t}else{\n\t\t\t\t\tdelete this._eventSeries[run.name];\n\t\t\t\t}\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Scatter\n\t\t},\n\t\t_animateScatter: function(shape, offset){\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, offset], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [0, 0], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Scatter.js\n// module id = 309\n// module chunks = 0","define([\"dojo/_base/declare\", \"./Stacked\"], function(declare, Stacked){\n\n\treturn declare(\"dojox.charting.plot2d.StackedLines\", Stacked, {\n\t\t// summary:\n\t\t//\t\tA convenience object to create a stacked line chart.\n\t\tconstructor: function(){\n\t\t\t// summary:\n\t\t\t//\t\tForce our Stacked base to be lines only.\n\t\t\tthis.opt.lines = true;\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/StackedLines.js\n// module id = 310\n// module chunks = 0","define([\"dojo/_base/declare\", \"dojo/_base/lang\", \"./Columns\", \"./commonStacked\"], \n\tfunction(declare, lang, Columns, commonStacked){\n\n\treturn declare(\"dojox.charting.plot2d.StackedColumns\", Columns, {\n\t\t// summary:\n\t\t//\t\tThe plot object representing a stacked column chart (vertical bars).\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = commonStacked.collectStats(this.series, lang.hitch(this, \"isNullValue\"));\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\treturn commonStacked.rearrangeValues.call(this, values, transform, baseline);\n \t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/StackedColumns.js\n// module id = 311\n// module chunks = 0","define([\"dojo/_base/declare\", \"dojo/_base/array\", \"./Columns\", \"./common\"], \n\tfunction(declare, array, Columns, dc){\n\n\treturn declare(\"dojox.charting.plot2d.ClusteredColumns\", Columns, {\n\t\t// summary:\n\t\t//\t\tA plot representing grouped or clustered columns (vertical bars)\n\t\tgetBarProperties: function(){\n\t\t\tvar length = this.series.length;\n\t\t\tarray.forEach(this.series, function(serie){if(serie.hidden){length--;}});\n\t\t\tvar f = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt, length);\n\t\t\treturn {gap: f.gap, width: f.size, thickness: f.size, clusterSize: length};\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/ClusteredColumns.js\n// module id = 312\n// module chunks = 0","define([\"dojo/_base/declare\", \"dojo/_base/lang\", \"./Bars\", \"./commonStacked\"], \n\tfunction(declare, lang, Bars, commonStacked){\n\n\treturn declare(\"dojox.charting.plot2d.StackedBars\", Bars, {\n\t\t// summary:\n\t\t//\t\tThe plot object representing a stacked bar chart (horizontal bars).\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = commonStacked.collectStats(this.series, lang.hitch(this, \"isNullValue\")), t;\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\tt = stats.hmin, stats.hmin = stats.vmin, stats.vmin = t;\n\t\t\tt = stats.hmax, stats.hmax = stats.vmax, stats.vmax = t;\n\t\t\treturn stats; // Object\n\t\t},\n\t\trearrangeValues: function(values, transform, baseline){\n\t\t\treturn commonStacked.rearrangeValues.call(this, values, transform, baseline);\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/StackedBars.js\n// module id = 313\n// module chunks = 0","define([\"dojo/_base/declare\", \"dojo/_base/array\", \"./Bars\", \"./common\"], \n\tfunction(declare, array, Bars, dc){\n\n\treturn declare(\"dojox.charting.plot2d.ClusteredBars\", Bars, {\n\t\t// summary:\n\t\t//\t\tA plot representing grouped or clustered bars (horizontal bars)\n\t\tgetBarProperties: function(){\n\t\t\tvar length = this.series.length;\n\t\t\tarray.forEach(this.series, function(serie){if(serie.hidden){length--;}});\n\t\t\tvar f = dc.calculateBarSize(this._vScaler.bounds.scale, this.opt, length);\n\t\t\treturn {gap: f.gap, height: f.size, thickness: f.size};\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/ClusteredBars.js\n// module id = 314\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/sniff\",\n\t\t\"./CartesianBase\", \"./common\", \"dojox/lang/utils\", \"dojox/gfx/fx\"],\n\tfunction(lang, declare, arr, has, CartesianBase, dc, du, fx){\n\n\tvar sortTicks = function(a,b){return a.value - b.value};\n\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__GridCtorArgs\", dojox.charting.plot2d.__CartesianCtorArgs, {\n\t\t// summary:\n\t\t//\t\tA special keyword arguments object that is specific to a grid \"plot\".\n\n\t\t// majorHLine: dojox.gfx.Stroke?\n\t\t//\t\tAn optional dojox.gfx.Stroke for a major horizontal line. By default major lines use major tick stroke.\n\t\tmajorHLine:undefined,\n\n\t\t// minorHLine: dojox.gfx.Stroke?\n\t\t//\t\tAn optional dojox.gfx.Stroke for a minor horizontal line. By default minor lines use minor tick stroke.\n\t\tminorHLine:undefined,\n\n\t\t// majorVLine: dojox.gfx.Stroke?\n\t\t//\t\tAn optional dojox.gfx.Stroke for a major vertical line. By default major lines use major tick stroke.\n\t\tmajorVLine:undefined,\n\n\t\t// minorVLine: dojox.gfx.Stroke?\n\t\t//\t\tAn optional dojox.gfx.Stroke for a minor vertical line. By default major lines use major tick stroke.\n\t\tminorVLine:undefined,\n\n\t\t// hFill: dojox.gfx.Fill?\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill every other horizontal stripe created by grid lines.\n\t\thFill: undefined,\n\n\t\t// hAlternateFill: dojox.gfx.Fill?\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill alternating horizontal stripe created by grid lines not filled by `hFill`.\n\t\thAlternateFill: undefined,\n\n\t\t// vFill: dojox.gfx.Fill?\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill every other vertical stripe created by grid lines.\n\t\tvFill: undefined,\n\n\t\t// vAlternateFill: dojox.gfx.Fill?\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill alternating vertical stripe created by grid lines not filled by `vFill`.\n\t\tvAlternateFill: undefined,\n\n\t\t// hMajorLines: Boolean?\n\t\t//\t\tWhether to show lines at the major ticks along the horizontal axis. Default is true.\n\t\thMajorLines: true,\n\n\t\t// hMinorLines: Boolean?\n\t\t//\t\tWhether to show lines at the minor ticks along the horizontal axis. Default is false.\n\t\thMinorLines: false,\n\n\t\t// vMajorLines: Boolean?\n\t\t//\t\tWhether to show lines at the major ticks along the vertical axis. Default is true.\n\t\tvMajorLines: true,\n\n\t\t// vMinorLines: Boolean?\n\t\t//\t\tWhether to show lines at the major ticks along the vertical axis. Default is false.\n\t\tvMinorLines: false,\n\n\t\t// hStripes: Boolean?\n\t\t//\t\tWhether to show horizontal stripes. Default is false.\n\t\thStripes: false,\n\n\t\t// vStripes: Boolean?\n\t\t//\t\tWhether to show vertical stripes. Default is false.\n\t\tvStripes: false,\n\n\t\t// enableCache: Boolean?\n\t\t//\t\tWhether the grid lines are cached from one rendering to another. This improves the rendering performance of\n\t\t//\t\tsuccessive rendering but penalize the first rendering.  Default false.\n\t\tenableCache: false,\n\n\t\t// renderOnAxis: Boolean?\n\t\t//\t\tWhether or not the grid is rendered when drawn at horizontal or vertical axis position. Default is true.\n\t\trenderOnAxis: true\n\t});\n\t=====*/\n\n\treturn declare(\"dojox.charting.plot2d.Grid\", CartesianBase, {\n\t\t// summary:\n\t\t//\t\tA \"faux\" plot that can be placed behind other plots to represent\n\t\t//\t\ta grid against which other plots can be easily measured.\n\t\tdefaultParams: {\n\t\t\thMajorLines: true,\t// draw horizontal major lines\n\t\t\thMinorLines: false,\t// draw horizontal minor lines\n\t\t\tvMajorLines: true,\t// draw vertical major lines\n\t\t\tvMinorLines: false,\t// draw vertical minor lines\n\t\t\thStripes: false,\t// draw vertical stripes\n\t\t\tvStripes: false,\t// draw vertical stripes\n\t\t\tanimate: null,   // animate bars into place\n\t\t\tenableCache: false,\n\t\t\trenderOnAxis: true\n\t\t},\n\n\t\toptionalParams: {\n\t\t\tmajorHLine: {},\n\t\t\tminorHLine: {},\n\t\t\tmajorVLine: {},\n\t\t\tminorVLine: {},\n\t\t\thFill: {},\n\t\t\tvFill: {},\n\t\t\thAlternateFill: {},\n\t\t\tvAlternateFill: {}\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate the faux Grid plot.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__GridCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the parameters of the underlying grid.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._lineFreePool = [];\n\t\t\t\tthis._lineUsePool = [];\n\t\t\t\tthis._rectFreePool = [];\n\t\t\t\tthis._rectUsePool = [];\n\t\t\t}\n\t\t},\n\t\taddSeries: function(run){\n\t\t\t// summary:\n\t\t\t//\t\tIgnored but included as a dummy method.\n\t\t\t// returns: dojox/charting/plot2d/Grid\n\t\t\t//\t\tThe reference to this plot for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Grid\n\t\t},\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns default stats (irrelevant for this type of plot).\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\treturn lang.delegate(dc.defaultStats); // Object\n\t\t},\n\t\tcleanGroup: function(){\n\t\t\tthis.inherited(arguments);\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._lineFreePool = this._lineFreePool.concat(this._lineUsePool);\n\t\t\t\tthis._lineUsePool = [];\n\t\t\t\tthis._rectFreePool = this._rectFreePool.concat(this._rectUsePool);\n\t\t\t\tthis._rectUsePool = [];\n\t\t\t}\n\t\t},\n\t\tcreateLine: function(creator, params){\n\t\t\tvar line;\n\t\t\tif(this.opt.enableCache && this._lineFreePool.length > 0){\n\t\t\t\tline = this._lineFreePool.pop();\n\t\t\t\tline.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(line);\n\t\t\t}else{\n\t\t\t\tline = creator.createLine(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._lineUsePool.push(line);\n\t\t\t}\n\t\t\treturn line;\n\t\t},\n\t\tcreateRect: function(creator, params){\n\t\t\tvar rect;\n\t\t\tif(this.opt.enableCache && this._rectFreePool.length > 0){\n\t\t\t\trect = this._rectFreePool.pop();\n\t\t\t\trect.setShape(params);\n\t\t\t\t// was cleared, add it back\n\t\t\t\tcreator.add(rect);\n\t\t\t}else{\n\t\t\t\trect = creator.createRect(params);\n\t\t\t}\n\t\t\tif(this.opt.enableCache){\n\t\t\t\tthis._rectUsePool.push(rect);\n\t\t\t}\n\t\t\treturn rect;\n\t\t},\n\t\t\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender the plot on the chart.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/Grid\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tif(!this.dirty){ return this; }\n\t\t\tthis.cleanGroup();\n\t\t\tvar s = this.getGroup(), ta = this.chart.theme, lineStroke, ticks;\n\t\t\tif((has(\"ios\") && has(\"ios\") < 6) || has(\"android\") || (has(\"safari\") && !has(\"ios\"))){\n\t\t\t\t// clipping seems buggy in some mobile Webkit browser and Safari desktop\n\t\t\t\t// it does not clip correctly if only lines are present => create a invisible rectangle...\n\t\t\t\tvar w = Math.max(0, dim.width  - offsets.l - offsets.r),\n\t\t\t\t\th = Math.max(0, dim.height - offsets.t - offsets.b);\n\t\t\t\ts.createRect({ x: offsets.l, y: offsets.t, width: w, height: h});\n\t\t\t}\n\t\t\tif(this._vAxis){\n\t\t\t\t// draw horizontal stripes and lines\n\t\t\t\tticks = this._vAxis.getTicks();\n\t\t\t\tvar vScaler = this._vAxis.getScaler();\n\t\t\t\tif(ticks != null && vScaler != null){\n\t\t\t\t\tvar vt = vScaler.scaler.getTransformerFromModel(vScaler);\n\t\t\t\t\tif(this.opt.hStripes){\n\t\t\t\t\t\tthis._renderHRect(ticks, ta.grid, dim, offsets, vScaler, vt);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.hMinorLines){\n\t\t\t\t\t\tlineStroke = this.opt.minorHLine || (ta.grid && ta.grid.minorLine) || ta.axis.minorTick;\n\t\t\t\t\t\tthis._renderHLines(ticks.minor, lineStroke, dim, offsets, vScaler, vt);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.opt.hMajorLines){\n\t\t\t\t\t\tlineStroke = this.opt.majorHLine || (ta.grid && ta.grid.majorLine) || ta.axis.majorTick;\n\t\t\t\t\t\tthis._renderHLines(ticks.major, lineStroke, dim, offsets, vScaler, vt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tif(this._hAxis){\n\t\t\t\t// draw vertical stripes and lines\n\t\t\t\tticks = this._hAxis.getTicks();\n\t\t\t\tvar hScaler = this._hAxis.getScaler();\n\t\t\t\tif(ticks != null && hScaler != null){\n\t\t\t\t\tvar ht = hScaler.scaler.getTransformerFromModel(hScaler);\n\t\t\t\t\tif(this.opt.vStripes){\n\t\t\t\t\t\tthis._renderVRect(ticks, ta.grid, dim, offsets, hScaler, ht);\n\t\t\t\t\t}\n\t\t\t\t\tif(ticks && this.opt.vMinorLines){\n\t\t\t\t\t\tlineStroke = this.opt.minorVLine || (ta.grid && ta.grid.minorLine) || ta.axis.minorTick;\n\t\t\t\t\t\tthis._renderVLines(ticks.minor, lineStroke, dim, offsets, hScaler, ht);\n\t\t\t\t\t}\n\t\t\t\t\tif(ticks && this.opt.vMajorLines){\n\t\t\t\t\t\tlineStroke = this.opt.majorVLine || (ta.grid && ta.grid.majorLine) || ta.axis.majorTick;\n\t\t\t\t\t\tthis._renderVLines(ticks.major, lineStroke, dim, offsets, hScaler, ht);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Grid\n\t\t},\n\t\t_renderHLines: function(ticks, lineStroke, dim, offsets, vScaler, vt){\n\t\t\tvar s = this.getGroup();\n\t\t\tarr.forEach(ticks, function(tick){\n\t\t\t\tif(!this.opt.renderOnAxis && tick.value == (this._vAxis.opt.leftBottom?vScaler.bounds.from:vScaler.bounds.to)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar y = dim.height - offsets.b - vt(tick.value);\n\t\t\t\tvar hLine = this.createLine(s, {\n\t\t\t\t\tx1: offsets.l,\n\t\t\t\t\ty1: y,\n\t\t\t\t\tx2: dim.width - offsets.r,\n\t\t\t\t\ty2: y\n\t\t\t\t}).setStroke(lineStroke);\n\t\t\t\tif(this.animate){\n\t\t\t\t\tthis._animateGrid(hLine, \"h\", offsets.l, offsets.r + offsets.l - dim.width);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\t\t_renderVLines: function(ticks, lineStroke, dim, offsets, hScaler, ht){\n\t\t\tvar s = this.getGroup();\n\t\t\tarr.forEach(ticks, function(tick){\n\t\t\t\tif(!this.opt.renderOnAxis && tick.value == (this._hAxis.opt.leftBottom?hScaler.bounds.from:hScaler.bounds.to)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar x = offsets.l + ht(tick.value);\n\t\t\t\tvar vLine = this.createLine(s, {\n\t\t\t\t\tx1: x,\n\t\t\t\t\ty1: offsets.t,\n\t\t\t\t\tx2: x,\n\t\t\t\t\ty2: dim.height - offsets.b\n\t\t\t\t}).setStroke(lineStroke);\n\t\t\t\tif(this.animate){\n\t\t\t\t\tthis._animateGrid(vLine, \"v\", dim.height - offsets.b, dim.height - offsets.b - offsets.t);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\t\t_renderHRect: function(ticks, theme, dim, offsets, vScaler, vt){\n\t\t\tvar fill, tick, y, y2, hStripe;\n\t\t\tvar allTicks = ticks.major.concat(ticks.minor);\n\t\t\tallTicks.sort(sortTicks);\n\t\t\tif(allTicks[0].value > vScaler.bounds.from){\n\t\t\t\tallTicks.splice(0, 0, {value: vScaler.bounds.from});\n\t\t\t}\n\t\t\tif(allTicks[allTicks.length - 1].value < vScaler.bounds.to){\n\t\t\t\tallTicks.push({value: vScaler.bounds.to});\n\t\t\t}\n\t\t\tvar s = this.getGroup();\n\t\t\tfor(var j = 0; j < allTicks.length - 1; j++){\n\t\t\t\ttick = allTicks[j];\n\t\t\t\ty = dim.height - offsets.b - vt(tick.value);\n\t\t\t\ty2 = dim.height - offsets.b - vt(allTicks[j+1].value);\n\n\t\t\t\tfill = (j%2 == 0)?(this.opt.hAlternateFill ||(theme && theme.alternateFill)):\n\t\t\t\t\t(this.opt.hFill || (theme && theme.fill));\n\t\t\t\tif(fill){\n\t\t\t\t\thStripe = this.createRect(s, {\n\t\t\t\t\t\tx: offsets.l,\n\t\t\t\t\t\ty: y,\n\t\t\t\t\t\twidth: dim.width - offsets.r,\n\t\t\t\t\t\theight: y - y2\n\t\t\t\t\t}).setFill(fill);\n\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\tthis._animateGrid(hStripe, \"h\", offsets.l, offsets.r + offsets.l - dim.width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_renderVRect: function(ticks, theme, dim, offsets, hScaler, ht){\n\t\t\tvar fill, tick, x, x2, vStripe;\n\t\t\tvar allTicks = ticks.major.concat(ticks.minor);\n\t\t\tallTicks.sort(sortTicks);\n\t\t\tif(allTicks[0].value > hScaler.bounds.from){\n\t\t\t\tallTicks.splice(0, 0, {value: hScaler.bounds.from});\n\t\t\t}\n\t\t\tif(allTicks[allTicks.length - 1].value < hScaler.bounds.to){\n\t\t\t\tallTicks.push({value: hScaler.bounds.to});\n\t\t\t}\n\t\t\tvar s = this.getGroup();\n\t\t\tfor(var j = 0; j < allTicks.length - 1; j++){\n\t\t\t\ttick = allTicks[j];\n\t\t\t\tx = offsets.l + ht(tick.value);\n\t\t\t\tx2 = offsets.l + ht(allTicks[j+1].value);\n\n\t\t\t\tfill = (j%2 == 0)?(this.opt.vAlternateFill ||(theme && theme.alternateFill)):\n\t\t\t\t\t(this.opt.vFill || (theme && theme.fill));\n\t\t\t\tif(fill){\n\t\t\t\t\tvStripe = this.createRect(s, {\n\t\t\t\t\t\tx: x,\n\t\t\t\t\t\ty: offsets.t,\n\t\t\t\t\t\twidth: x2 - x,\n\t\t\t\t\t\theight: dim.width - offsets.r\n\t\t\t\t\t}).setFill(fill);\n\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\tthis._animateGrid(vStripe, \"v\", dim.height - offsets.b, dim.height - offsets.b - offsets.t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_animateGrid: function(shape, type, offset, size){\n\t\t\tvar transStart = type == \"h\" ? [offset, 0] : [0, offset];\n\t\t\tvar scaleStart = type == \"h\" ? [1/size, 1] : [1, 1/size];\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: transStart, end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: scaleStart, end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Grid.js\n// module id = 315\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/array\" ,\"dojo/_base/declare\", \n\t\t\"./Base\", \"./_PlotEvents\", \"./common\",\n\t\t\"dojox/gfx\", \"dojox/gfx/matrix\", \"dojox/lang/functional\", \"dojox/lang/utils\",\"dojo/has\"],\n\tfunction(lang, arr, declare, Base, PlotEvents, dc, g, m, df, du, has){\n\n\t/*=====\n\tdeclare(\"dojox.charting.plot2d.__PieCtorArgs\", dojox.charting.plot2d.__DefaultCtorArgs, {\n\t\t// summary:\n\t\t//\t\tSpecialized keyword arguments object for use in defining parameters on a Pie chart.\n\t\n\t\t// labels: Boolean?\n\t\t//\t\tWhether or not to draw labels for each pie slice.  Default is true.\n\t\tlabels:\t\t\ttrue,\n\t\n\t\t// ticks: Boolean?\n\t\t//\t\tWhether or not to draw ticks to labels within each slice. Default is false.\n\t\tticks:\t\t\tfalse,\n\t\n\t\t// fixed: Boolean?\n\t\t//\t\tWhether a fixed precision must be applied to data values for display. Default is true.\n\t\tfixed:\t\t\ttrue,\n\t\n\t\t// precision: Number?\n\t\t//\t\tThe precision at which to round data values for display. Default is 0.\n\t\tprecision:\t\t1,\n\t\n\t\t// labelOffset: Number?\n\t\t//\t\tThe amount in pixels by which to offset labels.  Default is 20.\n\t\tlabelOffset:\t20,\n\t\n\t\t// labelStyle: String?\n\t\t//\t\tOptions as to where to draw labels.  Values include \"default\", and \"columns\".\tDefault is \"default\".\n\t\tlabelStyle:\t\t\"default\",\t// default/columns\n\t\t\n\t\t// omitLabels: Boolean?\n\t\t//\t\tWhether labels of slices small to the point of not being visible are omitted.\tDefault false.\n\t\tomitLabels: false,\n\t\t\n\t\t// htmlLabels: Boolean?\n\t\t//\t\tWhether or not to use HTML to render slice labels. Default is true.\n\t\thtmlLabels:\t\ttrue,\n\t\n\t\t// radGrad: String?\n\t\t//\t\tThe type of radial gradient to use in rendering.  Default is \"native\".\n\t\tradGrad:        \"native\",\n\t\n\t\t// fanSize: Number?\n\t\t//\t\tThe amount for a radial gradient.  Default is 5.\n\t\tfanSize:\t\t5,\n\t\n\t\t// startAngle: Number?\n\t\t//\t\tWhere to being rendering gradients in slices, in degrees.  Default is 0.\n\t\tstartAngle:     0,\n\t\n\t\t// radius: Number?\n\t\t//\t\tThe size of the radial gradient.  Default is 0.\n\t\tradius:\t\t0,\n\n\t\t// shadow: dojox.gfx.Stroke?\n\t\t//\t\tAn optional stroke to use to draw any shadows for a series on a plot.\n\t\tshadow:\t\t{},\n\n\t\t// fill: dojox.gfx.Fill?\n\t\t//\t\tAny fill to be used for elements on the plot.\n\t\tfill:\t\t{},\n\n\t\t// filter: dojox.gfx.Filter?\n\t\t//\t\tAn SVG filter to be used for elements on the plot. gfx SVG renderer must be used and dojox/gfx/svgext must\n\t\t//\t\tbe required for this to work.\n\t\tfilter:\t\t{},\n\n\t\t// styleFunc: Function?\n\t\t//\t\tA function that returns a styling object for the a given data item.\n\t\tstyleFunc:\tnull\n\t});\n\t=====*/\n\n\tvar FUDGE_FACTOR = 0.2; // use to overlap fans\n\n\treturn declare(\"dojox.charting.plot2d.Pie\", [Base, PlotEvents], {\n\t\t// summary:\n\t\t//\t\tThe plot that represents a typical pie chart.\n\t\tdefaultParams: {\n\t\t\tlabels:\t\t\ttrue,\n\t\t\tticks:\t\t\tfalse,\n\t\t\tfixed:\t\t\ttrue,\n\t\t\tprecision:\t\t1,\n\t\t\tlabelOffset:\t20,\n\t\t\tlabelStyle:\t\t\"default\",\t// default/columns\n\t\t\thtmlLabels:\t\ttrue,\t\t// use HTML to draw labels\n\t\t\tradGrad:        \"native\",\t// or \"linear\", or \"fan\"\n\t\t\tfanSize:\t\t5,\t\t\t// maximum fan size in degrees\n\t\t\tstartAngle:     0\t\t\t// start angle for slices in degrees\n\t\t},\n\t\toptionalParams: {\n\t\t\tradius:\t\t0,\n\t\t\tomitLabels: false,\n\t\t\t// theme components\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:     {},\n\t\t\tstyleFunc:\tnull,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\",\n\t\t\tlabelWiring: {}\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a pie plot.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.axes = [];\n\t\t\tthis.run = null;\n\t\t\tthis.dyn = [];\n\t\t\tthis.runFilter = []; \n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all of the information tied to this plot.\n\t\t\t// returns: dojox/charting/plot2d/Pie\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.inherited(arguments);\n\t\t\tthis.dyn = [];\n\t\t\tthis.run = null;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\n\t\t},\n\t\tsetAxis: function(axis){\n\t\t\t// summary:\n\t\t\t//\t\tDummy method, since axes are irrelevant with a Pie chart.\n\t\t\t// returns: dojox/charting/plot2d/Pie\n\t\t\t//\t\tThe reference to this plot for functional chaining.\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\n\t\t},\n\t\taddSeries: function(run){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a series of data to this plot.\n\t\t\t// returns: dojox/charting/plot2d/Pie\n\t\t\t//\t\tThe reference to this plot for functional chaining.\n\t\t\tthis.run = run;\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\n\t\t},\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturns default stats (irrelevant for this type of plot).\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\treturn lang.delegate(dc.defaultStats); // Object\n\t\t},\n\t\tgetRequiredColors: function(){\n\t\t\t// summary:\n\t\t\t//\t\tReturn the number of colors needed to draw this plot.\n\t\t\treturn this.run ? this.run.data.length : 0;\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender the plot on the chart.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/Pie\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(!this.dirty){ return this; }\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = false;\n\t\t\tthis._eventSeries = {};\n\t\t\tthis.cleanGroup();\n\t\t\tvar s = this.group, t = this.chart.theme;\n\n\t\t\tif(!this.run || !this.run.data.length){\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\t// calculate the geometry\n\t\t\tvar rx = (dim.width  - offsets.l - offsets.r) / 2,\n\t\t\t\try = (dim.height - offsets.t - offsets.b) / 2,\n\t\t\t\tr  = Math.min(rx, ry),\n\t\t\t\tlabelFont = \"font\" in this.opt ? this.opt.font : t.series.font,\n\t\t\t\tsize,\n\t\t\t\tstartAngle = m._degToRad(this.opt.startAngle),\n\t\t\t\tstart = startAngle, filteredRun, slices, labels, shift, labelR,\n\t\t\t\tevents = this.events();\n\n\t\t\tvar run = arr.map(this.run.data, function(item, i){\n\t\t\t\tif(typeof item != \"number\" && item.hidden){ \n\t\t\t\t\tthis.runFilter.push(i); \n\t\t\t\t\titem.hidden = false; \n\t\t\t\t} \n\t\t\t\tif(arr.some(this.runFilter, function(filter){return filter == i;})){ \n\t\t\t\t\tif(typeof item == \"number\"){ \n\t\t\t\t\t\treturn 0; \n\t\t\t\t\t}else{ \n\t\t\t\t\t\treturn {y: 0, text: item.text}; \n\t\t\t\t\t} \n\t\t\t\t}else{ \n\t\t\t\t\treturn item; \n\t\t\t\t} \n\t\t\t}, this);\n\n\t\t\tthis.dyn = [];\n\n\t\t\tif(\"radius\" in this.opt){\n\t\t\t\tr = this.opt.radius;\n\t\t\t\tlabelR = r - this.opt.labelOffset;\n\t\t\t}\n\t\t\tvar\tcircle = {\n\t\t\t\tcx: offsets.l + rx,\n\t\t\t\tcy: offsets.t + ry,\n\t\t\t\tr:  r\n\t\t\t};\n\n\t\t\t// draw shadow\n\t\t\tif(this.opt.shadow || t.shadow){\n\t\t\t\tvar shadow = this.opt.shadow || t.shadow;\n\t\t\t\tvar scircle = lang.clone(circle);\n\t\t\t\tscircle.cx += shadow.dx;\n\t\t\t\tscircle.cy += shadow.dy;\n\t\t\t\ts.createCircle(scircle).setFill(shadow.color).setStroke(shadow);\n\t\t\t}\n\t\t\tif(s.setFilter && (this.opt.filter || t.filter)){\n\t\t\t\ts.createCircle(circle).setFill(t.series.stroke).setFilter(this.opt.filter || t.filter);\n\t\t\t}\n\n\t\t\tif(typeof run[0] == \"number\"){\n\t\t\t\tfilteredRun = df.map(run, \"x ? Math.max(x, 0) : 0\");\n\t\t\t\tif(df.every(filteredRun, \"<= 0\")){\n\t\t\t\t\ts.createCircle(circle).setStroke(t.series.stroke);\n\t\t\t\t\tthis.dyn = arr.map(filteredRun, function(){\n\t\t\t\t\t\treturn {  };\n\t\t\t\t\t});\n\t\t\t\t\treturn this;\n\t\t\t\t}else{\n\t\t\t\t\tslices = df.map(filteredRun, \"/this\", df.foldl(filteredRun, \"+\", 0));\n\t\t\t\t \tif(this.opt.labels){\n\t\t\t\t \t\tlabels = arr.map(slices, function(x){\n\t\t\t\t\t\t\treturn x > 0 ? this._getLabel(x * 100) + \"%\" : \"\";\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tfilteredRun = df.map(run, \"x ? Math.max(x.y, 0) : 0\");\n\t\t\t\tif(df.every(filteredRun, \"<= 0\")){\n\t\t\t\t\ts.createCircle(circle).setStroke(t.series.stroke);\n\t\t\t\t\tthis.dyn = arr.map(filteredRun, function(){\n\t\t\t\t\t\treturn {  };\n\t\t\t\t\t});\n\t\t\t\t\treturn this;\n\t\t\t\t}else{\n\t\t\t\t\tslices = df.map(filteredRun, \"/this\", df.foldl(filteredRun, \"+\", 0));\n\t\t\t\t\tif(this.opt.labels){\n\t\t\t\t\t\tlabels = arr.map(slices, function(x, i){\n\t\t\t\t\t\t\tif(x < 0){ return \"\"; }\n\t\t\t\t\t\t\tvar v = run[i];\n\t\t\t\t\t\t\treturn \"text\" in v ? v.text : this._getLabel(x * 100) + \"%\";\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar themes = df.map(run, function(v, i){\n\t\t\t\tvar tMixin = [this.opt, this.run];\n\t\t\t\tif(v !== null && typeof v != \"number\"){\n\t\t\t\t\ttMixin.push(v);\n\t\t\t\t}\n\t\t\t\tif(this.opt.styleFunc){\n\t\t\t\t\ttMixin.push(this.opt.styleFunc(v));\n\t\t\t\t}\n\t\t\t\treturn t.next(\"slice\", tMixin, true);\n\t\t\t}, this);\n\n\t\t\tif(this.opt.labels){\n\t\t\t\tsize = labelFont ? g.normalizedLength(g.splitFontString(labelFont).size) : 0;\n\t\t\t\tshift = df.foldl1(df.map(labels, function(label, i){\n\t\t\t\t\tvar font = themes[i].series.font;\n\t\t\t\t\treturn g._base._getTextBox(label, {font: font}).w;\n\t\t\t\t}, this), \"Math.max(a, b)\") / 2;\n\t\t\t\tif(this.opt.labelOffset < 0){\n\t\t\t\t\tr = Math.min(rx - 2 * shift, ry - size) + this.opt.labelOffset;\n\t\t\t\t}\n\t\t\t\tlabelR = r - this.opt.labelOffset;\n\t\t\t}\n\n\t\t\t// draw slices\n\t\t\tvar eventSeries = new Array(slices.length);\n\t\t\tarr.some(slices, function(slice, i){\n\t\t\t\tif(slice < 0){\n\t\t\t\t\t// degenerated slice\n\t\t\t\t\treturn false;\t// continue\n\t\t\t\t}\n\t\t\t\tvar v = run[i], theme = themes[i], specialFill, o;\n\t\t\t\tif(slice == 0){\n\t\t\t\t\tthis.dyn.push({fill: theme.series.fill, stroke: theme.series.stroke});\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(slice >= 1){\n\t\t\t\t\t// whole pie\n\t\t\t\t\tspecialFill = this._plotFill(theme.series.fill, dim, offsets);\n\t\t\t\t\tspecialFill = this._shapeFill(specialFill,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tx: circle.cx - circle.r, y: circle.cy - circle.r,\n\t\t\t\t\t\t\twidth: 2 * circle.r, height: 2 * circle.r\n\t\t\t\t\t\t});\n\t\t\t\t\tspecialFill = this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, circle.r);\n\t\t\t\t\tvar shape = s.createCircle(circle).setFill(specialFill).setStroke(theme.series.stroke);\n\t\t\t\t\tthis.dyn.push({fill: specialFill, stroke: theme.series.stroke});\n\n\t\t\t\t\tif(events){\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\telement: \"slice\",\n\t\t\t\t\t\t\tindex:   i,\n\t\t\t\t\t\t\trun:     this.run,\n\t\t\t\t\t\t\tshape:   shape,\n\t\t\t\t\t\t\tx:       i,\n\t\t\t\t\t\t\ty:       typeof v == \"number\" ? v : v.y,\n\t\t\t\t\t\t\tcx:      circle.cx,\n\t\t\t\t\t\t\tcy:      circle.cy,\n\t\t\t\t\t\t\tcr:      r\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\teventSeries[i] = o;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\t// we continue because we want to collect null data points for legend\n\t\t\t\t}\n\t\t\t\t// calculate the geometry of the slice\n\t\t\t\tvar end = start + slice * 2 * Math.PI;\n\t\t\t\tif(i + 1 == slices.length){\n\t\t\t\t\tend = startAngle + 2 * Math.PI;\n\t\t\t\t}\n\t\t\t\tvar\tstep = end - start,\n\t\t\t\t\tx1 = circle.cx + r * Math.cos(start),\n\t\t\t\t\ty1 = circle.cy + r * Math.sin(start),\n\t\t\t\t\tx2 = circle.cx + r * Math.cos(end),\n\t\t\t\t\ty2 = circle.cy + r * Math.sin(end);\n\t\t\t\t// draw the slice\n\t\t\t\tvar fanSize = m._degToRad(this.opt.fanSize);\n\t\t\t\tif(theme.series.fill && theme.series.fill.type === \"radial\" && this.opt.radGrad === \"fan\" && step > fanSize){\n\t\t\t\t\tvar group = s.createGroup(), nfans = Math.ceil(step / fanSize), delta = step / nfans;\n\t\t\t\t\tspecialFill = this._shapeFill(theme.series.fill,\n\t\t\t\t\t\t{x: circle.cx - circle.r, y: circle.cy - circle.r, width: 2 * circle.r, height: 2 * circle.r});\n\t\t\t\t\tfor(var j = 0; j < nfans; ++j){\n\t\t\t\t\t\tvar fansx = j == 0 ? x1 : circle.cx + r * Math.cos(start + (j - FUDGE_FACTOR) * delta),\n\t\t\t\t\t\t\tfansy = j == 0 ? y1 : circle.cy + r * Math.sin(start + (j - FUDGE_FACTOR) * delta),\n\t\t\t\t\t\t\tfanex = j == nfans - 1 ? x2 : circle.cx + r * Math.cos(start + (j + 1 + FUDGE_FACTOR) * delta),\n\t\t\t\t\t\t\tfaney = j == nfans - 1 ? y2 : circle.cy + r * Math.sin(start + (j + 1 + FUDGE_FACTOR) * delta);\n\t\t\t\t\t\tgroup.createPath().\n\t\t\t\t\t\t\t\tmoveTo(circle.cx, circle.cy).\n\t\t\t\t\t\t\t\tlineTo(fansx, fansy).\n\t\t\t\t\t\t\t\tarcTo(r, r, 0, delta > Math.PI, true, fanex, faney).\n\t\t\t\t\t\t\t\tlineTo(circle.cx, circle.cy).\n\t\t\t\t\t\t\t\tclosePath().\n\t\t\t\t\t\t\t\tsetFill(this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, r, start + (j + 0.5) * delta, start + (j + 0.5) * delta));\n\t\t\t\t\t}\n\t\t\t\t\tgroup.createPath().\n\t\t\t\t\t\tmoveTo(circle.cx, circle.cy).\n\t\t\t\t\t\tlineTo(x1, y1).\n\t\t\t\t\t\tarcTo(r, r, 0, step > Math.PI, true, x2, y2).\n\t\t\t\t\t\tlineTo(circle.cx, circle.cy).\n\t\t\t\t\t\tclosePath().\n\t\t\t\t\t\tsetStroke(theme.series.stroke);\n\t\t\t\t\tshape = group;\n\t\t\t\t}else{\n\t\t\t\t\tshape = s.createPath().\n\t\t\t\t\t\tmoveTo(circle.cx, circle.cy).\n\t\t\t\t\t\tlineTo(x1, y1).\n\t\t\t\t\t\tarcTo(r, r, 0, step > Math.PI, true, x2, y2).\n\t\t\t\t\t\tlineTo(circle.cx, circle.cy).\n\t\t\t\t\t\tclosePath().\n\t\t\t\t\t\tsetStroke(theme.series.stroke);\n\t\t\t\t\tspecialFill = theme.series.fill;\n\t\t\t\t\tif(specialFill && specialFill.type === \"radial\"){\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, {x: circle.cx - circle.r, y: circle.cy - circle.r, width: 2 * circle.r, height: 2 * circle.r});\n\t\t\t\t\t\tif(this.opt.radGrad === \"linear\"){\n\t\t\t\t\t\t\tspecialFill = this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, r, start, end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(specialFill && specialFill.type === \"linear\"){\n\t\t\t\t\t\tspecialFill = this._plotFill(specialFill, dim, offsets);\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, shape.getBoundingBox());\n\t\t\t\t\t}\n\t\t\t\t\tshape.setFill(specialFill);\n\t\t\t\t}\n\t\t\t\tthis.dyn.push({fill: specialFill, stroke: theme.series.stroke});\n\n\t\t\t\tif(events){\n\t\t\t\t\to = {\n\t\t\t\t\t\telement: \"slice\",\n\t\t\t\t\t\tindex:   i,\n\t\t\t\t\t\trun:     this.run,\n\t\t\t\t\t\tshape:   shape,\n\t\t\t\t\t\tx:       i,\n\t\t\t\t\t\ty:       typeof v == \"number\" ? v : v.y,\n\t\t\t\t\t\tcx:      circle.cx,\n\t\t\t\t\t\tcy:      circle.cy,\n\t\t\t\t\t\tcr:      r\n\t\t\t\t\t};\n\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\teventSeries[i] = o;\n\t\t\t\t}\n\n\t\t\t\tstart = end;\n\n\t\t\t\treturn false;\t// continue\n\t\t\t}, this);\n\t\t\t// draw labels\n\t\t\tif(this.opt.labels){\n\t\t\t\tvar isRtl = has(\"dojo-bidi\") && this.chart.isRightToLeft(); \n\t\t\t\tif(this.opt.labelStyle == \"default\"){ // inside or outside based on labelOffset\n\t\t\t\t\tstart = startAngle;\n\t\t\t\t\tarr.some(slices, function(slice, i){\n\t\t\t\t\t\tif(slice <= 0){\n\t\t\t\t\t\t\t// degenerated slice\n\t\t\t\t\t\t\treturn false;\t// continue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar theme = themes[i];\n\t\t\t\t\t\tif(slice >= 1){\n\t\t\t\t\t\t\t// whole pie\n\t\t\t\t\t\t\tthis.renderLabel(s, circle.cx, circle.cy + size / 2, labels[i], theme, this.opt.labelOffset > 0);\n\t\t\t\t\t\t\treturn true;\t// stop iteration\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// calculate the geometry of the slice\n\t\t\t\t\t\tvar end = start + slice * 2 * Math.PI;\n\t\t\t\t\t\tif(i + 1 == slices.length){\n\t\t\t\t\t\t\tend = startAngle + 2 * Math.PI;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.opt.omitLabels && end-start < 0.001){\n\t\t\t\t\t\t\treturn false;\t// continue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar\tlabelAngle = (start + end) / 2,\n\t\t\t\t\t\t\tx = circle.cx + labelR * Math.cos(labelAngle),\n\t\t\t\t\t\t\ty = circle.cy + labelR * Math.sin(labelAngle) + size / 2;\n\t\t\t\t\t\t// draw the label\n\t\t\t\t\t\tthis.renderLabel(s, isRtl ? dim.width - x : x, y, labels[i], theme, this.opt.labelOffset > 0);\n\t\t\t\t\t\tstart = end;\n\t\t\t\t\t\treturn false;\t// continue\n\t\t\t\t\t}, this);\n\t\t\t\t}else if(this.opt.labelStyle == \"columns\"){\n\t\t\t\t\tstart = startAngle;\n\t\t\t\t\tvar omitLabels = this.opt.omitLabels;\n\t\t\t\t\t//calculate label angles\n\t\t\t\t\tvar labeledSlices = [];\n\t\t\t\t\tarr.forEach(slices, function(slice, i){\n\t\t\t\t\t\tvar end = start + slice * 2 * Math.PI;\n\t\t\t\t\t\tif(i + 1 == slices.length){\n\t\t\t\t\t\t\tend = startAngle + 2 * Math.PI;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar labelAngle = (start + end) / 2;\n\t\t\t\t\t\tlabeledSlices.push({\n\t\t\t\t\t\t\tangle: labelAngle,\n\t\t\t\t\t\t\tleft: Math.cos(labelAngle) < 0,\n\t\t\t\t\t\t\ttheme: themes[i],\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tomit: omitLabels?end - start < 0.001:false\n\t\t\t\t\t\t});\n\t\t\t\t\t\tstart = end;\n\t\t\t\t\t});\n\t\t\t\t\t//calculate label radius to each slice\n\t\t\t\t\tvar labelHeight = g._base._getTextBox(\"a\",{ font: labelFont }).h;\n\t\t\t\t\tthis._getProperLabelRadius(labeledSlices, labelHeight, circle.r * 1.1);\n\t\t\t\t\t//draw label and wiring\n\t\t\t\t\tarr.forEach(labeledSlices, function(slice, i){\n\t\t\t\t\t\tif(!slice.omit){\n\t\t\t\t\t\t\tvar leftColumn = circle.cx - circle.r * 2,\n\t\t\t\t\t\t\t\trightColumn = circle.cx + circle.r * 2,\n\t\t\t\t\t\t\t\tlabelWidth = g._base._getTextBox(labels[i], {font: slice.theme.series.font}).w,\n\t\t\t\t\t\t\t\tx = circle.cx + slice.labelR * Math.cos(slice.angle),\n\t\t\t\t\t\t\t\ty = circle.cy + slice.labelR * Math.sin(slice.angle),\n\t\t\t\t\t\t\t\tjointX = (slice.left) ? (leftColumn + labelWidth) : (rightColumn - labelWidth),\n\t\t\t\t\t\t\t\tlabelX = (slice.left) ? leftColumn : jointX;\n\t\t\t\t\t\t\tvar wiring = s.createPath().moveTo(circle.cx + circle.r * Math.cos(slice.angle), circle.cy + circle.r * Math.sin(slice.angle));\n\t\t\t\t\t\t\tif(Math.abs(slice.labelR * Math.cos(slice.angle)) < circle.r * 2 - labelWidth){\n\t\t\t\t\t\t\t\twiring.lineTo(x, y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twiring.lineTo(jointX, y).setStroke(slice.theme.series.labelWiring);\n\t\t\t\t\t\t\tthis.renderLabel(s, isRtl ? dim.width - labelWidth - labelX : labelX, y, labels[i], slice.theme, false, \"left\");\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// post-process events to restore the original indexing\n\t\t\tvar esi = 0;\n\t\t\tthis._eventSeries[this.run.name] = df.map(run, function(v){\n\t\t\t\treturn v <= 0 ? null : eventSeries[esi++];\n\t\t\t});\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\n\t\t},\n\t\t_getProperLabelRadius: function(slices, labelHeight, minRidius){\n\t\t\tvar leftCenterSlice, rightCenterSlice,\n\t\t\t\tleftMinSIN = 1, rightMinSIN = 1;\n\t\t\tif(slices.length == 1){\n\t\t\t\tslices[0].labelR = minRidius;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor(var i = 0; i < slices.length; i++){\n\t\t\t\tvar tempSIN = Math.abs(Math.sin(slices[i].angle));\n\t\t\t\tif(slices[i].left){\n\t\t\t\t\tif(leftMinSIN >= tempSIN){\n\t\t\t\t\t\tleftMinSIN = tempSIN;\n\t\t\t\t\t\tleftCenterSlice = slices[i];\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tif(rightMinSIN >= tempSIN){\n\t\t\t\t\t\trightMinSIN = tempSIN;\n\t\t\t\t\t\trightCenterSlice = slices[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tleftCenterSlice.labelR = rightCenterSlice.labelR = minRidius;\n\t\t\tthis._calculateLabelR(leftCenterSlice, slices, labelHeight);\n\t\t\tthis._calculateLabelR(rightCenterSlice, slices, labelHeight);\n\t\t},\n\t\t_calculateLabelR: function(firstSlice, slices, labelHeight){\n\t\t\tvar i = firstSlice.index,length = slices.length,\n\t\t\t\tcurrentLabelR = firstSlice.labelR, nextLabelR;\n\t\t\twhile(!(slices[i%length].left ^ slices[(i+1)%length].left)){\n\t\t\t\tif(!slices[(i + 1) % length].omit){\n\t\t\t\t\tnextLabelR = (Math.sin(slices[i % length].angle) * currentLabelR + ((slices[i % length].left) ? (-labelHeight) : labelHeight)) /\n\t\t\t\t\tMath.sin(slices[(i + 1) % length].angle);\n\t\t\t\t\tcurrentLabelR = (nextLabelR < firstSlice.labelR) ? firstSlice.labelR : nextLabelR;\n\t\t\t\t\tslices[(i + 1) % length].labelR = currentLabelR;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\ti = firstSlice.index;\n\t\t\tvar j = (i == 0)?length-1 : i - 1;\n\t\t\twhile(!(slices[i].left ^ slices[j].left)){\n\t\t\t\tif(!slices[j].omit){\n\t\t\t\t\tnextLabelR = (Math.sin(slices[i].angle) * currentLabelR + ((slices[i].left) ? labelHeight : (-labelHeight))) /\n\t\t\t\t\tMath.sin(slices[j].angle);\n\t\t\t\t\tcurrentLabelR = (nextLabelR < firstSlice.labelR) ? firstSlice.labelR : nextLabelR;\n\t\t\t\t\tslices[j].labelR = currentLabelR;\n\t\t\t\t}\n\t\t\t\ti--;j--;\n\t\t\t\ti = (i < 0)?i+slices.length:i;\n\t\t\t\tj = (j < 0)?j+slices.length:j;\n\t\t\t}\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Pie.js\n// module id = 316\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/has\", \n\t\t\"./CartesianBase\", \"./_PlotEvents\", \"./common\", \"dojox/lang/functional\", \"dojox/lang/functional/reversed\",\n\t\t\"dojox/lang/utils\", \"dojox/gfx/fx\"], \n\tfunction(lang, declare, arr, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\treturn declare(\"dojox.charting.plot2d.Bubble\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tA plot representing bubbles.  Note that data for Bubbles requires 3 parameters,\n\t\t//\t\tin the form of:  { x, y, size }, where size determines the size of the bubble.\n\t\tdefaultParams: {\n\t\t\tanimate: null   // animate bars into place\n\t\t},\n\t\toptionalParams: {\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfilter:     {},\n\t\t\tstyleFunc:\tnull,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\",\n\t\t\tlabelFunc: null\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a plot of bubbles.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\n\t\t\t//\t\tOptional keyword arguments object to help define plot parameters.\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tif(!this.opt.labelFunc){\n\t\t\t\tthis.opt.labelFunc = function(value, fixed, precision){\n\t\t\t\t\treturn this._getLabel(value.size, fixed, precision);\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\t//\toverride the render so that we are plotting only circles.\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Bubble\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tvar s;\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\n\t\t\tvar t = this.chart.theme,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tevents = this.events();\n\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tif(!run.data.length){\n\t\t\t\t\trun.dirty = false;\n\t\t\t\t\tt.skip();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(typeof run.data[0] == \"number\"){\n\t\t\t\t\tconsole.warn(\"dojox.charting.plot2d.Bubble: the data in the following series cannot be rendered as a bubble chart; \", run);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar theme = t.next(\"circle\", [this.opt, run]),\n\t\t\t\t\tpoints = arr.map(run.data, function(v){\n\t\t\t\t\t\treturn v ? {\n\t\t\t\t\t\t\tx: ht(v.x) + offsets.l,\n\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v.y),\n\t\t\t\t\t\t\tradius: this._vScaler.bounds.scale * (v.size / 2)\n\t\t\t\t\t\t} : null;\n\t\t\t\t\t}, this);\n\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\trun.dyn.stroke =  theme.series.stroke;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ts = run.group;\n                \n\t\t\t\tvar frontCircles = null, outlineCircles = null, shadowCircles = null, styleFunc = this.opt.styleFunc;\n\n\t\t\t\tvar getFinalTheme = function(item){\n\t\t\t\t\tif(styleFunc){\n\t\t\t\t\t\treturn t.addMixin(theme, \"circle\", [item, styleFunc(item)], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn t.addMixin(theme, \"circle\", item, true);\n\t\t\t\t};\n\n\t\t\t\t// make shadows if needed\n\t\t\t\tif(theme.series.shadow){\n\t\t\t\t\tshadowCircles = arr.map(points, function(item, i){\n\t\t\t\t\t\tif(!this.isNullValue(item)){\n\t\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\n\t\t\t\t\t\t\t\tshadow = finalTheme.series.shadow;\n\t\t\t\t\t\t\tvar shape = s.createCircle({\n\t\t\t\t\t\t\t\tcx: item.x + shadow.dx, cy: item.y + shadow.dy, r: item.radius\n\t\t\t\t\t\t\t}).setStroke(shadow).setFill(shadow.color);\n\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn shape;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}, this);\n\t\t\t\t\tif(shadowCircles.length){\n\t\t\t\t\t\trun.dyn.shadow = shadowCircles[shadowCircles.length - 1].getStroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// make outlines if needed\n\t\t\t\tif(theme.series.outline){\n\t\t\t\t\toutlineCircles = arr.map(points, function(item, i){\n\t\t\t\t\t\tif(!this.isNullValue(item)){\n\t\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\n\t\t\t\t\t\t\t\toutline = dc.makeStroke(finalTheme.series.outline);\n\t\t\t\t\t\t\toutline.width = 2 * outline.width + (theme.series.stroke && theme.series.stroke.width || 0);\n\t\t\t\t\t\t\tvar shape = s.createCircle({\n\t\t\t\t\t\t\t\tcx: item.x, cy: item.y, r: item.radius\n\t\t\t\t\t\t\t}).setStroke(outline);\n\t\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn shape;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}, this);\n\t\t\t\t\tif(outlineCircles.length){\n\t\t\t\t\t\trun.dyn.outline = outlineCircles[outlineCircles.length - 1].getStroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//\trun through the data and add the circles.\n\t\t\t\tfrontCircles = arr.map(points, function(item, i){\n\t\t\t\t\tif(!this.isNullValue(item)){\n\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\n\t\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\t\tx: item.x - item.radius,\n\t\t\t\t\t\t\t\ty: item.y - item.radius,\n\t\t\t\t\t\t\t\twidth:  2 * item.radius,\n\t\t\t\t\t\t\t\theight: 2 * item.radius\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\n\t\t\t\t\t\tvar shape = s.createCircle({\n\t\t\t\t\t\t\tcx: item.x, cy: item.y, r: item.radius\n\t\t\t\t\t\t}).setFill(specialFill).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\n\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.createLabel(s, run.data[i], rect, finalTheme);\n\t\t\t\t\t\treturn shape;\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}, this);\n\t\t\t\tif(frontCircles.length){\n\t\t\t\t\trun.dyn.fill   = frontCircles[frontCircles.length - 1].getFill();\n\t\t\t\t\trun.dyn.stroke = frontCircles[frontCircles.length - 1].getStroke();\n\t\t\t\t}\n\n\t\t\t\tif(events){\n\t\t\t\t\tvar eventSeries = new Array(frontCircles.length);\n\t\t\t\t\tarr.forEach(frontCircles, function(s, i){\n\t\t\t\t\t\tif(s !== null){\n\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\telement: \"circle\",\n\t\t\t\t\t\t\t\tindex:   i,\n\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\tshape:   s,\n\t\t\t\t\t\t\t\toutline: outlineCircles && outlineCircles[i] || null,\n\t\t\t\t\t\t\t\tshadow:  shadowCircles && shadowCircles[i] || null,\n\t\t\t\t\t\t\t\tx:       run.data[i].x,\n\t\t\t\t\t\t\t\ty:       run.data[i].y,\n\t\t\t\t\t\t\t\tr:       run.data[i].size / 2,\n\t\t\t\t\t\t\t\tcx:      points[i].x,\n\t\t\t\t\t\t\t\tcy:      points[i].y,\n\t\t\t\t\t\t\t\tcr:      points[i].radius\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\teventSeries[i] = o;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\t}else{\n\t\t\t\t\tdelete this._eventSeries[run.name];\n\t\t\t\t}\n\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Bubble\n\t\t},\n\t\t_animateBubble: function(shape, offset, size){\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, offset], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [0, 1/size], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Bubble.js\n// module id = 317\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/array\", \"dojo/has\", \"./CartesianBase\", \"./_PlotEvents\", \"./common\",\n\t\t\"dojox/lang/functional\", \"dojox/lang/functional/reversed\", \"dojox/lang/utils\", \"dojox/gfx/fx\"], \n\tfunction(lang, declare, arr, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\t//\tCandlesticks are based on the Bars plot type; we expect the following passed\n\t//\tas values in a series:\n\t//\t{ x?, open, close, high, low, mid? }\n\t//\tif x is not provided, the array index is used.\n\t//\tfailing to provide the OHLC values will throw an error.\n\treturn declare(\"dojox.charting.plot2d.Candlesticks\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tA plot that represents typical candlesticks (financial reporting, primarily).\n\t\t//\t\tUnlike most charts, the Candlestick expects data points to be represented by\n\t\t//\t\tan object of the form { x?, open, close, high, low, mid? }, where both\n\t\t//\t\tx and mid are optional parameters.  If x is not provided, the index of the\n\t\t//\t\tdata array is used.\n\t\tdefaultParams: {\n\t\t\tgap:\t2,\t\t// gap between columns in pixels\n\t\t\tanimate: null   // animate bars into place\n\t\t},\n\t\toptionalParams: {\n\t\t\tminBarSize:\t1,\t// minimal candle width in pixels\n\t\t\tmaxBarSize:\t1,\t// maximal candle width in pixels\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a candlestick chart.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\tcollectStats: function(series){\n\t\t\t// summary:\n\t\t\t//\t\tCollect all statistics for drawing this chart.  Since the common\n\t\t\t//\t\tfunctionality only assumes x and y, Candlesticks must create it's own\n\t\t\t//\t\tstats (since data has no y value, but open/close/high/low instead).\n\t\t\t// series: dojox.charting.Series[]\n\t\t\t//\t\tThe data series array to be drawn on this plot.\n\t\t\t// returns: Object\n\t\t\t//\t\tReturns an object in the form of { hmin, hmax, vmin, vmax }.\n\n\t\t\t//\twe have to roll our own, since we need to use all four passed\n\t\t\t//\tvalues to figure out our stats, and common only assumes x and y.\n\t\t\tvar stats = lang.delegate(dc.defaultStats);\n\t\t\tfor(var i=0; i<series.length; i++){\n\t\t\t\tvar run = series[i];\n\t\t\t\tif(!run.data.length){ continue; }\n\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\n\t\t\t\tif(!(\"ymin\" in run) || !(\"ymax\" in run)){\n\t\t\t\t\tarr.forEach(run.data, function(val, idx){\n\t\t\t\t\t\tif(!this.isNullValue(val)){\n\t\t\t\t\t\t\tvar x = val.x || idx + 1;\n\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, val.open, val.close, val.high, val.low);\n\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, val.open, val.close, val.high, val.low);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\n\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\n\t\t\t}\n\t\t\treturn stats;\t//\tObject\n\t\t},\n\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = this.collectStats(this.series);\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/Candlesticks\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tvar s;\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\ts = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme, f, gap, width,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tevents = this.events();\n\t\t\tf = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\n\t\t\tgap = f.gap;\n\t\t\twidth = f.size;\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tvar theme = t.next(\"candlestick\", [this.opt, run]),\n\t\t\t\t\teventSeries = new Array(run.data.length);\n\n\t\t\t\tif(run.hidden){\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\n\t\t\t\t\trun.dyn.stroke =  theme.series.stroke;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ts = run.group;\n                \n\t\t\t\tfor(var j = 0; j < run.data.length; ++j){\n\t\t\t\t\tvar v = run.data[j];\n\t\t\t\t\tif(!this.isNullValue(v)){\n\t\t\t\t\t\tvar finalTheme = t.addMixin(theme, \"candlestick\", v, true);\n\n\t\t\t\t\t\t//\tcalculate the points we need for OHLC\n\t\t\t\t\t\tvar x = ht(v.x || (j+0.5)) + offsets.l + gap,\n\t\t\t\t\t\t\ty = dim.height - offsets.b,\n\t\t\t\t\t\t\topen = vt(v.open),\n\t\t\t\t\t\t\tclose = vt(v.close),\n\t\t\t\t\t\t\thigh = vt(v.high),\n\t\t\t\t\t\t\tlow = vt(v.low);\n\t\t\t\t\t\tif(\"mid\" in v){\n\t\t\t\t\t\t\tvar mid = vt(v.mid);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(low > high){\n\t\t\t\t\t\t\tvar tmp = high;\n\t\t\t\t\t\t\thigh = low;\n\t\t\t\t\t\t\tlow = tmp;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(width >= 1){\n\t\t\t\t\t\t\t//\tdraw the line and rect, set up as a group and pass that to the events.\n\t\t\t\t\t\t\tvar doFill = open > close;\n\t\t\t\t\t\t\tvar line = { x1: width/2, x2: width/2, y1: y - high, y2: y - low },\n\t\t\t\t\t\t\t\trect = {\n\t\t\t\t\t\t\t\t\tx: 0, y: y-Math.max(open, close),\n\t\t\t\t\t\t\t\t\twidth: width, height: Math.max(doFill ? open-close : close-open, 1)\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tvar shape = s.createGroup();\n\t\t\t\t\t\t\tshape.setTransform({dx: x, dy: 0 });\n\t\t\t\t\t\t\tvar inner = shape.createGroup();\n\t\t\t\t\t\t\tinner.createLine(line).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tinner.createRect(rect).setStroke(finalTheme.series.stroke).\n\t\t\t\t\t\t\t\tsetFill(doFill ? finalTheme.series.fill : \"white\");\n\t\t\t\t\t\t\tif(\"mid\" in v){\n\t\t\t\t\t\t\t\t//\tadd the mid line.\n\t\t\t\t\t\t\t\tinner.createLine({\n\t\t\t\t\t\t\t\t\t\tx1: (finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1), x2: width - (finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1),\n\t\t\t\t\t\t\t\t\ty1: y - mid, y2: y - mid\n\t\t\t\t\t\t\t\t}).setStroke(doFill ? \"white\" : finalTheme.series.stroke);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// TODO: double check this.\n\t\t\t\t\t\t\trun.dyn.fill   = finalTheme.series.fill;\n\t\t\t\t\t\t\trun.dyn.stroke = finalTheme.series.stroke;\n\t\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"candlestick\",\n\t\t\t\t\t\t\t\t\tindex:   j,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:   inner,\n\t\t\t\t\t\t\t\t\tx:       x,\n\t\t\t\t\t\t\t\t\ty:       y-Math.max(open, close),\n\t\t\t\t\t\t\t\t\tcx:\t\t width/2,\n\t\t\t\t\t\t\t\t\tcy:\t\t (y-Math.max(open, close)) + (Math.max(doFill ? open-close : close-open, 1)/2),\n\t\t\t\t\t\t\t\t\twidth:\t width,\n\t\t\t\t\t\t\t\t\theight:  Math.max(doFill ? open-close : close-open, 1),\n\t\t\t\t\t\t\t\t\tdata:\t v\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[j] = o;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateCandlesticks(shape, y - low, high - low);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Candlesticks\n\t\t},\n\n\t\ttooltipFunc: function(o){\n\t\t\treturn '<table cellpadding=\"1\" cellspacing=\"0\" border=\"0\" style=\"font-size:0.9em;\">'\n\t\t\t\t\t\t+ '<tr><td>Open:</td><td align=\"right\"><strong>' + o.data.open + '</strong></td></tr>'\n\t\t\t\t\t\t+ '<tr><td>High:</td><td align=\"right\"><strong>' + o.data.high + '</strong></td></tr>'\n\t\t\t\t\t\t+ '<tr><td>Low:</td><td align=\"right\"><strong>' + o.data.low + '</strong></td></tr>'\n\t\t\t\t\t\t+ '<tr><td>Close:</td><td align=\"right\"><strong>' + o.data.close + '</strong></td></tr>'\n\t\t\t\t\t\t+ (o.data.mid !== undefined ? '<tr><td>Mid:</td><td align=\"right\"><strong>' + o.data.mid + '</strong></td></tr>' : '')\n\t\t\t\t\t\t+ '</table>';\n\t\t},\n\n\t\t_animateCandlesticks: function(shape, voffset, vsize){\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Candlesticks.js\n// module id = 318\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/array\", \"dojo/_base/declare\", \"dojo/has\", \"./CartesianBase\", \"./_PlotEvents\", \"./common\",\n\t\"dojox/lang/functional\", \"dojox/lang/functional/reversed\", \"dojox/lang/utils\", \"dojox/gfx/fx\"],\n\tfunction(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\n\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\n\n\t//\tCandlesticks are based on the Bars plot type; we expect the following passed\n\t//\tas values in a series:\n\t//\t{ x?, open, close, high, low }\n\t//\tif x is not provided, the array index is used.\n\t//\tfailing to provide the OHLC values will throw an error.\n\treturn declare(\"dojox.charting.plot2d.OHLC\", [CartesianBase, _PlotEvents], {\n\t\t// summary:\n\t\t//\t\tA plot that represents typical open/high/low/close (financial reporting, primarily).\n\t\t//\t\tUnlike most charts, the Candlestick expects data points to be represented by\n\t\t//\t\tan object of the form { x?, open, close, high, low, mid? }, where both\n\t\t//\t\tx and mid are optional parameters.  If x is not provided, the index of the\n\t\t//\t\tdata array is used.\n\t\tdefaultParams: {\n\t\t\tgap:\t2,\t\t// gap between columns in pixels\n\t\t\tanimate: null\t// animate chart to place\n\t\t},\n\t\toptionalParams: {\n\t\t\tminBarSize: 1,\t// minimal bar size in pixels\n\t\t\tmaxBarSize: 1,\t// maximal bar size in pixels\n\t\t\t// theme component\n\t\t\tstroke:\t\t{},\n\t\t\toutline:\t{},\n\t\t\tshadow:\t\t{},\n\t\t\tfill:\t\t{},\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tThe constructor for a candlestick chart.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.animate = this.opt.animate;\n\t\t},\n\n\t\tcollectStats: function(series){\n\t\t\t// summary:\n\t\t\t//\t\tCollect all statistics for drawing this chart.  Since the common\n\t\t\t//\t\tfunctionality only assumes x and y, OHLC must create it's own\n\t\t\t//\t\tstats (since data has no y value, but open/close/high/low instead).\n\t\t\t// series: dojox/charting/Series[]\n\t\t\t//\t\tThe data series array to be drawn on this plot.\n\t\t\t// returns: Object\n\t\t\t//\t\tReturns an object in the form of { hmin, hmax, vmin, vmax }.\n\n\t\t\t//\twe have to roll our own, since we need to use all four passed\n\t\t\t//\tvalues to figure out our stats, and common only assumes x and y.\n\t\t\tvar stats = lang.delegate(dc.defaultStats);\n\t\t\tfor(var i=0; i<series.length; i++){\n\t\t\t\tvar run = series[i];\n\t\t\t\tif(!run.data.length){ continue; }\n\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\n\t\t\t\tif(!(\"ymin\" in run) || !(\"ymax\" in run)){\n\t\t\t\t\tarr.forEach(run.data, function(val, idx){\n\t\t\t\t\t\tif(!this.isNullValue(val)){\n\t\t\t\t\t\t\tvar x = val.x || idx + 1;\n\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\n\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\n\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, val.open, val.close, val.high, val.low);\n\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, val.open, val.close, val.high, val.low);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\n\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\n\t\t\t}\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\tvar stats = this.collectStats(this.series);\n\t\t\tstats.hmin -= 0.5;\n\t\t\tstats.hmax += 0.5;\n\t\t\treturn stats; // Object\n\t\t},\n\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRun the calculations for any axes for this plot.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object in the form of { width, height }\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\n\t\t\t// returns: dojox/charting/plot2d/OHLC\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(this.zoom && !this.isDataDirty()){\n\t\t\t\treturn this.performZoom(dim, offsets);\n\t\t\t}\n\t\t\tthis.resetEvents();\n\t\t\tthis.dirty = this.isDirty();\n\t\t\tif(this.dirty){\n\t\t\t\tarr.forEach(this.series, purgeGroup);\n\t\t\t\tthis._eventSeries = {};\n\t\t\t\tthis.cleanGroup();\n\t\t\t\tvar s = this.getGroup();\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\n\t\t\t}\n\t\t\tvar t = this.chart.theme, f, gap, width,\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\n\t\t\t\tevents = this.events();\n\t\t\tf = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\n\t\t\tgap = f.gap;\n\t\t\twidth = f.size;\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tvar run = this.series[i];\n\t\t\t\tif(!this.dirty && !run.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tthis._reconnectEvents(run.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\trun.cleanGroup();\n\t\t\t\tvar theme = t.next(\"candlestick\", [this.opt, run]), s = run.group,\n\t\t\t\t\teventSeries = new Array(run.data.length);\n\t\t\t\tfor(var j = 0; j < run.data.length; ++j){\n\t\t\t\t\tvar v = run.data[j];\n\t\t\t\t\tif(!this.isNullValue(v)){\n\t\t\t\t\t\tvar finalTheme = t.addMixin(theme, \"candlestick\", v, true);\n\n\t\t\t\t\t\t//\tcalculate the points we need for OHLC\n\t\t\t\t\t\tvar x = ht(v.x || (j+0.5)) + offsets.l + gap,\n\t\t\t\t\t\t\ty = dim.height - offsets.b,\n\t\t\t\t\t\t\topen = vt(v.open),\n\t\t\t\t\t\t\tclose = vt(v.close),\n\t\t\t\t\t\t\thigh = vt(v.high),\n\t\t\t\t\t\t\tlow = vt(v.low);\n\t\t\t\t\t\tif(low > high){\n\t\t\t\t\t\t\tvar tmp = high;\n\t\t\t\t\t\t\thigh = low;\n\t\t\t\t\t\t\tlow = tmp;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(width >= 1){\n\t\t\t\t\t\t\tvar hl = {x1: width/2, x2: width/2, y1: y - high, y2: y - low},\n\t\t\t\t\t\t\t\top = {x1: 0, x2: ((width/2) + ((finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1)/2)), y1: y-open, y2: y-open},\n\t\t\t\t\t\t\t\tcl = {x1: ((width/2) - ((finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1)/2)), x2: width, y1: y-close, y2: y-close};\n\t\t\t\t\t\t\tvar shape = s.createGroup();\n\t\t\t\t\t\t\tshape.setTransform({dx: x, dy: 0});\n\t\t\t\t\t\t\tvar inner = shape.createGroup();\n\t\t\t\t\t\t\tinner.createLine(hl).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tinner.createLine(op).setStroke(finalTheme.series.stroke);\n\t\t\t\t\t\t\tinner.createLine(cl).setStroke(finalTheme.series.stroke);\n\n\t\t\t\t\t\t\t// TODO: double check this.\n\t\t\t\t\t\t\trun.dyn.stroke = finalTheme.series.stroke;\n\t\t\t\t\t\t\tif(events){\n\t\t\t\t\t\t\t\tvar o = {\n\t\t\t\t\t\t\t\t\telement: \"candlestick\",\n\t\t\t\t\t\t\t\t\tindex:   j,\n\t\t\t\t\t\t\t\t\trun:     run,\n\t\t\t\t\t\t\t\t\tshape:\t inner,\n\t\t\t\t\t\t\t\t\tx:       x,\n\t\t\t\t\t\t\t\t\ty:       y-Math.max(open, close),\n\t\t\t\t\t\t\t\t\tcx:\t\t width/2,\n\t\t\t\t\t\t\t\t\tcy:\t\t (y-Math.max(open, close)) + (Math.max(open > close ? open-close : close-open, 1)/2),\n\t\t\t\t\t\t\t\t\twidth:\t width,\n\t\t\t\t\t\t\t\t\theight:  Math.max(open > close ? open-close : close-open, 1),\n\t\t\t\t\t\t\t\t\tdata:\t v\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\n\t\t\t\t\t\t\t\teventSeries[j] = o;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.animate){\n\t\t\t\t\t\t\tthis._animateOHLC(shape, y - low, high - low);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\n\t\t\t\trun.dirty = false;\n\t\t\t}\n\t\t\tthis.dirty = false;\n\t\t\t// chart mirroring starts\n\t\t\tif(has(\"dojo-bidi\")){\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\n\t\t\t}\n\t\t\t// chart mirroring ends\n\t\t\treturn this;\t//\tdojox/charting/plot2d/OHLC\n\t\t},\n\t\t_animateOHLC: function(shape, voffset, vsize){\n\t\t\tfx.animateTransform(lang.delegate({\n\t\t\t\tshape: shape,\n\t\t\t\tduration: 1200,\n\t\t\t\ttransform: [\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\n\t\t\t\t\t{name: \"original\"}\n\t\t\t\t]\n\t\t\t}, this.animate)).play();\n\t\t}\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/OHLC.js\n// module id = 319\n// module chunks = 0","define([\"dojo/_base/lang\", \"dojo/_base/declare\", \"dojo/_base/connect\", \"dojo/_base/array\",\n\t\"dojo/dom-geometry\", \"dojo/_base/fx\", \"dojo/fx\", \"dojo/sniff\",\n\t\"./Base\", \"./_PlotEvents\", \"./common\", \"../axis2d/common\",\n\t\"dojox/gfx\", \"dojox/gfx/matrix\", \"dojox/gfx/fx\", \"dojox/lang/functional\",\n\t\"dojox/lang/utils\", \"dojo/fx/easing\"],\n\tfunction(lang, declare, hub, arr, domGeom, baseFx, coreFx, has,\n\t\t\tBase, PlotEvents, dc, da, g, m, gfxfx, df, du, easing){\n\n\tvar FUDGE_FACTOR = 0.2; // use to overlap fans\n\n\tvar Spider = declare(\"dojox.charting.plot2d.Spider\", [Base, PlotEvents], {\n\t\t// summary:\n\t\t//\t\tThe plot that represents a typical Spider chart.\n\t\tdefaultParams: {\n\t\t\tlabels:\t\t\ttrue,\n\t\t\tticks:\t\t\tfalse,\n\t\t\tfixed:\t\t\ttrue,\n\t\t\tprecision:\t\t1,\n\t\t\tlabelOffset:\t-10,\n\t\t\tlabelStyle:\t\t\"default\",\t// default/rows/auto\n\t\t\thtmlLabels:\t\ttrue,\t\t// use HTML to draw labels\n\t\t\tstartAngle:\t\t-90,\t\t// start angle for slices in degrees\n\t\t\tdivisions:\t\t 3,\t\t\t// radius tick count\n\t\t\taxisColor:\t\t \"\",\t\t// spider axis color\n\t\t\taxisWidth:\t\t 0,\t\t\t// spider axis stroke width\n\t\t\tspiderColor:\t \"\",\t\t// spider web color\n\t\t\tspiderWidth:\t 0,\t\t\t// spider web stroke width\n\t\t\tseriesWidth:\t 0,\t\t\t// plot border with\n\t\t\tseriesFillAlpha: 0.2,\t\t// plot fill alpha\n\t\t\tspiderOrigin:\t 0.16,\n\t\t\tmarkerSize:\t\t 3,\t\t\t// radius of plot vertex (px)\n\t\t\tspiderType:\t\t \"polygon\", //\"circle\"\n\t\t\tanimationType:\t easing.backOut,\n\t\t\tanimate: null,\n\t\t\taxisTickFont:\t\t\"\",\n\t\t\taxisTickFontColor:\t\"\",\n\t\t\taxisFont:\t\t\t\"\",\n\t\t\taxisFontColor:\t\t\"\"\n\t\t},\n\t\toptionalParams: {\n\t\t\tradius:\t\t0,\n\t\t\tfont:\t\t\"\",\n\t\t\tfontColor:\t\"\"\n\t\t},\n\n\t\tconstructor: function(chart, kwArgs){\n\t\t\t// summary:\n\t\t\t//\t\tCreate a Spider plot.\n\t\t\t// chart: dojox/charting/Chart\n\t\t\t//\t\tThe chart this plot belongs to.\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\n\t\t\t//\t\tAn optional keyword arguments object to help define this plot's parameters.\n\t\t\tthis.opt = lang.clone(this.defaultParams);\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\n\t\t\tthis.dyn = [];\n\t\t\tthis.datas = {};\n\t\t\tthis.labelKey = [];\n\t\t\tthis.oldSeriePoints = {};\n\t\t\tthis.animate = this.opt.animate === null ? {} : this.opt.animate;\n\t\t\tthis.animations = {};\n\t\t},\n\t\tclear: function(){\n\t\t\t// summary:\n\t\t\t//\t\tClear out all of the information tied to this plot.\n\t\t\t// returns: dojox/charting/plot2d/Spider\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.inherited(arguments);\n\t\t\tthis.dyn = [];\n\t\t\tthis.axes = [];\n\t\t\tthis.datas = {};\n\t\t\tthis.labelKey = [];\n\t\t\tthis.oldSeriePoints = {};\n\t\t\tthis.animations = {};\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Spider\n\t\t},\n\t\tsetAxis: function(axis){\n\t\t\t// summary:\n\t\t\t//\t\tOptionally set axis min and max property.\n\t\t\t// returns: dojox/charting/plot2d/Spider\n\t\t\t//\t\tThe reference to this plot for functional chaining.\n\n\t\t\t// override the computed min/max with provided values if any\n\t\t\tif(axis){\n\t\t\t\tif(axis.opt.min != undefined){\n\t\t\t\t\tthis.datas[axis.name].min = axis.opt.min;\n\t\t\t\t}\n\t\t\t\tif(axis.opt.max != undefined){\n\t\t\t\t\tthis.datas[axis.name].max = axis.opt.max;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Spider\n\t\t},\n\t\taddSeries: function(run){\n\t\t\t// summary:\n\t\t\t//\t\tAdd a data series to this plot.\n\t\t\t// run: dojox.charting.Series\n\t\t\t//\t\tThe series to be added.\n\t\t\t// returns: dojox/charting/plot2d/Base\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tthis.series.push(run);\n\t\t\tvar key;\n\t\t\tfor(key in run.data){\n\t\t\t\tvar val = run.data[key],\n\t\t\t\t\tdata = this.datas[key];\n\t\t\t\tif(data){\n\t\t\t\t\tdata.vlist.push(val);\n\t\t\t\t\tdata.min = Math.min(data.min, val);\n\t\t\t\t\tdata.max = Math.max(data.max, val);\n\t\t\t\t}else{\n\t\t\t\t\tvar axisKey = \"__\"+key;\n\t\t\t\t\tthis.axes.push(axisKey);\n\t\t\t\t\tthis[axisKey] = key;\n\t\t\t\t\tthis.datas[key] = {min: val, max: val, vlist: [val]};\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.labelKey.length <= 0){\n\t\t\t\tfor(key in run.data){\n\t\t\t\t\tthis.labelKey.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox.charting.plot2d.Base\n\t\t},\n\t\tgetSeriesStats: function(){\n\t\t\t// summary:\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\n\t\t\t// returns: Object\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\n\t\t\treturn dc.collectSimpleStats(this.series, function(v){ return v === null; }); // Object\n\t\t},\n\t\trender: function(dim, offsets){\n\t\t\t// summary:\n\t\t\t//\t\tRender the plot on the chart.\n\t\t\t// dim: Object\n\t\t\t//\t\tAn object of the form { width, height }.\n\t\t\t// offsets: Object\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\n\t\t\t// returns: dojox/charting/plot2d/Spider\n\t\t\t//\t\tA reference to this plot for functional chaining.\n\t\t\tif(!this.dirty){ return this; }\n\t\t\tthis.dirty = false;\n\t\t\tthis.cleanGroup();\n\t\t\tvar s = this.group, t = this.chart.theme;\n\t\t\tthis.resetEvents();\n\n\t\t\tif(!this.series || !this.series.length){\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\t// calculate the geometry\n\t\t\tvar o = this.opt, ta = t.axis,\n\t\t\t\trx = (dim.width\t - offsets.l - offsets.r) / 2,\n\t\t\t\try = (dim.height - offsets.t - offsets.b) / 2,\n\t\t\t\tr  = Math.min(rx, ry),\n\t\t\t\taxisTickFont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font) || \"normal normal normal 7pt Tahoma\",\n\t\t\t\taxisFont = o.axisFont || (ta.tick && ta.tick.titleFont) || \"normal normal normal 11pt Tahoma\",\n\t\t\t\taxisTickFontColor = o.axisTickFontColor || (ta.majorTick && ta.majorTick.fontColor) || (ta.tick && ta.tick.fontColor) || \"silver\",\n\t\t\t\taxisFontColor = o.axisFontColor || (ta.tick && ta.tick.titleFontColor) || \"black\",\n\t\t\t\taxisColor = o.axisColor || (ta.tick && ta.tick.axisColor) || \"silver\",\n\t\t\t\tspiderColor = o.spiderColor || (ta.tick && ta.tick.spiderColor) || \"silver\",\n\t\t\t\taxisWidth = o.axisWidth || (ta.stroke && ta.stroke.width) || 2,\n\t\t\t\tspiderWidth = o.spiderWidth || (ta.stroke && ta.stroke.width) || 2,\n\t\t\t\tseriesWidth = o.seriesWidth || (ta.stroke && ta.stroke.width) || 2,\n\t\t\t\tasize = g.normalizedLength(g.splitFontString(axisFont).size),\n\t\t\t\tstartAngle = m._degToRad(o.startAngle),\n\t\t\t\tstart = startAngle, labels, shift, labelR,\n\t\t\t\touterPoints, innerPoints, divisionPoints, divisionRadius, labelPoints,\n\t\t\t\tro = o.spiderOrigin, dv = o.divisions >= 3 ? o.divisions : 3, ms = o.markerSize,\n\t\t\t\tspt = o.spiderType, at = o.animationType, lboffset = o.labelOffset < -10 ? o.labelOffset : -10,\n\t\t\t\taxisExtra = 0.2,\n\t\t\t\ti, j, point, len, fontWidth, render, serieEntry, run, data, min, max, distance;\n\t\t\t\n\t\t\tif(o.labels){\n\t\t\t\tlabels = arr.map(this.series, function(s){\n\t\t\t\t\treturn s.name;\n\t\t\t\t}, this);\n\t\t\t\tshift = df.foldl1(df.map(labels, function(label){\n\t\t\t\t\tvar font = t.series.font;\n\t\t\t\t\treturn g._base._getTextBox(label, {\n\t\t\t\t\t\tfont: font\n\t\t\t\t\t}).w;\n\t\t\t\t}, this), \"Math.max(a, b)\") / 2;\n\t\t\t\tr = Math.min(rx - 2 * shift, ry - asize) + lboffset;\n\t\t\t\tlabelR = r - lboffset;\n\t\t\t}\n\t\t\tif(\"radius\" in o){\n\t\t\t\tr = o.radius;\n\t\t\t\tlabelR = r - lboffset;\n\t\t\t}\n\t\t\tr /= (1+axisExtra);\n\t\t\tvar circle = {\n\t\t\t\tcx: offsets.l + rx,\n\t\t\t\tcy: offsets.t + ry,\n\t\t\t\tr: r\n\t\t\t};\n\n\t\t\tfor(var i = 0; i < this.series.length; i++){\n\t\t\t\tserieEntry = this.series[i];\n\t\t\t\tif(!this.dirty && !serieEntry.dirty){\n\t\t\t\t\tt.skip();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tserieEntry.cleanGroup();\n\t\t\t\trun = serieEntry.data;\n\t\t\t\tif(run !== null){\n\t\t\t\t\tlen = this._getObjectLength(run);\n\t\t\t\t\t//construct connect points\n\t\t\t\t\tif(!outerPoints || outerPoints.length <= 0){\n\t\t\t\t\t\touterPoints = [], innerPoints = [], labelPoints = [];\n\t\t\t\t\t\tthis._buildPoints(outerPoints, len, circle, r, start, true, dim);\n\t\t\t\t\t\tthis._buildPoints(innerPoints, len, circle, r*ro, start, true, dim);\n\t\t\t\t\t\tthis._buildPoints(labelPoints, len, circle, labelR, start, false, dim);\n\t\t\t\t\t\tif(dv > 2){\n\t\t\t\t\t\t\tdivisionPoints = [], divisionRadius = [];\n\t\t\t\t\t\t\tfor (j = 0; j < dv - 2; j++){\n\t\t\t\t\t\t\t\tdivisionPoints[j] = [];\n\t\t\t\t\t\t\t\tthis._buildPoints(divisionPoints[j], len, circle, r*(ro + (1-ro)*(j+1)/(dv-1)), start, true, dim);\n\t\t\t\t\t\t\t\tdivisionRadius[j] = r*(ro + (1-ro)*(j+1)/(dv-1));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//draw Spider\n\t\t\t//axis\n\t\t\tvar axisGroup = s.createGroup(), axisStroke = {color: axisColor, width: axisWidth},\n\t\t\t\tspiderStroke = {color: spiderColor, width: spiderWidth};\n\t\t\tfor (j = outerPoints.length - 1; j >= 0; --j){\n\t\t\t\tpoint = outerPoints[j];\n\t\t\t\tvar st = {\n\t\t\t\t\t\tx: point.x + (point.x - circle.cx) * axisExtra,\n\t\t\t\t\t\ty: point.y + (point.y - circle.cy) * axisExtra\n\t\t\t\t\t},\n\t\t\t\t\tnd = {\n\t\t\t\t\t\tx: point.x + (point.x - circle.cx) * axisExtra / 2,\n\t\t\t\t\t\ty: point.y + (point.y - circle.cy) * axisExtra / 2\n\t\t\t\t\t};\n\t\t\t\taxisGroup.createLine({\n\t\t\t\t\tx1: circle.cx,\n\t\t\t\t\ty1: circle.cy,\n\t\t\t\t\tx2: st.x,\n\t\t\t\t\ty2: st.y\n\t\t\t\t}).setStroke(axisStroke);\n\t\t\t\t//arrow\n\t\t\t\tthis._drawArrow(axisGroup, st, nd, axisStroke);\n\t\t\t}\n\t\t\t\n\t\t\t// draw the label\n\t\t\tvar labelGroup = s.createGroup();\n\t\t\tfor (j = labelPoints.length - 1; j >= 0; --j){\n\t\t\t\tpoint = labelPoints[j];\n\t\t\t\tfontWidth = g._base._getTextBox(this.labelKey[j], {font: axisFont}).w || 0;\n\t\t\t\trender = this.opt.htmlLabels && g.renderer != \"vml\" ? \"html\" : \"gfx\";\n\t\t\t\tvar elem = da.createText[render](this.chart, labelGroup, (!domGeom.isBodyLtr() && render == \"html\") ? (point.x + fontWidth - dim.width) : point.x, point.y,\n\t\t\t\t\t\t\t\"middle\", this.labelKey[j], axisFont, axisFontColor);\n\t\t\t\tif(this.opt.htmlLabels){\n\t\t\t\t\tthis.htmlElements.push(elem);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//spider web: polygon or circle\n\t\t\tvar spiderGroup = s.createGroup();\n\t\t\tif(spt == \"polygon\"){\n\t\t\t\tspiderGroup.createPolyline(outerPoints).setStroke(spiderStroke);\n\t\t\t\tspiderGroup.createPolyline(innerPoints).setStroke(spiderStroke);\n\t\t\t\tif(divisionPoints.length > 0){\n\t\t\t\t\tfor (j = divisionPoints.length - 1; j >= 0; --j){\n\t\t\t\t\t\tspiderGroup.createPolyline(divisionPoints[j]).setStroke(spiderStroke);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{//circle\n\t\t\t\tspiderGroup.createCircle({cx: circle.cx, cy: circle.cy, r: r}).setStroke(spiderStroke);\n\t\t\t\tspiderGroup.createCircle({cx: circle.cx, cy: circle.cy, r: r*ro}).setStroke(spiderStroke);\n\t\t\t\tif(divisionRadius.length > 0){\n\t\t\t\t\tfor (j = divisionRadius.length - 1; j >= 0; --j){\n\t\t\t\t\t\tspiderGroup.createCircle({cx: circle.cx, cy: circle.cy, r: divisionRadius[j]}).setStroke(spiderStroke);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//text\n\t\t\tlen = this._getObjectLength(this.datas);\n\t\t\tvar textGroup = s.createGroup(), k = 0;\n\t\t\tfor(var key in this.datas){\n\t\t\t\tdata = this.datas[key];\n\t\t\t\tmin = data.min;\n\t\t\t\tmax = data.max;\n\t\t\t\tdistance = max - min;\n\t\t\t\t\tend = start + 2 * Math.PI * k / len;\n\t\t\t\tfor (i = 0; i < dv; i++){\n\t\t\t\t\tvar text = min + distance*i/(dv-1);\n\t\t\t\t\tpoint = this._getCoordinate(circle, r*(ro + (1-ro)*i/(dv-1)), end, dim);\n\t\t\t\t\ttext = this._getLabel(text);\n\t\t\t\t\tfontWidth = g._base._getTextBox(text, {font: axisTickFont}).w || 0;\n\t\t\t\t\t\trender = this.opt.htmlLabels && g.renderer != \"vml\" ? \"html\" : \"gfx\";\n\t\t\t\t\tif(this.opt.htmlLabels){\n\t\t\t\t\t\tthis.htmlElements.push(da.createText[render]\n\t\t\t\t\t\t\t(this.chart, textGroup, (!domGeom.isBodyLtr() && render == \"html\") ? (point.x + fontWidth - dim.width) : point.x, point.y,\n\t\t\t\t\t\t\t\t\"start\", text, axisTickFont, axisTickFontColor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tk++;\n\t\t\t}\n\t\t\t\n\t\t\t//draw series (animation)\n\t\t\tthis.chart.seriesShapes = {};\n\t\t\tfor (i = this.series.length - 1; i >= 0; i--){\n\t\t\t\tserieEntry = this.series[i];\n\t\t\t\trun = serieEntry.data;\n\t\t\t\tif(run !== null){\n\t\t\t\t\tvar theme = t.next(\"spider\", [o, serieEntry]),\n\t\t\t\t\t\tf = g.normalizeColor(theme.series.fill), \n\t\t\t\t\t\tsk = {color: theme.series.fill, width: seriesWidth};\n\t\t\t\t\tf.a = o.seriesFillAlpha;\n\t\t\t\t\tserieEntry.dyn = {fill: f, stroke: sk};\n\t\t\t\t\tif(serieEntry.hidden){\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t//series polygon\n\t\t\t\t\tvar seriePoints = [], tipData = [];\n\t\t\t\t\tk = 0;\n\t\t\t\t\tfor(key in run){\n\t\t\t\t\t\tdata = this.datas[key];\n\t\t\t\t\t\tmin = data.min;\n\t\t\t\t\t\tmax = data.max;\n\t\t\t\t\t\tdistance = max - min;\n\t\t\t\t\t\tvar entry = run[key], end = start + 2 * Math.PI * k / len;\n\t\t\t\t\t\t\tpoint = this._getCoordinate(circle, r*(ro + (1-ro)*(entry-min)/distance), end, dim);\n\t\t\t\t\t\tseriePoints.push(point);\n\t\t\t\t\t\ttipData.push({sname: serieEntry.name, key: key, data: entry});\n\t\t\t\t\t\tk++;\n\t\t\t\t\t}\n\t\t\t\t\tseriePoints[seriePoints.length] = seriePoints[0];\n\t\t\t\t\ttipData[tipData.length] = tipData[0];\n\t\t\t\t\tvar polygonBoundRect = this._getBoundary(seriePoints),\n\t\t\t\t\t\tts = serieEntry.group;\n\t\t\t         \n\t\t\t\t\t\n\t\t\t\t\tvar osps = this.oldSeriePoints[serieEntry.name];\n\t\t\t\t\tvar cs = this._createSeriesEntry(ts, (osps || innerPoints), seriePoints, f, sk, r, ro, ms, at);\n\t\t\t\t\tthis.chart.seriesShapes[serieEntry.name] = cs;\n\t\t\t\t\tthis.oldSeriePoints[serieEntry.name] = seriePoints;\n\t\t\t\t\t\n\t\t\t\t\tvar po = {\n\t\t\t\t\t\telement: \"spider_poly\",\n\t\t\t\t\t\tindex:\t i,\n\t\t\t\t\t\tid:\t\t \"spider_poly_\"+serieEntry.name,\n\t\t\t\t\t\trun:\t serieEntry,\n\t\t\t\t\t\tplot:\t this,\n\t\t\t\t\t\tshape:\t cs.poly,\n\t\t\t\t\t\tparent:\t ts,\n\t\t\t\t\t\tbrect:\t polygonBoundRect,\n\t\t\t\t\t\tcx:\t\t circle.cx,\n\t\t\t\t\t\tcy:\t\t circle.cy,\n\t\t\t\t\t\tcr:\t\t r,\n\t\t\t\t\t\tf:\t\t f,\n\t\t\t\t\t\ts:\t\t s\n\t\t\t\t\t};\n\t\t\t\t\tthis._connectEvents(po);\n\t\t\t\t\t\n\t\t\t\t\tvar so = {\n\t\t\t\t\t\telement: \"spider_plot\",\n\t\t\t\t\t\tindex:\t i,\n\t\t\t\t\t\tid:\t\t \"spider_plot_\"+serieEntry.name,\n\t\t\t\t\t\trun:\t serieEntry,\n\t\t\t\t\t\tplot:\t this,\n\t\t\t\t\t\tshape:\t serieEntry.group\n\t\t\t\t\t};\n\t\t\t\t\tthis._connectEvents(so);\n\t\t\t\t\t\n\t\t\t\t\tarr.forEach(cs.circles, function(c, i){\n\t\t\t\t\t\tvar co = {\n\t\t\t\t\t\t\t\telement: \"spider_circle\",\n\t\t\t\t\t\t\t\tindex:\t i,\n\t\t\t\t\t\t\t\tid:\t\t \"spider_circle_\"+serieEntry.name+i,\n\t\t\t\t\t\t\t\trun:\t serieEntry,\n\t\t\t\t\t\t\t\tplot:\t this,\n\t\t\t\t\t\t\t\tshape:\t c,\n\t\t\t\t\t\t\t\tparent:\t ts,\n\t\t\t\t\t\t\t\ttdata:\t tipData[i],\n\t\t\t\t\t\t\t\tcx:\t\t seriePoints[i].x,\n\t\t\t\t\t\t\t\tcy:\t\t seriePoints[i].y,\n\t\t\t\t\t\t\t\tf:\t\t f,\n\t\t\t\t\t\t\t\ts:\t\t s\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tthis._connectEvents(co);\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Spider\n\t\t},\n\t\t_createSeriesEntry: function(ts, osps, sps, f, sk, r, ro, ms, at){\n\t\t\t//polygon\n\t\t\tvar initpoints = this.animate?osps:sps;\n\t\t\tvar spoly = ts.createPolyline(initpoints).setFill(f).setStroke(sk), scircle = [];\n\t\t\tfor (var j = 0; j < initpoints.length; j++){\n\t\t\t\tvar point = initpoints[j], cr = ms;\n\t\t\t\tvar circle = ts.createCircle({cx: point.x, cy: point.y, r: cr}).setFill(f).setStroke(sk);\n\t\t\t\tscircle.push(circle);\n\t\t\t}\n\t\t\tif(this.animate) {\n\t\t\t\tvar anims = arr.map(sps, function (np, j) {\n\t\t\t\t\t// create animation\n\t\t\t\t\tvar sp = osps[j],\n\t\t\t\t\t\tanim = new baseFx.Animation(lang.delegate({\n\t\t\t\t\t\t\tduration: 1000,\n\t\t\t\t\t\t\teasing: at,\n\t\t\t\t\t\t\tcurve: [sp.y, np.y]\n\t\t\t\t\t\t}, this.animate));\n\t\t\t\t\tvar spl = spoly, sc = scircle[j];\n\t\t\t\t\thub.connect(anim, \"onAnimate\", function (y) {\n\t\t\t\t\t\t//apply poly\n\t\t\t\t\t\tvar pshape = spl.getShape();\n\t\t\t\t\t\tpshape.points[j].y = y;\n\t\t\t\t\t\tspl.setShape(pshape);\n\t\t\t\t\t\t//apply circle\n\t\t\t\t\t\tvar cshape = sc.getShape();\n\t\t\t\t\t\tcshape.cy = y;\n\t\t\t\t\t\tsc.setShape(cshape);\n\t\t\t\t\t});\n\t\t\t\t\treturn anim;\n\t\t\t\t}, this);\n\n\t\t\t\tvar anims1 = arr.map(sps, function (np, j) {\n\t\t\t\t\t// create animation\n\t\t\t\t\tvar sp = osps[j],\n\t\t\t\t\t\tanim = new baseFx.Animation(lang.delegate({\n\t\t\t\t\t\t\tduration: 1000,\n\t\t\t\t\t\t\teasing: at,\n\t\t\t\t\t\t\tcurve: [sp.x, np.x]\n\t\t\t\t\t\t}, this.animate));\n\t\t\t\t\tvar spl = spoly, sc = scircle[j];\n\t\t\t\t\thub.connect(anim, \"onAnimate\", function (x) {\n\t\t\t\t\t\t//apply poly\n\t\t\t\t\t\tvar pshape = spl.getShape();\n\t\t\t\t\t\tpshape.points[j].x = x;\n\t\t\t\t\t\tspl.setShape(pshape);\n\t\t\t\t\t\t//apply circle\n\t\t\t\t\t\tvar cshape = sc.getShape();\n\t\t\t\t\t\tcshape.cx = x;\n\t\t\t\t\t\tsc.setShape(cshape);\n\t\t\t\t\t});\n\t\t\t\t\treturn anim;\n\t\t\t\t}, this);\n\t\t\t\tvar masterAnimation = coreFx.combine(anims.concat(anims1)); //dojo.fx.chain(anims);\n\t\t\t\tmasterAnimation.play();\n\t\t\t}\n\t\t\treturn {group :ts, poly: spoly, circles: scircle};\n\t\t},\n\t\tplotEvent: function(o){\n\t\t\t// summary:\n\t\t\t//\t\tStub function for use by specific plots.\n\t\t\t// o: Object\n\t\t\t//\t\tAn object intended to represent event parameters.\n\t\t\tif(o.element == \"spider_plot\"){\n\t\t\t\t//dojo gfx function \"moveToFront\" not work in IE\n\t\t\t\tif(o.type == \"onmouseover\" && !has(\"ie\")){\n\t\t\t\t\to.shape.moveToFront();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttooltipFunc: function(o){\n\t\t\tif(o.element == \"spider_circle\"){\n\t\t\t\treturn o.tdata.sname + \"<br/>\" + o.tdata.key + \"<br/>\" + o.tdata.data;\n\t\t\t}else{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\t_getBoundary: function(points){\n\t\t\tvar xmax = points[0].x,\n\t\t\t\txmin = points[0].x,\n\t\t\t\tymax = points[0].y,\n\t\t\t\tymin = points[0].y;\n\t\t\tfor(var i = 0; i < points.length; i++){\n\t\t\t\tvar point = points[i];\n\t\t\t\txmax = Math.max(point.x, xmax);\n\t\t\t\tymax = Math.max(point.y, ymax);\n\t\t\t\txmin = Math.min(point.x, xmin);\n\t\t\t\tymin = Math.min(point.y, ymin);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tx: xmin,\n\t\t\t\ty: ymin,\n\t\t\t\twidth: xmax - xmin,\n\t\t\t\theight: ymax - ymin\n\t\t\t};\n\t\t},\n\t\t\n\t\t_drawArrow: function(s, start, end, stroke){\n\t\t\tvar len = Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2)),\n\t\t\t\tsin = (end.y - start.y)/len, cos = (end.x - start.x)/len,\n\t\t\t\tpoint2 = {x: end.x + (len/3)*(-sin), y: end.y + (len/3)*cos},\n\t\t\t\tpoint3 = {x: end.x + (len/3)*sin, y: end.y + (len/3)*(-cos)};\n\t\t\ts.createPolyline([start, point2, point3]).setFill(stroke.color).setStroke(stroke);\n\t\t},\n\t\t\n\t\t_buildPoints: function(points, count, circle, radius, angle, recursive, dim){\n\t\t\tfor(var i = 0; i < count; i++){\n\t\t\t\tvar end = angle + 2 * Math.PI * i / count;\n\t\t\t\tpoints.push(this._getCoordinate(circle, radius, end, dim));\n\t\t\t}\n\t\t\tif(recursive){\n\t\t\t\tpoints.push(this._getCoordinate(circle, radius, angle + 2 * Math.PI, dim));\n\t\t\t}\n\t\t},\n\t\t\n\t\t_getCoordinate: function(circle, radius, angle, dim){\n\t\t\tvar x = circle.cx + radius * Math.cos(angle);\n\t\t\tif(has(\"dojo-bidi\") && this.chart.isRightToLeft() && dim){\n\t\t\t\tx = dim.width - x;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: circle.cy + radius * Math.sin(angle)\n\t\t\t}\n\t\t},\n\t\t\n\t\t_getObjectLength: function(obj){\n\t\t\tvar count = 0;\n\t\t\tif(lang.isObject(obj)){\n\t\t\t\tfor(var key in obj){\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\t// utilities\n\t\t_getLabel: function(number){\n\t\t\treturn dc.getLabel(number, this.opt.fixed, this.opt.precision);\n\t\t}\n\t});\n\n\treturn Spider; // dojox/plot2d/Spider\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/plot2d/Spider.js\n// module id = 320\n// module chunks = 0","define([\r\n\t\"./_base/lang\",\r\n\t\"./Evented\",\r\n\t\"./_base/kernel\",\r\n\t\"./_base/array\",\r\n\t\"./aspect\",\r\n\t\"./_base/fx\",\r\n\t\"./dom\",\r\n\t\"./dom-style\",\r\n\t\"./dom-geometry\",\r\n\t\"./ready\",\r\n\t\"require\" // for context sensitive loading of Toggler\r\n], function(lang, Evented, dojo, arrayUtil, aspect, baseFx, dom, domStyle, geom, ready, require){\r\n\r\n\t// module:\r\n\t//\t\tdojo/fx\r\n\t\r\n\t// For back-compat, remove in 2.0.\r\n\tif(!dojo.isAsync){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"./fx/Toggler\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\tvar coreFx = dojo.fx = {\r\n\t\t// summary:\r\n\t\t//\t\tEffects library on top of Base animations\r\n\t};\r\n\r\n\tvar _baseObj = {\r\n\t\t\t_fire: function(evt, args){\r\n\t\t\t\tif(this[evt]){\r\n\t\t\t\t\tthis[evt].apply(this, args||[]);\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\tvar _chain = function(animations){\r\n\t\tthis._index = -1;\r\n\t\tthis._animations = animations||[];\r\n\t\tthis._current = this._onAnimateCtx = this._onEndCtx = null;\r\n\r\n\t\tthis.duration = 0;\r\n\t\tarrayUtil.forEach(this._animations, function(a){\r\n\t\t\tthis.duration += a.duration;\r\n\t\t\tif(a.delay){ this.duration += a.delay; }\r\n\t\t}, this);\r\n\t};\r\n\t_chain.prototype = new Evented();\r\n\tlang.extend(_chain, {\r\n\t\t_onAnimate: function(){\r\n\t\t\tthis._fire(\"onAnimate\", arguments);\r\n\t\t},\r\n\t\t_onEnd: function(){\r\n\t\t\tthis._onAnimateCtx.remove();\r\n\t\t\tthis._onEndCtx.remove();\r\n\t\t\tthis._onAnimateCtx = this._onEndCtx = null;\r\n\t\t\tif(this._index + 1 == this._animations.length){\r\n\t\t\t\tthis._fire(\"onEnd\");\r\n\t\t\t}else{\r\n\t\t\t\t// switch animations\r\n\t\t\t\tthis._current = this._animations[++this._index];\r\n\t\t\t\tthis._onAnimateCtx = aspect.after(this._current, \"onAnimate\", lang.hitch(this, \"_onAnimate\"), true);\r\n\t\t\t\tthis._onEndCtx = aspect.after(this._current, \"onEnd\", lang.hitch(this, \"_onEnd\"), true);\r\n\t\t\t\tthis._current.play(0, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tplay: function(/*int?*/ delay, /*Boolean?*/ gotoStart){\r\n\t\t\tif(!this._current){ this._current = this._animations[this._index = 0]; }\r\n\t\t\tif(!gotoStart && this._current.status() == \"playing\"){ return this; }\r\n\t\t\tvar beforeBegin = aspect.after(this._current, \"beforeBegin\", lang.hitch(this, function(){\r\n\t\t\t\t\tthis._fire(\"beforeBegin\");\r\n\t\t\t\t}), true),\r\n\t\t\t\tonBegin = aspect.after(this._current, \"onBegin\", lang.hitch(this, function(arg){\r\n\t\t\t\t\tthis._fire(\"onBegin\", arguments);\r\n\t\t\t\t}), true),\r\n\t\t\t\tonPlay = aspect.after(this._current, \"onPlay\", lang.hitch(this, function(arg){\r\n\t\t\t\t\tthis._fire(\"onPlay\", arguments);\r\n\t\t\t\t\tbeforeBegin.remove();\r\n\t\t\t\t\tonBegin.remove();\r\n\t\t\t\t\tonPlay.remove();\r\n\t\t\t\t}));\r\n\t\t\tif(this._onAnimateCtx){\r\n\t\t\t\tthis._onAnimateCtx.remove();\r\n\t\t\t}\r\n\t\t\tthis._onAnimateCtx = aspect.after(this._current, \"onAnimate\", lang.hitch(this, \"_onAnimate\"), true);\r\n\t\t\tif(this._onEndCtx){\r\n\t\t\t\tthis._onEndCtx.remove();\r\n\t\t\t}\r\n\t\t\tthis._onEndCtx = aspect.after(this._current, \"onEnd\", lang.hitch(this, \"_onEnd\"), true);\r\n\t\t\tthis._current.play.apply(this._current, arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tpause: function(){\r\n\t\t\tif(this._current){\r\n\t\t\t\tvar e = aspect.after(this._current, \"onPause\", lang.hitch(this, function(arg){\r\n\t\t\t\t\t\tthis._fire(\"onPause\", arguments);\r\n\t\t\t\t\t\te.remove();\r\n\t\t\t\t\t}), true);\r\n\t\t\t\tthis._current.pause();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tgotoPercent: function(/*Decimal*/percent, /*Boolean?*/ andPlay){\r\n\t\t\tthis.pause();\r\n\t\t\tvar offset = this.duration * percent;\r\n\t\t\tthis._current = null;\r\n\r\n\t\t\tarrayUtil.some(this._animations, function(a, index){\r\n\t\t\t\tif(offset <= a.duration){\r\n\t\t\t\t\tthis._current = a;\r\n\t\t\t\t\tthis._index = index;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\toffset -= a.duration;\r\n\t\t\t\treturn false;\r\n\t\t\t}, this);\r\n\t\t\tif(this._current){\r\n\t\t\t\tthis._current.gotoPercent(offset / this._current.duration);\r\n\t\t\t}\r\n\t\t\tif (andPlay) { this.play(); }\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tstop: function(/*boolean?*/ gotoEnd){\r\n\t\t\tif(this._current){\r\n\t\t\t\tif(gotoEnd){\r\n\t\t\t\t\tfor(; this._index + 1 < this._animations.length; ++this._index){\r\n\t\t\t\t\t\tthis._animations[this._index].stop(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._current = this._animations[this._index];\r\n\t\t\t\t}\r\n\t\t\t\tvar e = aspect.after(this._current, \"onStop\", lang.hitch(this, function(arg){\r\n\t\t\t\t\t\tthis._fire(\"onStop\", arguments);\r\n\t\t\t\t\t\te.remove();\r\n\t\t\t\t\t}), true);\r\n\t\t\t\tthis._current.stop();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tstatus: function(){\r\n\t\t\treturn this._current ? this._current.status() : \"stopped\";\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\tthis.stop();\r\n\t\t\tif(this._onAnimateCtx){ this._onAnimateCtx.remove(); }\r\n\t\t\tif(this._onEndCtx){ this._onEndCtx.remove(); }\r\n\t\t}\r\n\t});\r\n\tlang.extend(_chain, _baseObj);\r\n\r\n\tcoreFx.chain = function(/*dojo/_base/fx.Animation[]*/ animations){\r\n\t\t// summary:\r\n\t\t//\t\tChain a list of `dojo/_base/fx.Animation`s to run in sequence\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tReturn a `dojo/_base/fx.Animation` which will play all passed\r\n\t\t//\t\t`dojo/_base/fx.Animation` instances in sequence, firing its own\r\n\t\t//\t\tsynthesized events simulating a single animation. (eg:\r\n\t\t//\t\tonEnd of this animation means the end of the chain,\r\n\t\t//\t\tnot the individual animations within)\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tOnce `node` is faded out, fade in `otherNode`\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tfx.chain([\r\n\t\t//\t|\t\t\tfx.fadeIn({ node:node }),\r\n\t\t//\t|\t\t\tfx.fadeOut({ node:otherNode })\r\n\t\t//\t|\t\t]).play();\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\treturn new _chain(animations); // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\tvar _combine = function(animations){\r\n\t\tthis._animations = animations||[];\r\n\t\tthis._connects = [];\r\n\t\tthis._finished = 0;\r\n\r\n\t\tthis.duration = 0;\r\n\t\tarrayUtil.forEach(animations, function(a){\r\n\t\t\tvar duration = a.duration;\r\n\t\t\tif(a.delay){ duration += a.delay; }\r\n\t\t\tif(this.duration < duration){ this.duration = duration; }\r\n\t\t\tthis._connects.push(aspect.after(a, \"onEnd\", lang.hitch(this, \"_onEnd\"), true));\r\n\t\t}, this);\r\n\r\n\t\tthis._pseudoAnimation = new baseFx.Animation({curve: [0, 1], duration: this.duration});\r\n\t\tvar self = this;\r\n\t\tarrayUtil.forEach([\"beforeBegin\", \"onBegin\", \"onPlay\", \"onAnimate\", \"onPause\", \"onStop\", \"onEnd\"],\r\n\t\t\tfunction(evt){\r\n\t\t\t\tself._connects.push(aspect.after(self._pseudoAnimation, evt,\r\n\t\t\t\t\tfunction(){ self._fire(evt, arguments); },\r\n\t\t\t\ttrue));\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\tlang.extend(_combine, {\r\n\t\t_doAction: function(action, args){\r\n\t\t\tarrayUtil.forEach(this._animations, function(a){\r\n\t\t\t\ta[action].apply(a, args);\r\n\t\t\t});\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t_onEnd: function(){\r\n\t\t\tif(++this._finished > this._animations.length){\r\n\t\t\t\tthis._fire(\"onEnd\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t_call: function(action, args){\r\n\t\t\tvar t = this._pseudoAnimation;\r\n\t\t\tt[action].apply(t, args);\r\n\t\t},\r\n\t\tplay: function(/*int?*/ delay, /*Boolean?*/ gotoStart){\r\n\t\t\tthis._finished = 0;\r\n\t\t\tthis._doAction(\"play\", arguments);\r\n\t\t\tthis._call(\"play\", arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tpause: function(){\r\n\t\t\tthis._doAction(\"pause\", arguments);\r\n\t\t\tthis._call(\"pause\", arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tgotoPercent: function(/*Decimal*/percent, /*Boolean?*/ andPlay){\r\n\t\t\tvar ms = this.duration * percent;\r\n\t\t\tarrayUtil.forEach(this._animations, function(a){\r\n\t\t\t\ta.gotoPercent(a.duration < ms ? 1 : (ms / a.duration), andPlay);\r\n\t\t\t});\r\n\t\t\tthis._call(\"gotoPercent\", arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tstop: function(/*boolean?*/ gotoEnd){\r\n\t\t\tthis._doAction(\"stop\", arguments);\r\n\t\t\tthis._call(\"stop\", arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tstatus: function(){\r\n\t\t\treturn this._pseudoAnimation.status();\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\tthis.stop();\r\n\t\t\tarrayUtil.forEach(this._connects, function(handle){\r\n\t\t\t\thandle.remove();\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\tlang.extend(_combine, _baseObj);\r\n\r\n\tcoreFx.combine = function(/*dojo/_base/fx.Animation[]*/ animations){\r\n\t\t// summary:\r\n\t\t//\t\tCombine a list of `dojo/_base/fx.Animation`s to run in parallel\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tCombine an array of `dojo/_base/fx.Animation`s to run in parallel,\r\n\t\t//\t\tproviding a new `dojo/_base/fx.Animation` instance encompasing each\r\n\t\t//\t\tanimation, firing standard animation events.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tFade out `node` while fading in `otherNode` simultaneously\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tfx.combine([\r\n\t\t//\t|\t\t\tfx.fadeIn({ node:node }),\r\n\t\t//\t|\t\t\tfx.fadeOut({ node:otherNode })\r\n\t\t//\t|\t\t]).play();\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tWhen the longest animation ends, execute a function:\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tvar anim = fx.combine([\r\n\t\t//\t|\t\t\tfx.fadeIn({ node: n, duration:700 }),\r\n\t\t//\t|\t\t\tfx.fadeOut({ node: otherNode, duration: 300 })\r\n\t\t//\t|\t\t]);\r\n\t\t//\t|\t\taspect.after(anim, \"onEnd\", function(){\r\n\t\t//\t|\t\t\t// overall animation is done.\r\n\t\t//\t|\t\t}, true);\r\n\t\t//\t|\t\tanim.play(); // play the animation\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\treturn new _combine(animations); // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\tcoreFx.wipeIn = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tExpand a node to it's natural height.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tReturns an animation that will expand the\r\n\t\t//\t\tnode defined in 'args' object from it's current height to\r\n\t\t//\t\tit's natural height (with no scrollbar).\r\n\t\t//\t\tNode must have no margin/border/padding.\r\n\t\t//\r\n\t\t// args: Object\r\n\t\t//\t\tA hash-map of standard `dojo/_base/fx.Animation` constructor properties\r\n\t\t//\t\t(such as easing: node: duration: and so on)\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tfx.wipeIn({\r\n\t\t//\t|\t\t\tnode:\"someId\"\r\n\t\t//\t|\t\t}).play()\r\n\t\t//\t|\t});\r\n\r\n\t\tvar node = args.node = dom.byId(args.node), s = node.style, o;\r\n\r\n\t\tvar anim = baseFx.animateProperty(lang.mixin({\r\n\t\t\tproperties: {\r\n\t\t\t\theight: {\r\n\t\t\t\t\t// wrapped in functions so we wait till the last second to query (in case value has changed)\r\n\t\t\t\t\tstart: function(){\r\n\t\t\t\t\t\t// start at current [computed] height, but use 1px rather than 0\r\n\t\t\t\t\t\t// because 0 causes IE to display the whole panel\r\n\t\t\t\t\t\to = s.overflow;\r\n\t\t\t\t\t\ts.overflow = \"hidden\";\r\n\t\t\t\t\t\tif(s.visibility == \"hidden\" || s.display == \"none\"){\r\n\t\t\t\t\t\t\ts.height = \"1px\";\r\n\t\t\t\t\t\t\ts.display = \"\";\r\n\t\t\t\t\t\t\ts.visibility = \"\";\r\n\t\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tvar height = domStyle.get(node, \"height\");\r\n\t\t\t\t\t\t\treturn Math.max(height, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tend: function(){\r\n\t\t\t\t\t\treturn node.scrollHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, args));\r\n\r\n\t\tvar fini = function(){\r\n\t\t\ts.height = \"auto\";\r\n\t\t\ts.overflow = o;\r\n\t\t};\r\n\t\taspect.after(anim, \"onStop\", fini, true);\r\n\t\taspect.after(anim, \"onEnd\", fini, true);\r\n\r\n\t\treturn anim; // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\tcoreFx.wipeOut = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tShrink a node to nothing and hide it.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tReturns an animation that will shrink node defined in \"args\"\r\n\t\t//\t\tfrom it's current height to 1px, and then hide it.\r\n\t\t//\r\n\t\t// args: Object\r\n\t\t//\t\tA hash-map of standard `dojo/_base/fx.Animation` constructor properties\r\n\t\t//\t\t(such as easing: node: duration: and so on)\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tfx.wipeOut({ node:\"someId\" }).play()\r\n\t\t//\t|\t});\r\n\r\n\t\tvar node = args.node = dom.byId(args.node), s = node.style, o;\r\n\r\n\t\tvar anim = baseFx.animateProperty(lang.mixin({\r\n\t\t\tproperties: {\r\n\t\t\t\theight: {\r\n\t\t\t\t\tend: 1 // 0 causes IE to display the whole panel\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, args));\r\n\r\n\t\taspect.after(anim, \"beforeBegin\", function(){\r\n\t\t\to = s.overflow;\r\n\t\t\ts.overflow = \"hidden\";\r\n\t\t\ts.display = \"\";\r\n\t\t}, true);\r\n\t\tvar fini = function(){\r\n\t\t\ts.overflow = o;\r\n\t\t\ts.height = \"auto\";\r\n\t\t\ts.display = \"none\";\r\n\t\t};\r\n\t\taspect.after(anim, \"onStop\", fini, true);\r\n\t\taspect.after(anim, \"onEnd\", fini, true);\r\n\r\n\t\treturn anim; // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\tcoreFx.slideTo = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tSlide a node to a new top/left position\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tReturns an animation that will slide \"node\"\r\n\t\t//\t\tdefined in args Object from its current position to\r\n\t\t//\t\tthe position defined by (args.left, args.top).\r\n\t\t//\r\n\t\t// args: Object\r\n\t\t//\t\tA hash-map of standard `dojo/_base/fx.Animation` constructor properties\r\n\t\t//\t\t(such as easing: node: duration: and so on). Special args members\r\n\t\t//\t\tare `top` and `left`, which indicate the new position to slide to.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t.slideTo({ node: node, left:\"40\", top:\"50\", units:\"px\" }).play()\r\n\r\n\t\tvar node = args.node = dom.byId(args.node),\r\n\t\t\ttop = null, left = null;\r\n\r\n\t\tvar init = (function(n){\r\n\t\t\treturn function(){\r\n\t\t\t\tvar cs = domStyle.getComputedStyle(n);\r\n\t\t\t\tvar pos = cs.position;\r\n\t\t\t\ttop = (pos == 'absolute' ? n.offsetTop : parseInt(cs.top) || 0);\r\n\t\t\t\tleft = (pos == 'absolute' ? n.offsetLeft : parseInt(cs.left) || 0);\r\n\t\t\t\tif(pos != 'absolute' && pos != 'relative'){\r\n\t\t\t\t\tvar ret = geom.position(n, true);\r\n\t\t\t\t\ttop = ret.y;\r\n\t\t\t\t\tleft = ret.x;\r\n\t\t\t\t\tn.style.position=\"absolute\";\r\n\t\t\t\t\tn.style.top=top+\"px\";\r\n\t\t\t\t\tn.style.left=left+\"px\";\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t})(node);\r\n\t\tinit();\r\n\r\n\t\tvar anim = baseFx.animateProperty(lang.mixin({\r\n\t\t\tproperties: {\r\n\t\t\t\ttop: args.top || 0,\r\n\t\t\t\tleft: args.left || 0\r\n\t\t\t}\r\n\t\t}, args));\r\n\t\taspect.after(anim, \"beforeBegin\", init, true);\r\n\r\n\t\treturn anim; // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\treturn coreFx;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojo/fx.js\n// module id = 321\n// module chunks = 0","define([\"../_base/lang\"], function(lang){\r\n\r\n// module:\r\n//\t\tdojo/fx/easing\r\n\r\nvar easingFuncs = {\r\n\t// summary:\r\n\t//\t\tCollection of easing functions to use beyond the default\r\n\t//\t\t`dojo._defaultEasing` function.\r\n\t// description:\r\n\t//\t\tEasing functions are used to manipulate the iteration through\r\n\t//\t\tan `dojo.Animation`s _Line. _Line being the properties of an Animation,\r\n\t//\t\tand the easing function progresses through that Line determining\r\n\t//\t\thow quickly (or slowly) it should go. Or more accurately: modify\r\n\t//\t\tthe value of the _Line based on the percentage of animation completed.\r\n\t//\r\n\t//\t\tAll functions follow a simple naming convention of \"ease type\" + \"when\".\r\n\t//\t\tIf the name of the function ends in Out, the easing described appears\r\n\t//\t\ttowards the end of the animation. \"In\" means during the beginning,\r\n\t//\t\tand InOut means both ranges of the Animation will applied, both\r\n\t//\t\tbeginning and end.\r\n\t//\r\n\t//\t\tOne does not call the easing function directly, it must be passed to\r\n\t//\t\tthe `easing` property of an animation.\r\n\t// example:\r\n\t//\t|\tdojo.require(\"dojo.fx.easing\");\r\n\t//\t|\tvar anim = dojo.fadeOut({\r\n\t//\t|\t\tnode: 'node',\r\n\t//\t|\t\tduration: 2000,\r\n\t//\t|\t\t//\tnote there is no ()\r\n\t//\t|\t\teasing: dojo.fx.easing.quadIn\r\n\t//\t|\t}).play();\r\n\t//\r\n\r\n\tlinear: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tA linear easing function\r\n\t\treturn n;\r\n\t},\r\n\r\n\tquadIn: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n, 2);\r\n\t},\r\n\r\n\tquadOut: function(/* Decimal? */n){\r\n\t\treturn n * (n - 2) * -1;\r\n\t},\r\n\r\n\tquadInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(n, 2) / 2; }\r\n\t\treturn -1 * ((--n) * (n - 2) - 1) / 2;\r\n\t},\r\n\r\n\tcubicIn: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n, 3);\r\n\t},\r\n\r\n\tcubicOut: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n - 1, 3) + 1;\r\n\t},\r\n\r\n\tcubicInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(n, 3) / 2; }\r\n\t\tn -= 2;\r\n\t\treturn (Math.pow(n, 3) + 2) / 2;\r\n\t},\r\n\r\n\tquartIn: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n, 4);\r\n\t},\r\n\r\n\tquartOut: function(/* Decimal? */n){\r\n\t\treturn -1 * (Math.pow(n - 1, 4) - 1);\r\n\t},\r\n\r\n\tquartInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(n, 4) / 2; }\r\n\t\tn -= 2;\r\n\t\treturn -1 / 2 * (Math.pow(n, 4) - 2);\r\n\t},\r\n\r\n\tquintIn: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n, 5);\r\n\t},\r\n\r\n\tquintOut: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n - 1, 5) + 1;\r\n\t},\r\n\r\n\tquintInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(n, 5) / 2; }\r\n\t\tn -= 2;\r\n\t\treturn (Math.pow(n, 5) + 2) / 2;\r\n\t},\r\n\r\n\tsineIn: function(/* Decimal? */n){\r\n\t\treturn -1 * Math.cos(n * (Math.PI / 2)) + 1;\r\n\t},\r\n\r\n\tsineOut: function(/* Decimal? */n){\r\n\t\treturn Math.sin(n * (Math.PI / 2));\r\n\t},\r\n\r\n\tsineInOut: function(/* Decimal? */n){\r\n\t\treturn -1 * (Math.cos(Math.PI * n) - 1) / 2;\r\n\t},\r\n\r\n\texpoIn: function(/* Decimal? */n){\r\n\t\treturn (n == 0) ? 0 : Math.pow(2, 10 * (n - 1));\r\n\t},\r\n\r\n\texpoOut: function(/* Decimal? */n){\r\n\t\treturn (n == 1) ? 1 : (-1 * Math.pow(2, -10 * n) + 1);\r\n\t},\r\n\r\n\texpoInOut: function(/* Decimal? */n){\r\n\t\tif(n == 0){ return 0; }\r\n\t\tif(n == 1){ return 1; }\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(2, 10 * (n - 1)) / 2; }\r\n\t\t--n;\r\n\t\treturn (-1 * Math.pow(2, -10 * n) + 2) / 2;\r\n\t},\r\n\r\n\tcircIn: function(/* Decimal? */n){\r\n\t\treturn -1 * (Math.sqrt(1 - Math.pow(n, 2)) - 1);\r\n\t},\r\n\r\n\tcircOut: function(/* Decimal? */n){\r\n\t\tn = n - 1;\r\n\t\treturn Math.sqrt(1 - Math.pow(n, 2));\r\n\t},\r\n\r\n\tcircInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return -1 / 2 * (Math.sqrt(1 - Math.pow(n, 2)) - 1); }\r\n\t\tn -= 2;\r\n\t\treturn 1 / 2 * (Math.sqrt(1 - Math.pow(n, 2)) + 1);\r\n\t},\r\n\r\n\tbackIn: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that starts away from the target,\r\n\t\t//\t\tand quickly accelerates towards the end value.\r\n\t\t//\r\n\t\t//\t\tUse caution when the easing will cause values to become\r\n\t\t//\t\tnegative as some properties cannot be set to negative values.\r\n\t\tvar s = 1.70158;\r\n\t\treturn Math.pow(n, 2) * ((s + 1) * n - s);\r\n\t},\r\n\r\n\tbackOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that pops past the range briefly, and slowly comes back.\r\n\t\t// description:\r\n\t\t//\t\tAn easing function that pops past the range briefly, and slowly comes back.\r\n\t\t//\r\n\t\t//\t\tUse caution when the easing will cause values to become negative as some\r\n\t\t//\t\tproperties cannot be set to negative values.\r\n\r\n\t\tn = n - 1;\r\n\t\tvar s = 1.70158;\r\n\t\treturn Math.pow(n, 2) * ((s + 1) * n + s) + 1;\r\n\t},\r\n\r\n\tbackInOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function combining the effects of `backIn` and `backOut`\r\n\t\t// description:\r\n\t\t//\t\tAn easing function combining the effects of `backIn` and `backOut`.\r\n\t\t//\t\tUse caution when the easing will cause values to become negative\r\n\t\t//\t\tas some properties cannot be set to negative values.\r\n\t\tvar s = 1.70158 * 1.525;\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return (Math.pow(n, 2) * ((s + 1) * n - s)) / 2; }\r\n\t\tn-=2;\r\n\t\treturn (Math.pow(n, 2) * ((s + 1) * n + s) + 2) / 2;\r\n\t},\r\n\r\n\telasticIn: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function the elastically snaps from the start value\r\n\t\t// description:\r\n\t\t//\t\tAn easing function the elastically snaps from the start value\r\n\t\t//\r\n\t\t//\t\tUse caution when the elasticity will cause values to become negative\r\n\t\t//\t\tas some properties cannot be set to negative values.\r\n\t\tif(n == 0 || n == 1){ return n; }\r\n\t\tvar p = .3;\r\n\t\tvar s = p / 4;\r\n\t\tn = n - 1;\r\n\t\treturn -1 * Math.pow(2, 10 * n) * Math.sin((n - s) * (2 * Math.PI) / p);\r\n\t},\r\n\r\n\telasticOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that elasticly snaps around the target value,\r\n\t\t//\t\tnear the end of the Animation\r\n\t\t// description:\r\n\t\t//\t\tAn easing function that elasticly snaps around the target value,\r\n\t\t//\t\tnear the end of the Animation\r\n\t\t//\r\n\t\t//\t\tUse caution when the elasticity will cause values to become\r\n\t\t//\t\tnegative as some properties cannot be set to negative values.\r\n\t\tif(n==0 || n == 1){ return n; }\r\n\t\tvar p = .3;\r\n\t\tvar s = p / 4;\r\n\t\treturn Math.pow(2, -10 * n) * Math.sin((n - s) * (2 * Math.PI) / p) + 1;\r\n\t},\r\n\r\n\telasticInOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that elasticly snaps around the value, near\r\n\t\t//\t\tthe beginning and end of the Animation.\r\n\t\t// description:\r\n\t\t//\t\tAn easing function that elasticly snaps around the value, near\r\n\t\t//\t\tthe beginning and end of the Animation.\r\n\t\t//\r\n\t\t//\t\tUse caution when the elasticity will cause values to become\r\n\t\t//\t\tnegative as some properties cannot be set to negative values.\r\n\t\tif(n == 0) return 0;\r\n\t\tn = n * 2;\r\n\t\tif(n == 2) return 1;\r\n\t\tvar p = .3 * 1.5;\r\n\t\tvar s = p / 4;\r\n\t\tif(n < 1){\r\n\t\t\tn -= 1;\r\n\t\t\treturn -.5 * (Math.pow(2, 10 * n) * Math.sin((n - s) * (2 * Math.PI) / p));\r\n\t\t}\r\n\t\tn -= 1;\r\n\t\treturn .5 * (Math.pow(2, -10 * n) * Math.sin((n - s) * (2 * Math.PI) / p)) + 1;\r\n\t},\r\n\r\n\tbounceIn: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that 'bounces' near the beginning of an Animation\r\n\t\treturn (1 - easingFuncs.bounceOut(1 - n)); // Decimal\r\n\t},\r\n\r\n\tbounceOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that 'bounces' near the end of an Animation\r\n\t\tvar s = 7.5625;\r\n\t\tvar p = 2.75;\r\n\t\tvar l;\r\n\t\tif(n < (1 / p)){\r\n\t\t\tl = s * Math.pow(n, 2);\r\n\t\t}else if(n < (2 / p)){\r\n\t\t\tn -= (1.5 / p);\r\n\t\t\tl = s * Math.pow(n, 2) + .75;\r\n\t\t}else if(n < (2.5 / p)){\r\n\t\t\tn -= (2.25 / p);\r\n\t\t\tl = s * Math.pow(n, 2) + .9375;\r\n\t\t}else{\r\n\t\t\tn -= (2.625 / p);\r\n\t\t\tl = s * Math.pow(n, 2) + .984375;\r\n\t\t}\r\n\t\treturn l;\r\n\t},\r\n\r\n\tbounceInOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that 'bounces' at the beginning and end of the Animation\r\n\t\tif(n < 0.5){ return easingFuncs.bounceIn(n * 2) / 2; }\r\n\t\treturn (easingFuncs.bounceOut(n * 2 - 1) / 2) + 0.5; // Decimal\r\n\t}\r\n};\r\n\r\nlang.setObject(\"dojo.fx.easing\", easingFuncs);\r\n\r\nreturn easingFuncs;\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojo/fx/easing.js\n// module id = 322\n// module chunks = 0","define([\"dojo/_base/lang\"], function(lang){\n\treturn lang.getObject(\"dojox.charting.themes\", true);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojox/charting/themes/common.js\n// module id = 323\n// module chunks = 0"],"sourceRoot":""}