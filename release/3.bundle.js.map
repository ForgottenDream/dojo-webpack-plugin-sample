{"version":3,"sources":["webpack:///3.bundle.js","webpack:///../dijit/ColorPalette.js","webpack:///../dijit/_PaletteMixin.js","webpack:///../dijit/typematic.js","webpack:///../dijit/templates/ColorPalette.html","webpack:///../dojo/nls/colors.js?f457","webpack:///../dojo/nls/colors.js","webpack:///../dojo/colors.js"],"names":["webpackJsonp","registerAbsMids","dijit/ColorPalette","dijit/_PaletteMixin","dijit/typematic","dojo/text!dijit/templates/ColorPalette.html","dojo/i18n!dojo/nls/colors","dojo/nls/colors","dojo/colors","228","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","dj","c","undefined","require","template","_Widget","_TemplatedMixin","_PaletteMixin","has","i18n","Color","declare","domConstruct","string","ColorPalette","palette","_palettes","7x10","3x4","templateString","baseClass","_dyeFactory","value","row","col","title","this","_dyeClass","buildRendering","inherited","arguments","_Color","_preparePalette","getLocalization","lang","hcTemplate","_imagePaths","toUrl","constructor","alias","_title","_row","_col","setColor","named","getValue","toHex","fillCell","cell","blankGif","html","substitute","color","alt","image","toString","left","top","size","place","apply","275","domAttr","domClass","keys","on","_CssStateMixin","a11yclick","focus","typematic","defaultTimeout","timeoutChangeRate","_selectedCell","tabIndex","cellClass","dyeClass","getObject","choices","titles","_cells","url","_blankGif","own","gridNode","hitch","length","rowNode","create","role","cellObject","cellNode","class","idx","push","node","dye","_xDim","_yDim","keyIncrementMap","UP_ARROW","DOWN_ARROW","RIGHT_ARROW","isLeftToRight","LEFT_ARROW","key","addKeyListener","domNode","keyCode","ctrlKey","altKey","shiftKey","increment","count","_navigateByKey","postCreate","_setCurrent","_currentFocus","_onCellClick","evt","target","tagName","parentNode","_getDye","_setValueAttr","stopPropagation","preventDefault","set","priorityChange","remove","i","add","_set","onChange","typeCount","newFocusIndex","focusNode","defer","276","array","connect","dijit","_fireEventAndReload","_timer","_callback","_count","_node","_evt","_currentTimeout","Math","max","_initialDelay","_subsequentDelay","round","_minDelay","setTimeout","trigger","_this","callback","obj","subsequentDelay","initialDelay","minDelay","_obj","stop","faux","attr","v","clearTimeout","keyObject","type","_keypress","handles","metaKey","forEach","h","addMouseListener","addListener","mouseNode","keyNode","277","278","279","root","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","transparent","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","zh","zh-tw","uk","tr","th","sv","sl","sk","ru","ro","pt","pt-pt","pl","nl","nb","ko","kk","ja","it","id","hu","hr","he","fr","fi","es","el","de","da","cs","ca","bg","az","ar","280","dojo","ArrayUtil","ColorExt","setObject","hue2rgb","m1","m2","h6","colorFromRgb","fromRgb","m","toLowerCase","match","a","split","l","t","r","charAt","map","x","parseFloat","fromArray","H","S","L","confine","low","high","Number","isNaN","prototype","sanitize","g","b","makeGrey","mixin"],"mappings":"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","file":"3.bundle.js","sourcesContent":["webpackJsonp.registerAbsMids({\n\t'dijit/ColorPalette':228,\n\t'dijit/_PaletteMixin':275,\n\t'dijit/typematic':276,\n\t'dojo/text!dijit/templates/ColorPalette.html':277,\n\t'dojo/i18n!dojo/nls/colors':278,\n\t'dojo/nls/colors':279,\n\t'dojo/colors':280\n});\nwebpackJsonp([3],{\n\n/***/ 228:\n/*!********************************!*\\\n  !*** ../dijit/ColorPalette.js ***!\n  \\********************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t__webpack_require__.dj.c(/*! dijit/ColorPalette */ 228), // require.toUrl\n\t__webpack_require__(/*! dojo/text!./templates/ColorPalette.html */ 277),\n\t__webpack_require__(/*! ./_Widget */ 25), // used also to load dijit/hccss for setting has(\"highcontrast\")\n\t__webpack_require__(/*! ./_TemplatedMixin */ 30),\n\t__webpack_require__(/*! ./_PaletteMixin */ 275),\n\t__webpack_require__(/*! ./hccss */ 80), // has(\"highcontrast\")\n\t__webpack_require__(/*! dojo/i18n */ 48), // i18n.getLocalization\n\t__webpack_require__(/*! dojo/_base/Color */ 78), // dojo.Color dojo.Color.named\n\t__webpack_require__(/*! dojo/_base/declare */ 4), // declare\n\t__webpack_require__(/*! dojo/dom-construct */ 16), // domConstruct.place\n\t__webpack_require__(/*! dojo/string */ 58), // string.substitute\n\t__webpack_require__(/*! dojo/i18n!dojo/nls/colors */ 278), // translations\n\t__webpack_require__(/*! dojo/colors */ 280)    // extend dojo.Color w/names of other colors\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(require, template, _Widget, _TemplatedMixin, _PaletteMixin, has, i18n, Color,\n\tdeclare, domConstruct, string){\n\n\t// module:\n\t//\t\tdijit/ColorPalette\n\n\tvar ColorPalette = declare(\"dijit.ColorPalette\", [_Widget, _TemplatedMixin, _PaletteMixin], {\n\t\t// summary:\n\t\t//\t\tA keyboard accessible color-picking widget\n\t\t// description:\n\t\t//\t\tGrid showing various colors, so the user can pick a certain color.\n\t\t//\t\tCan be used standalone, or as a popup.\n\t\t//\n\t\t// example:\n\t\t// |\t<div data-dojo-type=\"dijit/ColorPalette\"></div>\n\t\t//\n\t\t// example:\n\t\t// |\tvar picker = new dijit.ColorPalette({ },srcNode);\n\t\t// |\tpicker.startup();\n\n\n\t\t// palette: [const] String\n\t\t//\t\tSize of grid, either \"7x10\" or \"3x4\".\n\t\tpalette: \"7x10\",\n\n\t\t// _palettes: [protected] Map\n\t\t//\t\tThis represents the value of the colors.\n\t\t//\t\tThe first level is a hashmap of the different palettes available.\n\t\t//\t\tThe next two dimensions represent the columns and rows of colors.\n\t\t_palettes: {\n\t\t\t\"7x10\": [\n\t\t\t\t[\"white\", \"seashell\", \"cornsilk\", \"lemonchiffon\", \"lightyellow\", \"palegreen\", \"paleturquoise\", \"lightcyan\", \"lavender\", \"plum\"],\n\t\t\t\t[\"lightgray\", \"pink\", \"bisque\", \"moccasin\", \"khaki\", \"lightgreen\", \"lightseagreen\", \"lightskyblue\", \"cornflowerblue\", \"violet\"],\n\t\t\t\t[\"silver\", \"lightcoral\", \"sandybrown\", \"orange\", \"palegoldenrod\", \"chartreuse\", \"mediumturquoise\", \"skyblue\", \"mediumslateblue\", \"orchid\"],\n\t\t\t\t[\"gray\", \"red\", \"orangered\", \"darkorange\", \"yellow\", \"limegreen\", \"darkseagreen\", \"royalblue\", \"slateblue\", \"mediumorchid\"],\n\t\t\t\t[\"dimgray\", \"crimson\", \"chocolate\", \"coral\", \"gold\", \"forestgreen\", \"seagreen\", \"blue\", \"blueviolet\", \"darkorchid\"],\n\t\t\t\t[\"darkslategray\", \"firebrick\", \"saddlebrown\", \"sienna\", \"olive\", \"green\", \"darkcyan\", \"mediumblue\", \"darkslateblue\", \"darkmagenta\" ],\n\t\t\t\t[\"black\", \"darkred\", \"maroon\", \"brown\", \"darkolivegreen\", \"darkgreen\", \"midnightblue\", \"navy\", \"indigo\", \"purple\"]\n\t\t\t],\n\n\t\t\t\"3x4\": [\n\t\t\t\t[\"white\", \"lime\", \"green\", \"blue\"],\n\t\t\t\t[\"silver\", \"yellow\", \"fuchsia\", \"navy\"],\n\t\t\t\t[\"gray\", \"red\", \"purple\", \"black\"]\n\t\t\t]\n\t\t},\n\n\t\t// templateString: String\n\t\t//\t\tThe template of this widget.\n\t\ttemplateString: template,\n\n\t\tbaseClass: \"dijitColorPalette\",\n\n\t\t_dyeFactory: function(value, row, col, title){\n\t\t\t// Overrides _PaletteMixin._dyeFactory().\n\t\t\treturn new this._dyeClass(value, row, col, title);\n\t\t},\n\n\t\tbuildRendering: function(){\n\t\t\t// Instantiate the template, which makes a skeleton into which we'll insert a bunch of\n\t\t\t// <img> nodes\n\t\t\tthis.inherited(arguments);\n\n\t\t\t//\tCreates customized constructor for dye class (color of a single cell) for\n\t\t\t//\tspecified palette and high-contrast vs. normal mode.   Used in _getDye().\n\t\t\tthis._dyeClass = declare(ColorPalette._Color, {\n\t\t\t\tpalette: this.palette\n\t\t\t});\n\n\t\t\t// Creates <img> nodes in each cell of the template.\n\t\t\tthis._preparePalette(\n\t\t\t\tthis._palettes[this.palette],\n\t\t\t\ti18n.getLocalization(\"dojo\", \"colors\", this.lang));\n\t\t}\n\t});\n\n\tColorPalette._Color = declare(\"dijit._Color\", Color, {\n\t\t// summary:\n\t\t//\t\tObject associated with each cell in a ColorPalette palette.\n\t\t//\t\tImplements dijit/Dye.\n\n\t\t// Template for each cell in normal (non-high-contrast mode).  Each cell contains a wrapper\n\t\t// node for showing the border (called dijitPaletteImg for back-compat), and dijitColorPaletteSwatch\n\t\t// for showing the color.\n\t\ttemplate: \"<span class='dijitInline dijitPaletteImg'>\" +\n\t\t\t\"<img src='${blankGif}' alt='${alt}' title='${title}' class='dijitColorPaletteSwatch' style='background-color: ${color}'/>\" +\n\t\t\t\"</span>\",\n\n\t\t// Template for each cell in high contrast mode.  Each cell contains an image with the whole palette,\n\t\t// but scrolled and clipped to show the correct color only\n\t\thcTemplate: \"<span class='dijitInline dijitPaletteImg' style='position: relative; overflow: hidden; height: 12px; width: 14px;'>\" +\n\t\t\t\"<img src='${image}' alt='${alt}' title='${title}' style='position: absolute; left: ${left}px; top: ${top}px; ${size}'/>\" +\n\t\t\t\"</span>\",\n\n\t\t// _imagePaths: [protected] Map\n\t\t//\t\tThis is stores the path to the palette images used for high-contrast mode display\n\t\t_imagePaths: {\n\t\t\t\"7x10\": require.toUrl(\"./themes/a11y/colors7x10.png\"),\n\t\t\t\"3x4\": require.toUrl(\"./themes/a11y/colors3x4.png\")\n\t\t},\n\n\t\tconstructor: function(alias, row, col, title){\n\t\t\t// summary:\n\t\t\t//\t\tConstructor for ColorPalette._Color\n\t\t\t// alias: String\n\t\t\t//\t\tEnglish name of the color.\n\t\t\t// row: Number\n\t\t\t//\t\tVertical position in grid.\n\t\t\t// column: Number\n\t\t\t//\t\tHorizontal position in grid.\n\t\t\t// title: String\n\t\t\t//\t\tLocalized name of the color.\n\t\t\tthis._title = title;\n\t\t\tthis._row = row;\n\t\t\tthis._col = col;\n\t\t\tthis.setColor(Color.named[alias]);\n\t\t},\n\n\t\tgetValue: function(){\n\t\t\t// summary:\n\t\t\t//\t\tNote that although dijit._Color is initialized with a value like \"white\" getValue() always\n\t\t\t//\t\treturns a hex value\n\t\t\treturn this.toHex();\n\t\t},\n\n\t\tfillCell: function(/*DOMNode*/ cell, /*String*/ blankGif){\n\t\t\tvar html = string.substitute(has(\"highcontrast\") ? this.hcTemplate : this.template, {\n\t\t\t\t// substitution variables for normal mode\n\t\t\t\tcolor: this.toHex(),\n\t\t\t\tblankGif: blankGif,\n\t\t\t\talt: this._title,\n\t\t\t\ttitle: this._title,\n\n\t\t\t\t// variables used for high contrast mode\n\t\t\t\timage: this._imagePaths[this.palette].toString(),\n\t\t\t\tleft: this._col * -20 - 5,\n\t\t\t\ttop: this._row * -20 - 5,\n\t\t\t\tsize: this.palette == \"7x10\" ? \"height: 145px; width: 206px\" : \"height: 64px; width: 86px\"\n\t\t\t});\n\n\t\t\tdomConstruct.place(html, cell);\n\t\t}\n\t});\n\n\treturn ColorPalette;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 275:\n/*!*********************************!*\\\n  !*** ../dijit/_PaletteMixin.js ***!\n  \\*********************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t__webpack_require__(/*! dojo/_base/declare */ 4), // declare\n\t__webpack_require__(/*! dojo/dom-attr */ 14), // domAttr.set\n\t__webpack_require__(/*! dojo/dom-class */ 11), // domClass.add domClass.remove\n\t__webpack_require__(/*! dojo/dom-construct */ 16), // domConstruct.create domConstruct.place\n\t__webpack_require__(/*! dojo/keys */ 19), // keys\n\t__webpack_require__(/*! dojo/_base/lang */ 0), // lang.getObject\n\t__webpack_require__(/*! dojo/on */ 7),\n\t__webpack_require__(/*! ./_CssStateMixin */ 50),\n\t__webpack_require__(/*! ./a11yclick */ 27),\n\t__webpack_require__(/*! ./focus */ 49),\n\t__webpack_require__(/*! ./typematic */ 276)\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(declare, domAttr, domClass, domConstruct, keys, lang, on, _CssStateMixin, a11yclick, focus, typematic){\n\n\t// module:\n\t//\t\tdijit/_PaletteMixin\n\n\tvar PaletteMixin = declare(\"dijit._PaletteMixin\", _CssStateMixin, {\n\t\t// summary:\n\t\t//\t\tA keyboard accessible palette, for picking a color/emoticon/etc.\n\t\t// description:\n\t\t//\t\tA mixin for a grid showing various entities, so the user can pick a certain entity.\n\n\t\t// defaultTimeout: Number\n\t\t//\t\tNumber of milliseconds before a held key or button becomes typematic\n\t\tdefaultTimeout: 500,\n\n\t\t// timeoutChangeRate: Number\n\t\t//\t\tFraction of time used to change the typematic timer between events\n\t\t//\t\t1.0 means that each typematic event fires at defaultTimeout intervals\n\t\t//\t\tLess than 1.0 means that each typematic event fires at an increasing faster rate\n\t\ttimeoutChangeRate: 0.90,\n\n\t\t// value: String\n\t\t//\t\tCurrently selected color/emoticon/etc.\n\t\tvalue: \"\",\n\n\t\t// _selectedCell: [private] Integer\n\t\t//\t\tIndex of the currently selected cell. Initially, none selected\n\t\t_selectedCell: -1,\n\n\t\t/*=====\n\t\t // _currentFocus: [private] DomNode\n\t\t //\t\tThe currently focused cell (if the palette itself has focus), or otherwise\n\t\t //\t\tthe cell to be focused when the palette itself gets focus.\n\t\t //\t\tDifferent from value, which represents the selected (i.e. clicked) cell.\n\t\t _currentFocus: null,\n\t\t =====*/\n\n\t\t/*=====\n\t\t // _xDim: [protected] Integer\n\t\t //\t\tThis is the number of cells horizontally across.\n\t\t _xDim: null,\n\t\t =====*/\n\n\t\t/*=====\n\t\t // _yDim: [protected] Integer\n\t\t //\t\tThis is the number of cells vertically down.\n\t\t _yDim: null,\n\t\t =====*/\n\n\t\t// tabIndex: String\n\t\t//\t\tWidget tab index.\n\t\ttabIndex: \"0\",\n\n\t\t// cellClass: [protected] String\n\t\t//\t\tCSS class applied to each cell in the palette\n\t\tcellClass: \"dijitPaletteCell\",\n\n\t\t// dyeClass: [protected] Constructor\n\t\t//\t\tConstructor for Object created for each cell of the palette.\n\t\t//\t\tdyeClass should implement the dijit/_PaletteMixin.__Dye interface.\n\t\tdyeClass: null,\n\n\t\t_dyeFactory: function(value /*===== , row, col, title =====*/){\n\t\t\t// summary:\n\t\t\t//\t\tReturn instance of dijit.Dye for specified cell of palette\n\t\t\t// tags:\n\t\t\t//\t\textension\n\n\t\t\t// Remove string support for 2.0\n\t\t\tvar dyeClassObj = typeof this.dyeClass == \"string\" ? lang.getObject(this.dyeClass) : this.dyeClass;\n\t\t\treturn new dyeClassObj(value);\n\t\t},\n\n\t\t_preparePalette: function(choices, titles){\n\t\t\t// summary:\n\t\t\t//\t\tSubclass must call _preparePalette() from postCreate(), passing in the tooltip\n\t\t\t//\t\tfor each cell\n\t\t\t// choices: String[][]\n\t\t\t//\t\tid's for each cell of the palette, used to create Dye JS object for each cell\n\t\t\t// titles: String[]\n\t\t\t//\t\tLocalized tooltip for each cell\n\n\t\t\tthis._cells = [];\n\t\t\tvar url = this._blankGif;\n\n\t\t\tthis.own(on(this.gridNode, a11yclick, lang.hitch(this, \"_onCellClick\")));\n\n\t\t\tfor(var row = 0; row < choices.length; row++){\n\t\t\t\tvar rowNode = domConstruct.create(\"tr\", {tabIndex: \"-1\", role: \"row\"}, this.gridNode);\n\t\t\t\tfor(var col = 0; col < choices[row].length; col++){\n\t\t\t\t\tvar value = choices[row][col];\n\t\t\t\t\tif(value){\n\t\t\t\t\t\tvar cellObject = this._dyeFactory(value, row, col, titles[value]);\n\n\t\t\t\t\t\tvar cellNode = domConstruct.create(\"td\", {\n\t\t\t\t\t\t\t\"class\": this.cellClass,\n\t\t\t\t\t\t\ttabIndex: \"-1\",\n\t\t\t\t\t\t\ttitle: titles[value],\n\t\t\t\t\t\t\trole: \"gridcell\"\n\t\t\t\t\t\t}, rowNode);\n\n\t\t\t\t\t\t// prepare cell inner structure\n\t\t\t\t\t\tcellObject.fillCell(cellNode, url);\n\n\t\t\t\t\t\tcellNode.idx = this._cells.length;\n\n\t\t\t\t\t\t// save cell info into _cells\n\t\t\t\t\t\tthis._cells.push({node: cellNode, dye: cellObject});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._xDim = choices[0].length;\n\t\t\tthis._yDim = choices.length;\n\n\t\t\t// Now set all events\n\t\t\t// The palette itself is navigated to with the tab key on the keyboard\n\t\t\t// Keyboard navigation within the Palette is with the arrow keys\n\t\t\t// Spacebar selects the cell.\n\t\t\t// For the up key the index is changed by negative the x dimension.\n\n\t\t\tvar keyIncrementMap = {\n\t\t\t\tUP_ARROW: -this._xDim,\n\t\t\t\t// The down key the index is increase by the x dimension.\n\t\t\t\tDOWN_ARROW: this._xDim,\n\t\t\t\t// Right and left move the index by 1.\n\t\t\t\tRIGHT_ARROW: this.isLeftToRight() ? 1 : -1,\n\t\t\t\tLEFT_ARROW: this.isLeftToRight() ? -1 : 1\n\t\t\t};\n\t\t\tfor(var key in keyIncrementMap){\n\t\t\t\tthis.own(\n\t\t\t\t\ttypematic.addKeyListener(\n\t\t\t\t\t\tthis.domNode,\n\t\t\t\t\t\t{keyCode: keys[key], ctrlKey: false, altKey: false, shiftKey: false},\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\tfunction(){\n\t\t\t\t\t\t\tvar increment = keyIncrementMap[key];\n\t\t\t\t\t\t\treturn function(count){\n\t\t\t\t\t\t\t\tthis._navigateByKey(increment, count);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}(),\n\t\t\t\t\t\tthis.timeoutChangeRate,\n\t\t\t\t\t\tthis.defaultTimeout\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\n\t\tpostCreate: function(){\n\t\t\tthis.inherited(arguments);\n\n\t\t\t// Set initial navigable node.\n\t\t\tthis._setCurrent(this._cells[0].node);\n\t\t},\n\n\t\tfocus: function(){\n\t\t\t// summary:\n\t\t\t//\t\tFocus this widget.  Puts focus on the most recently focused cell.\n\n\t\t\t// The cell already has tabIndex set, just need to set CSS and focus it\n\t\t\tfocus.focus(this._currentFocus);\n\t\t},\n\n\t\t_onCellClick: function(/*Event*/ evt){\n\t\t\t// summary:\n\t\t\t//\t\tHandler for click, enter key & space key. Selects the cell.\n\t\t\t// evt:\n\t\t\t//\t\tThe event.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\n\t\t\tvar target = evt.target;\n\n\t\t\t// Find TD associated with click event.   For ColorPalette user likely clicked IMG inside of TD\n\t\t\twhile(target.tagName != \"TD\"){\n\t\t\t\tif(!target.parentNode || target == this.gridNode){    // probably can never happen, but just in case\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttarget = target.parentNode;\n\t\t\t}\n\n\t\t\tvar value = this._getDye(target).getValue();\n\n\t\t\t// First focus the clicked cell, and then send onChange() notification.\n\t\t\t// onChange() (via _setValueAttr) must be after the focus call, because\n\t\t\t// it may trigger a refocus to somewhere else (like the Editor content area), and that\n\t\t\t// second focus should win.\n\t\t\tthis._setCurrent(target);\n\t\t\tfocus.focus(target);\n\t\t\tthis._setValueAttr(value, true);\n\n\t\t\tevt.stopPropagation();\n\t\t\tevt.preventDefault();\n\t\t},\n\n\t\t_setCurrent: function(/*DomNode*/ node){\n\t\t\t// summary:\n\t\t\t//\t\tSets which node is the focused cell.\n\t\t\t// description:\n\t\t\t//\t\tAt any point in time there's exactly one\n\t\t\t//\t\tcell with tabIndex != -1.   If focus is inside the palette then\n\t\t\t//\t\tfocus is on that cell.\n\t\t\t//\n\t\t\t//\t\tAfter calling this method, arrow key handlers and mouse click handlers\n\t\t\t//\t\tshould focus the cell in a setTimeout().\n\t\t\t// tags:\n\t\t\t//\t\tprotected\n\t\t\tif(\"_currentFocus\" in this){\n\t\t\t\t// Remove tabIndex on old cell\n\t\t\t\tdomAttr.set(this._currentFocus, \"tabIndex\", \"-1\");\n\t\t\t}\n\n\t\t\t// Set tabIndex of new cell\n\t\t\tthis._currentFocus = node;\n\t\t\tif(node){\n\t\t\t\tdomAttr.set(node, \"tabIndex\", this.tabIndex);\n\t\t\t}\n\t\t},\n\n\t\t_setValueAttr: function(value, priorityChange){\n\t\t\t// summary:\n\t\t\t//\t\tThis selects a cell. It triggers the onChange event.\n\t\t\t// value: String\n\t\t\t//\t\tValue of the cell to select\n\t\t\t// tags:\n\t\t\t//\t\tprotected\n\t\t\t// priorityChange: Boolean?\n\t\t\t//\t\tOptional parameter used to tell the select whether or not to fire\n\t\t\t//\t\tonChange event.\n\n\t\t\t// clear old selected cell\n\t\t\tif(this._selectedCell >= 0){\n\t\t\t\tdomClass.remove(this._cells[this._selectedCell].node, this.cellClass + \"Selected\");\n\t\t\t}\n\t\t\tthis._selectedCell = -1;\n\n\t\t\t// search for cell matching specified value\n\t\t\tif(value){\n\t\t\t\tfor(var i = 0; i < this._cells.length; i++){\n\t\t\t\t\tif(value == this._cells[i].dye.getValue()){\n\t\t\t\t\t\tthis._selectedCell = i;\n\t\t\t\t\t\tdomClass.add(this._cells[i].node, this.cellClass + \"Selected\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// record new value, or null if no matching cell\n\t\t\tthis._set(\"value\", this._selectedCell >= 0 ? value : null);\n\n\t\t\tif(priorityChange || priorityChange === undefined){\n\t\t\t\tthis.onChange(value);\n\t\t\t}\n\t\t},\n\n\t\tonChange: function(/*===== value =====*/){\n\t\t\t// summary:\n\t\t\t//\t\tCallback when a cell is selected.\n\t\t\t// value: String\n\t\t\t//\t\tValue corresponding to cell.\n\t\t},\n\n\t\t_navigateByKey: function(increment, typeCount){\n\t\t\t// summary:\n\t\t\t//\t\tThis is the callback for typematic.\n\t\t\t//\t\tIt changes the focus and the highlighed cell.\n\t\t\t// increment:\n\t\t\t//\t\tHow much the key is navigated.\n\t\t\t// typeCount:\n\t\t\t//\t\tHow many times typematic has fired.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\n\t\t\t// typecount == -1 means the key is released.\n\t\t\tif(typeCount == -1){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar newFocusIndex = this._currentFocus.idx + increment;\n\t\t\tif(newFocusIndex < this._cells.length && newFocusIndex > -1){\n\t\t\t\tvar focusNode = this._cells[newFocusIndex].node;\n\t\t\t\tthis._setCurrent(focusNode);\n\n\t\t\t\t// Actually focus the node, for the benefit of screen readers.\n\t\t\t\t// Use defer because IE doesn't like changing focus inside of an event handler\n\t\t\t\tthis.defer(lang.hitch(focus, \"focus\", focusNode));\n\t\t\t}\n\t\t},\n\n\t\t_getDye: function(/*DomNode*/ cell){\n\t\t\t// summary:\n\t\t\t//\t\tGet JS object for given cell DOMNode\n\n\t\t\treturn this._cells[cell.idx].dye;\n\t\t}\n\t});\n\n\t/*=====\n\t PaletteMixin.__Dye = declare(\"dijit.Dye\", null, {\n\t\t // summary:\n\t\t //\t\tInterface for the JS Object associated with a palette cell (i.e. DOMNode)\n\n\t\t constructor: function(alias, row, col){\n\t\t\t // summary:\n\t\t\t //\t\tInitialize according to value or alias like \"white\"\n\t\t\t // alias: String\n\t\t },\n\n\t\t getValue: function(){\n\t\t\t // summary:\n\t\t\t //\t\tReturn \"value\" of cell; meaning of \"value\" varies by subclass.\n\t\t\t // description:\n\t\t\t //\t\tFor example color hex value, emoticon ascii value etc, entity hex value.\n\t\t },\n\n\t\t fillCell: function(cell, blankGif){\n\t\t\t // summary:\n\t\t\t //\t\tAdd cell DOMNode inner structure\n\t\t\t // cell: DomNode\n\t\t\t //\t\tThe surrounding cell\n\t\t\t // blankGif: String\n\t\t\t //\t\tURL for blank cell image\n\t\t }\n\t });\n\t =====*/\n\n\treturn PaletteMixin;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 276:\n/*!*****************************!*\\\n  !*** ../dijit/typematic.js ***!\n  \\*****************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t__webpack_require__(/*! dojo/_base/array */ 5), // array.forEach\n\t__webpack_require__(/*! dojo/_base/connect */ 36), // connect._keyPress\n\t__webpack_require__(/*! dojo/_base/lang */ 0), // lang.mixin, lang.hitch\n\t__webpack_require__(/*! dojo/on */ 7),\n\t__webpack_require__(/*! dojo/sniff */ 8), // has(\"ie\")\n\t__webpack_require__(/*! ./main */ 26)        // setting dijit.typematic global\n], __WEBPACK_AMD_DEFINE_RESULT__ = function(array, connect, lang, on, has, dijit){\n\n\t// module:\n\t//\t\tdijit/typematic\n\n\tvar typematic = (dijit.typematic = {\n\t\t// summary:\n\t\t//\t\tThese functions are used to repetitively call a user specified callback\n\t\t//\t\tmethod when a specific key or mouse click over a specific DOM node is\n\t\t//\t\theld down for a specific amount of time.\n\t\t//\t\tOnly 1 such event is allowed to occur on the browser page at 1 time.\n\n\t\t_fireEventAndReload: function(){\n\t\t\tthis._timer = null;\n\t\t\tthis._callback(++this._count, this._node, this._evt);\n\n\t\t\t// Schedule next event, timer is at most minDelay (default 10ms) to avoid\n\t\t\t// browser overload (particularly avoiding starving DOH robot so it never gets to send a mouseup)\n\t\t\tthis._currentTimeout = Math.max(\n\t\t\t\tthis._currentTimeout < 0 ? this._initialDelay :\n\t\t\t\t\t(this._subsequentDelay > 1 ? this._subsequentDelay : Math.round(this._currentTimeout * this._subsequentDelay)),\n\t\t\t\tthis._minDelay);\n\t\t\tthis._timer = setTimeout(lang.hitch(this, \"_fireEventAndReload\"), this._currentTimeout);\n\t\t},\n\n\t\ttrigger: function(/*Event*/ evt, /*Object*/ _this, /*DOMNode*/ node, /*Function*/ callback, /*Object*/ obj, /*Number?*/ subsequentDelay, /*Number?*/ initialDelay, /*Number?*/ minDelay){\n\t\t\t// summary:\n\t\t\t//\t\tStart a timed, repeating callback sequence.\n\t\t\t//\t\tIf already started, the function call is ignored.\n\t\t\t//\t\tThis method is not normally called by the user but can be\n\t\t\t//\t\twhen the normal listener code is insufficient.\n\t\t\t// evt:\n\t\t\t//\t\tkey or mouse event object to pass to the user callback\n\t\t\t// _this:\n\t\t\t//\t\tpointer to the user's widget space.\n\t\t\t// node:\n\t\t\t//\t\tthe DOM node object to pass the the callback function\n\t\t\t// callback:\n\t\t\t//\t\tfunction to call until the sequence is stopped called with 3 parameters:\n\t\t\t// count:\n\t\t\t//\t\tinteger representing number of repeated calls (0..n) with -1 indicating the iteration has stopped\n\t\t\t// node:\n\t\t\t//\t\tthe DOM node object passed in\n\t\t\t// evt:\n\t\t\t//\t\tkey or mouse event object\n\t\t\t// obj:\n\t\t\t//\t\tuser space object used to uniquely identify each typematic sequence\n\t\t\t// subsequentDelay:\n\t\t\t//\t\tif > 1, the number of milliseconds until the 3->n events occur\n\t\t\t//\t\tor else the fractional time multiplier for the next event's delay, default=0.9\n\t\t\t// initialDelay:\n\t\t\t//\t\tthe number of milliseconds until the 2nd event occurs, default=500ms\n\t\t\t// minDelay:\n\t\t\t//\t\tthe maximum delay in milliseconds for event to fire, default=10ms\n\t\t\tif(obj != this._obj){\n\t\t\t\tthis.stop();\n\t\t\t\tthis._initialDelay = initialDelay || 500;\n\t\t\t\tthis._subsequentDelay = subsequentDelay || 0.90;\n\t\t\t\tthis._minDelay = minDelay || 10;\n\t\t\t\tthis._obj = obj;\n\t\t\t\tthis._node = node;\n\t\t\t\tthis._currentTimeout = -1;\n\t\t\t\tthis._count = -1;\n\t\t\t\tthis._callback = lang.hitch(_this, callback);\n\t\t\t\tthis._evt = { faux: true };\n\t\t\t\tfor(var attr in evt){\n\t\t\t\t\tif(attr != \"layerX\" && attr != \"layerY\"){ // prevent WebKit warnings\n\t\t\t\t\t\tvar v = evt[attr];\n\t\t\t\t\t\tif(typeof v != \"function\" && typeof v != \"undefined\"){\n\t\t\t\t\t\t\tthis._evt[attr] = v\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._fireEventAndReload();\n\t\t\t}\n\t\t},\n\n\t\tstop: function(){\n\t\t\t// summary:\n\t\t\t//\t\tStop an ongoing timed, repeating callback sequence.\n\t\t\tif(this._timer){\n\t\t\t\tclearTimeout(this._timer);\n\t\t\t\tthis._timer = null;\n\t\t\t}\n\t\t\tif(this._obj){\n\t\t\t\tthis._callback(-1, this._node, this._evt);\n\t\t\t\tthis._obj = null;\n\t\t\t}\n\t\t},\n\n\t\taddKeyListener: function(/*DOMNode*/ node, /*Object*/ keyObject, /*Object*/ _this, /*Function*/ callback, /*Number*/ subsequentDelay, /*Number*/ initialDelay, /*Number?*/ minDelay){\n\t\t\t// summary:\n\t\t\t//\t\tStart listening for a specific typematic key.\n\t\t\t//\t\tSee also the trigger method for other parameters.\n\t\t\t// keyObject:\n\t\t\t//\t\tan object defining the key to listen for:\n\t\t\t//\n\t\t\t//\t\t- keyCode: the keyCode (number) to listen for, used for non-printable keys\n\t\t\t//\t\t- charCode: the charCode (number) to listen for, used for printable keys\n\t\t\t//\t\t- charOrCode: deprecated, use keyCode or charCode\n\t\t\t//\t\t- ctrlKey: desired ctrl key state to initiate the callback sequence:\n\t\t\t//\t\t\t- pressed (true)\n\t\t\t//\t\t\t- released (false)\n\t\t\t//\t\t\t- either (unspecified)\n\t\t\t//\t\t- altKey: same as ctrlKey but for the alt key\n\t\t\t//\t\t- shiftKey: same as ctrlKey but for the shift key\n\t\t\t// returns:\n\t\t\t//\t\ta connection handle\n\n\t\t\t// Setup keydown or keypress listener depending on whether keyCode or charCode was specified.\n\t\t\t// If charOrCode is specified use deprecated connect._keypress synthetic event (remove for 2.0)\n\t\t\tvar type = \"keyCode\" in keyObject ? \"keydown\" : \"charCode\" in keyObject ? \"keypress\" : connect._keypress,\n\t\t\t\tattr = \"keyCode\" in keyObject ? \"keyCode\" : \"charCode\" in keyObject ? \"charCode\" : \"charOrCode\";\n\n\t\t\tvar handles = [\n\t\t\t\ton(node, type, lang.hitch(this, function(evt){\n\t\t\t\t\tif(evt[attr] == keyObject[attr] &&\n\t\t\t\t\t\t(keyObject.ctrlKey === undefined || keyObject.ctrlKey == evt.ctrlKey) &&\n\t\t\t\t\t\t(keyObject.altKey === undefined || keyObject.altKey == evt.altKey) &&\n\t\t\t\t\t\t(keyObject.metaKey === undefined || keyObject.metaKey == (evt.metaKey || false)) && // IE doesn't even set metaKey\n\t\t\t\t\t\t(keyObject.shiftKey === undefined || keyObject.shiftKey == evt.shiftKey)){\n\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\ttypematic.trigger(evt, _this, node, callback, keyObject, subsequentDelay, initialDelay, minDelay);\n\t\t\t\t\t}else if(typematic._obj == keyObject){\n\t\t\t\t\t\ttypematic.stop();\n\t\t\t\t\t}\n\t\t\t\t})),\n\t\t\t\ton(node, \"keyup\", lang.hitch(this, function(){\n\t\t\t\t\tif(typematic._obj == keyObject){\n\t\t\t\t\t\ttypematic.stop();\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t];\n\t\t\treturn { remove: function(){\n\t\t\t\tarray.forEach(handles, function(h){\n\t\t\t\t\th.remove();\n\t\t\t\t});\n\t\t\t} };\n\t\t},\n\n\t\taddMouseListener: function(/*DOMNode*/ node, /*Object*/ _this, /*Function*/ callback, /*Number*/ subsequentDelay, /*Number*/ initialDelay, /*Number?*/ minDelay){\n\t\t\t// summary:\n\t\t\t//\t\tStart listening for a typematic mouse click.\n\t\t\t//\t\tSee the trigger method for other parameters.\n\t\t\t// returns:\n\t\t\t//\t\ta connection handle\n\t\t\tvar handles = [\n\t\t\t\ton(node, \"mousedown\", lang.hitch(this, function(evt){\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\ttypematic.trigger(evt, _this, node, callback, node, subsequentDelay, initialDelay, minDelay);\n\t\t\t\t})),\n\t\t\t\ton(node, \"mouseup\", lang.hitch(this, function(evt){\n\t\t\t\t\tif(this._obj){\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\ttypematic.stop();\n\t\t\t\t})),\n\t\t\t\ton(node, \"mouseout\", lang.hitch(this, function(evt){\n\t\t\t\t\tif(this._obj){\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\ttypematic.stop();\n\t\t\t\t})),\n\t\t\t\ton(node, \"dblclick\", lang.hitch(this, function(evt){\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tif(has(\"ie\") < 9){\n\t\t\t\t\t\ttypematic.trigger(evt, _this, node, callback, node, subsequentDelay, initialDelay, minDelay);\n\t\t\t\t\t\tsetTimeout(lang.hitch(this, typematic.stop), 50);\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t];\n\t\t\treturn { remove: function(){\n\t\t\t\tarray.forEach(handles, function(h){\n\t\t\t\t\th.remove();\n\t\t\t\t});\n\t\t\t} };\n\t\t},\n\n\t\taddListener: function(/*Node*/ mouseNode, /*Node*/ keyNode, /*Object*/ keyObject, /*Object*/ _this, /*Function*/ callback, /*Number*/ subsequentDelay, /*Number*/ initialDelay, /*Number?*/ minDelay){\n\t\t\t// summary:\n\t\t\t//\t\tStart listening for a specific typematic key and mouseclick.\n\t\t\t//\t\tThis is a thin wrapper to addKeyListener and addMouseListener.\n\t\t\t//\t\tSee the addMouseListener and addKeyListener methods for other parameters.\n\t\t\t// mouseNode:\n\t\t\t//\t\tthe DOM node object to listen on for mouse events.\n\t\t\t// keyNode:\n\t\t\t//\t\tthe DOM node object to listen on for key events.\n\t\t\t// returns:\n\t\t\t//\t\ta connection handle\n\t\t\tvar handles = [\n\t\t\t\tthis.addKeyListener(keyNode, keyObject, _this, callback, subsequentDelay, initialDelay, minDelay),\n\t\t\t\tthis.addMouseListener(mouseNode, _this, callback, subsequentDelay, initialDelay, minDelay)\n\t\t\t];\n\t\t\treturn { remove: function(){\n\t\t\t\tarray.forEach(handles, function(h){\n\t\t\t\t\th.remove();\n\t\t\t\t});\n\t\t\t} };\n\t\t}\n\t});\n\n\treturn typematic;\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ 277:\n/*!**********************************************************************!*\\\n  !*** ./node_modules/raw-loader!../dijit/templates/ColorPalette.html ***!\n  \\**********************************************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"dijitInline dijitColorPalette\\\" role=\\\"grid\\\">\\n\\t<table data-dojo-attach-point=\\\"paletteTableNode\\\" class=\\\"dijitPaletteTable\\\" cellSpacing=\\\"0\\\" cellPadding=\\\"0\\\" role=\\\"presentation\\\">\\n\\t\\t<tbody data-dojo-attach-point=\\\"gridNode\\\"></tbody>\\n\\t</table>\\n</div>\\n\"\n\n/***/ }),\n\n/***/ 278:\n/*!**********************************************************************************!*\\\n  !*** ./node_modules/dojo-webpack-plugin/loaders/dojo/i18n!../dojo/nls/colors.js ***!\n  \\**********************************************************************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(/*! dojo/nls/colors?absMid=dojo/nls/colors */ 279);\nmodule.exports = __webpack_require__(/*! ./node_modules/dojo-webpack-plugin/loaders/dojo/i18n/runner.js */ 59)(\"dojo/nls/colors\");\n\n/***/ }),\n\n/***/ 279:\n/*!*****************************!*\\\n  !*** ../dojo/nls/colors.js ***!\n  \\*****************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\n!(module.exports = { root:\r\n//begin v1.x content\r\n({\r\n// local representation of all CSS3 named colors, companion to dojo.colors.  To be used where descriptive information\r\n// is required for each color, such as a palette widget, and not for specifying color programatically.\r\n\r\n//Note: due to the SVG 1.0 spec additions, some of these are alternate spellings for the same color (e.g. gray / grey).\r\n//TODO: should we be using unique rgb values as keys instead and avoid these duplicates, or rely on the caller to do the reverse mapping?\r\naliceblue: \"alice blue\",\r\nantiquewhite: \"antique white\",\r\naqua: \"aqua\",\r\naquamarine: \"aquamarine\",\r\nazure: \"azure\",\r\nbeige: \"beige\",\r\nbisque: \"bisque\",\r\nblack: \"black\",\r\nblanchedalmond: \"blanched almond\",\r\nblue: \"blue\",\r\nblueviolet: \"blue-violet\",\r\nbrown: \"brown\",\r\nburlywood: \"burlywood\",\r\ncadetblue: \"cadet blue\",\r\nchartreuse: \"chartreuse\",\r\nchocolate: \"chocolate\",\r\ncoral: \"coral\",\r\ncornflowerblue: \"cornflower blue\",\r\ncornsilk: \"cornsilk\",\r\ncrimson: \"crimson\",\r\ncyan: \"cyan\",\r\ndarkblue: \"dark blue\",\r\ndarkcyan: \"dark cyan\",\r\ndarkgoldenrod: \"dark goldenrod\",\r\ndarkgray: \"dark gray\",\r\ndarkgreen: \"dark green\",\r\ndarkgrey: \"dark gray\", // same as darkgray\r\ndarkkhaki: \"dark khaki\",\r\ndarkmagenta: \"dark magenta\",\r\ndarkolivegreen: \"dark olive green\",\r\ndarkorange: \"dark orange\",\r\ndarkorchid: \"dark orchid\",\r\ndarkred: \"dark red\",\r\ndarksalmon: \"dark salmon\",\r\ndarkseagreen: \"dark sea green\",\r\ndarkslateblue: \"dark slate blue\",\r\ndarkslategray: \"dark slate gray\",\r\ndarkslategrey: \"dark slate gray\", // same as darkslategray\r\ndarkturquoise: \"dark turquoise\",\r\ndarkviolet: \"dark violet\",\r\ndeeppink: \"deep pink\",\r\ndeepskyblue: \"deep sky blue\",\r\ndimgray: \"dim gray\",\r\ndimgrey: \"dim gray\", // same as dimgray\r\ndodgerblue: \"dodger blue\",\r\nfirebrick: \"fire brick\",\r\nfloralwhite: \"floral white\",\r\nforestgreen: \"forest green\",\r\nfuchsia: \"fuchsia\",\r\ngainsboro: \"gainsboro\",\r\nghostwhite: \"ghost white\",\r\ngold: \"gold\",\r\ngoldenrod: \"goldenrod\",\r\ngray: \"gray\",\r\ngreen: \"green\",\r\ngreenyellow: \"green-yellow\",\r\ngrey: \"gray\", // same as gray\r\nhoneydew: \"honeydew\",\r\nhotpink: \"hot pink\",\r\nindianred: \"indian red\",\r\nindigo: \"indigo\",\r\nivory: \"ivory\",\r\nkhaki: \"khaki\",\r\nlavender: \"lavender\",\r\nlavenderblush: \"lavender blush\",\r\nlawngreen: \"lawn green\",\r\nlemonchiffon: \"lemon chiffon\",\r\nlightblue: \"light blue\",\r\nlightcoral: \"light coral\",\r\nlightcyan: \"light cyan\",\r\nlightgoldenrodyellow: \"light goldenrod yellow\",\r\nlightgray: \"light gray\",\r\nlightgreen: \"light green\",\r\nlightgrey: \"light gray\", // same as lightgray\r\nlightpink: \"light pink\",\r\nlightsalmon: \"light salmon\",\r\nlightseagreen: \"light sea green\",\r\nlightskyblue: \"light sky blue\",\r\nlightslategray: \"light slate gray\",\r\nlightslategrey: \"light slate gray\", // same as lightslategray\r\nlightsteelblue: \"light steel blue\",\r\nlightyellow: \"light yellow\",\r\nlime: \"lime\",\r\nlimegreen: \"lime green\",\r\nlinen: \"linen\",\r\nmagenta: \"magenta\",\r\nmaroon: \"maroon\",\r\nmediumaquamarine: \"medium aquamarine\",\r\nmediumblue: \"medium blue\",\r\nmediumorchid: \"medium orchid\",\r\nmediumpurple: \"medium purple\",\r\nmediumseagreen: \"medium sea green\",\r\nmediumslateblue: \"medium slate blue\",\r\nmediumspringgreen: \"medium spring green\",\r\nmediumturquoise: \"medium turquoise\",\r\nmediumvioletred: \"medium violet-red\",\r\nmidnightblue: \"midnight blue\",\r\nmintcream: \"mint cream\",\r\nmistyrose: \"misty rose\",\r\nmoccasin: \"moccasin\",\r\nnavajowhite: \"navajo white\",\r\nnavy: \"navy\",\r\noldlace: \"old lace\",\r\nolive: \"olive\",\r\nolivedrab: \"olive drab\",\r\norange: \"orange\",\r\norangered: \"orange red\",\r\norchid: \"orchid\",\r\npalegoldenrod: \"pale goldenrod\",\r\npalegreen: \"pale green\",\r\npaleturquoise: \"pale turquoise\",\r\npalevioletred: \"pale violet-red\",\r\npapayawhip: \"papaya whip\",\r\npeachpuff: \"peach puff\",\r\nperu: \"peru\",\r\npink: \"pink\",\r\nplum: \"plum\",\r\npowderblue: \"powder blue\",\r\npurple: \"purple\",\r\nred: \"red\",\r\nrosybrown: \"rosy brown\",\r\nroyalblue: \"royal blue\",\r\nsaddlebrown: \"saddle brown\",\r\nsalmon: \"salmon\",\r\nsandybrown: \"sandy brown\",\r\nseagreen: \"sea green\",\r\nseashell: \"seashell\",\r\nsienna: \"sienna\",\r\nsilver: \"silver\",\r\nskyblue: \"sky blue\",\r\nslateblue: \"slate blue\",\r\nslategray: \"slate gray\",\r\nslategrey: \"slate gray\", // same as slategray\r\nsnow: \"snow\",\r\nspringgreen: \"spring green\",\r\nsteelblue: \"steel blue\",\r\ntan: \"tan\",\r\nteal: \"teal\",\r\nthistle: \"thistle\",\r\ntomato: \"tomato\",\r\ntransparent: \"transparent\",\r\nturquoise: \"turquoise\",\r\nviolet: \"violet\",\r\nwheat: \"wheat\",\r\nwhite: \"white\",\r\nwhitesmoke: \"white smoke\",\r\nyellow: \"yellow\",\r\nyellowgreen: \"yellow green\"\r\n})\r\n//end v1.x content\r\n,\r\n\"zh\": true,\r\n\"zh-tw\": true,\r\n\"uk\": true,\r\n\"tr\": true,\r\n\"th\": true,\r\n\"sv\": true,\r\n\"sl\": true,\r\n\"sk\": true,\r\n\"ru\": true,\r\n\"ro\": true,\r\n\"pt\": true,\r\n\"pt-pt\": true,\r\n\"pl\": true,\r\n\"nl\": true,\r\n\"nb\": true,\r\n\"ko\": true,\r\n\"kk\": true,\r\n\"ja\": true,\r\n\"it\": true,\r\n\"id\": true,\r\n\"hu\": true,\r\n\"hr\": true,\r\n\"he\": true,\r\n\"fr\": true,\r\n\"fi\": true,\r\n\"es\": true,\r\n\"el\": true,\r\n\"de\": true,\r\n\"da\": true,\r\n\"cs\": true,\r\n\"ca\": true,\r\n\"bg\": true,\r\n\"az\": true,\r\n\"ar\": true\r\n});\r\n\n\n/***/ }),\n\n/***/ 280:\n/*!*************************!*\\\n  !*** ../dojo/colors.js ***!\n  \\*************************/\n/*! no static exports found */\n/*! all exports used */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base/kernel */ 1), __webpack_require__(/*! ./_base/lang */ 0), __webpack_require__(/*! ./_base/Color */ 78), __webpack_require__(/*! ./_base/array */ 5)], __WEBPACK_AMD_DEFINE_RESULT__ = function(dojo, lang, Color, ArrayUtil){\r\n\t// module:\r\n\t//\t\tdojo/colors\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tColor utilities, extending Base dojo.Color\r\n\t};\r\n\t=====*/\r\n\r\n\tvar ColorExt = {};\r\n\tlang.setObject(\"dojo.colors\", ColorExt);\r\n\r\n//TODO: this module appears to break naming conventions\r\n\r\n\t// this is a standard conversion prescribed by the CSS3 Color Module\r\n\tvar hue2rgb = function(m1, m2, h){\r\n\t\tif(h < 0){ ++h; }\r\n\t\tif(h > 1){ --h; }\r\n\t\tvar h6 = 6 * h;\r\n\t\tif(h6 < 1){ return m1 + (m2 - m1) * h6; }\r\n\t\tif(2 * h < 1){ return m2; }\r\n\t\tif(3 * h < 2){ return m1 + (m2 - m1) * (2 / 3 - h) * 6; }\r\n\t\treturn m1;\r\n\t};\r\n\t// Override base Color.fromRgb with the impl in this module\r\n\tdojo.colorFromRgb = Color.fromRgb = function(/*String*/ color, /*dojo/_base/Color?*/ obj){\r\n\t\t// summary:\r\n\t\t//\t\tget rgb(a) array from css-style color declarations\r\n\t\t// description:\r\n\t\t//\t\tthis function can handle all 4 CSS3 Color Module formats: rgb,\r\n\t\t//\t\trgba, hsl, hsla, including rgb(a) with percentage values.\r\n\t\tvar m = color.toLowerCase().match(/^(rgba?|hsla?)\\(([\\s\\.\\-,%0-9]+)\\)/);\r\n\t\tif(m){\r\n\t\t\tvar c = m[2].split(/\\s*,\\s*/), l = c.length, t = m[1], a;\r\n\t\t\tif((t == \"rgb\" && l == 3) || (t == \"rgba\" && l == 4)){\r\n\t\t\t\tvar r = c[0];\r\n\t\t\t\tif(r.charAt(r.length - 1) == \"%\"){\r\n\t\t\t\t\t// 3 rgb percentage values\r\n\t\t\t\t\ta = ArrayUtil.map(c, function(x){\r\n\t\t\t\t\t\treturn parseFloat(x) * 2.56;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(l == 4){ a[3] = c[3]; }\r\n\t\t\t\t\treturn Color.fromArray(a, obj); // dojo/_base/Color\r\n\t\t\t\t}\r\n\t\t\t\treturn Color.fromArray(c, obj); // dojo/_base/Color\r\n\t\t\t}\r\n\t\t\tif((t == \"hsl\" && l == 3) || (t == \"hsla\" && l == 4)){\r\n\t\t\t\t// normalize hsl values\r\n\t\t\t\tvar H = ((parseFloat(c[0]) % 360) + 360) % 360 / 360,\r\n\t\t\t\t\tS = parseFloat(c[1]) / 100,\r\n\t\t\t\t\tL = parseFloat(c[2]) / 100,\r\n\t\t\t\t\t// calculate rgb according to the algorithm\r\n\t\t\t\t\t// recommended by the CSS3 Color Module\r\n\t\t\t\t\tm2 = L <= 0.5 ? L * (S + 1) : L + S - L * S,\r\n\t\t\t\t\tm1 = 2 * L - m2;\r\n\t\t\t\ta = [\r\n\t\t\t\t\thue2rgb(m1, m2, H + 1 / 3) * 256,\r\n\t\t\t\t\thue2rgb(m1, m2, H) * 256,\r\n\t\t\t\t\thue2rgb(m1, m2, H - 1 / 3) * 256,\r\n\t\t\t\t\t1\r\n\t\t\t\t];\r\n\t\t\t\tif(l == 4){ a[3] = c[3]; }\r\n\t\t\t\treturn Color.fromArray(a, obj); // dojo/_base/Color\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\t// dojo/_base/Color\r\n\t};\r\n\r\n\tvar confine = function(c, low, high){\r\n\t\t// summary:\r\n\t\t//\t\tsanitize a color component by making sure it is a number,\r\n\t\t//\t\tand clamping it to valid values\r\n\t\tc = Number(c);\r\n\t\treturn isNaN(c) ? high : c < low ? low : c > high ? high : c;\t// Number\r\n\t};\r\n\r\n\tColor.prototype.sanitize = function(){\r\n\t\t// summary:\r\n\t\t//\t\tmakes sure that the object has correct attributes\r\n\t\tvar t = this;\r\n\t\tt.r = Math.round(confine(t.r, 0, 255));\r\n\t\tt.g = Math.round(confine(t.g, 0, 255));\r\n\t\tt.b = Math.round(confine(t.b, 0, 255));\r\n\t\tt.a = confine(t.a, 0, 1);\r\n\t\treturn this;\t// dojo/_base/Color\r\n\t};\r\n\r\n\tColorExt.makeGrey = Color.makeGrey = function(/*Number*/ g, /*Number?*/ a){\r\n\t\t// summary:\r\n\t\t//\t\tcreates a greyscale color with an optional alpha\r\n\t\treturn Color.fromArray([g, g, g, a]);\t// dojo/_base/Color\r\n\t};\r\n\r\n\t// mixin all CSS3 named colors not already in _base, along with SVG 1.0 variant spellings\r\n\tlang.mixin(Color.named, {\r\n\t\t\"aliceblue\":\t[240,248,255],\r\n\t\t\"antiquewhite\": [250,235,215],\r\n\t\t\"aquamarine\":\t[127,255,212],\r\n\t\t\"azure\":\t[240,255,255],\r\n\t\t\"beige\":\t[245,245,220],\r\n\t\t\"bisque\":\t[255,228,196],\r\n\t\t\"blanchedalmond\":\t[255,235,205],\r\n\t\t\"blueviolet\":\t[138,43,226],\r\n\t\t\"brown\":\t[165,42,42],\r\n\t\t\"burlywood\":\t[222,184,135],\r\n\t\t\"cadetblue\":\t[95,158,160],\r\n\t\t\"chartreuse\":\t[127,255,0],\r\n\t\t\"chocolate\":\t[210,105,30],\r\n\t\t\"coral\":\t[255,127,80],\r\n\t\t\"cornflowerblue\":\t[100,149,237],\r\n\t\t\"cornsilk\": [255,248,220],\r\n\t\t\"crimson\":\t[220,20,60],\r\n\t\t\"cyan\": [0,255,255],\r\n\t\t\"darkblue\": [0,0,139],\r\n\t\t\"darkcyan\": [0,139,139],\r\n\t\t\"darkgoldenrod\":\t[184,134,11],\r\n\t\t\"darkgray\": [169,169,169],\r\n\t\t\"darkgreen\":\t[0,100,0],\r\n\t\t\"darkgrey\": [169,169,169],\r\n\t\t\"darkkhaki\":\t[189,183,107],\r\n\t\t\"darkmagenta\":\t[139,0,139],\r\n\t\t\"darkolivegreen\":\t[85,107,47],\r\n\t\t\"darkorange\":\t[255,140,0],\r\n\t\t\"darkorchid\":\t[153,50,204],\r\n\t\t\"darkred\":\t[139,0,0],\r\n\t\t\"darksalmon\":\t[233,150,122],\r\n\t\t\"darkseagreen\": [143,188,143],\r\n\t\t\"darkslateblue\":\t[72,61,139],\r\n\t\t\"darkslategray\":\t[47,79,79],\r\n\t\t\"darkslategrey\":\t[47,79,79],\r\n\t\t\"darkturquoise\":\t[0,206,209],\r\n\t\t\"darkviolet\":\t[148,0,211],\r\n\t\t\"deeppink\": [255,20,147],\r\n\t\t\"deepskyblue\":\t[0,191,255],\r\n\t\t\"dimgray\":\t[105,105,105],\r\n\t\t\"dimgrey\":\t[105,105,105],\r\n\t\t\"dodgerblue\":\t[30,144,255],\r\n\t\t\"firebrick\":\t[178,34,34],\r\n\t\t\"floralwhite\":\t[255,250,240],\r\n\t\t\"forestgreen\":\t[34,139,34],\r\n\t\t\"gainsboro\":\t[220,220,220],\r\n\t\t\"ghostwhite\":\t[248,248,255],\r\n\t\t\"gold\": [255,215,0],\r\n\t\t\"goldenrod\":\t[218,165,32],\r\n\t\t\"greenyellow\":\t[173,255,47],\r\n\t\t\"grey\": [128,128,128],\r\n\t\t\"honeydew\": [240,255,240],\r\n\t\t\"hotpink\":\t[255,105,180],\r\n\t\t\"indianred\":\t[205,92,92],\r\n\t\t\"indigo\":\t[75,0,130],\r\n\t\t\"ivory\":\t[255,255,240],\r\n\t\t\"khaki\":\t[240,230,140],\r\n\t\t\"lavender\": [230,230,250],\r\n\t\t\"lavenderblush\":\t[255,240,245],\r\n\t\t\"lawngreen\":\t[124,252,0],\r\n\t\t\"lemonchiffon\": [255,250,205],\r\n\t\t\"lightblue\":\t[173,216,230],\r\n\t\t\"lightcoral\":\t[240,128,128],\r\n\t\t\"lightcyan\":\t[224,255,255],\r\n\t\t\"lightgoldenrodyellow\": [250,250,210],\r\n\t\t\"lightgray\":\t[211,211,211],\r\n\t\t\"lightgreen\":\t[144,238,144],\r\n\t\t\"lightgrey\":\t[211,211,211],\r\n\t\t\"lightpink\":\t[255,182,193],\r\n\t\t\"lightsalmon\":\t[255,160,122],\r\n\t\t\"lightseagreen\":\t[32,178,170],\r\n\t\t\"lightskyblue\": [135,206,250],\r\n\t\t\"lightslategray\":\t[119,136,153],\r\n\t\t\"lightslategrey\":\t[119,136,153],\r\n\t\t\"lightsteelblue\":\t[176,196,222],\r\n\t\t\"lightyellow\":\t[255,255,224],\r\n\t\t\"limegreen\":\t[50,205,50],\r\n\t\t\"linen\":\t[250,240,230],\r\n\t\t\"magenta\":\t[255,0,255],\r\n\t\t\"mediumaquamarine\": [102,205,170],\r\n\t\t\"mediumblue\":\t[0,0,205],\r\n\t\t\"mediumorchid\": [186,85,211],\r\n\t\t\"mediumpurple\": [147,112,219],\r\n\t\t\"mediumseagreen\":\t[60,179,113],\r\n\t\t\"mediumslateblue\":\t[123,104,238],\r\n\t\t\"mediumspringgreen\":\t[0,250,154],\r\n\t\t\"mediumturquoise\":\t[72,209,204],\r\n\t\t\"mediumvioletred\":\t[199,21,133],\r\n\t\t\"midnightblue\": [25,25,112],\r\n\t\t\"mintcream\":\t[245,255,250],\r\n\t\t\"mistyrose\":\t[255,228,225],\r\n\t\t\"moccasin\": [255,228,181],\r\n\t\t\"navajowhite\":\t[255,222,173],\r\n\t\t\"oldlace\":\t[253,245,230],\r\n\t\t\"olivedrab\":\t[107,142,35],\r\n\t\t\"orange\":\t[255,165,0],\r\n\t\t\"orangered\":\t[255,69,0],\r\n\t\t\"orchid\":\t[218,112,214],\r\n\t\t\"palegoldenrod\":\t[238,232,170],\r\n\t\t\"palegreen\":\t[152,251,152],\r\n\t\t\"paleturquoise\":\t[175,238,238],\r\n\t\t\"palevioletred\":\t[219,112,147],\r\n\t\t\"papayawhip\":\t[255,239,213],\r\n\t\t\"peachpuff\":\t[255,218,185],\r\n\t\t\"peru\": [205,133,63],\r\n\t\t\"pink\": [255,192,203],\r\n\t\t\"plum\": [221,160,221],\r\n\t\t\"powderblue\":\t[176,224,230],\r\n\t\t\"rosybrown\":\t[188,143,143],\r\n\t\t\"royalblue\":\t[65,105,225],\r\n\t\t\"saddlebrown\":\t[139,69,19],\r\n\t\t\"salmon\":\t[250,128,114],\r\n\t\t\"sandybrown\":\t[244,164,96],\r\n\t\t\"seagreen\": [46,139,87],\r\n\t\t\"seashell\": [255,245,238],\r\n\t\t\"sienna\":\t[160,82,45],\r\n\t\t\"skyblue\":\t[135,206,235],\r\n\t\t\"slateblue\":\t[106,90,205],\r\n\t\t\"slategray\":\t[112,128,144],\r\n\t\t\"slategrey\":\t[112,128,144],\r\n\t\t\"snow\": [255,250,250],\r\n\t\t\"springgreen\":\t[0,255,127],\r\n\t\t\"steelblue\":\t[70,130,180],\r\n\t\t\"tan\":\t[210,180,140],\r\n\t\t\"thistle\":\t[216,191,216],\r\n\t\t\"tomato\":\t[255,99,71],\r\n\t\t\"turquoise\":\t[64,224,208],\r\n\t\t\"violet\":\t[238,130,238],\r\n\t\t\"wheat\":\t[245,222,179],\r\n\t\t\"whitesmoke\":\t[245,245,245],\r\n\t\t\"yellowgreen\":\t[154,205,50]\r\n\t});\r\n\r\n\treturn Color;\t// TODO: return ColorExt, not Color\r\n}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 3.bundle.js","define([\n\t\"require\", // require.toUrl\n\t\"dojo/text!./templates/ColorPalette.html\",\n\t\"./_Widget\", // used also to load dijit/hccss for setting has(\"highcontrast\")\n\t\"./_TemplatedMixin\",\n\t\"./_PaletteMixin\",\n\t\"./hccss\", // has(\"highcontrast\")\n\t\"dojo/i18n\", // i18n.getLocalization\n\t\"dojo/_base/Color\", // dojo.Color dojo.Color.named\n\t\"dojo/_base/declare\", // declare\n\t\"dojo/dom-construct\", // domConstruct.place\n\t\"dojo/string\", // string.substitute\n\t\"dojo/i18n!dojo/nls/colors\", // translations\n\t\"dojo/colors\"    // extend dojo.Color w/names of other colors\n], function(require, template, _Widget, _TemplatedMixin, _PaletteMixin, has, i18n, Color,\n\tdeclare, domConstruct, string){\n\n\t// module:\n\t//\t\tdijit/ColorPalette\n\n\tvar ColorPalette = declare(\"dijit.ColorPalette\", [_Widget, _TemplatedMixin, _PaletteMixin], {\n\t\t// summary:\n\t\t//\t\tA keyboard accessible color-picking widget\n\t\t// description:\n\t\t//\t\tGrid showing various colors, so the user can pick a certain color.\n\t\t//\t\tCan be used standalone, or as a popup.\n\t\t//\n\t\t// example:\n\t\t// |\t<div data-dojo-type=\"dijit/ColorPalette\"></div>\n\t\t//\n\t\t// example:\n\t\t// |\tvar picker = new dijit.ColorPalette({ },srcNode);\n\t\t// |\tpicker.startup();\n\n\n\t\t// palette: [const] String\n\t\t//\t\tSize of grid, either \"7x10\" or \"3x4\".\n\t\tpalette: \"7x10\",\n\n\t\t// _palettes: [protected] Map\n\t\t//\t\tThis represents the value of the colors.\n\t\t//\t\tThe first level is a hashmap of the different palettes available.\n\t\t//\t\tThe next two dimensions represent the columns and rows of colors.\n\t\t_palettes: {\n\t\t\t\"7x10\": [\n\t\t\t\t[\"white\", \"seashell\", \"cornsilk\", \"lemonchiffon\", \"lightyellow\", \"palegreen\", \"paleturquoise\", \"lightcyan\", \"lavender\", \"plum\"],\n\t\t\t\t[\"lightgray\", \"pink\", \"bisque\", \"moccasin\", \"khaki\", \"lightgreen\", \"lightseagreen\", \"lightskyblue\", \"cornflowerblue\", \"violet\"],\n\t\t\t\t[\"silver\", \"lightcoral\", \"sandybrown\", \"orange\", \"palegoldenrod\", \"chartreuse\", \"mediumturquoise\", \"skyblue\", \"mediumslateblue\", \"orchid\"],\n\t\t\t\t[\"gray\", \"red\", \"orangered\", \"darkorange\", \"yellow\", \"limegreen\", \"darkseagreen\", \"royalblue\", \"slateblue\", \"mediumorchid\"],\n\t\t\t\t[\"dimgray\", \"crimson\", \"chocolate\", \"coral\", \"gold\", \"forestgreen\", \"seagreen\", \"blue\", \"blueviolet\", \"darkorchid\"],\n\t\t\t\t[\"darkslategray\", \"firebrick\", \"saddlebrown\", \"sienna\", \"olive\", \"green\", \"darkcyan\", \"mediumblue\", \"darkslateblue\", \"darkmagenta\" ],\n\t\t\t\t[\"black\", \"darkred\", \"maroon\", \"brown\", \"darkolivegreen\", \"darkgreen\", \"midnightblue\", \"navy\", \"indigo\", \"purple\"]\n\t\t\t],\n\n\t\t\t\"3x4\": [\n\t\t\t\t[\"white\", \"lime\", \"green\", \"blue\"],\n\t\t\t\t[\"silver\", \"yellow\", \"fuchsia\", \"navy\"],\n\t\t\t\t[\"gray\", \"red\", \"purple\", \"black\"]\n\t\t\t]\n\t\t},\n\n\t\t// templateString: String\n\t\t//\t\tThe template of this widget.\n\t\ttemplateString: template,\n\n\t\tbaseClass: \"dijitColorPalette\",\n\n\t\t_dyeFactory: function(value, row, col, title){\n\t\t\t// Overrides _PaletteMixin._dyeFactory().\n\t\t\treturn new this._dyeClass(value, row, col, title);\n\t\t},\n\n\t\tbuildRendering: function(){\n\t\t\t// Instantiate the template, which makes a skeleton into which we'll insert a bunch of\n\t\t\t// <img> nodes\n\t\t\tthis.inherited(arguments);\n\n\t\t\t//\tCreates customized constructor for dye class (color of a single cell) for\n\t\t\t//\tspecified palette and high-contrast vs. normal mode.   Used in _getDye().\n\t\t\tthis._dyeClass = declare(ColorPalette._Color, {\n\t\t\t\tpalette: this.palette\n\t\t\t});\n\n\t\t\t// Creates <img> nodes in each cell of the template.\n\t\t\tthis._preparePalette(\n\t\t\t\tthis._palettes[this.palette],\n\t\t\t\ti18n.getLocalization(\"dojo\", \"colors\", this.lang));\n\t\t}\n\t});\n\n\tColorPalette._Color = declare(\"dijit._Color\", Color, {\n\t\t// summary:\n\t\t//\t\tObject associated with each cell in a ColorPalette palette.\n\t\t//\t\tImplements dijit/Dye.\n\n\t\t// Template for each cell in normal (non-high-contrast mode).  Each cell contains a wrapper\n\t\t// node for showing the border (called dijitPaletteImg for back-compat), and dijitColorPaletteSwatch\n\t\t// for showing the color.\n\t\ttemplate: \"<span class='dijitInline dijitPaletteImg'>\" +\n\t\t\t\"<img src='${blankGif}' alt='${alt}' title='${title}' class='dijitColorPaletteSwatch' style='background-color: ${color}'/>\" +\n\t\t\t\"</span>\",\n\n\t\t// Template for each cell in high contrast mode.  Each cell contains an image with the whole palette,\n\t\t// but scrolled and clipped to show the correct color only\n\t\thcTemplate: \"<span class='dijitInline dijitPaletteImg' style='position: relative; overflow: hidden; height: 12px; width: 14px;'>\" +\n\t\t\t\"<img src='${image}' alt='${alt}' title='${title}' style='position: absolute; left: ${left}px; top: ${top}px; ${size}'/>\" +\n\t\t\t\"</span>\",\n\n\t\t// _imagePaths: [protected] Map\n\t\t//\t\tThis is stores the path to the palette images used for high-contrast mode display\n\t\t_imagePaths: {\n\t\t\t\"7x10\": require.toUrl(\"./themes/a11y/colors7x10.png\"),\n\t\t\t\"3x4\": require.toUrl(\"./themes/a11y/colors3x4.png\")\n\t\t},\n\n\t\tconstructor: function(alias, row, col, title){\n\t\t\t// summary:\n\t\t\t//\t\tConstructor for ColorPalette._Color\n\t\t\t// alias: String\n\t\t\t//\t\tEnglish name of the color.\n\t\t\t// row: Number\n\t\t\t//\t\tVertical position in grid.\n\t\t\t// column: Number\n\t\t\t//\t\tHorizontal position in grid.\n\t\t\t// title: String\n\t\t\t//\t\tLocalized name of the color.\n\t\t\tthis._title = title;\n\t\t\tthis._row = row;\n\t\t\tthis._col = col;\n\t\t\tthis.setColor(Color.named[alias]);\n\t\t},\n\n\t\tgetValue: function(){\n\t\t\t// summary:\n\t\t\t//\t\tNote that although dijit._Color is initialized with a value like \"white\" getValue() always\n\t\t\t//\t\treturns a hex value\n\t\t\treturn this.toHex();\n\t\t},\n\n\t\tfillCell: function(/*DOMNode*/ cell, /*String*/ blankGif){\n\t\t\tvar html = string.substitute(has(\"highcontrast\") ? this.hcTemplate : this.template, {\n\t\t\t\t// substitution variables for normal mode\n\t\t\t\tcolor: this.toHex(),\n\t\t\t\tblankGif: blankGif,\n\t\t\t\talt: this._title,\n\t\t\t\ttitle: this._title,\n\n\t\t\t\t// variables used for high contrast mode\n\t\t\t\timage: this._imagePaths[this.palette].toString(),\n\t\t\t\tleft: this._col * -20 - 5,\n\t\t\t\ttop: this._row * -20 - 5,\n\t\t\t\tsize: this.palette == \"7x10\" ? \"height: 145px; width: 206px\" : \"height: 64px; width: 86px\"\n\t\t\t});\n\n\t\t\tdomConstruct.place(html, cell);\n\t\t}\n\t});\n\n\treturn ColorPalette;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dijit/ColorPalette.js\n// module id = 228\n// module chunks = 3","define([\n\t\"dojo/_base/declare\", // declare\n\t\"dojo/dom-attr\", // domAttr.set\n\t\"dojo/dom-class\", // domClass.add domClass.remove\n\t\"dojo/dom-construct\", // domConstruct.create domConstruct.place\n\t\"dojo/keys\", // keys\n\t\"dojo/_base/lang\", // lang.getObject\n\t\"dojo/on\",\n\t\"./_CssStateMixin\",\n\t\"./a11yclick\",\n\t\"./focus\",\n\t\"./typematic\"\n], function(declare, domAttr, domClass, domConstruct, keys, lang, on, _CssStateMixin, a11yclick, focus, typematic){\n\n\t// module:\n\t//\t\tdijit/_PaletteMixin\n\n\tvar PaletteMixin = declare(\"dijit._PaletteMixin\", _CssStateMixin, {\n\t\t// summary:\n\t\t//\t\tA keyboard accessible palette, for picking a color/emoticon/etc.\n\t\t// description:\n\t\t//\t\tA mixin for a grid showing various entities, so the user can pick a certain entity.\n\n\t\t// defaultTimeout: Number\n\t\t//\t\tNumber of milliseconds before a held key or button becomes typematic\n\t\tdefaultTimeout: 500,\n\n\t\t// timeoutChangeRate: Number\n\t\t//\t\tFraction of time used to change the typematic timer between events\n\t\t//\t\t1.0 means that each typematic event fires at defaultTimeout intervals\n\t\t//\t\tLess than 1.0 means that each typematic event fires at an increasing faster rate\n\t\ttimeoutChangeRate: 0.90,\n\n\t\t// value: String\n\t\t//\t\tCurrently selected color/emoticon/etc.\n\t\tvalue: \"\",\n\n\t\t// _selectedCell: [private] Integer\n\t\t//\t\tIndex of the currently selected cell. Initially, none selected\n\t\t_selectedCell: -1,\n\n\t\t/*=====\n\t\t // _currentFocus: [private] DomNode\n\t\t //\t\tThe currently focused cell (if the palette itself has focus), or otherwise\n\t\t //\t\tthe cell to be focused when the palette itself gets focus.\n\t\t //\t\tDifferent from value, which represents the selected (i.e. clicked) cell.\n\t\t _currentFocus: null,\n\t\t =====*/\n\n\t\t/*=====\n\t\t // _xDim: [protected] Integer\n\t\t //\t\tThis is the number of cells horizontally across.\n\t\t _xDim: null,\n\t\t =====*/\n\n\t\t/*=====\n\t\t // _yDim: [protected] Integer\n\t\t //\t\tThis is the number of cells vertically down.\n\t\t _yDim: null,\n\t\t =====*/\n\n\t\t// tabIndex: String\n\t\t//\t\tWidget tab index.\n\t\ttabIndex: \"0\",\n\n\t\t// cellClass: [protected] String\n\t\t//\t\tCSS class applied to each cell in the palette\n\t\tcellClass: \"dijitPaletteCell\",\n\n\t\t// dyeClass: [protected] Constructor\n\t\t//\t\tConstructor for Object created for each cell of the palette.\n\t\t//\t\tdyeClass should implement the dijit/_PaletteMixin.__Dye interface.\n\t\tdyeClass: null,\n\n\t\t_dyeFactory: function(value /*===== , row, col, title =====*/){\n\t\t\t// summary:\n\t\t\t//\t\tReturn instance of dijit.Dye for specified cell of palette\n\t\t\t// tags:\n\t\t\t//\t\textension\n\n\t\t\t// Remove string support for 2.0\n\t\t\tvar dyeClassObj = typeof this.dyeClass == \"string\" ? lang.getObject(this.dyeClass) : this.dyeClass;\n\t\t\treturn new dyeClassObj(value);\n\t\t},\n\n\t\t_preparePalette: function(choices, titles){\n\t\t\t// summary:\n\t\t\t//\t\tSubclass must call _preparePalette() from postCreate(), passing in the tooltip\n\t\t\t//\t\tfor each cell\n\t\t\t// choices: String[][]\n\t\t\t//\t\tid's for each cell of the palette, used to create Dye JS object for each cell\n\t\t\t// titles: String[]\n\t\t\t//\t\tLocalized tooltip for each cell\n\n\t\t\tthis._cells = [];\n\t\t\tvar url = this._blankGif;\n\n\t\t\tthis.own(on(this.gridNode, a11yclick, lang.hitch(this, \"_onCellClick\")));\n\n\t\t\tfor(var row = 0; row < choices.length; row++){\n\t\t\t\tvar rowNode = domConstruct.create(\"tr\", {tabIndex: \"-1\", role: \"row\"}, this.gridNode);\n\t\t\t\tfor(var col = 0; col < choices[row].length; col++){\n\t\t\t\t\tvar value = choices[row][col];\n\t\t\t\t\tif(value){\n\t\t\t\t\t\tvar cellObject = this._dyeFactory(value, row, col, titles[value]);\n\n\t\t\t\t\t\tvar cellNode = domConstruct.create(\"td\", {\n\t\t\t\t\t\t\t\"class\": this.cellClass,\n\t\t\t\t\t\t\ttabIndex: \"-1\",\n\t\t\t\t\t\t\ttitle: titles[value],\n\t\t\t\t\t\t\trole: \"gridcell\"\n\t\t\t\t\t\t}, rowNode);\n\n\t\t\t\t\t\t// prepare cell inner structure\n\t\t\t\t\t\tcellObject.fillCell(cellNode, url);\n\n\t\t\t\t\t\tcellNode.idx = this._cells.length;\n\n\t\t\t\t\t\t// save cell info into _cells\n\t\t\t\t\t\tthis._cells.push({node: cellNode, dye: cellObject});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._xDim = choices[0].length;\n\t\t\tthis._yDim = choices.length;\n\n\t\t\t// Now set all events\n\t\t\t// The palette itself is navigated to with the tab key on the keyboard\n\t\t\t// Keyboard navigation within the Palette is with the arrow keys\n\t\t\t// Spacebar selects the cell.\n\t\t\t// For the up key the index is changed by negative the x dimension.\n\n\t\t\tvar keyIncrementMap = {\n\t\t\t\tUP_ARROW: -this._xDim,\n\t\t\t\t// The down key the index is increase by the x dimension.\n\t\t\t\tDOWN_ARROW: this._xDim,\n\t\t\t\t// Right and left move the index by 1.\n\t\t\t\tRIGHT_ARROW: this.isLeftToRight() ? 1 : -1,\n\t\t\t\tLEFT_ARROW: this.isLeftToRight() ? -1 : 1\n\t\t\t};\n\t\t\tfor(var key in keyIncrementMap){\n\t\t\t\tthis.own(\n\t\t\t\t\ttypematic.addKeyListener(\n\t\t\t\t\t\tthis.domNode,\n\t\t\t\t\t\t{keyCode: keys[key], ctrlKey: false, altKey: false, shiftKey: false},\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\tfunction(){\n\t\t\t\t\t\t\tvar increment = keyIncrementMap[key];\n\t\t\t\t\t\t\treturn function(count){\n\t\t\t\t\t\t\t\tthis._navigateByKey(increment, count);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}(),\n\t\t\t\t\t\tthis.timeoutChangeRate,\n\t\t\t\t\t\tthis.defaultTimeout\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\n\t\tpostCreate: function(){\n\t\t\tthis.inherited(arguments);\n\n\t\t\t// Set initial navigable node.\n\t\t\tthis._setCurrent(this._cells[0].node);\n\t\t},\n\n\t\tfocus: function(){\n\t\t\t// summary:\n\t\t\t//\t\tFocus this widget.  Puts focus on the most recently focused cell.\n\n\t\t\t// The cell already has tabIndex set, just need to set CSS and focus it\n\t\t\tfocus.focus(this._currentFocus);\n\t\t},\n\n\t\t_onCellClick: function(/*Event*/ evt){\n\t\t\t// summary:\n\t\t\t//\t\tHandler for click, enter key & space key. Selects the cell.\n\t\t\t// evt:\n\t\t\t//\t\tThe event.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\n\t\t\tvar target = evt.target;\n\n\t\t\t// Find TD associated with click event.   For ColorPalette user likely clicked IMG inside of TD\n\t\t\twhile(target.tagName != \"TD\"){\n\t\t\t\tif(!target.parentNode || target == this.gridNode){    // probably can never happen, but just in case\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttarget = target.parentNode;\n\t\t\t}\n\n\t\t\tvar value = this._getDye(target).getValue();\n\n\t\t\t// First focus the clicked cell, and then send onChange() notification.\n\t\t\t// onChange() (via _setValueAttr) must be after the focus call, because\n\t\t\t// it may trigger a refocus to somewhere else (like the Editor content area), and that\n\t\t\t// second focus should win.\n\t\t\tthis._setCurrent(target);\n\t\t\tfocus.focus(target);\n\t\t\tthis._setValueAttr(value, true);\n\n\t\t\tevt.stopPropagation();\n\t\t\tevt.preventDefault();\n\t\t},\n\n\t\t_setCurrent: function(/*DomNode*/ node){\n\t\t\t// summary:\n\t\t\t//\t\tSets which node is the focused cell.\n\t\t\t// description:\n\t\t\t//\t\tAt any point in time there's exactly one\n\t\t\t//\t\tcell with tabIndex != -1.   If focus is inside the palette then\n\t\t\t//\t\tfocus is on that cell.\n\t\t\t//\n\t\t\t//\t\tAfter calling this method, arrow key handlers and mouse click handlers\n\t\t\t//\t\tshould focus the cell in a setTimeout().\n\t\t\t// tags:\n\t\t\t//\t\tprotected\n\t\t\tif(\"_currentFocus\" in this){\n\t\t\t\t// Remove tabIndex on old cell\n\t\t\t\tdomAttr.set(this._currentFocus, \"tabIndex\", \"-1\");\n\t\t\t}\n\n\t\t\t// Set tabIndex of new cell\n\t\t\tthis._currentFocus = node;\n\t\t\tif(node){\n\t\t\t\tdomAttr.set(node, \"tabIndex\", this.tabIndex);\n\t\t\t}\n\t\t},\n\n\t\t_setValueAttr: function(value, priorityChange){\n\t\t\t// summary:\n\t\t\t//\t\tThis selects a cell. It triggers the onChange event.\n\t\t\t// value: String\n\t\t\t//\t\tValue of the cell to select\n\t\t\t// tags:\n\t\t\t//\t\tprotected\n\t\t\t// priorityChange: Boolean?\n\t\t\t//\t\tOptional parameter used to tell the select whether or not to fire\n\t\t\t//\t\tonChange event.\n\n\t\t\t// clear old selected cell\n\t\t\tif(this._selectedCell >= 0){\n\t\t\t\tdomClass.remove(this._cells[this._selectedCell].node, this.cellClass + \"Selected\");\n\t\t\t}\n\t\t\tthis._selectedCell = -1;\n\n\t\t\t// search for cell matching specified value\n\t\t\tif(value){\n\t\t\t\tfor(var i = 0; i < this._cells.length; i++){\n\t\t\t\t\tif(value == this._cells[i].dye.getValue()){\n\t\t\t\t\t\tthis._selectedCell = i;\n\t\t\t\t\t\tdomClass.add(this._cells[i].node, this.cellClass + \"Selected\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// record new value, or null if no matching cell\n\t\t\tthis._set(\"value\", this._selectedCell >= 0 ? value : null);\n\n\t\t\tif(priorityChange || priorityChange === undefined){\n\t\t\t\tthis.onChange(value);\n\t\t\t}\n\t\t},\n\n\t\tonChange: function(/*===== value =====*/){\n\t\t\t// summary:\n\t\t\t//\t\tCallback when a cell is selected.\n\t\t\t// value: String\n\t\t\t//\t\tValue corresponding to cell.\n\t\t},\n\n\t\t_navigateByKey: function(increment, typeCount){\n\t\t\t// summary:\n\t\t\t//\t\tThis is the callback for typematic.\n\t\t\t//\t\tIt changes the focus and the highlighed cell.\n\t\t\t// increment:\n\t\t\t//\t\tHow much the key is navigated.\n\t\t\t// typeCount:\n\t\t\t//\t\tHow many times typematic has fired.\n\t\t\t// tags:\n\t\t\t//\t\tprivate\n\n\t\t\t// typecount == -1 means the key is released.\n\t\t\tif(typeCount == -1){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar newFocusIndex = this._currentFocus.idx + increment;\n\t\t\tif(newFocusIndex < this._cells.length && newFocusIndex > -1){\n\t\t\t\tvar focusNode = this._cells[newFocusIndex].node;\n\t\t\t\tthis._setCurrent(focusNode);\n\n\t\t\t\t// Actually focus the node, for the benefit of screen readers.\n\t\t\t\t// Use defer because IE doesn't like changing focus inside of an event handler\n\t\t\t\tthis.defer(lang.hitch(focus, \"focus\", focusNode));\n\t\t\t}\n\t\t},\n\n\t\t_getDye: function(/*DomNode*/ cell){\n\t\t\t// summary:\n\t\t\t//\t\tGet JS object for given cell DOMNode\n\n\t\t\treturn this._cells[cell.idx].dye;\n\t\t}\n\t});\n\n\t/*=====\n\t PaletteMixin.__Dye = declare(\"dijit.Dye\", null, {\n\t\t // summary:\n\t\t //\t\tInterface for the JS Object associated with a palette cell (i.e. DOMNode)\n\n\t\t constructor: function(alias, row, col){\n\t\t\t // summary:\n\t\t\t //\t\tInitialize according to value or alias like \"white\"\n\t\t\t // alias: String\n\t\t },\n\n\t\t getValue: function(){\n\t\t\t // summary:\n\t\t\t //\t\tReturn \"value\" of cell; meaning of \"value\" varies by subclass.\n\t\t\t // description:\n\t\t\t //\t\tFor example color hex value, emoticon ascii value etc, entity hex value.\n\t\t },\n\n\t\t fillCell: function(cell, blankGif){\n\t\t\t // summary:\n\t\t\t //\t\tAdd cell DOMNode inner structure\n\t\t\t // cell: DomNode\n\t\t\t //\t\tThe surrounding cell\n\t\t\t // blankGif: String\n\t\t\t //\t\tURL for blank cell image\n\t\t }\n\t });\n\t =====*/\n\n\treturn PaletteMixin;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dijit/_PaletteMixin.js\n// module id = 275\n// module chunks = 3","define([\n\t\"dojo/_base/array\", // array.forEach\n\t\"dojo/_base/connect\", // connect._keyPress\n\t\"dojo/_base/lang\", // lang.mixin, lang.hitch\n\t\"dojo/on\",\n\t\"dojo/sniff\", // has(\"ie\")\n\t\"./main\"        // setting dijit.typematic global\n], function(array, connect, lang, on, has, dijit){\n\n\t// module:\n\t//\t\tdijit/typematic\n\n\tvar typematic = (dijit.typematic = {\n\t\t// summary:\n\t\t//\t\tThese functions are used to repetitively call a user specified callback\n\t\t//\t\tmethod when a specific key or mouse click over a specific DOM node is\n\t\t//\t\theld down for a specific amount of time.\n\t\t//\t\tOnly 1 such event is allowed to occur on the browser page at 1 time.\n\n\t\t_fireEventAndReload: function(){\n\t\t\tthis._timer = null;\n\t\t\tthis._callback(++this._count, this._node, this._evt);\n\n\t\t\t// Schedule next event, timer is at most minDelay (default 10ms) to avoid\n\t\t\t// browser overload (particularly avoiding starving DOH robot so it never gets to send a mouseup)\n\t\t\tthis._currentTimeout = Math.max(\n\t\t\t\tthis._currentTimeout < 0 ? this._initialDelay :\n\t\t\t\t\t(this._subsequentDelay > 1 ? this._subsequentDelay : Math.round(this._currentTimeout * this._subsequentDelay)),\n\t\t\t\tthis._minDelay);\n\t\t\tthis._timer = setTimeout(lang.hitch(this, \"_fireEventAndReload\"), this._currentTimeout);\n\t\t},\n\n\t\ttrigger: function(/*Event*/ evt, /*Object*/ _this, /*DOMNode*/ node, /*Function*/ callback, /*Object*/ obj, /*Number?*/ subsequentDelay, /*Number?*/ initialDelay, /*Number?*/ minDelay){\n\t\t\t// summary:\n\t\t\t//\t\tStart a timed, repeating callback sequence.\n\t\t\t//\t\tIf already started, the function call is ignored.\n\t\t\t//\t\tThis method is not normally called by the user but can be\n\t\t\t//\t\twhen the normal listener code is insufficient.\n\t\t\t// evt:\n\t\t\t//\t\tkey or mouse event object to pass to the user callback\n\t\t\t// _this:\n\t\t\t//\t\tpointer to the user's widget space.\n\t\t\t// node:\n\t\t\t//\t\tthe DOM node object to pass the the callback function\n\t\t\t// callback:\n\t\t\t//\t\tfunction to call until the sequence is stopped called with 3 parameters:\n\t\t\t// count:\n\t\t\t//\t\tinteger representing number of repeated calls (0..n) with -1 indicating the iteration has stopped\n\t\t\t// node:\n\t\t\t//\t\tthe DOM node object passed in\n\t\t\t// evt:\n\t\t\t//\t\tkey or mouse event object\n\t\t\t// obj:\n\t\t\t//\t\tuser space object used to uniquely identify each typematic sequence\n\t\t\t// subsequentDelay:\n\t\t\t//\t\tif > 1, the number of milliseconds until the 3->n events occur\n\t\t\t//\t\tor else the fractional time multiplier for the next event's delay, default=0.9\n\t\t\t// initialDelay:\n\t\t\t//\t\tthe number of milliseconds until the 2nd event occurs, default=500ms\n\t\t\t// minDelay:\n\t\t\t//\t\tthe maximum delay in milliseconds for event to fire, default=10ms\n\t\t\tif(obj != this._obj){\n\t\t\t\tthis.stop();\n\t\t\t\tthis._initialDelay = initialDelay || 500;\n\t\t\t\tthis._subsequentDelay = subsequentDelay || 0.90;\n\t\t\t\tthis._minDelay = minDelay || 10;\n\t\t\t\tthis._obj = obj;\n\t\t\t\tthis._node = node;\n\t\t\t\tthis._currentTimeout = -1;\n\t\t\t\tthis._count = -1;\n\t\t\t\tthis._callback = lang.hitch(_this, callback);\n\t\t\t\tthis._evt = { faux: true };\n\t\t\t\tfor(var attr in evt){\n\t\t\t\t\tif(attr != \"layerX\" && attr != \"layerY\"){ // prevent WebKit warnings\n\t\t\t\t\t\tvar v = evt[attr];\n\t\t\t\t\t\tif(typeof v != \"function\" && typeof v != \"undefined\"){\n\t\t\t\t\t\t\tthis._evt[attr] = v\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._fireEventAndReload();\n\t\t\t}\n\t\t},\n\n\t\tstop: function(){\n\t\t\t// summary:\n\t\t\t//\t\tStop an ongoing timed, repeating callback sequence.\n\t\t\tif(this._timer){\n\t\t\t\tclearTimeout(this._timer);\n\t\t\t\tthis._timer = null;\n\t\t\t}\n\t\t\tif(this._obj){\n\t\t\t\tthis._callback(-1, this._node, this._evt);\n\t\t\t\tthis._obj = null;\n\t\t\t}\n\t\t},\n\n\t\taddKeyListener: function(/*DOMNode*/ node, /*Object*/ keyObject, /*Object*/ _this, /*Function*/ callback, /*Number*/ subsequentDelay, /*Number*/ initialDelay, /*Number?*/ minDelay){\n\t\t\t// summary:\n\t\t\t//\t\tStart listening for a specific typematic key.\n\t\t\t//\t\tSee also the trigger method for other parameters.\n\t\t\t// keyObject:\n\t\t\t//\t\tan object defining the key to listen for:\n\t\t\t//\n\t\t\t//\t\t- keyCode: the keyCode (number) to listen for, used for non-printable keys\n\t\t\t//\t\t- charCode: the charCode (number) to listen for, used for printable keys\n\t\t\t//\t\t- charOrCode: deprecated, use keyCode or charCode\n\t\t\t//\t\t- ctrlKey: desired ctrl key state to initiate the callback sequence:\n\t\t\t//\t\t\t- pressed (true)\n\t\t\t//\t\t\t- released (false)\n\t\t\t//\t\t\t- either (unspecified)\n\t\t\t//\t\t- altKey: same as ctrlKey but for the alt key\n\t\t\t//\t\t- shiftKey: same as ctrlKey but for the shift key\n\t\t\t// returns:\n\t\t\t//\t\ta connection handle\n\n\t\t\t// Setup keydown or keypress listener depending on whether keyCode or charCode was specified.\n\t\t\t// If charOrCode is specified use deprecated connect._keypress synthetic event (remove for 2.0)\n\t\t\tvar type = \"keyCode\" in keyObject ? \"keydown\" : \"charCode\" in keyObject ? \"keypress\" : connect._keypress,\n\t\t\t\tattr = \"keyCode\" in keyObject ? \"keyCode\" : \"charCode\" in keyObject ? \"charCode\" : \"charOrCode\";\n\n\t\t\tvar handles = [\n\t\t\t\ton(node, type, lang.hitch(this, function(evt){\n\t\t\t\t\tif(evt[attr] == keyObject[attr] &&\n\t\t\t\t\t\t(keyObject.ctrlKey === undefined || keyObject.ctrlKey == evt.ctrlKey) &&\n\t\t\t\t\t\t(keyObject.altKey === undefined || keyObject.altKey == evt.altKey) &&\n\t\t\t\t\t\t(keyObject.metaKey === undefined || keyObject.metaKey == (evt.metaKey || false)) && // IE doesn't even set metaKey\n\t\t\t\t\t\t(keyObject.shiftKey === undefined || keyObject.shiftKey == evt.shiftKey)){\n\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\ttypematic.trigger(evt, _this, node, callback, keyObject, subsequentDelay, initialDelay, minDelay);\n\t\t\t\t\t}else if(typematic._obj == keyObject){\n\t\t\t\t\t\ttypematic.stop();\n\t\t\t\t\t}\n\t\t\t\t})),\n\t\t\t\ton(node, \"keyup\", lang.hitch(this, function(){\n\t\t\t\t\tif(typematic._obj == keyObject){\n\t\t\t\t\t\ttypematic.stop();\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t];\n\t\t\treturn { remove: function(){\n\t\t\t\tarray.forEach(handles, function(h){\n\t\t\t\t\th.remove();\n\t\t\t\t});\n\t\t\t} };\n\t\t},\n\n\t\taddMouseListener: function(/*DOMNode*/ node, /*Object*/ _this, /*Function*/ callback, /*Number*/ subsequentDelay, /*Number*/ initialDelay, /*Number?*/ minDelay){\n\t\t\t// summary:\n\t\t\t//\t\tStart listening for a typematic mouse click.\n\t\t\t//\t\tSee the trigger method for other parameters.\n\t\t\t// returns:\n\t\t\t//\t\ta connection handle\n\t\t\tvar handles = [\n\t\t\t\ton(node, \"mousedown\", lang.hitch(this, function(evt){\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\ttypematic.trigger(evt, _this, node, callback, node, subsequentDelay, initialDelay, minDelay);\n\t\t\t\t})),\n\t\t\t\ton(node, \"mouseup\", lang.hitch(this, function(evt){\n\t\t\t\t\tif(this._obj){\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\ttypematic.stop();\n\t\t\t\t})),\n\t\t\t\ton(node, \"mouseout\", lang.hitch(this, function(evt){\n\t\t\t\t\tif(this._obj){\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\ttypematic.stop();\n\t\t\t\t})),\n\t\t\t\ton(node, \"dblclick\", lang.hitch(this, function(evt){\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tif(has(\"ie\") < 9){\n\t\t\t\t\t\ttypematic.trigger(evt, _this, node, callback, node, subsequentDelay, initialDelay, minDelay);\n\t\t\t\t\t\tsetTimeout(lang.hitch(this, typematic.stop), 50);\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t];\n\t\t\treturn { remove: function(){\n\t\t\t\tarray.forEach(handles, function(h){\n\t\t\t\t\th.remove();\n\t\t\t\t});\n\t\t\t} };\n\t\t},\n\n\t\taddListener: function(/*Node*/ mouseNode, /*Node*/ keyNode, /*Object*/ keyObject, /*Object*/ _this, /*Function*/ callback, /*Number*/ subsequentDelay, /*Number*/ initialDelay, /*Number?*/ minDelay){\n\t\t\t// summary:\n\t\t\t//\t\tStart listening for a specific typematic key and mouseclick.\n\t\t\t//\t\tThis is a thin wrapper to addKeyListener and addMouseListener.\n\t\t\t//\t\tSee the addMouseListener and addKeyListener methods for other parameters.\n\t\t\t// mouseNode:\n\t\t\t//\t\tthe DOM node object to listen on for mouse events.\n\t\t\t// keyNode:\n\t\t\t//\t\tthe DOM node object to listen on for key events.\n\t\t\t// returns:\n\t\t\t//\t\ta connection handle\n\t\t\tvar handles = [\n\t\t\t\tthis.addKeyListener(keyNode, keyObject, _this, callback, subsequentDelay, initialDelay, minDelay),\n\t\t\t\tthis.addMouseListener(mouseNode, _this, callback, subsequentDelay, initialDelay, minDelay)\n\t\t\t];\n\t\t\treturn { remove: function(){\n\t\t\t\tarray.forEach(handles, function(h){\n\t\t\t\t\th.remove();\n\t\t\t\t});\n\t\t\t} };\n\t\t}\n\t});\n\n\treturn typematic;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dijit/typematic.js\n// module id = 276\n// module chunks = 3","module.exports = \"<div class=\\\"dijitInline dijitColorPalette\\\" role=\\\"grid\\\">\\n\\t<table data-dojo-attach-point=\\\"paletteTableNode\\\" class=\\\"dijitPaletteTable\\\" cellSpacing=\\\"0\\\" cellPadding=\\\"0\\\" role=\\\"presentation\\\">\\n\\t\\t<tbody data-dojo-attach-point=\\\"gridNode\\\"></tbody>\\n\\t</table>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!../dijit/templates/ColorPalette.html\n// module id = 277\n// module chunks = 3","require(\"dojo/nls/colors?absMid=dojo/nls/colors\");\nmodule.exports = require(\"C:/Users/Chuck/git/dojo-webpack-plugin-sample/node_modules/dojo-webpack-plugin/loaders/dojo/i18n/runner.js\")(\"dojo/nls/colors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dojo-webpack-plugin/loaders/dojo/i18n!../dojo/nls/colors.js\n// module id = 278\n// module chunks = 3","define({ root:\r\n//begin v1.x content\r\n({\r\n// local representation of all CSS3 named colors, companion to dojo.colors.  To be used where descriptive information\r\n// is required for each color, such as a palette widget, and not for specifying color programatically.\r\n\r\n//Note: due to the SVG 1.0 spec additions, some of these are alternate spellings for the same color (e.g. gray / grey).\r\n//TODO: should we be using unique rgb values as keys instead and avoid these duplicates, or rely on the caller to do the reverse mapping?\r\naliceblue: \"alice blue\",\r\nantiquewhite: \"antique white\",\r\naqua: \"aqua\",\r\naquamarine: \"aquamarine\",\r\nazure: \"azure\",\r\nbeige: \"beige\",\r\nbisque: \"bisque\",\r\nblack: \"black\",\r\nblanchedalmond: \"blanched almond\",\r\nblue: \"blue\",\r\nblueviolet: \"blue-violet\",\r\nbrown: \"brown\",\r\nburlywood: \"burlywood\",\r\ncadetblue: \"cadet blue\",\r\nchartreuse: \"chartreuse\",\r\nchocolate: \"chocolate\",\r\ncoral: \"coral\",\r\ncornflowerblue: \"cornflower blue\",\r\ncornsilk: \"cornsilk\",\r\ncrimson: \"crimson\",\r\ncyan: \"cyan\",\r\ndarkblue: \"dark blue\",\r\ndarkcyan: \"dark cyan\",\r\ndarkgoldenrod: \"dark goldenrod\",\r\ndarkgray: \"dark gray\",\r\ndarkgreen: \"dark green\",\r\ndarkgrey: \"dark gray\", // same as darkgray\r\ndarkkhaki: \"dark khaki\",\r\ndarkmagenta: \"dark magenta\",\r\ndarkolivegreen: \"dark olive green\",\r\ndarkorange: \"dark orange\",\r\ndarkorchid: \"dark orchid\",\r\ndarkred: \"dark red\",\r\ndarksalmon: \"dark salmon\",\r\ndarkseagreen: \"dark sea green\",\r\ndarkslateblue: \"dark slate blue\",\r\ndarkslategray: \"dark slate gray\",\r\ndarkslategrey: \"dark slate gray\", // same as darkslategray\r\ndarkturquoise: \"dark turquoise\",\r\ndarkviolet: \"dark violet\",\r\ndeeppink: \"deep pink\",\r\ndeepskyblue: \"deep sky blue\",\r\ndimgray: \"dim gray\",\r\ndimgrey: \"dim gray\", // same as dimgray\r\ndodgerblue: \"dodger blue\",\r\nfirebrick: \"fire brick\",\r\nfloralwhite: \"floral white\",\r\nforestgreen: \"forest green\",\r\nfuchsia: \"fuchsia\",\r\ngainsboro: \"gainsboro\",\r\nghostwhite: \"ghost white\",\r\ngold: \"gold\",\r\ngoldenrod: \"goldenrod\",\r\ngray: \"gray\",\r\ngreen: \"green\",\r\ngreenyellow: \"green-yellow\",\r\ngrey: \"gray\", // same as gray\r\nhoneydew: \"honeydew\",\r\nhotpink: \"hot pink\",\r\nindianred: \"indian red\",\r\nindigo: \"indigo\",\r\nivory: \"ivory\",\r\nkhaki: \"khaki\",\r\nlavender: \"lavender\",\r\nlavenderblush: \"lavender blush\",\r\nlawngreen: \"lawn green\",\r\nlemonchiffon: \"lemon chiffon\",\r\nlightblue: \"light blue\",\r\nlightcoral: \"light coral\",\r\nlightcyan: \"light cyan\",\r\nlightgoldenrodyellow: \"light goldenrod yellow\",\r\nlightgray: \"light gray\",\r\nlightgreen: \"light green\",\r\nlightgrey: \"light gray\", // same as lightgray\r\nlightpink: \"light pink\",\r\nlightsalmon: \"light salmon\",\r\nlightseagreen: \"light sea green\",\r\nlightskyblue: \"light sky blue\",\r\nlightslategray: \"light slate gray\",\r\nlightslategrey: \"light slate gray\", // same as lightslategray\r\nlightsteelblue: \"light steel blue\",\r\nlightyellow: \"light yellow\",\r\nlime: \"lime\",\r\nlimegreen: \"lime green\",\r\nlinen: \"linen\",\r\nmagenta: \"magenta\",\r\nmaroon: \"maroon\",\r\nmediumaquamarine: \"medium aquamarine\",\r\nmediumblue: \"medium blue\",\r\nmediumorchid: \"medium orchid\",\r\nmediumpurple: \"medium purple\",\r\nmediumseagreen: \"medium sea green\",\r\nmediumslateblue: \"medium slate blue\",\r\nmediumspringgreen: \"medium spring green\",\r\nmediumturquoise: \"medium turquoise\",\r\nmediumvioletred: \"medium violet-red\",\r\nmidnightblue: \"midnight blue\",\r\nmintcream: \"mint cream\",\r\nmistyrose: \"misty rose\",\r\nmoccasin: \"moccasin\",\r\nnavajowhite: \"navajo white\",\r\nnavy: \"navy\",\r\noldlace: \"old lace\",\r\nolive: \"olive\",\r\nolivedrab: \"olive drab\",\r\norange: \"orange\",\r\norangered: \"orange red\",\r\norchid: \"orchid\",\r\npalegoldenrod: \"pale goldenrod\",\r\npalegreen: \"pale green\",\r\npaleturquoise: \"pale turquoise\",\r\npalevioletred: \"pale violet-red\",\r\npapayawhip: \"papaya whip\",\r\npeachpuff: \"peach puff\",\r\nperu: \"peru\",\r\npink: \"pink\",\r\nplum: \"plum\",\r\npowderblue: \"powder blue\",\r\npurple: \"purple\",\r\nred: \"red\",\r\nrosybrown: \"rosy brown\",\r\nroyalblue: \"royal blue\",\r\nsaddlebrown: \"saddle brown\",\r\nsalmon: \"salmon\",\r\nsandybrown: \"sandy brown\",\r\nseagreen: \"sea green\",\r\nseashell: \"seashell\",\r\nsienna: \"sienna\",\r\nsilver: \"silver\",\r\nskyblue: \"sky blue\",\r\nslateblue: \"slate blue\",\r\nslategray: \"slate gray\",\r\nslategrey: \"slate gray\", // same as slategray\r\nsnow: \"snow\",\r\nspringgreen: \"spring green\",\r\nsteelblue: \"steel blue\",\r\ntan: \"tan\",\r\nteal: \"teal\",\r\nthistle: \"thistle\",\r\ntomato: \"tomato\",\r\ntransparent: \"transparent\",\r\nturquoise: \"turquoise\",\r\nviolet: \"violet\",\r\nwheat: \"wheat\",\r\nwhite: \"white\",\r\nwhitesmoke: \"white smoke\",\r\nyellow: \"yellow\",\r\nyellowgreen: \"yellow green\"\r\n})\r\n//end v1.x content\r\n,\r\n\"zh\": true,\r\n\"zh-tw\": true,\r\n\"uk\": true,\r\n\"tr\": true,\r\n\"th\": true,\r\n\"sv\": true,\r\n\"sl\": true,\r\n\"sk\": true,\r\n\"ru\": true,\r\n\"ro\": true,\r\n\"pt\": true,\r\n\"pt-pt\": true,\r\n\"pl\": true,\r\n\"nl\": true,\r\n\"nb\": true,\r\n\"ko\": true,\r\n\"kk\": true,\r\n\"ja\": true,\r\n\"it\": true,\r\n\"id\": true,\r\n\"hu\": true,\r\n\"hr\": true,\r\n\"he\": true,\r\n\"fr\": true,\r\n\"fi\": true,\r\n\"es\": true,\r\n\"el\": true,\r\n\"de\": true,\r\n\"da\": true,\r\n\"cs\": true,\r\n\"ca\": true,\r\n\"bg\": true,\r\n\"az\": true,\r\n\"ar\": true\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojo/nls/colors.js\n// module id = 279\n// module chunks = 3","define([\"./_base/kernel\", \"./_base/lang\", \"./_base/Color\", \"./_base/array\"], function(dojo, lang, Color, ArrayUtil){\r\n\t// module:\r\n\t//\t\tdojo/colors\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tColor utilities, extending Base dojo.Color\r\n\t};\r\n\t=====*/\r\n\r\n\tvar ColorExt = {};\r\n\tlang.setObject(\"dojo.colors\", ColorExt);\r\n\r\n//TODO: this module appears to break naming conventions\r\n\r\n\t// this is a standard conversion prescribed by the CSS3 Color Module\r\n\tvar hue2rgb = function(m1, m2, h){\r\n\t\tif(h < 0){ ++h; }\r\n\t\tif(h > 1){ --h; }\r\n\t\tvar h6 = 6 * h;\r\n\t\tif(h6 < 1){ return m1 + (m2 - m1) * h6; }\r\n\t\tif(2 * h < 1){ return m2; }\r\n\t\tif(3 * h < 2){ return m1 + (m2 - m1) * (2 / 3 - h) * 6; }\r\n\t\treturn m1;\r\n\t};\r\n\t// Override base Color.fromRgb with the impl in this module\r\n\tdojo.colorFromRgb = Color.fromRgb = function(/*String*/ color, /*dojo/_base/Color?*/ obj){\r\n\t\t// summary:\r\n\t\t//\t\tget rgb(a) array from css-style color declarations\r\n\t\t// description:\r\n\t\t//\t\tthis function can handle all 4 CSS3 Color Module formats: rgb,\r\n\t\t//\t\trgba, hsl, hsla, including rgb(a) with percentage values.\r\n\t\tvar m = color.toLowerCase().match(/^(rgba?|hsla?)\\(([\\s\\.\\-,%0-9]+)\\)/);\r\n\t\tif(m){\r\n\t\t\tvar c = m[2].split(/\\s*,\\s*/), l = c.length, t = m[1], a;\r\n\t\t\tif((t == \"rgb\" && l == 3) || (t == \"rgba\" && l == 4)){\r\n\t\t\t\tvar r = c[0];\r\n\t\t\t\tif(r.charAt(r.length - 1) == \"%\"){\r\n\t\t\t\t\t// 3 rgb percentage values\r\n\t\t\t\t\ta = ArrayUtil.map(c, function(x){\r\n\t\t\t\t\t\treturn parseFloat(x) * 2.56;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(l == 4){ a[3] = c[3]; }\r\n\t\t\t\t\treturn Color.fromArray(a, obj); // dojo/_base/Color\r\n\t\t\t\t}\r\n\t\t\t\treturn Color.fromArray(c, obj); // dojo/_base/Color\r\n\t\t\t}\r\n\t\t\tif((t == \"hsl\" && l == 3) || (t == \"hsla\" && l == 4)){\r\n\t\t\t\t// normalize hsl values\r\n\t\t\t\tvar H = ((parseFloat(c[0]) % 360) + 360) % 360 / 360,\r\n\t\t\t\t\tS = parseFloat(c[1]) / 100,\r\n\t\t\t\t\tL = parseFloat(c[2]) / 100,\r\n\t\t\t\t\t// calculate rgb according to the algorithm\r\n\t\t\t\t\t// recommended by the CSS3 Color Module\r\n\t\t\t\t\tm2 = L <= 0.5 ? L * (S + 1) : L + S - L * S,\r\n\t\t\t\t\tm1 = 2 * L - m2;\r\n\t\t\t\ta = [\r\n\t\t\t\t\thue2rgb(m1, m2, H + 1 / 3) * 256,\r\n\t\t\t\t\thue2rgb(m1, m2, H) * 256,\r\n\t\t\t\t\thue2rgb(m1, m2, H - 1 / 3) * 256,\r\n\t\t\t\t\t1\r\n\t\t\t\t];\r\n\t\t\t\tif(l == 4){ a[3] = c[3]; }\r\n\t\t\t\treturn Color.fromArray(a, obj); // dojo/_base/Color\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\t// dojo/_base/Color\r\n\t};\r\n\r\n\tvar confine = function(c, low, high){\r\n\t\t// summary:\r\n\t\t//\t\tsanitize a color component by making sure it is a number,\r\n\t\t//\t\tand clamping it to valid values\r\n\t\tc = Number(c);\r\n\t\treturn isNaN(c) ? high : c < low ? low : c > high ? high : c;\t// Number\r\n\t};\r\n\r\n\tColor.prototype.sanitize = function(){\r\n\t\t// summary:\r\n\t\t//\t\tmakes sure that the object has correct attributes\r\n\t\tvar t = this;\r\n\t\tt.r = Math.round(confine(t.r, 0, 255));\r\n\t\tt.g = Math.round(confine(t.g, 0, 255));\r\n\t\tt.b = Math.round(confine(t.b, 0, 255));\r\n\t\tt.a = confine(t.a, 0, 1);\r\n\t\treturn this;\t// dojo/_base/Color\r\n\t};\r\n\r\n\tColorExt.makeGrey = Color.makeGrey = function(/*Number*/ g, /*Number?*/ a){\r\n\t\t// summary:\r\n\t\t//\t\tcreates a greyscale color with an optional alpha\r\n\t\treturn Color.fromArray([g, g, g, a]);\t// dojo/_base/Color\r\n\t};\r\n\r\n\t// mixin all CSS3 named colors not already in _base, along with SVG 1.0 variant spellings\r\n\tlang.mixin(Color.named, {\r\n\t\t\"aliceblue\":\t[240,248,255],\r\n\t\t\"antiquewhite\": [250,235,215],\r\n\t\t\"aquamarine\":\t[127,255,212],\r\n\t\t\"azure\":\t[240,255,255],\r\n\t\t\"beige\":\t[245,245,220],\r\n\t\t\"bisque\":\t[255,228,196],\r\n\t\t\"blanchedalmond\":\t[255,235,205],\r\n\t\t\"blueviolet\":\t[138,43,226],\r\n\t\t\"brown\":\t[165,42,42],\r\n\t\t\"burlywood\":\t[222,184,135],\r\n\t\t\"cadetblue\":\t[95,158,160],\r\n\t\t\"chartreuse\":\t[127,255,0],\r\n\t\t\"chocolate\":\t[210,105,30],\r\n\t\t\"coral\":\t[255,127,80],\r\n\t\t\"cornflowerblue\":\t[100,149,237],\r\n\t\t\"cornsilk\": [255,248,220],\r\n\t\t\"crimson\":\t[220,20,60],\r\n\t\t\"cyan\": [0,255,255],\r\n\t\t\"darkblue\": [0,0,139],\r\n\t\t\"darkcyan\": [0,139,139],\r\n\t\t\"darkgoldenrod\":\t[184,134,11],\r\n\t\t\"darkgray\": [169,169,169],\r\n\t\t\"darkgreen\":\t[0,100,0],\r\n\t\t\"darkgrey\": [169,169,169],\r\n\t\t\"darkkhaki\":\t[189,183,107],\r\n\t\t\"darkmagenta\":\t[139,0,139],\r\n\t\t\"darkolivegreen\":\t[85,107,47],\r\n\t\t\"darkorange\":\t[255,140,0],\r\n\t\t\"darkorchid\":\t[153,50,204],\r\n\t\t\"darkred\":\t[139,0,0],\r\n\t\t\"darksalmon\":\t[233,150,122],\r\n\t\t\"darkseagreen\": [143,188,143],\r\n\t\t\"darkslateblue\":\t[72,61,139],\r\n\t\t\"darkslategray\":\t[47,79,79],\r\n\t\t\"darkslategrey\":\t[47,79,79],\r\n\t\t\"darkturquoise\":\t[0,206,209],\r\n\t\t\"darkviolet\":\t[148,0,211],\r\n\t\t\"deeppink\": [255,20,147],\r\n\t\t\"deepskyblue\":\t[0,191,255],\r\n\t\t\"dimgray\":\t[105,105,105],\r\n\t\t\"dimgrey\":\t[105,105,105],\r\n\t\t\"dodgerblue\":\t[30,144,255],\r\n\t\t\"firebrick\":\t[178,34,34],\r\n\t\t\"floralwhite\":\t[255,250,240],\r\n\t\t\"forestgreen\":\t[34,139,34],\r\n\t\t\"gainsboro\":\t[220,220,220],\r\n\t\t\"ghostwhite\":\t[248,248,255],\r\n\t\t\"gold\": [255,215,0],\r\n\t\t\"goldenrod\":\t[218,165,32],\r\n\t\t\"greenyellow\":\t[173,255,47],\r\n\t\t\"grey\": [128,128,128],\r\n\t\t\"honeydew\": [240,255,240],\r\n\t\t\"hotpink\":\t[255,105,180],\r\n\t\t\"indianred\":\t[205,92,92],\r\n\t\t\"indigo\":\t[75,0,130],\r\n\t\t\"ivory\":\t[255,255,240],\r\n\t\t\"khaki\":\t[240,230,140],\r\n\t\t\"lavender\": [230,230,250],\r\n\t\t\"lavenderblush\":\t[255,240,245],\r\n\t\t\"lawngreen\":\t[124,252,0],\r\n\t\t\"lemonchiffon\": [255,250,205],\r\n\t\t\"lightblue\":\t[173,216,230],\r\n\t\t\"lightcoral\":\t[240,128,128],\r\n\t\t\"lightcyan\":\t[224,255,255],\r\n\t\t\"lightgoldenrodyellow\": [250,250,210],\r\n\t\t\"lightgray\":\t[211,211,211],\r\n\t\t\"lightgreen\":\t[144,238,144],\r\n\t\t\"lightgrey\":\t[211,211,211],\r\n\t\t\"lightpink\":\t[255,182,193],\r\n\t\t\"lightsalmon\":\t[255,160,122],\r\n\t\t\"lightseagreen\":\t[32,178,170],\r\n\t\t\"lightskyblue\": [135,206,250],\r\n\t\t\"lightslategray\":\t[119,136,153],\r\n\t\t\"lightslategrey\":\t[119,136,153],\r\n\t\t\"lightsteelblue\":\t[176,196,222],\r\n\t\t\"lightyellow\":\t[255,255,224],\r\n\t\t\"limegreen\":\t[50,205,50],\r\n\t\t\"linen\":\t[250,240,230],\r\n\t\t\"magenta\":\t[255,0,255],\r\n\t\t\"mediumaquamarine\": [102,205,170],\r\n\t\t\"mediumblue\":\t[0,0,205],\r\n\t\t\"mediumorchid\": [186,85,211],\r\n\t\t\"mediumpurple\": [147,112,219],\r\n\t\t\"mediumseagreen\":\t[60,179,113],\r\n\t\t\"mediumslateblue\":\t[123,104,238],\r\n\t\t\"mediumspringgreen\":\t[0,250,154],\r\n\t\t\"mediumturquoise\":\t[72,209,204],\r\n\t\t\"mediumvioletred\":\t[199,21,133],\r\n\t\t\"midnightblue\": [25,25,112],\r\n\t\t\"mintcream\":\t[245,255,250],\r\n\t\t\"mistyrose\":\t[255,228,225],\r\n\t\t\"moccasin\": [255,228,181],\r\n\t\t\"navajowhite\":\t[255,222,173],\r\n\t\t\"oldlace\":\t[253,245,230],\r\n\t\t\"olivedrab\":\t[107,142,35],\r\n\t\t\"orange\":\t[255,165,0],\r\n\t\t\"orangered\":\t[255,69,0],\r\n\t\t\"orchid\":\t[218,112,214],\r\n\t\t\"palegoldenrod\":\t[238,232,170],\r\n\t\t\"palegreen\":\t[152,251,152],\r\n\t\t\"paleturquoise\":\t[175,238,238],\r\n\t\t\"palevioletred\":\t[219,112,147],\r\n\t\t\"papayawhip\":\t[255,239,213],\r\n\t\t\"peachpuff\":\t[255,218,185],\r\n\t\t\"peru\": [205,133,63],\r\n\t\t\"pink\": [255,192,203],\r\n\t\t\"plum\": [221,160,221],\r\n\t\t\"powderblue\":\t[176,224,230],\r\n\t\t\"rosybrown\":\t[188,143,143],\r\n\t\t\"royalblue\":\t[65,105,225],\r\n\t\t\"saddlebrown\":\t[139,69,19],\r\n\t\t\"salmon\":\t[250,128,114],\r\n\t\t\"sandybrown\":\t[244,164,96],\r\n\t\t\"seagreen\": [46,139,87],\r\n\t\t\"seashell\": [255,245,238],\r\n\t\t\"sienna\":\t[160,82,45],\r\n\t\t\"skyblue\":\t[135,206,235],\r\n\t\t\"slateblue\":\t[106,90,205],\r\n\t\t\"slategray\":\t[112,128,144],\r\n\t\t\"slategrey\":\t[112,128,144],\r\n\t\t\"snow\": [255,250,250],\r\n\t\t\"springgreen\":\t[0,255,127],\r\n\t\t\"steelblue\":\t[70,130,180],\r\n\t\t\"tan\":\t[210,180,140],\r\n\t\t\"thistle\":\t[216,191,216],\r\n\t\t\"tomato\":\t[255,99,71],\r\n\t\t\"turquoise\":\t[64,224,208],\r\n\t\t\"violet\":\t[238,130,238],\r\n\t\t\"wheat\":\t[245,222,179],\r\n\t\t\"whitesmoke\":\t[245,245,245],\r\n\t\t\"yellowgreen\":\t[154,205,50]\r\n\t});\r\n\r\n\treturn Color;\t// TODO: return ColorExt, not Color\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dojo/colors.js\n// module id = 280\n// module chunks = 3"],"sourceRoot":""}